/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((module) => {

"use strict";
module.exports = require("coc.nvim");;

/***/ }),
/* 2 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.walkParents = exports.findComponentMemberReferences = exports.getVariableReferences = exports.getReferencePaths = exports.isPathRemoved = exports.isClassMemberExpression = exports.isPathInRange = exports.isFunctionBinding = exports.isArrayFunctionCall = exports.findOuterMemberExpression = exports.isOuterMemberExpression = exports.codeFromNode = exports.astToCode = exports.isJSX = exports.templateToAst = exports.jsxToAst = exports.codeToAst = exports.parsingOptions = void 0;
const parser_1 = __webpack_require__(3);
const core_1 = __webpack_require__(4);
const t = __importStar(__webpack_require__(11));
const template_1 = __importDefault(__webpack_require__(165));
exports.parsingOptions = {
    plugins: ['objectRestSpread', 'classProperties', 'typescript', 'jsx'],
    sourceType: 'module',
};
const codeToAst = (code) => parser_1.parse(code, Object.assign({ startLine: 0 }, exports.parsingOptions));
exports.codeToAst = codeToAst;
const jsxToAst = (code) => {
    try {
        return exports.templateToAst(code);
    }
    catch (e) {
        return false;
    }
};
exports.jsxToAst = jsxToAst;
const templateToAst = (code) => template_1.default.ast(code, exports.parsingOptions);
exports.templateToAst = templateToAst;
const isJSX = (code) => {
    const ast = exports.jsxToAst(code);
    return ast && ast.expression && t.isJSX(ast.expression);
};
exports.isJSX = isJSX;
const astToCode = (ast) => core_1.transformFromAst(ast).code;
exports.astToCode = astToCode;
const codeFromNode = (node) => {
    const body = [t.expressionStatement(node)];
    const ast = t.file(t.program(body), null, null);
    return exports.astToCode(ast).slice(0, -1);
};
exports.codeFromNode = codeFromNode;
const isOuterMemberExpression = (path) => path.isMemberExpression() &&
    !exports.isArrayFunctionCall(path) &&
    (!path.parentPath.isMemberExpression() || exports.isArrayFunctionCall(path.parentPath));
exports.isOuterMemberExpression = isOuterMemberExpression;
const findOuterMemberExpression = (path) => path.findParent(exports.isOuterMemberExpression) || path;
exports.findOuterMemberExpression = findOuterMemberExpression;
const isArrayFunctionCall = (path) => path.key === 'callee' && ['map', 'filter', 'reduce'].indexOf(path.node.property.name) > -1;
exports.isArrayFunctionCall = isArrayFunctionCall;
const isFunctionBinding = (path) => path.key === 'callee' && path.node.property.name === 'bind';
exports.isFunctionBinding = isFunctionBinding;
const isPathInRange = (start, end) => (path) => path.node.start >= start && path.node.end <= end;
exports.isPathInRange = isPathInRange;
const isClassMemberExpression = ({ node }) => t.isMemberExpression(node) && (t.isThisExpression(node.object) || exports.isClassMemberExpression({ node: node.object }));
exports.isClassMemberExpression = isClassMemberExpression;
const isPathRemoved = (path) => (path.findParent((path) => path.removed) ? true : false);
exports.isPathRemoved = isPathRemoved;
const getReferencePaths = (scope, node) => {
    const bindings = scope.bindings[node.name];
    if (bindings && bindings.referencePaths) {
        return bindings.referencePaths;
    }
    return [];
};
exports.getReferencePaths = getReferencePaths;
const getVariableReferences = (scope, declaration) => {
    const refs = [];
    if (t.isIdentifier(declaration)) {
        exports.getReferencePaths(scope, declaration).forEach((path) => {
            if (path.node !== declaration) {
                refs.push(exports.findOuterMemberExpression(path));
            }
        });
    }
    else {
        let nodes;
        if (t.isObjectPattern(declaration)) {
            nodes = declaration.properties.map((property) => t.isRestElement(property) ? property.argument : property.value);
        }
        else if (t.isArrayPattern(declaration)) {
            nodes = declaration.elements.map((id) => (t.isRestElement(id) ? id.argument : id));
        }
        if (nodes) {
            nodes.forEach((node) => {
                exports.getReferencePaths(scope, node).forEach((path) => {
                    if (path.node !== node) {
                        refs.push(exports.findOuterMemberExpression(path));
                    }
                });
            });
        }
    }
    return refs;
};
exports.getVariableReferences = getVariableReferences;
/**
 * Find block scoped references for component members
 * @param componentPath
 * @param targetPath
 */
const findComponentMemberReferences = (componentPath, targetPath) => {
    let paths = [];
    const path = targetPath || componentPath;
    if (componentPath.isClassDeclaration()) {
        path.traverse({
            MemberExpression(path) {
                if (exports.isClassMemberExpression(path) && exports.isOuterMemberExpression(path)) {
                    paths.push(path);
                }
            },
        });
    }
    else if (t.isArrowFunctionExpression(componentPath.node.init) && componentPath.node.init.params[0]) {
        paths = paths.concat(exports.getVariableReferences(componentPath.scope, componentPath.node.init.params[0]));
    }
    else if (t.isFunctionDeclaration(componentPath.node) && componentPath.node.params[0]) {
        paths = paths.concat(exports.getVariableReferences(componentPath.scope, componentPath.node.params[0]));
    }
    exports.walkParents(path, (parentPath) => parentPath.isBlockStatement(), (parentPath) => {
        parentPath.traverse({
            VariableDeclaration(path) {
                path.node.declarations.forEach((declaration) => {
                    paths = paths.concat(exports.getVariableReferences(parentPath.scope, declaration.id));
                });
            },
        });
    });
    exports.walkParents(path, (parentPath) => parentPath.isArrowFunctionExpression(), (parentPath) => {
        parentPath.node.params.forEach((param) => {
            paths = paths.concat(exports.getVariableReferences(parentPath.scope, param));
        });
    });
    return paths;
};
exports.findComponentMemberReferences = findComponentMemberReferences;
const walkParents = (path, condition, callback) => {
    const parentPath = path.findParent(condition);
    if (parentPath) {
        callback(parentPath);
        exports.walkParents(parentPath, condition, callback);
    }
};
exports.walkParents = walkParents;


/***/ }),
/* 3 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const beforeExpr = true;
const startsExpr = true;
const isLoop = true;
const isAssign = true;
const prefix = true;
const postfix = true;
class TokenType {
  constructor(label, conf = {}) {
    this.label = void 0;
    this.keyword = void 0;
    this.beforeExpr = void 0;
    this.startsExpr = void 0;
    this.rightAssociative = void 0;
    this.isLoop = void 0;
    this.isAssign = void 0;
    this.prefix = void 0;
    this.postfix = void 0;
    this.binop = void 0;
    this.updateContext = void 0;
    this.label = label;
    this.keyword = conf.keyword;
    this.beforeExpr = !!conf.beforeExpr;
    this.startsExpr = !!conf.startsExpr;
    this.rightAssociative = !!conf.rightAssociative;
    this.isLoop = !!conf.isLoop;
    this.isAssign = !!conf.isAssign;
    this.prefix = !!conf.prefix;
    this.postfix = !!conf.postfix;
    this.binop = conf.binop != null ? conf.binop : null;
    this.updateContext = null;
  }

}
const keywords$1 = new Map();

function createKeyword(name, options = {}) {
  options.keyword = name;
  const token = new TokenType(name, options);
  keywords$1.set(name, token);
  return token;
}

function createBinop(name, binop) {
  return new TokenType(name, {
    beforeExpr,
    binop
  });
}

const types$1 = {
  num: new TokenType("num", {
    startsExpr
  }),
  bigint: new TokenType("bigint", {
    startsExpr
  }),
  decimal: new TokenType("decimal", {
    startsExpr
  }),
  regexp: new TokenType("regexp", {
    startsExpr
  }),
  string: new TokenType("string", {
    startsExpr
  }),
  name: new TokenType("name", {
    startsExpr
  }),
  privateName: new TokenType("#name", {
    startsExpr
  }),
  eof: new TokenType("eof"),
  bracketL: new TokenType("[", {
    beforeExpr,
    startsExpr
  }),
  bracketHashL: new TokenType("#[", {
    beforeExpr,
    startsExpr
  }),
  bracketBarL: new TokenType("[|", {
    beforeExpr,
    startsExpr
  }),
  bracketR: new TokenType("]"),
  bracketBarR: new TokenType("|]"),
  braceL: new TokenType("{", {
    beforeExpr,
    startsExpr
  }),
  braceBarL: new TokenType("{|", {
    beforeExpr,
    startsExpr
  }),
  braceHashL: new TokenType("#{", {
    beforeExpr,
    startsExpr
  }),
  braceR: new TokenType("}"),
  braceBarR: new TokenType("|}"),
  parenL: new TokenType("(", {
    beforeExpr,
    startsExpr
  }),
  parenR: new TokenType(")"),
  comma: new TokenType(",", {
    beforeExpr
  }),
  semi: new TokenType(";", {
    beforeExpr
  }),
  colon: new TokenType(":", {
    beforeExpr
  }),
  doubleColon: new TokenType("::", {
    beforeExpr
  }),
  dot: new TokenType("."),
  question: new TokenType("?", {
    beforeExpr
  }),
  questionDot: new TokenType("?."),
  arrow: new TokenType("=>", {
    beforeExpr
  }),
  template: new TokenType("template"),
  ellipsis: new TokenType("...", {
    beforeExpr
  }),
  backQuote: new TokenType("`", {
    startsExpr
  }),
  dollarBraceL: new TokenType("${", {
    beforeExpr,
    startsExpr
  }),
  at: new TokenType("@"),
  hash: new TokenType("#", {
    startsExpr
  }),
  interpreterDirective: new TokenType("#!..."),
  eq: new TokenType("=", {
    beforeExpr,
    isAssign
  }),
  assign: new TokenType("_=", {
    beforeExpr,
    isAssign
  }),
  incDec: new TokenType("++/--", {
    prefix,
    postfix,
    startsExpr
  }),
  bang: new TokenType("!", {
    beforeExpr,
    prefix,
    startsExpr
  }),
  tilde: new TokenType("~", {
    beforeExpr,
    prefix,
    startsExpr
  }),
  pipeline: createBinop("|>", 0),
  nullishCoalescing: createBinop("??", 1),
  logicalOR: createBinop("||", 1),
  logicalAND: createBinop("&&", 2),
  bitwiseOR: createBinop("|", 3),
  bitwiseXOR: createBinop("^", 4),
  bitwiseAND: createBinop("&", 5),
  equality: createBinop("==/!=/===/!==", 6),
  relational: createBinop("</>/<=/>=", 7),
  bitShift: createBinop("<</>>/>>>", 8),
  plusMin: new TokenType("+/-", {
    beforeExpr,
    binop: 9,
    prefix,
    startsExpr
  }),
  modulo: new TokenType("%", {
    beforeExpr,
    binop: 10,
    startsExpr
  }),
  star: new TokenType("*", {
    binop: 10
  }),
  slash: createBinop("/", 10),
  exponent: new TokenType("**", {
    beforeExpr,
    binop: 11,
    rightAssociative: true
  }),
  _break: createKeyword("break"),
  _case: createKeyword("case", {
    beforeExpr
  }),
  _catch: createKeyword("catch"),
  _continue: createKeyword("continue"),
  _debugger: createKeyword("debugger"),
  _default: createKeyword("default", {
    beforeExpr
  }),
  _do: createKeyword("do", {
    isLoop,
    beforeExpr
  }),
  _else: createKeyword("else", {
    beforeExpr
  }),
  _finally: createKeyword("finally"),
  _for: createKeyword("for", {
    isLoop
  }),
  _function: createKeyword("function", {
    startsExpr
  }),
  _if: createKeyword("if"),
  _return: createKeyword("return", {
    beforeExpr
  }),
  _switch: createKeyword("switch"),
  _throw: createKeyword("throw", {
    beforeExpr,
    prefix,
    startsExpr
  }),
  _try: createKeyword("try"),
  _var: createKeyword("var"),
  _const: createKeyword("const"),
  _while: createKeyword("while", {
    isLoop
  }),
  _with: createKeyword("with"),
  _new: createKeyword("new", {
    beforeExpr,
    startsExpr
  }),
  _this: createKeyword("this", {
    startsExpr
  }),
  _super: createKeyword("super", {
    startsExpr
  }),
  _class: createKeyword("class", {
    startsExpr
  }),
  _extends: createKeyword("extends", {
    beforeExpr
  }),
  _export: createKeyword("export"),
  _import: createKeyword("import", {
    startsExpr
  }),
  _null: createKeyword("null", {
    startsExpr
  }),
  _true: createKeyword("true", {
    startsExpr
  }),
  _false: createKeyword("false", {
    startsExpr
  }),
  _in: createKeyword("in", {
    beforeExpr,
    binop: 7
  }),
  _instanceof: createKeyword("instanceof", {
    beforeExpr,
    binop: 7
  }),
  _typeof: createKeyword("typeof", {
    beforeExpr,
    prefix,
    startsExpr
  }),
  _void: createKeyword("void", {
    beforeExpr,
    prefix,
    startsExpr
  }),
  _delete: createKeyword("delete", {
    beforeExpr,
    prefix,
    startsExpr
  })
};

const lineBreak = /\r\n?|[\n\u2028\u2029]/;
const lineBreakG = new RegExp(lineBreak.source, "g");
function isNewLine(code) {
  switch (code) {
    case 10:
    case 13:
    case 8232:
    case 8233:
      return true;

    default:
      return false;
  }
}
const skipWhiteSpace = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g;
function isWhitespace(code) {
  switch (code) {
    case 0x0009:
    case 0x000b:
    case 0x000c:
    case 32:
    case 160:
    case 5760:
    case 0x2000:
    case 0x2001:
    case 0x2002:
    case 0x2003:
    case 0x2004:
    case 0x2005:
    case 0x2006:
    case 0x2007:
    case 0x2008:
    case 0x2009:
    case 0x200a:
    case 0x202f:
    case 0x205f:
    case 0x3000:
    case 0xfeff:
      return true;

    default:
      return false;
  }
}

class Position {
  constructor(line, col) {
    this.line = void 0;
    this.column = void 0;
    this.line = line;
    this.column = col;
  }

}
class SourceLocation {
  constructor(start, end) {
    this.start = void 0;
    this.end = void 0;
    this.filename = void 0;
    this.identifierName = void 0;
    this.start = start;
    this.end = end;
  }

}
function getLineInfo(input, offset) {
  let line = 1;
  let lineStart = 0;
  let match;
  lineBreakG.lastIndex = 0;

  while ((match = lineBreakG.exec(input)) && match.index < offset) {
    line++;
    lineStart = lineBreakG.lastIndex;
  }

  return new Position(line, offset - lineStart);
}

class BaseParser {
  constructor() {
    this.sawUnambiguousESM = false;
    this.ambiguousScriptDifferentAst = false;
  }

  hasPlugin(name) {
    return this.plugins.has(name);
  }

  getPluginOption(plugin, name) {
    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];
  }

}

function last(stack) {
  return stack[stack.length - 1];
}

class CommentsParser extends BaseParser {
  addComment(comment) {
    if (this.filename) comment.loc.filename = this.filename;
    this.state.trailingComments.push(comment);
    this.state.leadingComments.push(comment);
  }

  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {
    if (this.state.leadingComments.length === 0) {
      return;
    }

    let lastElement = null;
    let i = elements.length;

    while (lastElement === null && i > 0) {
      lastElement = elements[--i];
    }

    if (lastElement === null) {
      return;
    }

    for (let j = 0; j < this.state.leadingComments.length; j++) {
      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {
        this.state.leadingComments.splice(j, 1);
        j--;
      }
    }

    const newTrailingComments = [];

    for (let i = 0; i < this.state.leadingComments.length; i++) {
      const leadingComment = this.state.leadingComments[i];

      if (leadingComment.end < node.end) {
        newTrailingComments.push(leadingComment);

        if (!takeAllComments) {
          this.state.leadingComments.splice(i, 1);
          i--;
        }
      } else {
        if (node.trailingComments === undefined) {
          node.trailingComments = [];
        }

        node.trailingComments.push(leadingComment);
      }
    }

    if (takeAllComments) this.state.leadingComments = [];

    if (newTrailingComments.length > 0) {
      lastElement.trailingComments = newTrailingComments;
    } else if (lastElement.trailingComments !== undefined) {
      lastElement.trailingComments = [];
    }
  }

  processComment(node) {
    if (node.type === "Program" && node.body.length > 0) return;
    const stack = this.state.commentStack;
    let firstChild, lastChild, trailingComments, i, j;

    if (this.state.trailingComments.length > 0) {
      if (this.state.trailingComments[0].start >= node.end) {
        trailingComments = this.state.trailingComments;
        this.state.trailingComments = [];
      } else {
        this.state.trailingComments.length = 0;
      }
    } else if (stack.length > 0) {
      const lastInStack = last(stack);

      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {
        trailingComments = lastInStack.trailingComments;
        delete lastInStack.trailingComments;
      }
    }

    if (stack.length > 0 && last(stack).start >= node.start) {
      firstChild = stack.pop();
    }

    while (stack.length > 0 && last(stack).start >= node.start) {
      lastChild = stack.pop();
    }

    if (!lastChild && firstChild) lastChild = firstChild;

    if (firstChild) {
      switch (node.type) {
        case "ObjectExpression":
          this.adjustCommentsAfterTrailingComma(node, node.properties);
          break;

        case "ObjectPattern":
          this.adjustCommentsAfterTrailingComma(node, node.properties, true);
          break;

        case "CallExpression":
          this.adjustCommentsAfterTrailingComma(node, node.arguments);
          break;

        case "ArrayExpression":
          this.adjustCommentsAfterTrailingComma(node, node.elements);
          break;

        case "ArrayPattern":
          this.adjustCommentsAfterTrailingComma(node, node.elements, true);
          break;
      }
    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === "ImportSpecifier" && node.type !== "ImportSpecifier" || this.state.commentPreviousNode.type === "ExportSpecifier" && node.type !== "ExportSpecifier")) {
      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);
    }

    if (lastChild) {
      if (lastChild.leadingComments) {
        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {
          node.leadingComments = lastChild.leadingComments;
          delete lastChild.leadingComments;
        } else {
          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {
            if (lastChild.leadingComments[i].end <= node.start) {
              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);
              break;
            }
          }
        }
      }
    } else if (this.state.leadingComments.length > 0) {
      if (last(this.state.leadingComments).end <= node.start) {
        if (this.state.commentPreviousNode) {
          for (j = 0; j < this.state.leadingComments.length; j++) {
            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {
              this.state.leadingComments.splice(j, 1);
              j--;
            }
          }
        }

        if (this.state.leadingComments.length > 0) {
          node.leadingComments = this.state.leadingComments;
          this.state.leadingComments = [];
        }
      } else {
        for (i = 0; i < this.state.leadingComments.length; i++) {
          if (this.state.leadingComments[i].end > node.start) {
            break;
          }
        }

        const leadingComments = this.state.leadingComments.slice(0, i);

        if (leadingComments.length) {
          node.leadingComments = leadingComments;
        }

        trailingComments = this.state.leadingComments.slice(i);

        if (trailingComments.length === 0) {
          trailingComments = null;
        }
      }
    }

    this.state.commentPreviousNode = node;

    if (trailingComments) {
      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {
        node.innerComments = trailingComments;
      } else {
        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);

        if (firstTrailingCommentIndex > 0) {
          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);
          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);
        } else {
          node.trailingComments = trailingComments;
        }
      }
    }

    stack.push(node);
  }

}

const ErrorCodes = Object.freeze({
  SyntaxError: "BABEL_PARSER_SYNTAX_ERROR",
  SourceTypeModuleError: "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED"
});

const ErrorMessages = makeErrorTemplates({
  AccessorIsGenerator: "A %0ter cannot be a generator.",
  ArgumentsInClass: "'arguments' is only allowed in functions and class methods.",
  AsyncFunctionInSingleStatementContext: "Async functions can only be declared at the top level or inside a block.",
  AwaitBindingIdentifier: "Can not use 'await' as identifier inside an async function.",
  AwaitBindingIdentifierInStaticBlock: "Can not use 'await' as identifier inside a static block.",
  AwaitExpressionFormalParameter: "'await' is not allowed in async function parameters.",
  AwaitNotInAsyncContext: "'await' is only allowed within async functions and at the top levels of modules.",
  AwaitNotInAsyncFunction: "'await' is only allowed within async functions.",
  BadGetterArity: "A 'get' accesor must not have any formal parameters.",
  BadSetterArity: "A 'set' accesor must have exactly one formal parameter.",
  BadSetterRestParameter: "A 'set' accesor function argument must not be a rest parameter.",
  ConstructorClassField: "Classes may not have a field named 'constructor'.",
  ConstructorClassPrivateField: "Classes may not have a private field named '#constructor'.",
  ConstructorIsAccessor: "Class constructor may not be an accessor.",
  ConstructorIsAsync: "Constructor can't be an async function.",
  ConstructorIsGenerator: "Constructor can't be a generator.",
  DeclarationMissingInitializer: "'%0' require an initialization value.",
  DecoratorBeforeExport: "Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.",
  DecoratorConstructor: "Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?",
  DecoratorExportClass: "Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.",
  DecoratorSemicolon: "Decorators must not be followed by a semicolon.",
  DecoratorStaticBlock: "Decorators can't be used with a static block.",
  DeletePrivateField: "Deleting a private field is not allowed.",
  DestructureNamedImport: "ES2015 named imports do not destructure. Use another statement for destructuring after the import.",
  DuplicateConstructor: "Duplicate constructor in the same class.",
  DuplicateDefaultExport: "Only one default export allowed per module.",
  DuplicateExport: "`%0` has already been exported. Exported identifiers must be unique.",
  DuplicateProto: "Redefinition of __proto__ property.",
  DuplicateRegExpFlags: "Duplicate regular expression flag.",
  ElementAfterRest: "Rest element must be last element.",
  EscapedCharNotAnIdentifier: "Invalid Unicode escape.",
  ExportBindingIsString: "A string literal cannot be used as an exported binding without `from`.\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?",
  ExportDefaultFromAsIdentifier: "'from' is not allowed as an identifier after 'export default'.",
  ForInOfLoopInitializer: "'%0' loop variable declaration may not have an initializer.",
  ForOfAsync: "The left-hand side of a for-of loop may not be 'async'.",
  ForOfLet: "The left-hand side of a for-of loop may not start with 'let'.",
  GeneratorInSingleStatementContext: "Generators can only be declared at the top level or inside a block.",
  IllegalBreakContinue: "Unsyntactic %0.",
  IllegalLanguageModeDirective: "Illegal 'use strict' directive in function with non-simple parameter list.",
  IllegalReturn: "'return' outside of function.",
  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\n- Did you mean `import { "%0" as foo }`?',
  ImportCallArgumentTrailingComma: "Trailing comma is disallowed inside import(...) arguments.",
  ImportCallArity: "`import()` requires exactly %0.",
  ImportCallNotNewExpression: "Cannot use new with import(...).",
  ImportCallSpreadArgument: "`...` is not allowed in `import()`.",
  InvalidBigIntLiteral: "Invalid BigIntLiteral.",
  InvalidCodePoint: "Code point out of bounds.",
  InvalidDecimal: "Invalid decimal.",
  InvalidDigit: "Expected number in radix %0.",
  InvalidEscapeSequence: "Bad character escape sequence.",
  InvalidEscapeSequenceTemplate: "Invalid escape sequence in template.",
  InvalidEscapedReservedWord: "Escape sequence in keyword %0.",
  InvalidIdentifier: "Invalid identifier %0.",
  InvalidLhs: "Invalid left-hand side in %0.",
  InvalidLhsBinding: "Binding invalid left-hand side in %0.",
  InvalidNumber: "Invalid number.",
  InvalidOrMissingExponent: "Floating-point numbers require a valid exponent after the 'e'.",
  InvalidOrUnexpectedToken: "Unexpected character '%0'.",
  InvalidParenthesizedAssignment: "Invalid parenthesized assignment pattern.",
  InvalidPrivateFieldResolution: "Private name #%0 is not defined.",
  InvalidPropertyBindingPattern: "Binding member expression.",
  InvalidRecordProperty: "Only properties and spread elements are allowed in record definitions.",
  InvalidRestAssignmentPattern: "Invalid rest operator's argument.",
  LabelRedeclaration: "Label '%0' is already declared.",
  LetInLexicalBinding: "'let' is not allowed to be used as a name in 'let' or 'const' declarations.",
  LineTerminatorBeforeArrow: "No line break is allowed before '=>'.",
  MalformedRegExpFlags: "Invalid regular expression flag.",
  MissingClassName: "A class name is required.",
  MissingEqInAssignment: "Only '=' operator can be used for specifying default value.",
  MissingSemicolon: "Missing semicolon.",
  MissingUnicodeEscape: "Expecting Unicode escape sequence \\uXXXX.",
  MixingCoalesceWithLogical: "Nullish coalescing operator(??) requires parens when mixing with logical operators.",
  ModuleAttributeDifferentFromType: "The only accepted module attribute is `type`.",
  ModuleAttributeInvalidValue: "Only string literals are allowed as module attribute values.",
  ModuleAttributesWithDuplicateKeys: 'Duplicate key "%0" is not allowed in module attributes.',
  ModuleExportNameHasLoneSurrogate: "An export name cannot include a lone surrogate, found '\\u%0'.",
  ModuleExportUndefined: "Export '%0' is not defined.",
  MultipleDefaultsInSwitch: "Multiple default clauses.",
  NewlineAfterThrow: "Illegal newline after throw.",
  NoCatchOrFinally: "Missing catch or finally clause.",
  NumberIdentifier: "Identifier directly after number.",
  NumericSeparatorInEscapeSequence: "Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.",
  ObsoleteAwaitStar: "'await*' has been removed from the async functions proposal. Use Promise.all() instead.",
  OptionalChainingNoNew: "Constructors in/after an Optional Chain are not allowed.",
  OptionalChainingNoTemplate: "Tagged Template Literals are not allowed in optionalChain.",
  OverrideOnConstructor: "'override' modifier cannot appear on a constructor declaration.",
  ParamDupe: "Argument name clash.",
  PatternHasAccessor: "Object pattern can't contain getter or setter.",
  PatternHasMethod: "Object pattern can't contain methods.",
  PipelineBodyNoArrow: 'Unexpected arrow "=>" after pipeline body; arrow function in pipeline body must be parenthesized.',
  PipelineBodySequenceExpression: "Pipeline body may not be a comma-separated sequence expression.",
  PipelineHeadSequenceExpression: "Pipeline head should not be a comma-separated sequence expression.",
  PipelineTopicUnused: "Pipeline is in topic style but does not use topic reference.",
  PrimaryTopicNotAllowed: "Topic reference was used in a lexical context without topic binding.",
  PrimaryTopicRequiresSmartPipeline: "Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.",
  PrivateInExpectedIn: "Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).",
  PrivateNameRedeclaration: "Duplicate private name #%0.",
  RecordExpressionBarIncorrectEndSyntaxType: "Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
  RecordExpressionBarIncorrectStartSyntaxType: "Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
  RecordExpressionHashIncorrectStartSyntaxType: "Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",
  RecordNoProto: "'__proto__' is not allowed in Record expressions.",
  RestTrailingComma: "Unexpected trailing comma after rest element.",
  SloppyFunction: "In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.",
  StaticPrototype: "Classes may not have static property named prototype.",
  StrictDelete: "Deleting local variable in strict mode.",
  StrictEvalArguments: "Assigning to '%0' in strict mode.",
  StrictEvalArgumentsBinding: "Binding '%0' in strict mode.",
  StrictFunction: "In strict mode code, functions can only be declared at top level or inside a block.",
  StrictNumericEscape: "The only valid numeric escape in strict mode is '\\0'.",
  StrictOctalLiteral: "Legacy octal literals are not allowed in strict mode.",
  StrictWith: "'with' in strict mode.",
  SuperNotAllowed: "`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?",
  SuperPrivateField: "Private fields can't be accessed on super.",
  TrailingDecorator: "Decorators must be attached to a class element.",
  TupleExpressionBarIncorrectEndSyntaxType: "Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
  TupleExpressionBarIncorrectStartSyntaxType: "Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.",
  TupleExpressionHashIncorrectStartSyntaxType: "Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.",
  UnexpectedArgumentPlaceholder: "Unexpected argument placeholder.",
  UnexpectedAwaitAfterPipelineBody: 'Unexpected "await" after pipeline body; await must have parentheses in minimal proposal.',
  UnexpectedDigitAfterHash: "Unexpected digit after hash token.",
  UnexpectedImportExport: "'import' and 'export' may only appear at the top level.",
  UnexpectedKeyword: "Unexpected keyword '%0'.",
  UnexpectedLeadingDecorator: "Leading decorators must be attached to a class declaration.",
  UnexpectedLexicalDeclaration: "Lexical declaration cannot appear in a single-statement context.",
  UnexpectedNewTarget: "`new.target` can only be used in functions or class properties.",
  UnexpectedNumericSeparator: "A numeric separator is only allowed between two digits.",
  UnexpectedPrivateField: "Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\n or a property of member expression (i.e. this.#p).",
  UnexpectedReservedWord: "Unexpected reserved word '%0'.",
  UnexpectedSuper: "'super' is only allowed in object methods and classes.",
  UnexpectedToken: "Unexpected token '%0'.",
  UnexpectedTokenUnaryExponentiation: "Illegal expression. Wrap left hand side or entire exponentiation in parentheses.",
  UnsupportedBind: "Binding should be performed on object property.",
  UnsupportedDecoratorExport: "A decorated export must export a class declaration.",
  UnsupportedDefaultExport: "Only expressions, functions or classes are allowed as the `default` export.",
  UnsupportedImport: "`import` can only be used in `import()` or `import.meta`.",
  UnsupportedMetaProperty: "The only valid meta property for %0 is %0.%1.",
  UnsupportedParameterDecorator: "Decorators cannot be used to decorate parameters.",
  UnsupportedPropertyDecorator: "Decorators cannot be used to decorate object literal properties.",
  UnsupportedSuper: "'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).",
  UnterminatedComment: "Unterminated comment.",
  UnterminatedRegExp: "Unterminated regular expression.",
  UnterminatedString: "Unterminated string constant.",
  UnterminatedTemplate: "Unterminated template.",
  VarRedeclaration: "Identifier '%0' has already been declared.",
  YieldBindingIdentifier: "Can not use 'yield' as identifier inside a generator.",
  YieldInParameter: "Yield expression is not allowed in formal parameters.",
  ZeroDigitNumericSeparator: "Numeric separator can not be used after leading 0."
}, ErrorCodes.SyntaxError);
const SourceTypeModuleErrorMessages = makeErrorTemplates({
  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: "module"'`,
  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: "module"'`
}, ErrorCodes.SourceTypeModuleError);

function makeErrorTemplates(messages, code) {
  const templates = {};
  Object.keys(messages).forEach(reasonCode => {
    templates[reasonCode] = Object.freeze({
      code,
      reasonCode,
      template: messages[reasonCode]
    });
  });
  return Object.freeze(templates);
}
class ParserError extends CommentsParser {
  getLocationForPosition(pos) {
    let loc;
    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);
    return loc;
  }

  raise(pos, {
    code,
    reasonCode,
    template
  }, ...params) {
    return this.raiseWithData(pos, {
      code,
      reasonCode
    }, template, ...params);
  }

  raiseOverwrite(pos, {
    code,
    template
  }, ...params) {
    const loc = this.getLocationForPosition(pos);
    const message = template.replace(/%(\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;

    if (this.options.errorRecovery) {
      const errors = this.state.errors;

      for (let i = errors.length - 1; i >= 0; i--) {
        const error = errors[i];

        if (error.pos === pos) {
          return Object.assign(error, {
            message
          });
        } else if (error.pos < pos) {
          break;
        }
      }
    }

    return this._raise({
      code,
      loc,
      pos
    }, message);
  }

  raiseWithData(pos, data, errorTemplate, ...params) {
    const loc = this.getLocationForPosition(pos);
    const message = errorTemplate.replace(/%(\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;
    return this._raise(Object.assign({
      loc,
      pos
    }, data), message);
  }

  _raise(errorContext, message) {
    const err = new SyntaxError(message);
    Object.assign(err, errorContext);

    if (this.options.errorRecovery) {
      if (!this.isLookahead) this.state.errors.push(err);
      return err;
    } else {
      throw err;
    }
  }

}

var estree = (superClass => class extends superClass {
  parseRegExpLiteral({
    pattern,
    flags
  }) {
    let regex = null;

    try {
      regex = new RegExp(pattern, flags);
    } catch (e) {}

    const node = this.estreeParseLiteral(regex);
    node.regex = {
      pattern,
      flags
    };
    return node;
  }

  parseBigIntLiteral(value) {
    let bigInt;

    try {
      bigInt = BigInt(value);
    } catch (_unused) {
      bigInt = null;
    }

    const node = this.estreeParseLiteral(bigInt);
    node.bigint = String(node.value || value);
    return node;
  }

  parseDecimalLiteral(value) {
    const decimal = null;
    const node = this.estreeParseLiteral(decimal);
    node.decimal = String(node.value || value);
    return node;
  }

  estreeParseLiteral(value) {
    return this.parseLiteral(value, "Literal");
  }

  parseStringLiteral(value) {
    return this.estreeParseLiteral(value);
  }

  parseNumericLiteral(value) {
    return this.estreeParseLiteral(value);
  }

  parseNullLiteral() {
    return this.estreeParseLiteral(null);
  }

  parseBooleanLiteral(value) {
    return this.estreeParseLiteral(value);
  }

  directiveToStmt(directive) {
    const directiveLiteral = directive.value;
    const stmt = this.startNodeAt(directive.start, directive.loc.start);
    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);
    expression.value = directiveLiteral.extra.expressionValue;
    expression.raw = directiveLiteral.extra.raw;
    stmt.expression = this.finishNodeAt(expression, "Literal", directiveLiteral.end, directiveLiteral.loc.end);
    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);
    return this.finishNodeAt(stmt, "ExpressionStatement", directive.end, directive.loc.end);
  }

  initFunction(node, isAsync) {
    super.initFunction(node, isAsync);
    node.expression = false;
  }

  checkDeclaration(node) {
    if (node != null && this.isObjectProperty(node)) {
      this.checkDeclaration(node.value);
    } else {
      super.checkDeclaration(node);
    }
  }

  getObjectOrClassMethodParams(method) {
    return method.value.params;
  }

  isValidDirective(stmt) {
    var _stmt$expression$extr;

    return stmt.type === "ExpressionStatement" && stmt.expression.type === "Literal" && typeof stmt.expression.value === "string" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);
  }

  stmtToDirective(stmt) {
    const directive = super.stmtToDirective(stmt);
    const value = stmt.expression.value;
    this.addExtra(directive.value, "expressionValue", value);
    return directive;
  }

  parseBlockBody(node, ...args) {
    super.parseBlockBody(node, ...args);
    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));
    node.body = directiveStatements.concat(node.body);
    delete node.directives;
  }

  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {
    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, "ClassMethod", true);

    if (method.typeParameters) {
      method.value.typeParameters = method.typeParameters;
      delete method.typeParameters;
    }

    classBody.body.push(method);
  }

  parseMaybePrivateName(...args) {
    const node = super.parseMaybePrivateName(...args);

    if (node.type === "PrivateName" && this.getPluginOption("estree", "classFeatures")) {
      return this.convertPrivateNameToPrivateIdentifier(node);
    }

    return node;
  }

  convertPrivateNameToPrivateIdentifier(node) {
    const name = super.getPrivateNameSV(node);
    node = node;
    delete node.id;
    node.name = name;
    node.type = "PrivateIdentifier";
    return node;
  }

  isPrivateName(node) {
    if (!this.getPluginOption("estree", "classFeatures")) {
      return super.isPrivateName(node);
    }

    return node.type === "PrivateIdentifier";
  }

  getPrivateNameSV(node) {
    if (!this.getPluginOption("estree", "classFeatures")) {
      return super.getPrivateNameSV(node);
    }

    return node.name;
  }

  parseLiteral(value, type) {
    const node = super.parseLiteral(value, type);
    node.raw = node.extra.raw;
    delete node.extra;
    return node;
  }

  parseFunctionBody(node, allowExpression, isMethod = false) {
    super.parseFunctionBody(node, allowExpression, isMethod);
    node.expression = node.body.type !== "BlockStatement";
  }

  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {
    let funcNode = this.startNode();
    funcNode.kind = node.kind;
    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);
    funcNode.type = "FunctionExpression";
    delete funcNode.kind;
    node.value = funcNode;

    if (type === "ClassPrivateMethod") {
      node.computed = false;
    }

    type = "MethodDefinition";
    return this.finishNode(node, type);
  }

  parseClassProperty(...args) {
    const propertyNode = super.parseClassProperty(...args);

    if (this.getPluginOption("estree", "classFeatures")) {
      propertyNode.type = "PropertyDefinition";
    }

    return propertyNode;
  }

  parseClassPrivateProperty(...args) {
    const propertyNode = super.parseClassPrivateProperty(...args);

    if (this.getPluginOption("estree", "classFeatures")) {
      propertyNode.type = "PropertyDefinition";
      propertyNode.computed = false;
    }

    return propertyNode;
  }

  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {
    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);

    if (node) {
      node.type = "Property";
      if (node.kind === "method") node.kind = "init";
      node.shorthand = false;
    }

    return node;
  }

  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {
    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);

    if (node) {
      node.kind = "init";
      node.type = "Property";
    }

    return node;
  }

  toAssignable(node, isLHS = false) {
    if (node != null && this.isObjectProperty(node)) {
      this.toAssignable(node.value, isLHS);
      return node;
    }

    return super.toAssignable(node, isLHS);
  }

  toAssignableObjectExpressionProp(prop, ...args) {
    if (prop.kind === "get" || prop.kind === "set") {
      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);
    } else if (prop.method) {
      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);
    } else {
      super.toAssignableObjectExpressionProp(prop, ...args);
    }
  }

  finishCallExpression(node, optional) {
    super.finishCallExpression(node, optional);

    if (node.callee.type === "Import") {
      node.type = "ImportExpression";
      node.source = node.arguments[0];

      if (this.hasPlugin("importAssertions")) {
        var _node$arguments$;

        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;
      }

      delete node.arguments;
      delete node.callee;
    }

    return node;
  }

  toReferencedArguments(node) {
    if (node.type === "ImportExpression") {
      return;
    }

    super.toReferencedArguments(node);
  }

  parseExport(node) {
    super.parseExport(node);

    switch (node.type) {
      case "ExportAllDeclaration":
        node.exported = null;
        break;

      case "ExportNamedDeclaration":
        if (node.specifiers.length === 1 && node.specifiers[0].type === "ExportNamespaceSpecifier") {
          node.type = "ExportAllDeclaration";
          node.exported = node.specifiers[0].exported;
          delete node.specifiers;
        }

        break;
    }

    return node;
  }

  parseSubscript(base, startPos, startLoc, noCalls, state) {
    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);

    if (state.optionalChainMember) {
      if (node.type === "OptionalMemberExpression" || node.type === "OptionalCallExpression") {
        node.type = node.type.substring(8);
      }

      if (state.stop) {
        const chain = this.startNodeAtNode(node);
        chain.expression = node;
        return this.finishNode(chain, "ChainExpression");
      }
    } else if (node.type === "MemberExpression" || node.type === "CallExpression") {
      node.optional = false;
    }

    return node;
  }

  hasPropertyAsPrivateName(node) {
    if (node.type === "ChainExpression") {
      node = node.expression;
    }

    return super.hasPropertyAsPrivateName(node);
  }

  isOptionalChain(node) {
    return node.type === "ChainExpression";
  }

  isObjectProperty(node) {
    return node.type === "Property" && node.kind === "init" && !node.method;
  }

  isObjectMethod(node) {
    return node.method || node.kind === "get" || node.kind === "set";
  }

});

class TokContext {
  constructor(token, isExpr, preserveSpace) {
    this.token = void 0;
    this.isExpr = void 0;
    this.preserveSpace = void 0;
    this.token = token;
    this.isExpr = !!isExpr;
    this.preserveSpace = !!preserveSpace;
  }

}
const types = {
  braceStatement: new TokContext("{", false),
  braceExpression: new TokContext("{", true),
  recordExpression: new TokContext("#{", true),
  templateQuasi: new TokContext("${", false),
  parenStatement: new TokContext("(", false),
  parenExpression: new TokContext("(", true),
  template: new TokContext("`", true, true),
  functionExpression: new TokContext("function", true),
  functionStatement: new TokContext("function", false)
};

types$1.parenR.updateContext = types$1.braceR.updateContext = function () {
  if (this.state.context.length === 1) {
    this.state.exprAllowed = true;
    return;
  }

  let out = this.state.context.pop();

  if (out === types.braceStatement && this.curContext().token === "function") {
    out = this.state.context.pop();
  }

  this.state.exprAllowed = !out.isExpr;
};

types$1.name.updateContext = function (prevType) {
  let allowed = false;

  if (prevType !== types$1.dot) {
    if (this.state.value === "of" && !this.state.exprAllowed && prevType !== types$1._function && prevType !== types$1._class) {
      allowed = true;
    }
  }

  this.state.exprAllowed = allowed;
};

types$1.braceL.updateContext = function (prevType) {
  this.state.context.push(this.braceIsBlock(prevType) ? types.braceStatement : types.braceExpression);
  this.state.exprAllowed = true;
};

types$1.dollarBraceL.updateContext = function () {
  this.state.context.push(types.templateQuasi);
  this.state.exprAllowed = true;
};

types$1.parenL.updateContext = function (prevType) {
  const statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;
  this.state.context.push(statementParens ? types.parenStatement : types.parenExpression);
  this.state.exprAllowed = true;
};

types$1.incDec.updateContext = function () {};

types$1._function.updateContext = types$1._class.updateContext = function (prevType) {
  if (prevType.beforeExpr && prevType !== types$1.semi && prevType !== types$1._else && !(prevType === types$1._return && this.hasPrecedingLineBreak()) && !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat)) {
    this.state.context.push(types.functionExpression);
  } else {
    this.state.context.push(types.functionStatement);
  }

  this.state.exprAllowed = false;
};

types$1.backQuote.updateContext = function () {
  if (this.curContext() === types.template) {
    this.state.context.pop();
  } else {
    this.state.context.push(types.template);
  }

  this.state.exprAllowed = false;
};

types$1.braceHashL.updateContext = function () {
  this.state.context.push(types.recordExpression);
  this.state.exprAllowed = true;
};

let nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08c7\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\u9ffc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7bf\ua7c2-\ua7ca\ua7f5-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
let nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d3-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf\u1ac0\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
const nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
const nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
const astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];
const astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];

function isInAstralSet(code, set) {
  let pos = 0x10000;

  for (let i = 0, length = set.length; i < length; i += 2) {
    pos += set[i];
    if (pos > code) return false;
    pos += set[i + 1];
    if (pos >= code) return true;
  }

  return false;
}

function isIdentifierStart(code) {
  if (code < 65) return code === 36;
  if (code <= 90) return true;
  if (code < 97) return code === 95;
  if (code <= 122) return true;

  if (code <= 0xffff) {
    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
  }

  return isInAstralSet(code, astralIdentifierStartCodes);
}
function isIdentifierChar(code) {
  if (code < 48) return code === 36;
  if (code < 58) return true;
  if (code < 65) return false;
  if (code <= 90) return true;
  if (code < 97) return code === 95;
  if (code <= 122) return true;

  if (code <= 0xffff) {
    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
  }

  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
}

const reservedWords = {
  keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"],
  strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],
  strictBind: ["eval", "arguments"]
};
const keywords = new Set(reservedWords.keyword);
const reservedWordsStrictSet = new Set(reservedWords.strict);
const reservedWordsStrictBindSet = new Set(reservedWords.strictBind);
function isReservedWord(word, inModule) {
  return inModule && word === "await" || word === "enum";
}
function isStrictReservedWord(word, inModule) {
  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);
}
function isStrictBindOnlyReservedWord(word) {
  return reservedWordsStrictBindSet.has(word);
}
function isStrictBindReservedWord(word, inModule) {
  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);
}
function isKeyword(word) {
  return keywords.has(word);
}

function isIteratorStart(current, next) {
  return current === 64 && next === 64;
}

const SCOPE_OTHER = 0b000000000,
      SCOPE_PROGRAM = 0b000000001,
      SCOPE_FUNCTION = 0b000000010,
      SCOPE_ARROW = 0b000000100,
      SCOPE_SIMPLE_CATCH = 0b000001000,
      SCOPE_SUPER = 0b000010000,
      SCOPE_DIRECT_SUPER = 0b000100000,
      SCOPE_CLASS = 0b001000000,
      SCOPE_STATIC_BLOCK = 0b010000000,
      SCOPE_TS_MODULE = 0b100000000,
      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;
const BIND_KIND_VALUE = 0b000000000001,
      BIND_KIND_TYPE = 0b000000000010,
      BIND_SCOPE_VAR = 0b000000000100,
      BIND_SCOPE_LEXICAL = 0b000000001000,
      BIND_SCOPE_FUNCTION = 0b000000010000,
      BIND_FLAGS_NONE = 0b000001000000,
      BIND_FLAGS_CLASS = 0b000010000000,
      BIND_FLAGS_TS_ENUM = 0b000100000000,
      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,
      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,
      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;
const BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,
      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,
      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,
      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,
      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,
      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,
      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,
      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,
      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,
      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,
      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,
      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,
      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;
const CLASS_ELEMENT_FLAG_STATIC = 0b100,
      CLASS_ELEMENT_KIND_GETTER = 0b010,
      CLASS_ELEMENT_KIND_SETTER = 0b001,
      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;
const CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,
      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,
      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,
      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,
      CLASS_ELEMENT_OTHER = 0;

class Scope {
  constructor(flags) {
    this.flags = void 0;
    this.var = [];
    this.lexical = [];
    this.functions = [];
    this.flags = flags;
  }

}
class ScopeHandler {
  constructor(raise, inModule) {
    this.scopeStack = [];
    this.undefinedExports = new Map();
    this.undefinedPrivateNames = new Map();
    this.raise = raise;
    this.inModule = inModule;
  }

  get inFunction() {
    return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;
  }

  get allowSuper() {
    return (this.currentThisScope().flags & SCOPE_SUPER) > 0;
  }

  get allowDirectSuper() {
    return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;
  }

  get inClass() {
    return (this.currentThisScope().flags & SCOPE_CLASS) > 0;
  }

  get inStaticBlock() {
    return (this.currentThisScope().flags & SCOPE_STATIC_BLOCK) > 0;
  }

  get inNonArrowFunction() {
    return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;
  }

  get treatFunctionsAsVar() {
    return this.treatFunctionsAsVarInScope(this.currentScope());
  }

  createScope(flags) {
    return new Scope(flags);
  }

  enter(flags) {
    this.scopeStack.push(this.createScope(flags));
  }

  exit() {
    this.scopeStack.pop();
  }

  treatFunctionsAsVarInScope(scope) {
    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);
  }

  declareName(name, bindingType, pos) {
    let scope = this.currentScope();

    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {
      this.checkRedeclarationInScope(scope, name, bindingType, pos);

      if (bindingType & BIND_SCOPE_FUNCTION) {
        scope.functions.push(name);
      } else {
        scope.lexical.push(name);
      }

      if (bindingType & BIND_SCOPE_LEXICAL) {
        this.maybeExportDefined(scope, name);
      }
    } else if (bindingType & BIND_SCOPE_VAR) {
      for (let i = this.scopeStack.length - 1; i >= 0; --i) {
        scope = this.scopeStack[i];
        this.checkRedeclarationInScope(scope, name, bindingType, pos);
        scope.var.push(name);
        this.maybeExportDefined(scope, name);
        if (scope.flags & SCOPE_VAR) break;
      }
    }

    if (this.inModule && scope.flags & SCOPE_PROGRAM) {
      this.undefinedExports.delete(name);
    }
  }

  maybeExportDefined(scope, name) {
    if (this.inModule && scope.flags & SCOPE_PROGRAM) {
      this.undefinedExports.delete(name);
    }
  }

  checkRedeclarationInScope(scope, name, bindingType, pos) {
    if (this.isRedeclaredInScope(scope, name, bindingType)) {
      this.raise(pos, ErrorMessages.VarRedeclaration, name);
    }
  }

  isRedeclaredInScope(scope, name, bindingType) {
    if (!(bindingType & BIND_KIND_VALUE)) return false;

    if (bindingType & BIND_SCOPE_LEXICAL) {
      return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;
    }

    if (bindingType & BIND_SCOPE_FUNCTION) {
      return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;
    }

    return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;
  }

  checkLocalExport(id) {
    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {
      this.undefinedExports.set(id.name, id.start);
    }
  }

  currentScope() {
    return this.scopeStack[this.scopeStack.length - 1];
  }

  currentVarScope() {
    for (let i = this.scopeStack.length - 1;; i--) {
      const scope = this.scopeStack[i];

      if (scope.flags & SCOPE_VAR) {
        return scope;
      }
    }
  }

  currentThisScope() {
    for (let i = this.scopeStack.length - 1;; i--) {
      const scope = this.scopeStack[i];

      if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {
        return scope;
      }
    }
  }

}

class FlowScope extends Scope {
  constructor(...args) {
    super(...args);
    this.declareFunctions = [];
  }

}

class FlowScopeHandler extends ScopeHandler {
  createScope(flags) {
    return new FlowScope(flags);
  }

  declareName(name, bindingType, pos) {
    const scope = this.currentScope();

    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {
      this.checkRedeclarationInScope(scope, name, bindingType, pos);
      this.maybeExportDefined(scope, name);
      scope.declareFunctions.push(name);
      return;
    }

    super.declareName(...arguments);
  }

  isRedeclaredInScope(scope, name, bindingType) {
    if (super.isRedeclaredInScope(...arguments)) return true;

    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {
      return !scope.declareFunctions.includes(name) && (scope.lexical.includes(name) || scope.functions.includes(name));
    }

    return false;
  }

  checkLocalExport(id) {
    if (this.scopeStack[0].declareFunctions.indexOf(id.name) === -1) {
      super.checkLocalExport(id);
    }
  }

}

const reservedTypes = new Set(["_", "any", "bool", "boolean", "empty", "extends", "false", "interface", "mixed", "null", "number", "static", "string", "true", "typeof", "void"]);
const FlowErrors = makeErrorTemplates({
  AmbiguousConditionalArrow: "Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.",
  AmbiguousDeclareModuleKind: "Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.",
  AssignReservedType: "Cannot overwrite reserved type %0.",
  DeclareClassElement: "The `declare` modifier can only appear on class fields.",
  DeclareClassFieldInitializer: "Initializers are not allowed in fields with the `declare` modifier.",
  DuplicateDeclareModuleExports: "Duplicate `declare module.exports` statement.",
  EnumBooleanMemberNotInitialized: "Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.",
  EnumDuplicateMemberName: "Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.",
  EnumInconsistentMemberValues: "Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.",
  EnumInvalidExplicitType: "Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",
  EnumInvalidExplicitTypeUnknownSupplied: "Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.",
  EnumInvalidMemberInitializerPrimaryType: "Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.",
  EnumInvalidMemberInitializerSymbolType: "Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.",
  EnumInvalidMemberInitializerUnknownType: "The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.",
  EnumInvalidMemberName: "Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.",
  EnumNumberMemberNotInitialized: "Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.",
  EnumStringMemberInconsistentlyInitailized: "String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.",
  GetterMayNotHaveThisParam: "A getter cannot have a `this` parameter.",
  ImportTypeShorthandOnlyInPureImport: "The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.",
  InexactInsideExact: "Explicit inexact syntax cannot appear inside an explicit exact object type.",
  InexactInsideNonObject: "Explicit inexact syntax cannot appear in class or interface definitions.",
  InexactVariance: "Explicit inexact syntax cannot have variance.",
  InvalidNonTypeImportInDeclareModule: "Imports within a `declare module` body must always be `import type` or `import typeof`.",
  MissingTypeParamDefault: "Type parameter declaration needs a default, since a preceding type parameter declaration has a default.",
  NestedDeclareModule: "`declare module` cannot be used inside another `declare module`.",
  NestedFlowComment: "Cannot have a flow comment inside another flow comment.",
  OptionalBindingPattern: "A binding pattern parameter cannot be optional in an implementation signature.",
  SetterMayNotHaveThisParam: "A setter cannot have a `this` parameter.",
  SpreadVariance: "Spread properties cannot have variance.",
  ThisParamAnnotationRequired: "A type annotation is required for the `this` parameter.",
  ThisParamBannedInConstructor: "Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.",
  ThisParamMayNotBeOptional: "The `this` parameter cannot be optional.",
  ThisParamMustBeFirst: "The `this` parameter must be the first function parameter.",
  ThisParamNoDefault: "The `this` parameter may not have a default value.",
  TypeBeforeInitializer: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",
  TypeCastInPattern: "The type cast expression is expected to be wrapped with parenthesis.",
  UnexpectedExplicitInexactInObject: "Explicit inexact syntax must appear at the end of an inexact object.",
  UnexpectedReservedType: "Unexpected reserved type %0.",
  UnexpectedReservedUnderscore: "`_` is only allowed as a type argument to call or new.",
  UnexpectedSpaceBetweenModuloChecks: "Spaces between `%` and `checks` are not allowed here.",
  UnexpectedSpreadType: "Spread operator cannot appear in class or interface definitions.",
  UnexpectedSubtractionOperand: 'Unexpected token, expected "number" or "bigint".',
  UnexpectedTokenAfterTypeParameter: "Expected an arrow function after this type parameter declaration.",
  UnexpectedTypeParameterBeforeAsyncArrowFunction: "Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.",
  UnsupportedDeclareExportKind: "`declare export %0` is not supported. Use `%1` instead.",
  UnsupportedStatementInDeclareModule: "Only declares and type imports are allowed inside declare module.",
  UnterminatedFlowComment: "Unterminated flow-comment."
}, ErrorCodes.SyntaxError);

function isEsModuleType(bodyElement) {
  return bodyElement.type === "DeclareExportAllDeclaration" || bodyElement.type === "DeclareExportDeclaration" && (!bodyElement.declaration || bodyElement.declaration.type !== "TypeAlias" && bodyElement.declaration.type !== "InterfaceDeclaration");
}

function hasTypeImportKind(node) {
  return node.importKind === "type" || node.importKind === "typeof";
}

function isMaybeDefaultImport(state) {
  return (state.type === types$1.name || !!state.type.keyword) && state.value !== "from";
}

const exportSuggestions = {
  const: "declare export var",
  let: "declare export var",
  type: "export type",
  interface: "export interface"
};

function partition(list, test) {
  const list1 = [];
  const list2 = [];

  for (let i = 0; i < list.length; i++) {
    (test(list[i], i, list) ? list1 : list2).push(list[i]);
  }

  return [list1, list2];
}

const FLOW_PRAGMA_REGEX = /\*?\s*@((?:no)?flow)\b/;
var flow = (superClass => class extends superClass {
  constructor(...args) {
    super(...args);
    this.flowPragma = undefined;
  }

  getScopeHandler() {
    return FlowScopeHandler;
  }

  shouldParseTypes() {
    return this.getPluginOption("flow", "all") || this.flowPragma === "flow";
  }

  shouldParseEnums() {
    return !!this.getPluginOption("flow", "enums");
  }

  finishToken(type, val) {
    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {
      if (this.flowPragma === undefined) {
        this.flowPragma = null;
      }
    }

    return super.finishToken(type, val);
  }

  addComment(comment) {
    if (this.flowPragma === undefined) {
      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);

      if (!matches) ; else if (matches[1] === "flow") {
        this.flowPragma = "flow";
      } else if (matches[1] === "noflow") {
        this.flowPragma = "noflow";
      } else {
        throw new Error("Unexpected flow pragma");
      }
    }

    return super.addComment(comment);
  }

  flowParseTypeInitialiser(tok) {
    const oldInType = this.state.inType;
    this.state.inType = true;
    this.expect(tok || types$1.colon);
    const type = this.flowParseType();
    this.state.inType = oldInType;
    return type;
  }

  flowParsePredicate() {
    const node = this.startNode();
    const moduloPos = this.state.start;
    this.next();
    this.expectContextual("checks");

    if (this.state.lastTokStart > moduloPos + 1) {
      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);
    }

    if (this.eat(types$1.parenL)) {
      node.value = this.parseExpression();
      this.expect(types$1.parenR);
      return this.finishNode(node, "DeclaredPredicate");
    } else {
      return this.finishNode(node, "InferredPredicate");
    }
  }

  flowParseTypeAndPredicateInitialiser() {
    const oldInType = this.state.inType;
    this.state.inType = true;
    this.expect(types$1.colon);
    let type = null;
    let predicate = null;

    if (this.match(types$1.modulo)) {
      this.state.inType = oldInType;
      predicate = this.flowParsePredicate();
    } else {
      type = this.flowParseType();
      this.state.inType = oldInType;

      if (this.match(types$1.modulo)) {
        predicate = this.flowParsePredicate();
      }
    }

    return [type, predicate];
  }

  flowParseDeclareClass(node) {
    this.next();
    this.flowParseInterfaceish(node, true);
    return this.finishNode(node, "DeclareClass");
  }

  flowParseDeclareFunction(node) {
    this.next();
    const id = node.id = this.parseIdentifier();
    const typeNode = this.startNode();
    const typeContainer = this.startNode();

    if (this.isRelational("<")) {
      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      typeNode.typeParameters = null;
    }

    this.expect(types$1.parenL);
    const tmp = this.flowParseFunctionTypeParams();
    typeNode.params = tmp.params;
    typeNode.rest = tmp.rest;
    typeNode.this = tmp._this;
    this.expect(types$1.parenR);
    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();
    typeContainer.typeAnnotation = this.finishNode(typeNode, "FunctionTypeAnnotation");
    id.typeAnnotation = this.finishNode(typeContainer, "TypeAnnotation");
    this.resetEndLocation(id);
    this.semicolon();
    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);
    return this.finishNode(node, "DeclareFunction");
  }

  flowParseDeclare(node, insideModule) {
    if (this.match(types$1._class)) {
      return this.flowParseDeclareClass(node);
    } else if (this.match(types$1._function)) {
      return this.flowParseDeclareFunction(node);
    } else if (this.match(types$1._var)) {
      return this.flowParseDeclareVariable(node);
    } else if (this.eatContextual("module")) {
      if (this.match(types$1.dot)) {
        return this.flowParseDeclareModuleExports(node);
      } else {
        if (insideModule) {
          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);
        }

        return this.flowParseDeclareModule(node);
      }
    } else if (this.isContextual("type")) {
      return this.flowParseDeclareTypeAlias(node);
    } else if (this.isContextual("opaque")) {
      return this.flowParseDeclareOpaqueType(node);
    } else if (this.isContextual("interface")) {
      return this.flowParseDeclareInterface(node);
    } else if (this.match(types$1._export)) {
      return this.flowParseDeclareExportDeclaration(node, insideModule);
    } else {
      throw this.unexpected();
    }
  }

  flowParseDeclareVariable(node) {
    this.next();
    node.id = this.flowParseTypeAnnotatableIdentifier(true);
    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);
    this.semicolon();
    return this.finishNode(node, "DeclareVariable");
  }

  flowParseDeclareModule(node) {
    this.scope.enter(SCOPE_OTHER);

    if (this.match(types$1.string)) {
      node.id = this.parseExprAtom();
    } else {
      node.id = this.parseIdentifier();
    }

    const bodyNode = node.body = this.startNode();
    const body = bodyNode.body = [];
    this.expect(types$1.braceL);

    while (!this.match(types$1.braceR)) {
      let bodyNode = this.startNode();

      if (this.match(types$1._import)) {
        this.next();

        if (!this.isContextual("type") && !this.match(types$1._typeof)) {
          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);
        }

        this.parseImport(bodyNode);
      } else {
        this.expectContextual("declare", FlowErrors.UnsupportedStatementInDeclareModule);
        bodyNode = this.flowParseDeclare(bodyNode, true);
      }

      body.push(bodyNode);
    }

    this.scope.exit();
    this.expect(types$1.braceR);
    this.finishNode(bodyNode, "BlockStatement");
    let kind = null;
    let hasModuleExport = false;
    body.forEach(bodyElement => {
      if (isEsModuleType(bodyElement)) {
        if (kind === "CommonJS") {
          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);
        }

        kind = "ES";
      } else if (bodyElement.type === "DeclareModuleExports") {
        if (hasModuleExport) {
          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);
        }

        if (kind === "ES") {
          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);
        }

        kind = "CommonJS";
        hasModuleExport = true;
      }
    });
    node.kind = kind || "CommonJS";
    return this.finishNode(node, "DeclareModule");
  }

  flowParseDeclareExportDeclaration(node, insideModule) {
    this.expect(types$1._export);

    if (this.eat(types$1._default)) {
      if (this.match(types$1._function) || this.match(types$1._class)) {
        node.declaration = this.flowParseDeclare(this.startNode());
      } else {
        node.declaration = this.flowParseType();
        this.semicolon();
      }

      node.default = true;
      return this.finishNode(node, "DeclareExportDeclaration");
    } else {
      if (this.match(types$1._const) || this.isLet() || (this.isContextual("type") || this.isContextual("interface")) && !insideModule) {
        const label = this.state.value;
        const suggestion = exportSuggestions[label];
        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);
      }

      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual("opaque")) {
          node.declaration = this.flowParseDeclare(this.startNode());
          node.default = false;
          return this.finishNode(node, "DeclareExportDeclaration");
        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual("interface") || this.isContextual("type") || this.isContextual("opaque")) {
          node = this.parseExport(node);

          if (node.type === "ExportNamedDeclaration") {
            node.type = "ExportDeclaration";
            node.default = false;
            delete node.exportKind;
          }

          node.type = "Declare" + node.type;
          return node;
        }
    }

    throw this.unexpected();
  }

  flowParseDeclareModuleExports(node) {
    this.next();
    this.expectContextual("exports");
    node.typeAnnotation = this.flowParseTypeAnnotation();
    this.semicolon();
    return this.finishNode(node, "DeclareModuleExports");
  }

  flowParseDeclareTypeAlias(node) {
    this.next();
    this.flowParseTypeAlias(node);
    node.type = "DeclareTypeAlias";
    return node;
  }

  flowParseDeclareOpaqueType(node) {
    this.next();
    this.flowParseOpaqueType(node, true);
    node.type = "DeclareOpaqueType";
    return node;
  }

  flowParseDeclareInterface(node) {
    this.next();
    this.flowParseInterfaceish(node);
    return this.finishNode(node, "DeclareInterface");
  }

  flowParseInterfaceish(node, isClass = false) {
    node.id = this.flowParseRestrictedIdentifier(!isClass, true);
    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }

    node.extends = [];
    node.implements = [];
    node.mixins = [];

    if (this.eat(types$1._extends)) {
      do {
        node.extends.push(this.flowParseInterfaceExtends());
      } while (!isClass && this.eat(types$1.comma));
    }

    if (this.isContextual("mixins")) {
      this.next();

      do {
        node.mixins.push(this.flowParseInterfaceExtends());
      } while (this.eat(types$1.comma));
    }

    if (this.isContextual("implements")) {
      this.next();

      do {
        node.implements.push(this.flowParseInterfaceExtends());
      } while (this.eat(types$1.comma));
    }

    node.body = this.flowParseObjectType({
      allowStatic: isClass,
      allowExact: false,
      allowSpread: false,
      allowProto: isClass,
      allowInexact: false
    });
  }

  flowParseInterfaceExtends() {
    const node = this.startNode();
    node.id = this.flowParseQualifiedTypeIdentifier();

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterInstantiation();
    } else {
      node.typeParameters = null;
    }

    return this.finishNode(node, "InterfaceExtends");
  }

  flowParseInterface(node) {
    this.flowParseInterfaceish(node);
    return this.finishNode(node, "InterfaceDeclaration");
  }

  checkNotUnderscore(word) {
    if (word === "_") {
      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);
    }
  }

  checkReservedType(word, startLoc, declaration) {
    if (!reservedTypes.has(word)) return;
    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);
  }

  flowParseRestrictedIdentifier(liberal, declaration) {
    this.checkReservedType(this.state.value, this.state.start, declaration);
    return this.parseIdentifier(liberal);
  }

  flowParseTypeAlias(node) {
    node.id = this.flowParseRestrictedIdentifier(false, true);
    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }

    node.right = this.flowParseTypeInitialiser(types$1.eq);
    this.semicolon();
    return this.finishNode(node, "TypeAlias");
  }

  flowParseOpaqueType(node, declare) {
    this.expectContextual("type");
    node.id = this.flowParseRestrictedIdentifier(true, true);
    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    } else {
      node.typeParameters = null;
    }

    node.supertype = null;

    if (this.match(types$1.colon)) {
      node.supertype = this.flowParseTypeInitialiser(types$1.colon);
    }

    node.impltype = null;

    if (!declare) {
      node.impltype = this.flowParseTypeInitialiser(types$1.eq);
    }

    this.semicolon();
    return this.finishNode(node, "OpaqueType");
  }

  flowParseTypeParameter(requireDefault = false) {
    const nodeStart = this.state.start;
    const node = this.startNode();
    const variance = this.flowParseVariance();
    const ident = this.flowParseTypeAnnotatableIdentifier();
    node.name = ident.name;
    node.variance = variance;
    node.bound = ident.typeAnnotation;

    if (this.match(types$1.eq)) {
      this.eat(types$1.eq);
      node.default = this.flowParseType();
    } else {
      if (requireDefault) {
        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);
      }
    }

    return this.finishNode(node, "TypeParameter");
  }

  flowParseTypeParameterDeclaration() {
    const oldInType = this.state.inType;
    const node = this.startNode();
    node.params = [];
    this.state.inType = true;

    if (this.isRelational("<") || this.match(types$1.jsxTagStart)) {
      this.next();
    } else {
      this.unexpected();
    }

    let defaultRequired = false;

    do {
      const typeParameter = this.flowParseTypeParameter(defaultRequired);
      node.params.push(typeParameter);

      if (typeParameter.default) {
        defaultRequired = true;
      }

      if (!this.isRelational(">")) {
        this.expect(types$1.comma);
      }
    } while (!this.isRelational(">"));

    this.expectRelational(">");
    this.state.inType = oldInType;
    return this.finishNode(node, "TypeParameterDeclaration");
  }

  flowParseTypeParameterInstantiation() {
    const node = this.startNode();
    const oldInType = this.state.inType;
    node.params = [];
    this.state.inType = true;
    this.expectRelational("<");
    const oldNoAnonFunctionType = this.state.noAnonFunctionType;
    this.state.noAnonFunctionType = false;

    while (!this.isRelational(">")) {
      node.params.push(this.flowParseType());

      if (!this.isRelational(">")) {
        this.expect(types$1.comma);
      }
    }

    this.state.noAnonFunctionType = oldNoAnonFunctionType;
    this.expectRelational(">");
    this.state.inType = oldInType;
    return this.finishNode(node, "TypeParameterInstantiation");
  }

  flowParseTypeParameterInstantiationCallOrNew() {
    const node = this.startNode();
    const oldInType = this.state.inType;
    node.params = [];
    this.state.inType = true;
    this.expectRelational("<");

    while (!this.isRelational(">")) {
      node.params.push(this.flowParseTypeOrImplicitInstantiation());

      if (!this.isRelational(">")) {
        this.expect(types$1.comma);
      }
    }

    this.expectRelational(">");
    this.state.inType = oldInType;
    return this.finishNode(node, "TypeParameterInstantiation");
  }

  flowParseInterfaceType() {
    const node = this.startNode();
    this.expectContextual("interface");
    node.extends = [];

    if (this.eat(types$1._extends)) {
      do {
        node.extends.push(this.flowParseInterfaceExtends());
      } while (this.eat(types$1.comma));
    }

    node.body = this.flowParseObjectType({
      allowStatic: false,
      allowExact: false,
      allowSpread: false,
      allowProto: false,
      allowInexact: false
    });
    return this.finishNode(node, "InterfaceTypeAnnotation");
  }

  flowParseObjectPropertyKey() {
    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);
  }

  flowParseObjectTypeIndexer(node, isStatic, variance) {
    node.static = isStatic;

    if (this.lookahead().type === types$1.colon) {
      node.id = this.flowParseObjectPropertyKey();
      node.key = this.flowParseTypeInitialiser();
    } else {
      node.id = null;
      node.key = this.flowParseType();
    }

    this.expect(types$1.bracketR);
    node.value = this.flowParseTypeInitialiser();
    node.variance = variance;
    return this.finishNode(node, "ObjectTypeIndexer");
  }

  flowParseObjectTypeInternalSlot(node, isStatic) {
    node.static = isStatic;
    node.id = this.flowParseObjectPropertyKey();
    this.expect(types$1.bracketR);
    this.expect(types$1.bracketR);

    if (this.isRelational("<") || this.match(types$1.parenL)) {
      node.method = true;
      node.optional = false;
      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));
    } else {
      node.method = false;

      if (this.eat(types$1.question)) {
        node.optional = true;
      }

      node.value = this.flowParseTypeInitialiser();
    }

    return this.finishNode(node, "ObjectTypeInternalSlot");
  }

  flowParseObjectTypeMethodish(node) {
    node.params = [];
    node.rest = null;
    node.typeParameters = null;
    node.this = null;

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    }

    this.expect(types$1.parenL);

    if (this.match(types$1._this)) {
      node.this = this.flowParseFunctionTypeParam(true);
      node.this.name = null;

      if (!this.match(types$1.parenR)) {
        this.expect(types$1.comma);
      }
    }

    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {
      node.params.push(this.flowParseFunctionTypeParam(false));

      if (!this.match(types$1.parenR)) {
        this.expect(types$1.comma);
      }
    }

    if (this.eat(types$1.ellipsis)) {
      node.rest = this.flowParseFunctionTypeParam(false);
    }

    this.expect(types$1.parenR);
    node.returnType = this.flowParseTypeInitialiser();
    return this.finishNode(node, "FunctionTypeAnnotation");
  }

  flowParseObjectTypeCallProperty(node, isStatic) {
    const valueNode = this.startNode();
    node.static = isStatic;
    node.value = this.flowParseObjectTypeMethodish(valueNode);
    return this.finishNode(node, "ObjectTypeCallProperty");
  }

  flowParseObjectType({
    allowStatic,
    allowExact,
    allowSpread,
    allowProto,
    allowInexact
  }) {
    const oldInType = this.state.inType;
    this.state.inType = true;
    const nodeStart = this.startNode();
    nodeStart.callProperties = [];
    nodeStart.properties = [];
    nodeStart.indexers = [];
    nodeStart.internalSlots = [];
    let endDelim;
    let exact;
    let inexact = false;

    if (allowExact && this.match(types$1.braceBarL)) {
      this.expect(types$1.braceBarL);
      endDelim = types$1.braceBarR;
      exact = true;
    } else {
      this.expect(types$1.braceL);
      endDelim = types$1.braceR;
      exact = false;
    }

    nodeStart.exact = exact;

    while (!this.match(endDelim)) {
      let isStatic = false;
      let protoStart = null;
      let inexactStart = null;
      const node = this.startNode();

      if (allowProto && this.isContextual("proto")) {
        const lookahead = this.lookahead();

        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {
          this.next();
          protoStart = this.state.start;
          allowStatic = false;
        }
      }

      if (allowStatic && this.isContextual("static")) {
        const lookahead = this.lookahead();

        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {
          this.next();
          isStatic = true;
        }
      }

      const variance = this.flowParseVariance();

      if (this.eat(types$1.bracketL)) {
        if (protoStart != null) {
          this.unexpected(protoStart);
        }

        if (this.eat(types$1.bracketL)) {
          if (variance) {
            this.unexpected(variance.start);
          }

          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));
        } else {
          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));
        }
      } else if (this.match(types$1.parenL) || this.isRelational("<")) {
        if (protoStart != null) {
          this.unexpected(protoStart);
        }

        if (variance) {
          this.unexpected(variance.start);
        }

        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));
      } else {
        let kind = "init";

        if (this.isContextual("get") || this.isContextual("set")) {
          const lookahead = this.lookahead();

          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {
            kind = this.state.value;
            this.next();
          }
        }

        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);

        if (propOrInexact === null) {
          inexact = true;
          inexactStart = this.state.lastTokStart;
        } else {
          nodeStart.properties.push(propOrInexact);
        }
      }

      this.flowObjectTypeSemicolon();

      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {
        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);
      }
    }

    this.expect(endDelim);

    if (allowSpread) {
      nodeStart.inexact = inexact;
    }

    const out = this.finishNode(nodeStart, "ObjectTypeAnnotation");
    this.state.inType = oldInType;
    return out;
  }

  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {
    if (this.eat(types$1.ellipsis)) {
      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);

      if (isInexactToken) {
        if (!allowSpread) {
          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);
        } else if (!allowInexact) {
          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);
        }

        if (variance) {
          this.raise(variance.start, FlowErrors.InexactVariance);
        }

        return null;
      }

      if (!allowSpread) {
        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);
      }

      if (protoStart != null) {
        this.unexpected(protoStart);
      }

      if (variance) {
        this.raise(variance.start, FlowErrors.SpreadVariance);
      }

      node.argument = this.flowParseType();
      return this.finishNode(node, "ObjectTypeSpreadProperty");
    } else {
      node.key = this.flowParseObjectPropertyKey();
      node.static = isStatic;
      node.proto = protoStart != null;
      node.kind = kind;
      let optional = false;

      if (this.isRelational("<") || this.match(types$1.parenL)) {
        node.method = true;

        if (protoStart != null) {
          this.unexpected(protoStart);
        }

        if (variance) {
          this.unexpected(variance.start);
        }

        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));

        if (kind === "get" || kind === "set") {
          this.flowCheckGetterSetterParams(node);
        }

        if (!allowSpread && node.key.name === "constructor" && node.value.this) {
          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);
        }
      } else {
        if (kind !== "init") this.unexpected();
        node.method = false;

        if (this.eat(types$1.question)) {
          optional = true;
        }

        node.value = this.flowParseTypeInitialiser();
        node.variance = variance;
      }

      node.optional = optional;
      return this.finishNode(node, "ObjectTypeProperty");
    }
  }

  flowCheckGetterSetterParams(property) {
    const paramCount = property.kind === "get" ? 0 : 1;
    const start = property.start;
    const length = property.value.params.length + (property.value.rest ? 1 : 0);

    if (property.value.this) {
      this.raise(property.value.this.start, property.kind === "get" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);
    }

    if (length !== paramCount) {
      if (property.kind === "get") {
        this.raise(start, ErrorMessages.BadGetterArity);
      } else {
        this.raise(start, ErrorMessages.BadSetterArity);
      }
    }

    if (property.kind === "set" && property.value.rest) {
      this.raise(start, ErrorMessages.BadSetterRestParameter);
    }
  }

  flowObjectTypeSemicolon() {
    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {
      this.unexpected();
    }
  }

  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {
    startPos = startPos || this.state.start;
    startLoc = startLoc || this.state.startLoc;
    let node = id || this.flowParseRestrictedIdentifier(true);

    while (this.eat(types$1.dot)) {
      const node2 = this.startNodeAt(startPos, startLoc);
      node2.qualification = node;
      node2.id = this.flowParseRestrictedIdentifier(true);
      node = this.finishNode(node2, "QualifiedTypeIdentifier");
    }

    return node;
  }

  flowParseGenericType(startPos, startLoc, id) {
    const node = this.startNodeAt(startPos, startLoc);
    node.typeParameters = null;
    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterInstantiation();
    }

    return this.finishNode(node, "GenericTypeAnnotation");
  }

  flowParseTypeofType() {
    const node = this.startNode();
    this.expect(types$1._typeof);
    node.argument = this.flowParsePrimaryType();
    return this.finishNode(node, "TypeofTypeAnnotation");
  }

  flowParseTupleType() {
    const node = this.startNode();
    node.types = [];
    this.expect(types$1.bracketL);

    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {
      node.types.push(this.flowParseType());
      if (this.match(types$1.bracketR)) break;
      this.expect(types$1.comma);
    }

    this.expect(types$1.bracketR);
    return this.finishNode(node, "TupleTypeAnnotation");
  }

  flowParseFunctionTypeParam(first) {
    let name = null;
    let optional = false;
    let typeAnnotation = null;
    const node = this.startNode();
    const lh = this.lookahead();
    const isThis = this.state.type === types$1._this;

    if (lh.type === types$1.colon || lh.type === types$1.question) {
      if (isThis && !first) {
        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);
      }

      name = this.parseIdentifier(isThis);

      if (this.eat(types$1.question)) {
        optional = true;

        if (isThis) {
          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);
        }
      }

      typeAnnotation = this.flowParseTypeInitialiser();
    } else {
      typeAnnotation = this.flowParseType();
    }

    node.name = name;
    node.optional = optional;
    node.typeAnnotation = typeAnnotation;
    return this.finishNode(node, "FunctionTypeParam");
  }

  reinterpretTypeAsFunctionTypeParam(type) {
    const node = this.startNodeAt(type.start, type.loc.start);
    node.name = null;
    node.optional = false;
    node.typeAnnotation = type;
    return this.finishNode(node, "FunctionTypeParam");
  }

  flowParseFunctionTypeParams(params = []) {
    let rest = null;
    let _this = null;

    if (this.match(types$1._this)) {
      _this = this.flowParseFunctionTypeParam(true);
      _this.name = null;

      if (!this.match(types$1.parenR)) {
        this.expect(types$1.comma);
      }
    }

    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {
      params.push(this.flowParseFunctionTypeParam(false));

      if (!this.match(types$1.parenR)) {
        this.expect(types$1.comma);
      }
    }

    if (this.eat(types$1.ellipsis)) {
      rest = this.flowParseFunctionTypeParam(false);
    }

    return {
      params,
      rest,
      _this
    };
  }

  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {
    switch (id.name) {
      case "any":
        return this.finishNode(node, "AnyTypeAnnotation");

      case "bool":
      case "boolean":
        return this.finishNode(node, "BooleanTypeAnnotation");

      case "mixed":
        return this.finishNode(node, "MixedTypeAnnotation");

      case "empty":
        return this.finishNode(node, "EmptyTypeAnnotation");

      case "number":
        return this.finishNode(node, "NumberTypeAnnotation");

      case "string":
        return this.finishNode(node, "StringTypeAnnotation");

      case "symbol":
        return this.finishNode(node, "SymbolTypeAnnotation");

      default:
        this.checkNotUnderscore(id.name);
        return this.flowParseGenericType(startPos, startLoc, id);
    }
  }

  flowParsePrimaryType() {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const node = this.startNode();
    let tmp;
    let type;
    let isGroupedType = false;
    const oldNoAnonFunctionType = this.state.noAnonFunctionType;

    switch (this.state.type) {
      case types$1.name:
        if (this.isContextual("interface")) {
          return this.flowParseInterfaceType();
        }

        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());

      case types$1.braceL:
        return this.flowParseObjectType({
          allowStatic: false,
          allowExact: false,
          allowSpread: true,
          allowProto: false,
          allowInexact: true
        });

      case types$1.braceBarL:
        return this.flowParseObjectType({
          allowStatic: false,
          allowExact: true,
          allowSpread: true,
          allowProto: false,
          allowInexact: false
        });

      case types$1.bracketL:
        this.state.noAnonFunctionType = false;
        type = this.flowParseTupleType();
        this.state.noAnonFunctionType = oldNoAnonFunctionType;
        return type;

      case types$1.relational:
        if (this.state.value === "<") {
          node.typeParameters = this.flowParseTypeParameterDeclaration();
          this.expect(types$1.parenL);
          tmp = this.flowParseFunctionTypeParams();
          node.params = tmp.params;
          node.rest = tmp.rest;
          node.this = tmp._this;
          this.expect(types$1.parenR);
          this.expect(types$1.arrow);
          node.returnType = this.flowParseType();
          return this.finishNode(node, "FunctionTypeAnnotation");
        }

        break;

      case types$1.parenL:
        this.next();

        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {
          if (this.match(types$1.name) || this.match(types$1._this)) {
            const token = this.lookahead().type;
            isGroupedType = token !== types$1.question && token !== types$1.colon;
          } else {
            isGroupedType = true;
          }
        }

        if (isGroupedType) {
          this.state.noAnonFunctionType = false;
          type = this.flowParseType();
          this.state.noAnonFunctionType = oldNoAnonFunctionType;

          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {
            this.expect(types$1.parenR);
            return type;
          } else {
            this.eat(types$1.comma);
          }
        }

        if (type) {
          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);
        } else {
          tmp = this.flowParseFunctionTypeParams();
        }

        node.params = tmp.params;
        node.rest = tmp.rest;
        node.this = tmp._this;
        this.expect(types$1.parenR);
        this.expect(types$1.arrow);
        node.returnType = this.flowParseType();
        node.typeParameters = null;
        return this.finishNode(node, "FunctionTypeAnnotation");

      case types$1.string:
        return this.parseLiteral(this.state.value, "StringLiteralTypeAnnotation");

      case types$1._true:
      case types$1._false:
        node.value = this.match(types$1._true);
        this.next();
        return this.finishNode(node, "BooleanLiteralTypeAnnotation");

      case types$1.plusMin:
        if (this.state.value === "-") {
          this.next();

          if (this.match(types$1.num)) {
            return this.parseLiteralAtNode(-this.state.value, "NumberLiteralTypeAnnotation", node);
          }

          if (this.match(types$1.bigint)) {
            return this.parseLiteralAtNode(-this.state.value, "BigIntLiteralTypeAnnotation", node);
          }

          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);
        }

        throw this.unexpected();

      case types$1.num:
        return this.parseLiteral(this.state.value, "NumberLiteralTypeAnnotation");

      case types$1.bigint:
        return this.parseLiteral(this.state.value, "BigIntLiteralTypeAnnotation");

      case types$1._void:
        this.next();
        return this.finishNode(node, "VoidTypeAnnotation");

      case types$1._null:
        this.next();
        return this.finishNode(node, "NullLiteralTypeAnnotation");

      case types$1._this:
        this.next();
        return this.finishNode(node, "ThisTypeAnnotation");

      case types$1.star:
        this.next();
        return this.finishNode(node, "ExistsTypeAnnotation");

      default:
        if (this.state.type.keyword === "typeof") {
          return this.flowParseTypeofType();
        } else if (this.state.type.keyword) {
          const label = this.state.type.label;
          this.next();
          return super.createIdentifier(node, label);
        }

    }

    throw this.unexpected();
  }

  flowParsePostfixType() {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    let type = this.flowParsePrimaryType();
    let seenOptionalIndexedAccess = false;

    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {
      const node = this.startNodeAt(startPos, startLoc);
      const optional = this.eat(types$1.questionDot);
      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;
      this.expect(types$1.bracketL);

      if (!optional && this.match(types$1.bracketR)) {
        node.elementType = type;
        this.next();
        type = this.finishNode(node, "ArrayTypeAnnotation");
      } else {
        node.objectType = type;
        node.indexType = this.flowParseType();
        this.expect(types$1.bracketR);

        if (seenOptionalIndexedAccess) {
          node.optional = optional;
          type = this.finishNode(node, "OptionalIndexedAccessType");
        } else {
          type = this.finishNode(node, "IndexedAccessType");
        }
      }
    }

    return type;
  }

  flowParsePrefixType() {
    const node = this.startNode();

    if (this.eat(types$1.question)) {
      node.typeAnnotation = this.flowParsePrefixType();
      return this.finishNode(node, "NullableTypeAnnotation");
    } else {
      return this.flowParsePostfixType();
    }
  }

  flowParseAnonFunctionWithoutParens() {
    const param = this.flowParsePrefixType();

    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {
      const node = this.startNodeAt(param.start, param.loc.start);
      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];
      node.rest = null;
      node.this = null;
      node.returnType = this.flowParseType();
      node.typeParameters = null;
      return this.finishNode(node, "FunctionTypeAnnotation");
    }

    return param;
  }

  flowParseIntersectionType() {
    const node = this.startNode();
    this.eat(types$1.bitwiseAND);
    const type = this.flowParseAnonFunctionWithoutParens();
    node.types = [type];

    while (this.eat(types$1.bitwiseAND)) {
      node.types.push(this.flowParseAnonFunctionWithoutParens());
    }

    return node.types.length === 1 ? type : this.finishNode(node, "IntersectionTypeAnnotation");
  }

  flowParseUnionType() {
    const node = this.startNode();
    this.eat(types$1.bitwiseOR);
    const type = this.flowParseIntersectionType();
    node.types = [type];

    while (this.eat(types$1.bitwiseOR)) {
      node.types.push(this.flowParseIntersectionType());
    }

    return node.types.length === 1 ? type : this.finishNode(node, "UnionTypeAnnotation");
  }

  flowParseType() {
    const oldInType = this.state.inType;
    this.state.inType = true;
    const type = this.flowParseUnionType();
    this.state.inType = oldInType;
    this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;
    return type;
  }

  flowParseTypeOrImplicitInstantiation() {
    if (this.state.type === types$1.name && this.state.value === "_") {
      const startPos = this.state.start;
      const startLoc = this.state.startLoc;
      const node = this.parseIdentifier();
      return this.flowParseGenericType(startPos, startLoc, node);
    } else {
      return this.flowParseType();
    }
  }

  flowParseTypeAnnotation() {
    const node = this.startNode();
    node.typeAnnotation = this.flowParseTypeInitialiser();
    return this.finishNode(node, "TypeAnnotation");
  }

  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {
    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();

    if (this.match(types$1.colon)) {
      ident.typeAnnotation = this.flowParseTypeAnnotation();
      this.resetEndLocation(ident);
    }

    return ident;
  }

  typeCastToParameter(node) {
    node.expression.typeAnnotation = node.typeAnnotation;
    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);
    return node.expression;
  }

  flowParseVariance() {
    let variance = null;

    if (this.match(types$1.plusMin)) {
      variance = this.startNode();

      if (this.state.value === "+") {
        variance.kind = "plus";
      } else {
        variance.kind = "minus";
      }

      this.next();
      this.finishNode(variance, "Variance");
    }

    return variance;
  }

  parseFunctionBody(node, allowExpressionBody, isMethod = false) {
    if (allowExpressionBody) {
      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));
    }

    return super.parseFunctionBody(node, false, isMethod);
  }

  parseFunctionBodyAndFinish(node, type, isMethod = false) {
    if (this.match(types$1.colon)) {
      const typeNode = this.startNode();
      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();
      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, "TypeAnnotation") : null;
    }

    super.parseFunctionBodyAndFinish(node, type, isMethod);
  }

  parseStatement(context, topLevel) {
    if (this.state.strict && this.match(types$1.name) && this.state.value === "interface") {
      const lookahead = this.lookahead();

      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {
        const node = this.startNode();
        this.next();
        return this.flowParseInterface(node);
      }
    } else if (this.shouldParseEnums() && this.isContextual("enum")) {
      const node = this.startNode();
      this.next();
      return this.flowParseEnumDeclaration(node);
    }

    const stmt = super.parseStatement(context, topLevel);

    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {
      this.flowPragma = null;
    }

    return stmt;
  }

  parseExpressionStatement(node, expr) {
    if (expr.type === "Identifier") {
      if (expr.name === "declare") {
        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {
          return this.flowParseDeclare(node);
        }
      } else if (this.match(types$1.name)) {
        if (expr.name === "interface") {
          return this.flowParseInterface(node);
        } else if (expr.name === "type") {
          return this.flowParseTypeAlias(node);
        } else if (expr.name === "opaque") {
          return this.flowParseOpaqueType(node, false);
        }
      }
    }

    return super.parseExpressionStatement(node, expr);
  }

  shouldParseExportDeclaration() {
    return this.isContextual("type") || this.isContextual("interface") || this.isContextual("opaque") || this.shouldParseEnums() && this.isContextual("enum") || super.shouldParseExportDeclaration();
  }

  isExportDefaultSpecifier() {
    if (this.match(types$1.name) && (this.state.value === "type" || this.state.value === "interface" || this.state.value === "opaque" || this.shouldParseEnums() && this.state.value === "enum")) {
      return false;
    }

    return super.isExportDefaultSpecifier();
  }

  parseExportDefaultExpression() {
    if (this.shouldParseEnums() && this.isContextual("enum")) {
      const node = this.startNode();
      this.next();
      return this.flowParseEnumDeclaration(node);
    }

    return super.parseExportDefaultExpression();
  }

  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {
    if (!this.match(types$1.question)) return expr;

    if (refNeedsArrowPos) {
      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));

      if (!result.node) {
        refNeedsArrowPos.start = result.error.pos || this.state.start;
        return expr;
      }

      if (result.error) this.state = result.failState;
      return result.node;
    }

    this.expect(types$1.question);
    const state = this.state.clone();
    const originalNoArrowAt = this.state.noArrowAt;
    const node = this.startNodeAt(startPos, startLoc);
    let {
      consequent,
      failed
    } = this.tryParseConditionalConsequent();
    let [valid, invalid] = this.getArrowLikeExpressions(consequent);

    if (failed || invalid.length > 0) {
      const noArrowAt = [...originalNoArrowAt];

      if (invalid.length > 0) {
        this.state = state;
        this.state.noArrowAt = noArrowAt;

        for (let i = 0; i < invalid.length; i++) {
          noArrowAt.push(invalid[i].start);
        }

        ({
          consequent,
          failed
        } = this.tryParseConditionalConsequent());
        [valid, invalid] = this.getArrowLikeExpressions(consequent);
      }

      if (failed && valid.length > 1) {
        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);
      }

      if (failed && valid.length === 1) {
        this.state = state;
        this.state.noArrowAt = noArrowAt.concat(valid[0].start);
        ({
          consequent,
          failed
        } = this.tryParseConditionalConsequent());
      }
    }

    this.getArrowLikeExpressions(consequent, true);
    this.state.noArrowAt = originalNoArrowAt;
    this.expect(types$1.colon);
    node.test = expr;
    node.consequent = consequent;
    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined, undefined));
    return this.finishNode(node, "ConditionalExpression");
  }

  tryParseConditionalConsequent() {
    this.state.noArrowParamsConversionAt.push(this.state.start);
    const consequent = this.parseMaybeAssignAllowIn();
    const failed = !this.match(types$1.colon);
    this.state.noArrowParamsConversionAt.pop();
    return {
      consequent,
      failed
    };
  }

  getArrowLikeExpressions(node, disallowInvalid) {
    const stack = [node];
    const arrows = [];

    while (stack.length !== 0) {
      const node = stack.pop();

      if (node.type === "ArrowFunctionExpression") {
        if (node.typeParameters || !node.returnType) {
          this.finishArrowValidation(node);
        } else {
          arrows.push(node);
        }

        stack.push(node.body);
      } else if (node.type === "ConditionalExpression") {
        stack.push(node.consequent);
        stack.push(node.alternate);
      }
    }

    if (disallowInvalid) {
      arrows.forEach(node => this.finishArrowValidation(node));
      return [arrows, []];
    }

    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));
  }

  finishArrowValidation(node) {
    var _node$extra;

    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);
    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);
    super.checkParams(node, false, true);
    this.scope.exit();
  }

  forwardNoArrowParamsConversionAt(node, parse) {
    let result;

    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {
      this.state.noArrowParamsConversionAt.push(this.state.start);
      result = parse();
      this.state.noArrowParamsConversionAt.pop();
    } else {
      result = parse();
    }

    return result;
  }

  parseParenItem(node, startPos, startLoc) {
    node = super.parseParenItem(node, startPos, startLoc);

    if (this.eat(types$1.question)) {
      node.optional = true;
      this.resetEndLocation(node);
    }

    if (this.match(types$1.colon)) {
      const typeCastNode = this.startNodeAt(startPos, startLoc);
      typeCastNode.expression = node;
      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();
      return this.finishNode(typeCastNode, "TypeCastExpression");
    }

    return node;
  }

  assertModuleNodeAllowed(node) {
    if (node.type === "ImportDeclaration" && (node.importKind === "type" || node.importKind === "typeof") || node.type === "ExportNamedDeclaration" && node.exportKind === "type" || node.type === "ExportAllDeclaration" && node.exportKind === "type") {
      return;
    }

    super.assertModuleNodeAllowed(node);
  }

  parseExport(node) {
    const decl = super.parseExport(node);

    if (decl.type === "ExportNamedDeclaration" || decl.type === "ExportAllDeclaration") {
      decl.exportKind = decl.exportKind || "value";
    }

    return decl;
  }

  parseExportDeclaration(node) {
    if (this.isContextual("type")) {
      node.exportKind = "type";
      const declarationNode = this.startNode();
      this.next();

      if (this.match(types$1.braceL)) {
        node.specifiers = this.parseExportSpecifiers();
        this.parseExportFrom(node);
        return null;
      } else {
        return this.flowParseTypeAlias(declarationNode);
      }
    } else if (this.isContextual("opaque")) {
      node.exportKind = "type";
      const declarationNode = this.startNode();
      this.next();
      return this.flowParseOpaqueType(declarationNode, false);
    } else if (this.isContextual("interface")) {
      node.exportKind = "type";
      const declarationNode = this.startNode();
      this.next();
      return this.flowParseInterface(declarationNode);
    } else if (this.shouldParseEnums() && this.isContextual("enum")) {
      node.exportKind = "value";
      const declarationNode = this.startNode();
      this.next();
      return this.flowParseEnumDeclaration(declarationNode);
    } else {
      return super.parseExportDeclaration(node);
    }
  }

  eatExportStar(node) {
    if (super.eatExportStar(...arguments)) return true;

    if (this.isContextual("type") && this.lookahead().type === types$1.star) {
      node.exportKind = "type";
      this.next();
      this.next();
      return true;
    }

    return false;
  }

  maybeParseExportNamespaceSpecifier(node) {
    const pos = this.state.start;
    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);

    if (hasNamespace && node.exportKind === "type") {
      this.unexpected(pos);
    }

    return hasNamespace;
  }

  parseClassId(node, isStatement, optionalId) {
    super.parseClassId(node, isStatement, optionalId);

    if (this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    }
  }

  parseClassMember(classBody, member, state) {
    const pos = this.state.start;

    if (this.isContextual("declare")) {
      if (this.parseClassMemberFromModifier(classBody, member)) {
        return;
      }

      member.declare = true;
    }

    super.parseClassMember(classBody, member, state);

    if (member.declare) {
      if (member.type !== "ClassProperty" && member.type !== "ClassPrivateProperty" && member.type !== "PropertyDefinition") {
          this.raise(pos, FlowErrors.DeclareClassElement);
        } else if (member.value) {
        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);
      }
    }
  }

  isIterator(word) {
    return word === "iterator" || word === "asyncIterator";
  }

  readIterator() {
    const word = super.readWord1();
    const fullWord = "@@" + word;

    if (!this.isIterator(word) || !this.state.inType) {
      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);
    }

    this.finishToken(types$1.name, fullWord);
  }

  getTokenFromCode(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (code === 123 && next === 124) {
      return this.finishOp(types$1.braceBarL, 2);
    } else if (this.state.inType && (code === 62 || code === 60)) {
      return this.finishOp(types$1.relational, 1);
    } else if (this.state.inType && code === 63) {
      if (next === 46) {
        return this.finishOp(types$1.questionDot, 2);
      }

      return this.finishOp(types$1.question, 1);
    } else if (isIteratorStart(code, next)) {
      this.state.pos += 2;
      return this.readIterator();
    } else {
      return super.getTokenFromCode(code);
    }
  }

  isAssignable(node, isBinding) {
    switch (node.type) {
      case "Identifier":
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
        return true;

      case "ObjectExpression":
        {
          const last = node.properties.length - 1;
          return node.properties.every((prop, i) => {
            return prop.type !== "ObjectMethod" && (i === last || prop.type === "SpreadElement") && this.isAssignable(prop);
          });
        }

      case "ObjectProperty":
        return this.isAssignable(node.value);

      case "SpreadElement":
        return this.isAssignable(node.argument);

      case "ArrayExpression":
        return node.elements.every(element => this.isAssignable(element));

      case "AssignmentExpression":
        return node.operator === "=";

      case "ParenthesizedExpression":
      case "TypeCastExpression":
        return this.isAssignable(node.expression);

      case "MemberExpression":
      case "OptionalMemberExpression":
        return !isBinding;

      default:
        return false;
    }
  }

  toAssignable(node, isLHS = false) {
    if (node.type === "TypeCastExpression") {
      return super.toAssignable(this.typeCastToParameter(node), isLHS);
    } else {
      return super.toAssignable(node, isLHS);
    }
  }

  toAssignableList(exprList, trailingCommaPos, isLHS) {
    for (let i = 0; i < exprList.length; i++) {
      const expr = exprList[i];

      if ((expr == null ? void 0 : expr.type) === "TypeCastExpression") {
        exprList[i] = this.typeCastToParameter(expr);
      }
    }

    return super.toAssignableList(exprList, trailingCommaPos, isLHS);
  }

  toReferencedList(exprList, isParenthesizedExpr) {
    for (let i = 0; i < exprList.length; i++) {
      var _expr$extra;

      const expr = exprList[i];

      if (expr && expr.type === "TypeCastExpression" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {
        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);
      }
    }

    return exprList;
  }

  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {
    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);

    if (canBePattern && !this.state.maybeInArrowParameters) {
      this.toReferencedList(node.elements);
    }

    return node;
  }

  checkLVal(expr, ...args) {
    if (expr.type !== "TypeCastExpression") {
      return super.checkLVal(expr, ...args);
    }
  }

  parseClassProperty(node) {
    if (this.match(types$1.colon)) {
      node.typeAnnotation = this.flowParseTypeAnnotation();
    }

    return super.parseClassProperty(node);
  }

  parseClassPrivateProperty(node) {
    if (this.match(types$1.colon)) {
      node.typeAnnotation = this.flowParseTypeAnnotation();
    }

    return super.parseClassPrivateProperty(node);
  }

  isClassMethod() {
    return this.isRelational("<") || super.isClassMethod();
  }

  isClassProperty() {
    return this.match(types$1.colon) || super.isClassProperty();
  }

  isNonstaticConstructor(method) {
    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);
  }

  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {
    if (method.variance) {
      this.unexpected(method.variance.start);
    }

    delete method.variance;

    if (this.isRelational("<")) {
      method.typeParameters = this.flowParseTypeParameterDeclaration();
    }

    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);

    if (method.params && isConstructor) {
      const params = method.params;

      if (params.length > 0 && this.isThisParam(params[0])) {
        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);
      }
    } else if (method.type === "MethodDefinition" && isConstructor && method.value.params) {
      const params = method.value.params;

      if (params.length > 0 && this.isThisParam(params[0])) {
        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);
      }
    }
  }

  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {
    if (method.variance) {
      this.unexpected(method.variance.start);
    }

    delete method.variance;

    if (this.isRelational("<")) {
      method.typeParameters = this.flowParseTypeParameterDeclaration();
    }

    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);
  }

  parseClassSuper(node) {
    super.parseClassSuper(node);

    if (node.superClass && this.isRelational("<")) {
      node.superTypeParameters = this.flowParseTypeParameterInstantiation();
    }

    if (this.isContextual("implements")) {
      this.next();
      const implemented = node.implements = [];

      do {
        const node = this.startNode();
        node.id = this.flowParseRestrictedIdentifier(true);

        if (this.isRelational("<")) {
          node.typeParameters = this.flowParseTypeParameterInstantiation();
        } else {
          node.typeParameters = null;
        }

        implemented.push(this.finishNode(node, "ClassImplements"));
      } while (this.eat(types$1.comma));
    }
  }

  checkGetterSetterParams(method) {
    super.checkGetterSetterParams(method);
    const params = this.getObjectOrClassMethodParams(method);

    if (params.length > 0) {
      const param = params[0];

      if (this.isThisParam(param) && method.kind === "get") {
        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);
      } else if (this.isThisParam(param)) {
        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);
      }
    }
  }

  parsePropertyName(node, isPrivateNameAllowed) {
    const variance = this.flowParseVariance();
    const key = super.parsePropertyName(node, isPrivateNameAllowed);
    node.variance = variance;
    return key;
  }

  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {
    if (prop.variance) {
      this.unexpected(prop.variance.start);
    }

    delete prop.variance;
    let typeParameters;

    if (this.isRelational("<") && !isAccessor) {
      typeParameters = this.flowParseTypeParameterDeclaration();
      if (!this.match(types$1.parenL)) this.unexpected();
    }

    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);

    if (typeParameters) {
      (prop.value || prop).typeParameters = typeParameters;
    }
  }

  parseAssignableListItemTypes(param) {
    if (this.eat(types$1.question)) {
      if (param.type !== "Identifier") {
        this.raise(param.start, FlowErrors.OptionalBindingPattern);
      }

      if (this.isThisParam(param)) {
        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);
      }

      param.optional = true;
    }

    if (this.match(types$1.colon)) {
      param.typeAnnotation = this.flowParseTypeAnnotation();
    } else if (this.isThisParam(param)) {
      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);
    }

    if (this.match(types$1.eq) && this.isThisParam(param)) {
      this.raise(param.start, FlowErrors.ThisParamNoDefault);
    }

    this.resetEndLocation(param);
    return param;
  }

  parseMaybeDefault(startPos, startLoc, left) {
    const node = super.parseMaybeDefault(startPos, startLoc, left);

    if (node.type === "AssignmentPattern" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {
      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);
    }

    return node;
  }

  shouldParseDefaultImport(node) {
    if (!hasTypeImportKind(node)) {
      return super.shouldParseDefaultImport(node);
    }

    return isMaybeDefaultImport(this.state);
  }

  parseImportSpecifierLocal(node, specifier, type, contextDescription) {
    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();
    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);
    node.specifiers.push(this.finishNode(specifier, type));
  }

  maybeParseDefaultImportSpecifier(node) {
    node.importKind = "value";
    let kind = null;

    if (this.match(types$1._typeof)) {
      kind = "typeof";
    } else if (this.isContextual("type")) {
      kind = "type";
    }

    if (kind) {
      const lh = this.lookahead();

      if (kind === "type" && lh.type === types$1.star) {
        this.unexpected(lh.start);
      }

      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {
        this.next();
        node.importKind = kind;
      }
    }

    return super.maybeParseDefaultImportSpecifier(node);
  }

  parseImportSpecifier(node) {
    const specifier = this.startNode();
    const firstIdentIsString = this.match(types$1.string);
    const firstIdent = this.parseModuleExportName();
    let specifierTypeKind = null;

    if (firstIdent.type === "Identifier") {
      if (firstIdent.name === "type") {
        specifierTypeKind = "type";
      } else if (firstIdent.name === "typeof") {
        specifierTypeKind = "typeof";
      }
    }

    let isBinding = false;

    if (this.isContextual("as") && !this.isLookaheadContextual("as")) {
      const as_ident = this.parseIdentifier(true);

      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {
        specifier.imported = as_ident;
        specifier.importKind = specifierTypeKind;
        specifier.local = as_ident.__clone();
      } else {
        specifier.imported = firstIdent;
        specifier.importKind = null;
        specifier.local = this.parseIdentifier();
      }
    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {
      specifier.imported = this.parseIdentifier(true);
      specifier.importKind = specifierTypeKind;

      if (this.eatContextual("as")) {
        specifier.local = this.parseIdentifier();
      } else {
        isBinding = true;
        specifier.local = specifier.imported.__clone();
      }
    } else {
      if (firstIdentIsString) {
        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);
      }

      isBinding = true;
      specifier.imported = firstIdent;
      specifier.importKind = null;
      specifier.local = specifier.imported.__clone();
    }

    const nodeIsTypeImport = hasTypeImportKind(node);
    const specifierIsTypeImport = hasTypeImportKind(specifier);

    if (nodeIsTypeImport && specifierIsTypeImport) {
      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);
    }

    if (nodeIsTypeImport || specifierIsTypeImport) {
      this.checkReservedType(specifier.local.name, specifier.local.start, true);
    }

    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {
      this.checkReservedWord(specifier.local.name, specifier.start, true, true);
    }

    this.checkLVal(specifier.local, "import specifier", BIND_LEXICAL);
    node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));
  }

  parseBindingAtom() {
    switch (this.state.type) {
      case types$1._this:
        return this.parseIdentifier(true);

      default:
        return super.parseBindingAtom();
    }
  }

  parseFunctionParams(node, allowModifiers) {
    const kind = node.kind;

    if (kind !== "get" && kind !== "set" && this.isRelational("<")) {
      node.typeParameters = this.flowParseTypeParameterDeclaration();
    }

    super.parseFunctionParams(node, allowModifiers);
  }

  parseVarId(decl, kind) {
    super.parseVarId(decl, kind);

    if (this.match(types$1.colon)) {
      decl.id.typeAnnotation = this.flowParseTypeAnnotation();
      this.resetEndLocation(decl.id);
    }
  }

  parseAsyncArrowFromCallExpression(node, call) {
    if (this.match(types$1.colon)) {
      const oldNoAnonFunctionType = this.state.noAnonFunctionType;
      this.state.noAnonFunctionType = true;
      node.returnType = this.flowParseTypeAnnotation();
      this.state.noAnonFunctionType = oldNoAnonFunctionType;
    }

    return super.parseAsyncArrowFromCallExpression(node, call);
  }

  shouldParseAsyncArrow() {
    return this.match(types$1.colon) || super.shouldParseAsyncArrow();
  }

  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {
    var _jsx;

    let state = null;
    let jsx;

    if (this.hasPlugin("jsx") && (this.match(types$1.jsxTagStart) || this.isRelational("<"))) {
      state = this.state.clone();
      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos), state);
      if (!jsx.error) return jsx.node;
      const {
        context
      } = this.state;

      if (context[context.length - 1] === types.j_oTag) {
        context.length -= 2;
      } else if (context[context.length - 1] === types.j_expr) {
        context.length -= 1;
      }
    }

    if ((_jsx = jsx) != null && _jsx.error || this.isRelational("<")) {
      var _jsx2, _jsx3;

      state = state || this.state.clone();
      let typeParameters;
      const arrow = this.tryParse(abort => {
        var _arrowExpression$extr;

        typeParameters = this.flowParseTypeParameterDeclaration();
        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {
          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);
          this.resetStartLocationFromNode(result, typeParameters);
          return result;
        });

        if (arrowExpression.type !== "ArrowFunctionExpression" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {
          abort();
        }

        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);
        expr.typeParameters = typeParameters;
        this.resetStartLocationFromNode(expr, typeParameters);
        return arrowExpression;
      }, state);
      let arrowExpression = null;

      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === "ArrowFunctionExpression") {
        if (!arrow.error && !arrow.aborted) {
          if (arrow.node.async) {
            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);
          }

          return arrow.node;
        }

        arrowExpression = arrow.node;
      }

      if ((_jsx2 = jsx) != null && _jsx2.node) {
        this.state = jsx.failState;
        return jsx.node;
      }

      if (arrowExpression) {
        this.state = arrow.failState;
        return arrowExpression;
      }

      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;
      if (arrow.thrown) throw arrow.error;
      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);
    }

    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);
  }

  parseArrow(node) {
    if (this.match(types$1.colon)) {
      const result = this.tryParse(() => {
        const oldNoAnonFunctionType = this.state.noAnonFunctionType;
        this.state.noAnonFunctionType = true;
        const typeNode = this.startNode();
        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();
        this.state.noAnonFunctionType = oldNoAnonFunctionType;
        if (this.canInsertSemicolon()) this.unexpected();
        if (!this.match(types$1.arrow)) this.unexpected();
        return typeNode;
      });
      if (result.thrown) return null;
      if (result.error) this.state = result.failState;
      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, "TypeAnnotation") : null;
    }

    return super.parseArrow(node);
  }

  shouldParseArrow() {
    return this.match(types$1.colon) || super.shouldParseArrow();
  }

  setArrowFunctionParameters(node, params) {
    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {
      node.params = params;
    } else {
      super.setArrowFunctionParameters(node, params);
    }
  }

  checkParams(node, allowDuplicates, isArrowFunction) {
    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {
      return;
    }

    for (let i = 0; i < node.params.length; i++) {
      if (this.isThisParam(node.params[i]) && i > 0) {
        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);
      }
    }

    return super.checkParams(...arguments);
  }

  parseParenAndDistinguishExpression(canBeArrow) {
    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);
  }

  parseSubscripts(base, startPos, startLoc, noCalls) {
    if (base.type === "Identifier" && base.name === "async" && this.state.noArrowAt.indexOf(startPos) !== -1) {
      this.next();
      const node = this.startNodeAt(startPos, startLoc);
      node.callee = base;
      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);
      base = this.finishNode(node, "CallExpression");
    } else if (base.type === "Identifier" && base.name === "async" && this.isRelational("<")) {
      const state = this.state.clone();
      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);
      if (!arrow.error && !arrow.aborted) return arrow.node;
      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);
      if (result.node && !result.error) return result.node;

      if (arrow.node) {
        this.state = arrow.failState;
        return arrow.node;
      }

      if (result.node) {
        this.state = result.failState;
        return result.node;
      }

      throw arrow.error || result.error;
    }

    return super.parseSubscripts(base, startPos, startLoc, noCalls);
  }

  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {
    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {
      subscriptState.optionalChainMember = true;

      if (noCalls) {
        subscriptState.stop = true;
        return base;
      }

      this.next();
      const node = this.startNodeAt(startPos, startLoc);
      node.callee = base;
      node.typeArguments = this.flowParseTypeParameterInstantiation();
      this.expect(types$1.parenL);
      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);
      node.optional = true;
      return this.finishCallExpression(node, true);
    } else if (!noCalls && this.shouldParseTypes() && this.isRelational("<")) {
      const node = this.startNodeAt(startPos, startLoc);
      node.callee = base;
      const result = this.tryParse(() => {
        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();
        this.expect(types$1.parenL);
        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);
        if (subscriptState.optionalChainMember) node.optional = false;
        return this.finishCallExpression(node, subscriptState.optionalChainMember);
      });

      if (result.node) {
        if (result.error) this.state = result.failState;
        return result.node;
      }
    }

    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);
  }

  parseNewArguments(node) {
    let targs = null;

    if (this.shouldParseTypes() && this.isRelational("<")) {
      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;
    }

    node.typeArguments = targs;
    super.parseNewArguments(node);
  }

  parseAsyncArrowWithTypeParameters(startPos, startLoc) {
    const node = this.startNodeAt(startPos, startLoc);
    this.parseFunctionParams(node);
    if (!this.parseArrow(node)) return;
    return this.parseArrowExpression(node, undefined, true);
  }

  readToken_mult_modulo(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (code === 42 && next === 47 && this.state.hasFlowComment) {
      this.state.hasFlowComment = false;
      this.state.pos += 2;
      this.nextToken();
      return;
    }

    super.readToken_mult_modulo(code);
  }

  readToken_pipe_amp(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (code === 124 && next === 125) {
      this.finishOp(types$1.braceBarR, 2);
      return;
    }

    super.readToken_pipe_amp(code);
  }

  parseTopLevel(file, program) {
    const fileNode = super.parseTopLevel(file, program);

    if (this.state.hasFlowComment) {
      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);
    }

    return fileNode;
  }

  skipBlockComment() {
    if (this.hasPlugin("flowComments") && this.skipFlowComment()) {
      if (this.state.hasFlowComment) {
        this.unexpected(null, FlowErrors.NestedFlowComment);
      }

      this.hasFlowCommentCompletion();
      this.state.pos += this.skipFlowComment();
      this.state.hasFlowComment = true;
      return;
    }

    if (this.state.hasFlowComment) {
      const end = this.input.indexOf("*-/", this.state.pos += 2);

      if (end === -1) {
        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);
      }

      this.state.pos = end + 3;
      return;
    }

    super.skipBlockComment();
  }

  skipFlowComment() {
    const {
      pos
    } = this.state;
    let shiftToFirstNonWhiteSpace = 2;

    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {
      shiftToFirstNonWhiteSpace++;
    }

    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);
    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);

    if (ch2 === 58 && ch3 === 58) {
      return shiftToFirstNonWhiteSpace + 2;
    }

    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === "flow-include") {
      return shiftToFirstNonWhiteSpace + 12;
    }

    if (ch2 === 58 && ch3 !== 58) {
      return shiftToFirstNonWhiteSpace;
    }

    return false;
  }

  hasFlowCommentCompletion() {
    const end = this.input.indexOf("*/", this.state.pos);

    if (end === -1) {
      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);
    }
  }

  flowEnumErrorBooleanMemberNotInitialized(pos, {
    enumName,
    memberName
  }) {
    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);
  }

  flowEnumErrorInvalidMemberName(pos, {
    enumName,
    memberName
  }) {
    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);
    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);
  }

  flowEnumErrorDuplicateMemberName(pos, {
    enumName,
    memberName
  }) {
    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);
  }

  flowEnumErrorInconsistentMemberValues(pos, {
    enumName
  }) {
    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);
  }

  flowEnumErrorInvalidExplicitType(pos, {
    enumName,
    suppliedType
  }) {
    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);
  }

  flowEnumErrorInvalidMemberInitializer(pos, {
    enumName,
    explicitType,
    memberName
  }) {
    let message = null;

    switch (explicitType) {
      case "boolean":
      case "number":
      case "string":
        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;
        break;

      case "symbol":
        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;
        break;

      default:
        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;
    }

    return this.raise(pos, message, enumName, memberName, explicitType);
  }

  flowEnumErrorNumberMemberNotInitialized(pos, {
    enumName,
    memberName
  }) {
    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);
  }

  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {
    enumName
  }) {
    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);
  }

  flowEnumMemberInit() {
    const startPos = this.state.start;

    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);

    switch (this.state.type) {
      case types$1.num:
        {
          const literal = this.parseNumericLiteral(this.state.value);

          if (endOfInit()) {
            return {
              type: "number",
              pos: literal.start,
              value: literal
            };
          }

          return {
            type: "invalid",
            pos: startPos
          };
        }

      case types$1.string:
        {
          const literal = this.parseStringLiteral(this.state.value);

          if (endOfInit()) {
            return {
              type: "string",
              pos: literal.start,
              value: literal
            };
          }

          return {
            type: "invalid",
            pos: startPos
          };
        }

      case types$1._true:
      case types$1._false:
        {
          const literal = this.parseBooleanLiteral(this.match(types$1._true));

          if (endOfInit()) {
            return {
              type: "boolean",
              pos: literal.start,
              value: literal
            };
          }

          return {
            type: "invalid",
            pos: startPos
          };
        }

      default:
        return {
          type: "invalid",
          pos: startPos
        };
    }
  }

  flowEnumMemberRaw() {
    const pos = this.state.start;
    const id = this.parseIdentifier(true);
    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {
      type: "none",
      pos
    };
    return {
      id,
      init
    };
  }

  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {
    const {
      explicitType
    } = context;

    if (explicitType === null) {
      return;
    }

    if (explicitType !== expectedType) {
      this.flowEnumErrorInvalidMemberInitializer(pos, context);
    }
  }

  flowEnumMembers({
    enumName,
    explicitType
  }) {
    const seenNames = new Set();
    const members = {
      booleanMembers: [],
      numberMembers: [],
      stringMembers: [],
      defaultedMembers: []
    };
    let hasUnknownMembers = false;

    while (!this.match(types$1.braceR)) {
      if (this.eat(types$1.ellipsis)) {
        hasUnknownMembers = true;
        break;
      }

      const memberNode = this.startNode();
      const {
        id,
        init
      } = this.flowEnumMemberRaw();
      const memberName = id.name;

      if (memberName === "") {
        continue;
      }

      if (/^[a-z]/.test(memberName)) {
        this.flowEnumErrorInvalidMemberName(id.start, {
          enumName,
          memberName
        });
      }

      if (seenNames.has(memberName)) {
        this.flowEnumErrorDuplicateMemberName(id.start, {
          enumName,
          memberName
        });
      }

      seenNames.add(memberName);
      const context = {
        enumName,
        explicitType,
        memberName
      };
      memberNode.id = id;

      switch (init.type) {
        case "boolean":
          {
            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, "boolean");
            memberNode.init = init.value;
            members.booleanMembers.push(this.finishNode(memberNode, "EnumBooleanMember"));
            break;
          }

        case "number":
          {
            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, "number");
            memberNode.init = init.value;
            members.numberMembers.push(this.finishNode(memberNode, "EnumNumberMember"));
            break;
          }

        case "string":
          {
            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, "string");
            memberNode.init = init.value;
            members.stringMembers.push(this.finishNode(memberNode, "EnumStringMember"));
            break;
          }

        case "invalid":
          {
            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);
          }

        case "none":
          {
            switch (explicitType) {
              case "boolean":
                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);
                break;

              case "number":
                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);
                break;

              default:
                members.defaultedMembers.push(this.finishNode(memberNode, "EnumDefaultedMember"));
            }
          }
      }

      if (!this.match(types$1.braceR)) {
        this.expect(types$1.comma);
      }
    }

    return {
      members,
      hasUnknownMembers
    };
  }

  flowEnumStringMembers(initializedMembers, defaultedMembers, {
    enumName
  }) {
    if (initializedMembers.length === 0) {
      return defaultedMembers;
    } else if (defaultedMembers.length === 0) {
      return initializedMembers;
    } else if (defaultedMembers.length > initializedMembers.length) {
      for (const member of initializedMembers) {
        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {
          enumName
        });
      }

      return defaultedMembers;
    } else {
      for (const member of defaultedMembers) {
        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {
          enumName
        });
      }

      return initializedMembers;
    }
  }

  flowEnumParseExplicitType({
    enumName
  }) {
    if (this.eatContextual("of")) {
      if (!this.match(types$1.name)) {
        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {
          enumName,
          suppliedType: null
        });
      }

      const {
        value
      } = this.state;
      this.next();

      if (value !== "boolean" && value !== "number" && value !== "string" && value !== "symbol") {
        this.flowEnumErrorInvalidExplicitType(this.state.start, {
          enumName,
          suppliedType: value
        });
      }

      return value;
    }

    return null;
  }

  flowEnumBody(node, {
    enumName,
    nameLoc
  }) {
    const explicitType = this.flowEnumParseExplicitType({
      enumName
    });
    this.expect(types$1.braceL);
    const {
      members,
      hasUnknownMembers
    } = this.flowEnumMembers({
      enumName,
      explicitType
    });
    node.hasUnknownMembers = hasUnknownMembers;

    switch (explicitType) {
      case "boolean":
        node.explicitType = true;
        node.members = members.booleanMembers;
        this.expect(types$1.braceR);
        return this.finishNode(node, "EnumBooleanBody");

      case "number":
        node.explicitType = true;
        node.members = members.numberMembers;
        this.expect(types$1.braceR);
        return this.finishNode(node, "EnumNumberBody");

      case "string":
        node.explicitType = true;
        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {
          enumName
        });
        this.expect(types$1.braceR);
        return this.finishNode(node, "EnumStringBody");

      case "symbol":
        node.members = members.defaultedMembers;
        this.expect(types$1.braceR);
        return this.finishNode(node, "EnumSymbolBody");

      default:
        {
          const empty = () => {
            node.members = [];
            this.expect(types$1.braceR);
            return this.finishNode(node, "EnumStringBody");
          };

          node.explicitType = false;
          const boolsLen = members.booleanMembers.length;
          const numsLen = members.numberMembers.length;
          const strsLen = members.stringMembers.length;
          const defaultedLen = members.defaultedMembers.length;

          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {
            return empty();
          } else if (!boolsLen && !numsLen) {
            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {
              enumName
            });
            this.expect(types$1.braceR);
            return this.finishNode(node, "EnumStringBody");
          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {
            for (const member of members.defaultedMembers) {
              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {
                enumName,
                memberName: member.id.name
              });
            }

            node.members = members.booleanMembers;
            this.expect(types$1.braceR);
            return this.finishNode(node, "EnumBooleanBody");
          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {
            for (const member of members.defaultedMembers) {
              this.flowEnumErrorNumberMemberNotInitialized(member.start, {
                enumName,
                memberName: member.id.name
              });
            }

            node.members = members.numberMembers;
            this.expect(types$1.braceR);
            return this.finishNode(node, "EnumNumberBody");
          } else {
            this.flowEnumErrorInconsistentMemberValues(nameLoc, {
              enumName
            });
            return empty();
          }
        }
    }
  }

  flowParseEnumDeclaration(node) {
    const id = this.parseIdentifier();
    node.id = id;
    node.body = this.flowEnumBody(this.startNode(), {
      enumName: id.name,
      nameLoc: id.start
    });
    return this.finishNode(node, "EnumDeclaration");
  }

  updateContext(prevType) {
    if (this.match(types$1.name) && this.state.value === "of" && prevType === types$1.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === "interface") {
      this.state.exprAllowed = false;
    } else {
      super.updateContext(prevType);
    }
  }

  isLookaheadToken_lt() {
    const next = this.nextTokenStart();

    if (this.input.charCodeAt(next) === 60) {
      const afterNext = this.input.charCodeAt(next + 1);
      return afterNext !== 60 && afterNext !== 61;
    }

    return false;
  }

  maybeUnwrapTypeCastExpression(node) {
    return node.type === "TypeCastExpression" ? node.expression : node;
  }

});

const entities = {
  quot: "\u0022",
  amp: "&",
  apos: "\u0027",
  lt: "<",
  gt: ">",
  nbsp: "\u00A0",
  iexcl: "\u00A1",
  cent: "\u00A2",
  pound: "\u00A3",
  curren: "\u00A4",
  yen: "\u00A5",
  brvbar: "\u00A6",
  sect: "\u00A7",
  uml: "\u00A8",
  copy: "\u00A9",
  ordf: "\u00AA",
  laquo: "\u00AB",
  not: "\u00AC",
  shy: "\u00AD",
  reg: "\u00AE",
  macr: "\u00AF",
  deg: "\u00B0",
  plusmn: "\u00B1",
  sup2: "\u00B2",
  sup3: "\u00B3",
  acute: "\u00B4",
  micro: "\u00B5",
  para: "\u00B6",
  middot: "\u00B7",
  cedil: "\u00B8",
  sup1: "\u00B9",
  ordm: "\u00BA",
  raquo: "\u00BB",
  frac14: "\u00BC",
  frac12: "\u00BD",
  frac34: "\u00BE",
  iquest: "\u00BF",
  Agrave: "\u00C0",
  Aacute: "\u00C1",
  Acirc: "\u00C2",
  Atilde: "\u00C3",
  Auml: "\u00C4",
  Aring: "\u00C5",
  AElig: "\u00C6",
  Ccedil: "\u00C7",
  Egrave: "\u00C8",
  Eacute: "\u00C9",
  Ecirc: "\u00CA",
  Euml: "\u00CB",
  Igrave: "\u00CC",
  Iacute: "\u00CD",
  Icirc: "\u00CE",
  Iuml: "\u00CF",
  ETH: "\u00D0",
  Ntilde: "\u00D1",
  Ograve: "\u00D2",
  Oacute: "\u00D3",
  Ocirc: "\u00D4",
  Otilde: "\u00D5",
  Ouml: "\u00D6",
  times: "\u00D7",
  Oslash: "\u00D8",
  Ugrave: "\u00D9",
  Uacute: "\u00DA",
  Ucirc: "\u00DB",
  Uuml: "\u00DC",
  Yacute: "\u00DD",
  THORN: "\u00DE",
  szlig: "\u00DF",
  agrave: "\u00E0",
  aacute: "\u00E1",
  acirc: "\u00E2",
  atilde: "\u00E3",
  auml: "\u00E4",
  aring: "\u00E5",
  aelig: "\u00E6",
  ccedil: "\u00E7",
  egrave: "\u00E8",
  eacute: "\u00E9",
  ecirc: "\u00EA",
  euml: "\u00EB",
  igrave: "\u00EC",
  iacute: "\u00ED",
  icirc: "\u00EE",
  iuml: "\u00EF",
  eth: "\u00F0",
  ntilde: "\u00F1",
  ograve: "\u00F2",
  oacute: "\u00F3",
  ocirc: "\u00F4",
  otilde: "\u00F5",
  ouml: "\u00F6",
  divide: "\u00F7",
  oslash: "\u00F8",
  ugrave: "\u00F9",
  uacute: "\u00FA",
  ucirc: "\u00FB",
  uuml: "\u00FC",
  yacute: "\u00FD",
  thorn: "\u00FE",
  yuml: "\u00FF",
  OElig: "\u0152",
  oelig: "\u0153",
  Scaron: "\u0160",
  scaron: "\u0161",
  Yuml: "\u0178",
  fnof: "\u0192",
  circ: "\u02C6",
  tilde: "\u02DC",
  Alpha: "\u0391",
  Beta: "\u0392",
  Gamma: "\u0393",
  Delta: "\u0394",
  Epsilon: "\u0395",
  Zeta: "\u0396",
  Eta: "\u0397",
  Theta: "\u0398",
  Iota: "\u0399",
  Kappa: "\u039A",
  Lambda: "\u039B",
  Mu: "\u039C",
  Nu: "\u039D",
  Xi: "\u039E",
  Omicron: "\u039F",
  Pi: "\u03A0",
  Rho: "\u03A1",
  Sigma: "\u03A3",
  Tau: "\u03A4",
  Upsilon: "\u03A5",
  Phi: "\u03A6",
  Chi: "\u03A7",
  Psi: "\u03A8",
  Omega: "\u03A9",
  alpha: "\u03B1",
  beta: "\u03B2",
  gamma: "\u03B3",
  delta: "\u03B4",
  epsilon: "\u03B5",
  zeta: "\u03B6",
  eta: "\u03B7",
  theta: "\u03B8",
  iota: "\u03B9",
  kappa: "\u03BA",
  lambda: "\u03BB",
  mu: "\u03BC",
  nu: "\u03BD",
  xi: "\u03BE",
  omicron: "\u03BF",
  pi: "\u03C0",
  rho: "\u03C1",
  sigmaf: "\u03C2",
  sigma: "\u03C3",
  tau: "\u03C4",
  upsilon: "\u03C5",
  phi: "\u03C6",
  chi: "\u03C7",
  psi: "\u03C8",
  omega: "\u03C9",
  thetasym: "\u03D1",
  upsih: "\u03D2",
  piv: "\u03D6",
  ensp: "\u2002",
  emsp: "\u2003",
  thinsp: "\u2009",
  zwnj: "\u200C",
  zwj: "\u200D",
  lrm: "\u200E",
  rlm: "\u200F",
  ndash: "\u2013",
  mdash: "\u2014",
  lsquo: "\u2018",
  rsquo: "\u2019",
  sbquo: "\u201A",
  ldquo: "\u201C",
  rdquo: "\u201D",
  bdquo: "\u201E",
  dagger: "\u2020",
  Dagger: "\u2021",
  bull: "\u2022",
  hellip: "\u2026",
  permil: "\u2030",
  prime: "\u2032",
  Prime: "\u2033",
  lsaquo: "\u2039",
  rsaquo: "\u203A",
  oline: "\u203E",
  frasl: "\u2044",
  euro: "\u20AC",
  image: "\u2111",
  weierp: "\u2118",
  real: "\u211C",
  trade: "\u2122",
  alefsym: "\u2135",
  larr: "\u2190",
  uarr: "\u2191",
  rarr: "\u2192",
  darr: "\u2193",
  harr: "\u2194",
  crarr: "\u21B5",
  lArr: "\u21D0",
  uArr: "\u21D1",
  rArr: "\u21D2",
  dArr: "\u21D3",
  hArr: "\u21D4",
  forall: "\u2200",
  part: "\u2202",
  exist: "\u2203",
  empty: "\u2205",
  nabla: "\u2207",
  isin: "\u2208",
  notin: "\u2209",
  ni: "\u220B",
  prod: "\u220F",
  sum: "\u2211",
  minus: "\u2212",
  lowast: "\u2217",
  radic: "\u221A",
  prop: "\u221D",
  infin: "\u221E",
  ang: "\u2220",
  and: "\u2227",
  or: "\u2228",
  cap: "\u2229",
  cup: "\u222A",
  int: "\u222B",
  there4: "\u2234",
  sim: "\u223C",
  cong: "\u2245",
  asymp: "\u2248",
  ne: "\u2260",
  equiv: "\u2261",
  le: "\u2264",
  ge: "\u2265",
  sub: "\u2282",
  sup: "\u2283",
  nsub: "\u2284",
  sube: "\u2286",
  supe: "\u2287",
  oplus: "\u2295",
  otimes: "\u2297",
  perp: "\u22A5",
  sdot: "\u22C5",
  lceil: "\u2308",
  rceil: "\u2309",
  lfloor: "\u230A",
  rfloor: "\u230B",
  lang: "\u2329",
  rang: "\u232A",
  loz: "\u25CA",
  spades: "\u2660",
  clubs: "\u2663",
  hearts: "\u2665",
  diams: "\u2666"
};

class State {
  constructor() {
    this.strict = void 0;
    this.curLine = void 0;
    this.startLoc = void 0;
    this.endLoc = void 0;
    this.errors = [];
    this.potentialArrowAt = -1;
    this.noArrowAt = [];
    this.noArrowParamsConversionAt = [];
    this.maybeInArrowParameters = false;
    this.inPipeline = false;
    this.inType = false;
    this.noAnonFunctionType = false;
    this.inPropertyName = false;
    this.hasFlowComment = false;
    this.isAmbientContext = false;
    this.inAbstractClass = false;
    this.topicContext = {
      maxNumOfResolvableTopics: 0,
      maxTopicIndex: null
    };
    this.soloAwait = false;
    this.inFSharpPipelineDirectBody = false;
    this.labels = [];
    this.decoratorStack = [[]];
    this.comments = [];
    this.trailingComments = [];
    this.leadingComments = [];
    this.commentStack = [];
    this.commentPreviousNode = null;
    this.pos = 0;
    this.lineStart = 0;
    this.type = types$1.eof;
    this.value = null;
    this.start = 0;
    this.end = 0;
    this.lastTokEndLoc = null;
    this.lastTokStartLoc = null;
    this.lastTokStart = 0;
    this.lastTokEnd = 0;
    this.context = [types.braceStatement];
    this.exprAllowed = true;
    this.containsEsc = false;
    this.strictErrors = new Map();
    this.exportedIdentifiers = [];
    this.tokensLength = 0;
  }

  init(options) {
    this.strict = options.strictMode === false ? false : options.sourceType === "module";
    this.curLine = options.startLine;
    this.startLoc = this.endLoc = this.curPosition();
  }

  curPosition() {
    return new Position(this.curLine, this.pos - this.lineStart);
  }

  clone(skipArrays) {
    const state = new State();
    const keys = Object.keys(this);

    for (let i = 0, length = keys.length; i < length; i++) {
      const key = keys[i];
      let val = this[key];

      if (!skipArrays && Array.isArray(val)) {
        val = val.slice();
      }

      state[key] = val;
    }

    return state;
  }

}

const HEX_NUMBER = /^[\da-fA-F]+$/;
const DECIMAL_NUMBER = /^\d+$/;
const JsxErrors = makeErrorTemplates({
  AttributeIsEmpty: "JSX attributes must only be assigned a non-empty expression.",
  MissingClosingTagElement: "Expected corresponding JSX closing tag for <%0>.",
  MissingClosingTagFragment: "Expected corresponding JSX closing tag for <>.",
  UnexpectedSequenceExpression: "Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?",
  UnsupportedJsxValue: "JSX value should be either an expression or a quoted JSX text.",
  UnterminatedJsxContent: "Unterminated JSX contents.",
  UnwrappedAdjacentJSXElements: "Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?"
}, ErrorCodes.SyntaxError);
types.j_oTag = new TokContext("<tag", false);
types.j_cTag = new TokContext("</tag", false);
types.j_expr = new TokContext("<tag>...</tag>", true, true);
types$1.jsxName = new TokenType("jsxName");
types$1.jsxText = new TokenType("jsxText", {
  beforeExpr: true
});
types$1.jsxTagStart = new TokenType("jsxTagStart", {
  startsExpr: true
});
types$1.jsxTagEnd = new TokenType("jsxTagEnd");

types$1.jsxTagStart.updateContext = function () {
  this.state.context.push(types.j_expr);
  this.state.context.push(types.j_oTag);
  this.state.exprAllowed = false;
};

types$1.jsxTagEnd.updateContext = function (prevType) {
  const out = this.state.context.pop();

  if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {
    this.state.context.pop();
    this.state.exprAllowed = this.curContext() === types.j_expr;
  } else {
    this.state.exprAllowed = true;
  }
};

function isFragment(object) {
  return object ? object.type === "JSXOpeningFragment" || object.type === "JSXClosingFragment" : false;
}

function getQualifiedJSXName(object) {
  if (object.type === "JSXIdentifier") {
    return object.name;
  }

  if (object.type === "JSXNamespacedName") {
    return object.namespace.name + ":" + object.name.name;
  }

  if (object.type === "JSXMemberExpression") {
    return getQualifiedJSXName(object.object) + "." + getQualifiedJSXName(object.property);
  }

  throw new Error("Node had unexpected type: " + object.type);
}

var jsx = (superClass => class extends superClass {
  jsxReadToken() {
    let out = "";
    let chunkStart = this.state.pos;

    for (;;) {
      if (this.state.pos >= this.length) {
        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);
      }

      const ch = this.input.charCodeAt(this.state.pos);

      switch (ch) {
        case 60:
        case 123:
          if (this.state.pos === this.state.start) {
            if (ch === 60 && this.state.exprAllowed) {
              ++this.state.pos;
              return this.finishToken(types$1.jsxTagStart);
            }

            return super.getTokenFromCode(ch);
          }

          out += this.input.slice(chunkStart, this.state.pos);
          return this.finishToken(types$1.jsxText, out);

        case 38:
          out += this.input.slice(chunkStart, this.state.pos);
          out += this.jsxReadEntity();
          chunkStart = this.state.pos;
          break;

        case 62:
        case 125:

        default:
          if (isNewLine(ch)) {
            out += this.input.slice(chunkStart, this.state.pos);
            out += this.jsxReadNewLine(true);
            chunkStart = this.state.pos;
          } else {
            ++this.state.pos;
          }

      }
    }
  }

  jsxReadNewLine(normalizeCRLF) {
    const ch = this.input.charCodeAt(this.state.pos);
    let out;
    ++this.state.pos;

    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {
      ++this.state.pos;
      out = normalizeCRLF ? "\n" : "\r\n";
    } else {
      out = String.fromCharCode(ch);
    }

    ++this.state.curLine;
    this.state.lineStart = this.state.pos;
    return out;
  }

  jsxReadString(quote) {
    let out = "";
    let chunkStart = ++this.state.pos;

    for (;;) {
      if (this.state.pos >= this.length) {
        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);
      }

      const ch = this.input.charCodeAt(this.state.pos);
      if (ch === quote) break;

      if (ch === 38) {
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadEntity();
        chunkStart = this.state.pos;
      } else if (isNewLine(ch)) {
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.jsxReadNewLine(false);
        chunkStart = this.state.pos;
      } else {
        ++this.state.pos;
      }
    }

    out += this.input.slice(chunkStart, this.state.pos++);
    return this.finishToken(types$1.string, out);
  }

  jsxReadEntity() {
    let str = "";
    let count = 0;
    let entity;
    let ch = this.input[this.state.pos];
    const startPos = ++this.state.pos;

    while (this.state.pos < this.length && count++ < 10) {
      ch = this.input[this.state.pos++];

      if (ch === ";") {
        if (str[0] === "#") {
          if (str[1] === "x") {
            str = str.substr(2);

            if (HEX_NUMBER.test(str)) {
              entity = String.fromCodePoint(parseInt(str, 16));
            }
          } else {
            str = str.substr(1);

            if (DECIMAL_NUMBER.test(str)) {
              entity = String.fromCodePoint(parseInt(str, 10));
            }
          }
        } else {
          entity = entities[str];
        }

        break;
      }

      str += ch;
    }

    if (!entity) {
      this.state.pos = startPos;
      return "&";
    }

    return entity;
  }

  jsxReadWord() {
    let ch;
    const start = this.state.pos;

    do {
      ch = this.input.charCodeAt(++this.state.pos);
    } while (isIdentifierChar(ch) || ch === 45);

    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));
  }

  jsxParseIdentifier() {
    const node = this.startNode();

    if (this.match(types$1.jsxName)) {
      node.name = this.state.value;
    } else if (this.state.type.keyword) {
      node.name = this.state.type.keyword;
    } else {
      this.unexpected();
    }

    this.next();
    return this.finishNode(node, "JSXIdentifier");
  }

  jsxParseNamespacedName() {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const name = this.jsxParseIdentifier();
    if (!this.eat(types$1.colon)) return name;
    const node = this.startNodeAt(startPos, startLoc);
    node.namespace = name;
    node.name = this.jsxParseIdentifier();
    return this.finishNode(node, "JSXNamespacedName");
  }

  jsxParseElementName() {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    let node = this.jsxParseNamespacedName();

    if (node.type === "JSXNamespacedName") {
      return node;
    }

    while (this.eat(types$1.dot)) {
      const newNode = this.startNodeAt(startPos, startLoc);
      newNode.object = node;
      newNode.property = this.jsxParseIdentifier();
      node = this.finishNode(newNode, "JSXMemberExpression");
    }

    return node;
  }

  jsxParseAttributeValue() {
    let node;

    switch (this.state.type) {
      case types$1.braceL:
        node = this.startNode();
        this.next();
        node = this.jsxParseExpressionContainer(node);

        if (node.expression.type === "JSXEmptyExpression") {
          this.raise(node.start, JsxErrors.AttributeIsEmpty);
        }

        return node;

      case types$1.jsxTagStart:
      case types$1.string:
        return this.parseExprAtom();

      default:
        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);
    }
  }

  jsxParseEmptyExpression() {
    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);
    return this.finishNodeAt(node, "JSXEmptyExpression", this.state.start, this.state.startLoc);
  }

  jsxParseSpreadChild(node) {
    this.next();
    node.expression = this.parseExpression();
    this.expect(types$1.braceR);
    return this.finishNode(node, "JSXSpreadChild");
  }

  jsxParseExpressionContainer(node) {
    if (this.match(types$1.braceR)) {
      node.expression = this.jsxParseEmptyExpression();
    } else {
      const expression = this.parseExpression();
      node.expression = expression;
    }

    this.expect(types$1.braceR);
    return this.finishNode(node, "JSXExpressionContainer");
  }

  jsxParseAttribute() {
    const node = this.startNode();

    if (this.eat(types$1.braceL)) {
      this.expect(types$1.ellipsis);
      node.argument = this.parseMaybeAssignAllowIn();
      this.expect(types$1.braceR);
      return this.finishNode(node, "JSXSpreadAttribute");
    }

    node.name = this.jsxParseNamespacedName();
    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;
    return this.finishNode(node, "JSXAttribute");
  }

  jsxParseOpeningElementAt(startPos, startLoc) {
    const node = this.startNodeAt(startPos, startLoc);

    if (this.match(types$1.jsxTagEnd)) {
      this.expect(types$1.jsxTagEnd);
      return this.finishNode(node, "JSXOpeningFragment");
    }

    node.name = this.jsxParseElementName();
    return this.jsxParseOpeningElementAfterName(node);
  }

  jsxParseOpeningElementAfterName(node) {
    const attributes = [];

    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {
      attributes.push(this.jsxParseAttribute());
    }

    node.attributes = attributes;
    node.selfClosing = this.eat(types$1.slash);
    this.expect(types$1.jsxTagEnd);
    return this.finishNode(node, "JSXOpeningElement");
  }

  jsxParseClosingElementAt(startPos, startLoc) {
    const node = this.startNodeAt(startPos, startLoc);

    if (this.match(types$1.jsxTagEnd)) {
      this.expect(types$1.jsxTagEnd);
      return this.finishNode(node, "JSXClosingFragment");
    }

    node.name = this.jsxParseElementName();
    this.expect(types$1.jsxTagEnd);
    return this.finishNode(node, "JSXClosingElement");
  }

  jsxParseElementAt(startPos, startLoc) {
    const node = this.startNodeAt(startPos, startLoc);
    const children = [];
    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);
    let closingElement = null;

    if (!openingElement.selfClosing) {
      contents: for (;;) {
        switch (this.state.type) {
          case types$1.jsxTagStart:
            startPos = this.state.start;
            startLoc = this.state.startLoc;
            this.next();

            if (this.eat(types$1.slash)) {
              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);
              break contents;
            }

            children.push(this.jsxParseElementAt(startPos, startLoc));
            break;

          case types$1.jsxText:
            children.push(this.parseExprAtom());
            break;

          case types$1.braceL:
            {
              const node = this.startNode();
              this.next();

              if (this.match(types$1.ellipsis)) {
                children.push(this.jsxParseSpreadChild(node));
              } else {
                children.push(this.jsxParseExpressionContainer(node));
              }

              break;
            }

          default:
            throw this.unexpected();
        }
      }

      if (isFragment(openingElement) && !isFragment(closingElement)) {
        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);
      } else if (!isFragment(openingElement) && isFragment(closingElement)) {
        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));
      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {
        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {
          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));
        }
      }
    }

    if (isFragment(openingElement)) {
      node.openingFragment = openingElement;
      node.closingFragment = closingElement;
    } else {
      node.openingElement = openingElement;
      node.closingElement = closingElement;
    }

    node.children = children;

    if (this.isRelational("<")) {
      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);
    }

    return isFragment(openingElement) ? this.finishNode(node, "JSXFragment") : this.finishNode(node, "JSXElement");
  }

  jsxParseElement() {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    this.next();
    return this.jsxParseElementAt(startPos, startLoc);
  }

  parseExprAtom(refExpressionErrors) {
    if (this.match(types$1.jsxText)) {
      return this.parseLiteral(this.state.value, "JSXText");
    } else if (this.match(types$1.jsxTagStart)) {
      return this.jsxParseElement();
    } else if (this.isRelational("<") && this.input.charCodeAt(this.state.pos) !== 33) {
      this.finishToken(types$1.jsxTagStart);
      return this.jsxParseElement();
    } else {
      return super.parseExprAtom(refExpressionErrors);
    }
  }

  createLookaheadState(state) {
    const lookaheadState = super.createLookaheadState(state);
    lookaheadState.inPropertyName = state.inPropertyName;
    return lookaheadState;
  }

  getTokenFromCode(code) {
    if (this.state.inPropertyName) return super.getTokenFromCode(code);
    const context = this.curContext();

    if (context === types.j_expr) {
      return this.jsxReadToken();
    }

    if (context === types.j_oTag || context === types.j_cTag) {
      if (isIdentifierStart(code)) {
        return this.jsxReadWord();
      }

      if (code === 62) {
        ++this.state.pos;
        return this.finishToken(types$1.jsxTagEnd);
      }

      if ((code === 34 || code === 39) && context === types.j_oTag) {
        return this.jsxReadString(code);
      }
    }

    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {
      ++this.state.pos;
      return this.finishToken(types$1.jsxTagStart);
    }

    return super.getTokenFromCode(code);
  }

  updateContext(prevType) {
    if (this.match(types$1.braceL)) {
      const curContext = this.curContext();

      if (curContext === types.j_oTag) {
        this.state.context.push(types.braceExpression);
      } else if (curContext === types.j_expr) {
        this.state.context.push(types.templateQuasi);
      } else {
        super.updateContext(prevType);
      }

      this.state.exprAllowed = true;
    } else if (this.match(types$1.slash) && prevType === types$1.jsxTagStart) {
      this.state.context.length -= 2;
      this.state.context.push(types.j_cTag);
      this.state.exprAllowed = false;
    } else {
      return super.updateContext(prevType);
    }
  }

});

class TypeScriptScope extends Scope {
  constructor(...args) {
    super(...args);
    this.types = [];
    this.enums = [];
    this.constEnums = [];
    this.classes = [];
    this.exportOnlyBindings = [];
  }

}

class TypeScriptScopeHandler extends ScopeHandler {
  createScope(flags) {
    return new TypeScriptScope(flags);
  }

  declareName(name, bindingType, pos) {
    const scope = this.currentScope();

    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {
      this.maybeExportDefined(scope, name);
      scope.exportOnlyBindings.push(name);
      return;
    }

    super.declareName(...arguments);

    if (bindingType & BIND_KIND_TYPE) {
      if (!(bindingType & BIND_KIND_VALUE)) {
        this.checkRedeclarationInScope(scope, name, bindingType, pos);
        this.maybeExportDefined(scope, name);
      }

      scope.types.push(name);
    }

    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);
    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);
    if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);
  }

  isRedeclaredInScope(scope, name, bindingType) {
    if (scope.enums.indexOf(name) > -1) {
      if (bindingType & BIND_FLAGS_TS_ENUM) {
        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);
        const wasConst = scope.constEnums.indexOf(name) > -1;
        return isConst !== wasConst;
      }

      return true;
    }

    if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {
      if (scope.lexical.indexOf(name) > -1) {
        return !!(bindingType & BIND_KIND_VALUE);
      } else {
        return false;
      }
    }

    if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {
      return true;
    }

    return super.isRedeclaredInScope(...arguments);
  }

  checkLocalExport(id) {
    if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {
      super.checkLocalExport(id);
    }
  }

}

const PARAM = 0b0000,
      PARAM_YIELD = 0b0001,
      PARAM_AWAIT = 0b0010,
      PARAM_RETURN = 0b0100,
      PARAM_IN = 0b1000;
class ProductionParameterHandler {
  constructor() {
    this.stacks = [];
  }

  enter(flags) {
    this.stacks.push(flags);
  }

  exit() {
    this.stacks.pop();
  }

  currentFlags() {
    return this.stacks[this.stacks.length - 1];
  }

  get hasAwait() {
    return (this.currentFlags() & PARAM_AWAIT) > 0;
  }

  get hasYield() {
    return (this.currentFlags() & PARAM_YIELD) > 0;
  }

  get hasReturn() {
    return (this.currentFlags() & PARAM_RETURN) > 0;
  }

  get hasIn() {
    return (this.currentFlags() & PARAM_IN) > 0;
  }

}
function functionFlags(isAsync, isGenerator) {
  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);
}

function nonNull(x) {
  if (x == null) {
    throw new Error(`Unexpected ${x} value.`);
  }

  return x;
}

function assert(x) {
  if (!x) {
    throw new Error("Assert fail");
  }
}

const TSErrors = makeErrorTemplates({
  AbstractMethodHasImplementation: "Method '%0' cannot have an implementation because it is marked abstract.",
  AccesorCannotDeclareThisParameter: "'get' and 'set' accessors cannot declare 'this' parameters.",
  AccesorCannotHaveTypeParameters: "An accessor cannot have type parameters.",
  ClassMethodHasDeclare: "Class methods cannot have the 'declare' modifier.",
  ClassMethodHasReadonly: "Class methods cannot have the 'readonly' modifier.",
  ConstructorHasTypeParameters: "Type parameters cannot appear on a constructor declaration.",
  DeclareAccessor: "'declare' is not allowed in %0ters.",
  DeclareClassFieldHasInitializer: "Initializers are not allowed in ambient contexts.",
  DeclareFunctionHasImplementation: "An implementation cannot be declared in ambient contexts.",
  DuplicateAccessibilityModifier: "Accessibility modifier already seen.",
  DuplicateModifier: "Duplicate modifier: '%0'.",
  EmptyHeritageClauseType: "'%0' list cannot be empty.",
  EmptyTypeArguments: "Type argument list cannot be empty.",
  EmptyTypeParameters: "Type parameter list cannot be empty.",
  ExpectedAmbientAfterExportDeclare: "'export declare' must be followed by an ambient declaration.",
  ImportAliasHasImportType: "An import alias can not use 'import type'.",
  IncompatibleModifiers: "'%0' modifier cannot be used with '%1' modifier.",
  IndexSignatureHasAbstract: "Index signatures cannot have the 'abstract' modifier.",
  IndexSignatureHasAccessibility: "Index signatures cannot have an accessibility modifier ('%0').",
  IndexSignatureHasDeclare: "Index signatures cannot have the 'declare' modifier.",
  IndexSignatureHasOverride: "'override' modifier cannot appear on an index signature.",
  IndexSignatureHasStatic: "Index signatures cannot have the 'static' modifier.",
  InvalidModifierOnTypeMember: "'%0' modifier cannot appear on a type member.",
  InvalidModifiersOrder: "'%0' modifier must precede '%1' modifier.",
  InvalidTupleMemberLabel: "Tuple members must be labeled with a simple identifier.",
  MixedLabeledAndUnlabeledElements: "Tuple members must all have names or all not have names.",
  NonAbstractClassHasAbstractMethod: "Abstract methods can only appear within an abstract class.",
  NonClassMethodPropertyHasAbstractModifer: "'abstract' modifier can only appear on a class, method, or property declaration.",
  OptionalTypeBeforeRequired: "A required element cannot follow an optional element.",
  OverrideNotInSubClass: "This member cannot have an 'override' modifier because its containing class does not extend another class.",
  PatternIsOptional: "A binding pattern parameter cannot be optional in an implementation signature.",
  PrivateElementHasAbstract: "Private elements cannot have the 'abstract' modifier.",
  PrivateElementHasAccessibility: "Private elements cannot have an accessibility modifier ('%0').",
  ReadonlyForMethodSignature: "'readonly' modifier can only appear on a property declaration or index signature.",
  SetAccesorCannotHaveOptionalParameter: "A 'set' accessor cannot have an optional parameter.",
  SetAccesorCannotHaveRestParameter: "A 'set' accessor cannot have rest parameter.",
  SetAccesorCannotHaveReturnType: "A 'set' accessor cannot have a return type annotation.",
  StaticBlockCannotHaveModifier: "Static class blocks cannot have any modifier.",
  TypeAnnotationAfterAssign: "Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.",
  TypeImportCannotSpecifyDefaultAndNamed: "A type-only import can specify a default import or named bindings, but not both.",
  UnexpectedParameterModifier: "A parameter property is only allowed in a constructor implementation.",
  UnexpectedReadonly: "'readonly' type modifier is only permitted on array and tuple literal types.",
  UnexpectedTypeAnnotation: "Did not expect a type annotation here.",
  UnexpectedTypeCastInParameter: "Unexpected type cast in parameter position.",
  UnsupportedImportTypeArgument: "Argument in a type import must be a string literal.",
  UnsupportedParameterPropertyKind: "A parameter property may not be declared using a binding pattern.",
  UnsupportedSignatureParameterKind: "Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0."
}, ErrorCodes.SyntaxError);

function keywordTypeFromName(value) {
  switch (value) {
    case "any":
      return "TSAnyKeyword";

    case "boolean":
      return "TSBooleanKeyword";

    case "bigint":
      return "TSBigIntKeyword";

    case "never":
      return "TSNeverKeyword";

    case "number":
      return "TSNumberKeyword";

    case "object":
      return "TSObjectKeyword";

    case "string":
      return "TSStringKeyword";

    case "symbol":
      return "TSSymbolKeyword";

    case "undefined":
      return "TSUndefinedKeyword";

    case "unknown":
      return "TSUnknownKeyword";

    default:
      return undefined;
  }
}

function tsIsAccessModifier(modifier) {
  return modifier === "private" || modifier === "public" || modifier === "protected";
}

var typescript = (superClass => class extends superClass {
  getScopeHandler() {
    return TypeScriptScopeHandler;
  }

  tsIsIdentifier() {
    return this.match(types$1.name);
  }

  tsTokenCanFollowModifier() {
    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();
  }

  tsNextTokenCanFollowModifier() {
    this.next();
    return this.tsTokenCanFollowModifier();
  }

  tsParseModifier(allowedModifiers) {
    if (!this.match(types$1.name)) {
      return undefined;
    }

    const modifier = this.state.value;

    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {
      return modifier;
    }

    return undefined;
  }

  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {
    const enforceOrder = (pos, modifier, before, after) => {
      if (modifier === before && modified[after]) {
        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);
      }
    };

    const incompatible = (pos, modifier, mod1, mod2) => {
      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {
        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);
      }
    };

    for (;;) {
      const startPos = this.state.start;
      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));
      if (!modifier) break;

      if (tsIsAccessModifier(modifier)) {
        if (modified.accessibility) {
          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);
        } else {
          enforceOrder(startPos, modifier, modifier, "override");
          enforceOrder(startPos, modifier, modifier, "static");
          modified.accessibility = modifier;
        }
      } else {
        if (Object.hasOwnProperty.call(modified, modifier)) {
          this.raise(startPos, TSErrors.DuplicateModifier, modifier);
        } else {
          enforceOrder(startPos, modifier, "static", "readonly");
          enforceOrder(startPos, modifier, "static", "override");
          enforceOrder(startPos, modifier, "override", "readonly");
          enforceOrder(startPos, modifier, "abstract", "override");
          incompatible(startPos, modifier, "declare", "override");
          incompatible(startPos, modifier, "static", "abstract");
        }

        modified[modifier] = true;
      }

      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {
        this.raise(startPos, errorTemplate, modifier);
      }
    }
  }

  tsIsListTerminator(kind) {
    switch (kind) {
      case "EnumMembers":
      case "TypeMembers":
        return this.match(types$1.braceR);

      case "HeritageClauseElement":
        return this.match(types$1.braceL);

      case "TupleElementTypes":
        return this.match(types$1.bracketR);

      case "TypeParametersOrArguments":
        return this.isRelational(">");
    }

    throw new Error("Unreachable");
  }

  tsParseList(kind, parseElement) {
    const result = [];

    while (!this.tsIsListTerminator(kind)) {
      result.push(parseElement());
    }

    return result;
  }

  tsParseDelimitedList(kind, parseElement) {
    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));
  }

  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {
    const result = [];

    for (;;) {
      if (this.tsIsListTerminator(kind)) {
        break;
      }

      const element = parseElement();

      if (element == null) {
        return undefined;
      }

      result.push(element);

      if (this.eat(types$1.comma)) {
        continue;
      }

      if (this.tsIsListTerminator(kind)) {
        break;
      }

      if (expectSuccess) {
        this.expect(types$1.comma);
      }

      return undefined;
    }

    return result;
  }

  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {
    if (!skipFirstToken) {
      if (bracket) {
        this.expect(types$1.bracketL);
      } else {
        this.expectRelational("<");
      }
    }

    const result = this.tsParseDelimitedList(kind, parseElement);

    if (bracket) {
      this.expect(types$1.bracketR);
    } else {
      this.expectRelational(">");
    }

    return result;
  }

  tsParseImportType() {
    const node = this.startNode();
    this.expect(types$1._import);
    this.expect(types$1.parenL);

    if (!this.match(types$1.string)) {
      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);
    }

    node.argument = this.parseExprAtom();
    this.expect(types$1.parenR);

    if (this.eat(types$1.dot)) {
      node.qualifier = this.tsParseEntityName(true);
    }

    if (this.isRelational("<")) {
      node.typeParameters = this.tsParseTypeArguments();
    }

    return this.finishNode(node, "TSImportType");
  }

  tsParseEntityName(allowReservedWords) {
    let entity = this.parseIdentifier();

    while (this.eat(types$1.dot)) {
      const node = this.startNodeAtNode(entity);
      node.left = entity;
      node.right = this.parseIdentifier(allowReservedWords);
      entity = this.finishNode(node, "TSQualifiedName");
    }

    return entity;
  }

  tsParseTypeReference() {
    const node = this.startNode();
    node.typeName = this.tsParseEntityName(false);

    if (!this.hasPrecedingLineBreak() && this.isRelational("<")) {
      node.typeParameters = this.tsParseTypeArguments();
    }

    return this.finishNode(node, "TSTypeReference");
  }

  tsParseThisTypePredicate(lhs) {
    this.next();
    const node = this.startNodeAtNode(lhs);
    node.parameterName = lhs;
    node.typeAnnotation = this.tsParseTypeAnnotation(false);
    node.asserts = false;
    return this.finishNode(node, "TSTypePredicate");
  }

  tsParseThisTypeNode() {
    const node = this.startNode();
    this.next();
    return this.finishNode(node, "TSThisType");
  }

  tsParseTypeQuery() {
    const node = this.startNode();
    this.expect(types$1._typeof);

    if (this.match(types$1._import)) {
      node.exprName = this.tsParseImportType();
    } else {
      node.exprName = this.tsParseEntityName(true);
    }

    return this.finishNode(node, "TSTypeQuery");
  }

  tsParseTypeParameter() {
    const node = this.startNode();
    node.name = this.parseIdentifierName(node.start);
    node.constraint = this.tsEatThenParseType(types$1._extends);
    node.default = this.tsEatThenParseType(types$1.eq);
    return this.finishNode(node, "TSTypeParameter");
  }

  tsTryParseTypeParameters() {
    if (this.isRelational("<")) {
      return this.tsParseTypeParameters();
    }
  }

  tsParseTypeParameters() {
    const node = this.startNode();

    if (this.isRelational("<") || this.match(types$1.jsxTagStart)) {
      this.next();
    } else {
      this.unexpected();
    }

    node.params = this.tsParseBracketedList("TypeParametersOrArguments", this.tsParseTypeParameter.bind(this), false, true);

    if (node.params.length === 0) {
      this.raise(node.start, TSErrors.EmptyTypeParameters);
    }

    return this.finishNode(node, "TSTypeParameterDeclaration");
  }

  tsTryNextParseConstantContext() {
    if (this.lookahead().type === types$1._const) {
      this.next();
      return this.tsParseTypeReference();
    }

    return null;
  }

  tsFillSignature(returnToken, signature) {
    const returnTokenRequired = returnToken === types$1.arrow;
    signature.typeParameters = this.tsTryParseTypeParameters();
    this.expect(types$1.parenL);
    signature.parameters = this.tsParseBindingListForSignature();

    if (returnTokenRequired) {
      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);
    } else if (this.match(returnToken)) {
      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);
    }
  }

  tsParseBindingListForSignature() {
    return this.parseBindingList(types$1.parenR, 41).map(pattern => {
      if (pattern.type !== "Identifier" && pattern.type !== "RestElement" && pattern.type !== "ObjectPattern" && pattern.type !== "ArrayPattern") {
        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);
      }

      return pattern;
    });
  }

  tsParseTypeMemberSemicolon() {
    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {
      this.expect(types$1.semi);
    }
  }

  tsParseSignatureMember(kind, node) {
    this.tsFillSignature(types$1.colon, node);
    this.tsParseTypeMemberSemicolon();
    return this.finishNode(node, kind);
  }

  tsIsUnambiguouslyIndexSignature() {
    this.next();
    return this.eat(types$1.name) && this.match(types$1.colon);
  }

  tsTryParseIndexSignature(node) {
    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {
      return undefined;
    }

    this.expect(types$1.bracketL);
    const id = this.parseIdentifier();
    id.typeAnnotation = this.tsParseTypeAnnotation();
    this.resetEndLocation(id);
    this.expect(types$1.bracketR);
    node.parameters = [id];
    const type = this.tsTryParseTypeAnnotation();
    if (type) node.typeAnnotation = type;
    this.tsParseTypeMemberSemicolon();
    return this.finishNode(node, "TSIndexSignature");
  }

  tsParsePropertyOrMethodSignature(node, readonly) {
    if (this.eat(types$1.question)) node.optional = true;
    const nodeAny = node;

    if (this.match(types$1.parenL) || this.isRelational("<")) {
      if (readonly) {
        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);
      }

      const method = nodeAny;

      if (method.kind && this.isRelational("<")) {
        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);
      }

      this.tsFillSignature(types$1.colon, method);
      this.tsParseTypeMemberSemicolon();

      if (method.kind === "get") {
        if (method.parameters.length > 0) {
          this.raise(this.state.pos, ErrorMessages.BadGetterArity);

          if (this.isThisParam(method.parameters[0])) {
            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);
          }
        }
      } else if (method.kind === "set") {
        if (method.parameters.length !== 1) {
          this.raise(this.state.pos, ErrorMessages.BadSetterArity);
        } else {
          const firstParameter = method.parameters[0];

          if (this.isThisParam(firstParameter)) {
            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);
          }

          if (firstParameter.type === "Identifier" && firstParameter.optional) {
            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);
          }

          if (firstParameter.type === "RestElement") {
            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);
          }
        }

        if (method.typeAnnotation) {
          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);
        }
      } else {
        method.kind = "method";
      }

      return this.finishNode(method, "TSMethodSignature");
    } else {
      const property = nodeAny;
      if (readonly) property.readonly = true;
      const type = this.tsTryParseTypeAnnotation();
      if (type) property.typeAnnotation = type;
      this.tsParseTypeMemberSemicolon();
      return this.finishNode(property, "TSPropertySignature");
    }
  }

  tsParseTypeMember() {
    const node = this.startNode();

    if (this.match(types$1.parenL) || this.isRelational("<")) {
      return this.tsParseSignatureMember("TSCallSignatureDeclaration", node);
    }

    if (this.match(types$1._new)) {
      const id = this.startNode();
      this.next();

      if (this.match(types$1.parenL) || this.isRelational("<")) {
        return this.tsParseSignatureMember("TSConstructSignatureDeclaration", node);
      } else {
        node.key = this.createIdentifier(id, "new");
        return this.tsParsePropertyOrMethodSignature(node, false);
      }
    }

    this.tsParseModifiers(node, ["readonly"], ["declare", "abstract", "private", "protected", "public", "static", "override"], TSErrors.InvalidModifierOnTypeMember);
    const idx = this.tsTryParseIndexSignature(node);

    if (idx) {
      return idx;
    }

    this.parsePropertyName(node, false);

    if (!node.computed && node.key.type === "Identifier" && (node.key.name === "get" || node.key.name === "set") && this.tsTokenCanFollowModifier()) {
      node.kind = node.key.name;
      this.parsePropertyName(node, false);
    }

    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);
  }

  tsParseTypeLiteral() {
    const node = this.startNode();
    node.members = this.tsParseObjectTypeMembers();
    return this.finishNode(node, "TSTypeLiteral");
  }

  tsParseObjectTypeMembers() {
    this.expect(types$1.braceL);
    const members = this.tsParseList("TypeMembers", this.tsParseTypeMember.bind(this));
    this.expect(types$1.braceR);
    return members;
  }

  tsIsStartOfMappedType() {
    this.next();

    if (this.eat(types$1.plusMin)) {
      return this.isContextual("readonly");
    }

    if (this.isContextual("readonly")) {
      this.next();
    }

    if (!this.match(types$1.bracketL)) {
      return false;
    }

    this.next();

    if (!this.tsIsIdentifier()) {
      return false;
    }

    this.next();
    return this.match(types$1._in);
  }

  tsParseMappedTypeParameter() {
    const node = this.startNode();
    node.name = this.parseIdentifierName(node.start);
    node.constraint = this.tsExpectThenParseType(types$1._in);
    return this.finishNode(node, "TSTypeParameter");
  }

  tsParseMappedType() {
    const node = this.startNode();
    this.expect(types$1.braceL);

    if (this.match(types$1.plusMin)) {
      node.readonly = this.state.value;
      this.next();
      this.expectContextual("readonly");
    } else if (this.eatContextual("readonly")) {
      node.readonly = true;
    }

    this.expect(types$1.bracketL);
    node.typeParameter = this.tsParseMappedTypeParameter();
    node.nameType = this.eatContextual("as") ? this.tsParseType() : null;
    this.expect(types$1.bracketR);

    if (this.match(types$1.plusMin)) {
      node.optional = this.state.value;
      this.next();
      this.expect(types$1.question);
    } else if (this.eat(types$1.question)) {
      node.optional = true;
    }

    node.typeAnnotation = this.tsTryParseType();
    this.semicolon();
    this.expect(types$1.braceR);
    return this.finishNode(node, "TSMappedType");
  }

  tsParseTupleType() {
    const node = this.startNode();
    node.elementTypes = this.tsParseBracketedList("TupleElementTypes", this.tsParseTupleElementType.bind(this), true, false);
    let seenOptionalElement = false;
    let labeledElements = null;
    node.elementTypes.forEach(elementNode => {
      var _labeledElements;

      let {
        type
      } = elementNode;

      if (seenOptionalElement && type !== "TSRestType" && type !== "TSOptionalType" && !(type === "TSNamedTupleMember" && elementNode.optional)) {
        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);
      }

      seenOptionalElement = seenOptionalElement || type === "TSNamedTupleMember" && elementNode.optional || type === "TSOptionalType";

      if (type === "TSRestType") {
        elementNode = elementNode.typeAnnotation;
        type = elementNode.type;
      }

      const isLabeled = type === "TSNamedTupleMember";
      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;

      if (labeledElements !== isLabeled) {
        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);
      }
    });
    return this.finishNode(node, "TSTupleType");
  }

  tsParseTupleElementType() {
    const {
      start: startPos,
      startLoc
    } = this.state;
    const rest = this.eat(types$1.ellipsis);
    let type = this.tsParseType();
    const optional = this.eat(types$1.question);
    const labeled = this.eat(types$1.colon);

    if (labeled) {
      const labeledNode = this.startNodeAtNode(type);
      labeledNode.optional = optional;

      if (type.type === "TSTypeReference" && !type.typeParameters && type.typeName.type === "Identifier") {
        labeledNode.label = type.typeName;
      } else {
        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);
        labeledNode.label = type;
      }

      labeledNode.elementType = this.tsParseType();
      type = this.finishNode(labeledNode, "TSNamedTupleMember");
    } else if (optional) {
      const optionalTypeNode = this.startNodeAtNode(type);
      optionalTypeNode.typeAnnotation = type;
      type = this.finishNode(optionalTypeNode, "TSOptionalType");
    }

    if (rest) {
      const restNode = this.startNodeAt(startPos, startLoc);
      restNode.typeAnnotation = type;
      type = this.finishNode(restNode, "TSRestType");
    }

    return type;
  }

  tsParseParenthesizedType() {
    const node = this.startNode();
    this.expect(types$1.parenL);
    node.typeAnnotation = this.tsParseType();
    this.expect(types$1.parenR);
    return this.finishNode(node, "TSParenthesizedType");
  }

  tsParseFunctionOrConstructorType(type, abstract) {
    const node = this.startNode();

    if (type === "TSConstructorType") {
      node.abstract = !!abstract;
      if (abstract) this.next();
      this.next();
    }

    this.tsFillSignature(types$1.arrow, node);
    return this.finishNode(node, type);
  }

  tsParseLiteralTypeNode() {
    const node = this.startNode();

    node.literal = (() => {
      switch (this.state.type) {
        case types$1.num:
        case types$1.bigint:
        case types$1.string:
        case types$1._true:
        case types$1._false:
          return this.parseExprAtom();

        default:
          throw this.unexpected();
      }
    })();

    return this.finishNode(node, "TSLiteralType");
  }

  tsParseTemplateLiteralType() {
    const node = this.startNode();
    node.literal = this.parseTemplate(false);
    return this.finishNode(node, "TSLiteralType");
  }

  parseTemplateSubstitution() {
    if (this.state.inType) return this.tsParseType();
    return super.parseTemplateSubstitution();
  }

  tsParseThisTypeOrThisTypePredicate() {
    const thisKeyword = this.tsParseThisTypeNode();

    if (this.isContextual("is") && !this.hasPrecedingLineBreak()) {
      return this.tsParseThisTypePredicate(thisKeyword);
    } else {
      return thisKeyword;
    }
  }

  tsParseNonArrayType() {
    switch (this.state.type) {
      case types$1.name:
      case types$1._void:
      case types$1._null:
        {
          const type = this.match(types$1._void) ? "TSVoidKeyword" : this.match(types$1._null) ? "TSNullKeyword" : keywordTypeFromName(this.state.value);

          if (type !== undefined && this.lookaheadCharCode() !== 46) {
            const node = this.startNode();
            this.next();
            return this.finishNode(node, type);
          }

          return this.tsParseTypeReference();
        }

      case types$1.string:
      case types$1.num:
      case types$1.bigint:
      case types$1._true:
      case types$1._false:
        return this.tsParseLiteralTypeNode();

      case types$1.plusMin:
        if (this.state.value === "-") {
          const node = this.startNode();
          const nextToken = this.lookahead();

          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {
            throw this.unexpected();
          }

          node.literal = this.parseMaybeUnary();
          return this.finishNode(node, "TSLiteralType");
        }

        break;

      case types$1._this:
        return this.tsParseThisTypeOrThisTypePredicate();

      case types$1._typeof:
        return this.tsParseTypeQuery();

      case types$1._import:
        return this.tsParseImportType();

      case types$1.braceL:
        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();

      case types$1.bracketL:
        return this.tsParseTupleType();

      case types$1.parenL:
        return this.tsParseParenthesizedType();

      case types$1.backQuote:
        return this.tsParseTemplateLiteralType();
    }

    throw this.unexpected();
  }

  tsParseArrayTypeOrHigher() {
    let type = this.tsParseNonArrayType();

    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {
      if (this.match(types$1.bracketR)) {
        const node = this.startNodeAtNode(type);
        node.elementType = type;
        this.expect(types$1.bracketR);
        type = this.finishNode(node, "TSArrayType");
      } else {
        const node = this.startNodeAtNode(type);
        node.objectType = type;
        node.indexType = this.tsParseType();
        this.expect(types$1.bracketR);
        type = this.finishNode(node, "TSIndexedAccessType");
      }
    }

    return type;
  }

  tsParseTypeOperator(operator) {
    const node = this.startNode();
    this.expectContextual(operator);
    node.operator = operator;
    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();

    if (operator === "readonly") {
      this.tsCheckTypeAnnotationForReadOnly(node);
    }

    return this.finishNode(node, "TSTypeOperator");
  }

  tsCheckTypeAnnotationForReadOnly(node) {
    switch (node.typeAnnotation.type) {
      case "TSTupleType":
      case "TSArrayType":
        return;

      default:
        this.raise(node.start, TSErrors.UnexpectedReadonly);
    }
  }

  tsParseInferType() {
    const node = this.startNode();
    this.expectContextual("infer");
    const typeParameter = this.startNode();
    typeParameter.name = this.parseIdentifierName(typeParameter.start);
    node.typeParameter = this.finishNode(typeParameter, "TSTypeParameter");
    return this.finishNode(node, "TSInferType");
  }

  tsParseTypeOperatorOrHigher() {
    const operator = ["keyof", "unique", "readonly"].find(kw => this.isContextual(kw));
    return operator ? this.tsParseTypeOperator(operator) : this.isContextual("infer") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();
  }

  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {
    const node = this.startNode();
    const hasLeadingOperator = this.eat(operator);
    const types = [];

    do {
      types.push(parseConstituentType());
    } while (this.eat(operator));

    if (types.length === 1 && !hasLeadingOperator) {
      return types[0];
    }

    node.types = types;
    return this.finishNode(node, kind);
  }

  tsParseIntersectionTypeOrHigher() {
    return this.tsParseUnionOrIntersectionType("TSIntersectionType", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);
  }

  tsParseUnionTypeOrHigher() {
    return this.tsParseUnionOrIntersectionType("TSUnionType", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);
  }

  tsIsStartOfFunctionType() {
    if (this.isRelational("<")) {
      return true;
    }

    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));
  }

  tsSkipParameterStart() {
    if (this.match(types$1.name) || this.match(types$1._this)) {
      this.next();
      return true;
    }

    if (this.match(types$1.braceL)) {
      let braceStackCounter = 1;
      this.next();

      while (braceStackCounter > 0) {
        if (this.match(types$1.braceL)) {
          ++braceStackCounter;
        } else if (this.match(types$1.braceR)) {
          --braceStackCounter;
        }

        this.next();
      }

      return true;
    }

    if (this.match(types$1.bracketL)) {
      let braceStackCounter = 1;
      this.next();

      while (braceStackCounter > 0) {
        if (this.match(types$1.bracketL)) {
          ++braceStackCounter;
        } else if (this.match(types$1.bracketR)) {
          --braceStackCounter;
        }

        this.next();
      }

      return true;
    }

    return false;
  }

  tsIsUnambiguouslyStartOfFunctionType() {
    this.next();

    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {
      return true;
    }

    if (this.tsSkipParameterStart()) {
      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {
        return true;
      }

      if (this.match(types$1.parenR)) {
        this.next();

        if (this.match(types$1.arrow)) {
          return true;
        }
      }
    }

    return false;
  }

  tsParseTypeOrTypePredicateAnnotation(returnToken) {
    return this.tsInType(() => {
      const t = this.startNode();
      this.expect(returnToken);
      const node = this.startNode();
      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));

      if (asserts && this.match(types$1._this)) {
        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();

        if (thisTypePredicate.type === "TSThisType") {
          node.parameterName = thisTypePredicate;
          node.asserts = true;
          node.typeAnnotation = null;
          thisTypePredicate = this.finishNode(node, "TSTypePredicate");
        } else {
          this.resetStartLocationFromNode(thisTypePredicate, node);
          thisTypePredicate.asserts = true;
        }

        t.typeAnnotation = thisTypePredicate;
        return this.finishNode(t, "TSTypeAnnotation");
      }

      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));

      if (!typePredicateVariable) {
        if (!asserts) {
          return this.tsParseTypeAnnotation(false, t);
        }

        node.parameterName = this.parseIdentifier();
        node.asserts = asserts;
        node.typeAnnotation = null;
        t.typeAnnotation = this.finishNode(node, "TSTypePredicate");
        return this.finishNode(t, "TSTypeAnnotation");
      }

      const type = this.tsParseTypeAnnotation(false);
      node.parameterName = typePredicateVariable;
      node.typeAnnotation = type;
      node.asserts = asserts;
      t.typeAnnotation = this.finishNode(node, "TSTypePredicate");
      return this.finishNode(t, "TSTypeAnnotation");
    });
  }

  tsTryParseTypeOrTypePredicateAnnotation() {
    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;
  }

  tsTryParseTypeAnnotation() {
    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;
  }

  tsTryParseType() {
    return this.tsEatThenParseType(types$1.colon);
  }

  tsParseTypePredicatePrefix() {
    const id = this.parseIdentifier();

    if (this.isContextual("is") && !this.hasPrecedingLineBreak()) {
      this.next();
      return id;
    }
  }

  tsParseTypePredicateAsserts() {
    if (!this.match(types$1.name) || this.state.value !== "asserts" || this.hasPrecedingLineBreak()) {
      return false;
    }

    const containsEsc = this.state.containsEsc;
    this.next();

    if (!this.match(types$1.name) && !this.match(types$1._this)) {
      return false;
    }

    if (containsEsc) {
      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, "asserts");
    }

    return true;
  }

  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {
    this.tsInType(() => {
      if (eatColon) this.expect(types$1.colon);
      t.typeAnnotation = this.tsParseType();
    });
    return this.finishNode(t, "TSTypeAnnotation");
  }

  tsParseType() {
    assert(this.state.inType);
    const type = this.tsParseNonConditionalType();

    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {
      return type;
    }

    const node = this.startNodeAtNode(type);
    node.checkType = type;
    node.extendsType = this.tsParseNonConditionalType();
    this.expect(types$1.question);
    node.trueType = this.tsParseType();
    this.expect(types$1.colon);
    node.falseType = this.tsParseType();
    return this.finishNode(node, "TSConditionalType");
  }

  isAbstractConstructorSignature() {
    return this.isContextual("abstract") && this.lookahead().type === types$1._new;
  }

  tsParseNonConditionalType() {
    if (this.tsIsStartOfFunctionType()) {
      return this.tsParseFunctionOrConstructorType("TSFunctionType");
    }

    if (this.match(types$1._new)) {
      return this.tsParseFunctionOrConstructorType("TSConstructorType");
    } else if (this.isAbstractConstructorSignature()) {
      return this.tsParseFunctionOrConstructorType("TSConstructorType", true);
    }

    return this.tsParseUnionTypeOrHigher();
  }

  tsParseTypeAssertion() {
    const node = this.startNode();

    const _const = this.tsTryNextParseConstantContext();

    node.typeAnnotation = _const || this.tsNextThenParseType();
    this.expectRelational(">");
    node.expression = this.parseMaybeUnary();
    return this.finishNode(node, "TSTypeAssertion");
  }

  tsParseHeritageClause(descriptor) {
    const originalStart = this.state.start;
    const delimitedList = this.tsParseDelimitedList("HeritageClauseElement", this.tsParseExpressionWithTypeArguments.bind(this));

    if (!delimitedList.length) {
      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);
    }

    return delimitedList;
  }

  tsParseExpressionWithTypeArguments() {
    const node = this.startNode();
    node.expression = this.tsParseEntityName(false);

    if (this.isRelational("<")) {
      node.typeParameters = this.tsParseTypeArguments();
    }

    return this.finishNode(node, "TSExpressionWithTypeArguments");
  }

  tsParseInterfaceDeclaration(node) {
    node.id = this.parseIdentifier();
    this.checkLVal(node.id, "typescript interface declaration", BIND_TS_INTERFACE);
    node.typeParameters = this.tsTryParseTypeParameters();

    if (this.eat(types$1._extends)) {
      node.extends = this.tsParseHeritageClause("extends");
    }

    const body = this.startNode();
    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));
    node.body = this.finishNode(body, "TSInterfaceBody");
    return this.finishNode(node, "TSInterfaceDeclaration");
  }

  tsParseTypeAliasDeclaration(node) {
    node.id = this.parseIdentifier();
    this.checkLVal(node.id, "typescript type alias", BIND_TS_TYPE);
    node.typeParameters = this.tsTryParseTypeParameters();
    node.typeAnnotation = this.tsInType(() => {
      this.expect(types$1.eq);

      if (this.isContextual("intrinsic") && this.lookahead().type !== types$1.dot) {
        const node = this.startNode();
        this.next();
        return this.finishNode(node, "TSIntrinsicKeyword");
      }

      return this.tsParseType();
    });
    this.semicolon();
    return this.finishNode(node, "TSTypeAliasDeclaration");
  }

  tsInNoContext(cb) {
    const oldContext = this.state.context;
    this.state.context = [oldContext[0]];

    try {
      return cb();
    } finally {
      this.state.context = oldContext;
    }
  }

  tsInType(cb) {
    const oldInType = this.state.inType;
    this.state.inType = true;

    try {
      return cb();
    } finally {
      this.state.inType = oldInType;
    }
  }

  tsEatThenParseType(token) {
    return !this.match(token) ? undefined : this.tsNextThenParseType();
  }

  tsExpectThenParseType(token) {
    return this.tsDoThenParseType(() => this.expect(token));
  }

  tsNextThenParseType() {
    return this.tsDoThenParseType(() => this.next());
  }

  tsDoThenParseType(cb) {
    return this.tsInType(() => {
      cb();
      return this.tsParseType();
    });
  }

  tsParseEnumMember() {
    const node = this.startNode();
    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);

    if (this.eat(types$1.eq)) {
      node.initializer = this.parseMaybeAssignAllowIn();
    }

    return this.finishNode(node, "TSEnumMember");
  }

  tsParseEnumDeclaration(node, isConst) {
    if (isConst) node.const = true;
    node.id = this.parseIdentifier();
    this.checkLVal(node.id, "typescript enum declaration", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);
    this.expect(types$1.braceL);
    node.members = this.tsParseDelimitedList("EnumMembers", this.tsParseEnumMember.bind(this));
    this.expect(types$1.braceR);
    return this.finishNode(node, "TSEnumDeclaration");
  }

  tsParseModuleBlock() {
    const node = this.startNode();
    this.scope.enter(SCOPE_OTHER);
    this.expect(types$1.braceL);
    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);
    this.scope.exit();
    return this.finishNode(node, "TSModuleBlock");
  }

  tsParseModuleOrNamespaceDeclaration(node, nested = false) {
    node.id = this.parseIdentifier();

    if (!nested) {
      this.checkLVal(node.id, "module or namespace declaration", BIND_TS_NAMESPACE);
    }

    if (this.eat(types$1.dot)) {
      const inner = this.startNode();
      this.tsParseModuleOrNamespaceDeclaration(inner, true);
      node.body = inner;
    } else {
      this.scope.enter(SCOPE_TS_MODULE);
      this.prodParam.enter(PARAM);
      node.body = this.tsParseModuleBlock();
      this.prodParam.exit();
      this.scope.exit();
    }

    return this.finishNode(node, "TSModuleDeclaration");
  }

  tsParseAmbientExternalModuleDeclaration(node) {
    if (this.isContextual("global")) {
      node.global = true;
      node.id = this.parseIdentifier();
    } else if (this.match(types$1.string)) {
      node.id = this.parseExprAtom();
    } else {
      this.unexpected();
    }

    if (this.match(types$1.braceL)) {
      this.scope.enter(SCOPE_TS_MODULE);
      this.prodParam.enter(PARAM);
      node.body = this.tsParseModuleBlock();
      this.prodParam.exit();
      this.scope.exit();
    } else {
      this.semicolon();
    }

    return this.finishNode(node, "TSModuleDeclaration");
  }

  tsParseImportEqualsDeclaration(node, isExport) {
    node.isExport = isExport || false;
    node.id = this.parseIdentifier();
    this.checkLVal(node.id, "import equals declaration", BIND_LEXICAL);
    this.expect(types$1.eq);
    const moduleReference = this.tsParseModuleReference();

    if (node.importKind === "type" && moduleReference.type !== "TSExternalModuleReference") {
      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);
    }

    node.moduleReference = moduleReference;
    this.semicolon();
    return this.finishNode(node, "TSImportEqualsDeclaration");
  }

  tsIsExternalModuleReference() {
    return this.isContextual("require") && this.lookaheadCharCode() === 40;
  }

  tsParseModuleReference() {
    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);
  }

  tsParseExternalModuleReference() {
    const node = this.startNode();
    this.expectContextual("require");
    this.expect(types$1.parenL);

    if (!this.match(types$1.string)) {
      throw this.unexpected();
    }

    node.expression = this.parseExprAtom();
    this.expect(types$1.parenR);
    return this.finishNode(node, "TSExternalModuleReference");
  }

  tsLookAhead(f) {
    const state = this.state.clone();
    const res = f();
    this.state = state;
    return res;
  }

  tsTryParseAndCatch(f) {
    const result = this.tryParse(abort => f() || abort());
    if (result.aborted || !result.node) return undefined;
    if (result.error) this.state = result.failState;
    return result.node;
  }

  tsTryParse(f) {
    const state = this.state.clone();
    const result = f();

    if (result !== undefined && result !== false) {
      return result;
    } else {
      this.state = state;
      return undefined;
    }
  }

  tsTryParseDeclare(nany) {
    if (this.isLineTerminator()) {
      return;
    }

    let starttype = this.state.type;
    let kind;

    if (this.isContextual("let")) {
      starttype = types$1._var;
      kind = "let";
    }

    return this.tsInAmbientContext(() => {
      switch (starttype) {
        case types$1._function:
          nany.declare = true;
          return this.parseFunctionStatement(nany, false, true);

        case types$1._class:
          nany.declare = true;
          return this.parseClass(nany, true, false);

        case types$1._const:
          if (this.match(types$1._const) && this.isLookaheadContextual("enum")) {
            this.expect(types$1._const);
            this.expectContextual("enum");
            return this.tsParseEnumDeclaration(nany, true);
          }

        case types$1._var:
          kind = kind || this.state.value;
          return this.parseVarStatement(nany, kind);

        case types$1.name:
          {
            const value = this.state.value;

            if (value === "global") {
              return this.tsParseAmbientExternalModuleDeclaration(nany);
            } else {
              return this.tsParseDeclaration(nany, value, true);
            }
          }
      }
    });
  }

  tsTryParseExportDeclaration() {
    return this.tsParseDeclaration(this.startNode(), this.state.value, true);
  }

  tsParseExpressionStatement(node, expr) {
    switch (expr.name) {
      case "declare":
        {
          const declaration = this.tsTryParseDeclare(node);

          if (declaration) {
            declaration.declare = true;
            return declaration;
          }

          break;
        }

      case "global":
        if (this.match(types$1.braceL)) {
          this.scope.enter(SCOPE_TS_MODULE);
          this.prodParam.enter(PARAM);
          const mod = node;
          mod.global = true;
          mod.id = expr;
          mod.body = this.tsParseModuleBlock();
          this.scope.exit();
          this.prodParam.exit();
          return this.finishNode(mod, "TSModuleDeclaration");
        }

        break;

      default:
        return this.tsParseDeclaration(node, expr.name, false);
    }
  }

  tsParseDeclaration(node, value, next) {
    switch (value) {
      case "abstract":
        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {
          return this.tsParseAbstractDeclaration(node);
        }

        break;

      case "enum":
        if (next || this.match(types$1.name)) {
          if (next) this.next();
          return this.tsParseEnumDeclaration(node, false);
        }

        break;

      case "interface":
        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {
          return this.tsParseInterfaceDeclaration(node);
        }

        break;

      case "module":
        if (this.tsCheckLineTerminator(next)) {
          if (this.match(types$1.string)) {
            return this.tsParseAmbientExternalModuleDeclaration(node);
          } else if (this.match(types$1.name)) {
            return this.tsParseModuleOrNamespaceDeclaration(node);
          }
        }

        break;

      case "namespace":
        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {
          return this.tsParseModuleOrNamespaceDeclaration(node);
        }

        break;

      case "type":
        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {
          return this.tsParseTypeAliasDeclaration(node);
        }

        break;
    }
  }

  tsCheckLineTerminator(next) {
    if (next) {
      if (this.hasFollowingLineBreak()) return false;
      this.next();
      return true;
    }

    return !this.isLineTerminator();
  }

  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {
    if (!this.isRelational("<")) {
      return undefined;
    }

    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;
    this.state.maybeInArrowParameters = true;
    const res = this.tsTryParseAndCatch(() => {
      const node = this.startNodeAt(startPos, startLoc);
      node.typeParameters = this.tsParseTypeParameters();
      super.parseFunctionParams(node);
      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();
      this.expect(types$1.arrow);
      return node;
    });
    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;

    if (!res) {
      return undefined;
    }

    return this.parseArrowExpression(res, null, true);
  }

  tsParseTypeArguments() {
    const node = this.startNode();
    node.params = this.tsInType(() => this.tsInNoContext(() => {
      this.expectRelational("<");
      return this.tsParseDelimitedList("TypeParametersOrArguments", this.tsParseType.bind(this));
    }));

    if (node.params.length === 0) {
      this.raise(node.start, TSErrors.EmptyTypeArguments);
    }

    this.state.exprAllowed = false;
    this.expectRelational(">");
    return this.finishNode(node, "TSTypeParameterInstantiation");
  }

  tsIsDeclarationStart() {
    if (this.match(types$1.name)) {
      switch (this.state.value) {
        case "abstract":
        case "declare":
        case "enum":
        case "interface":
        case "module":
        case "namespace":
        case "type":
          return true;
      }
    }

    return false;
  }

  isExportDefaultSpecifier() {
    if (this.tsIsDeclarationStart()) return false;
    return super.isExportDefaultSpecifier();
  }

  parseAssignableListItem(allowModifiers, decorators) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    let accessibility;
    let readonly = false;

    if (allowModifiers !== undefined) {
      accessibility = this.parseAccessModifier();
      readonly = !!this.tsParseModifier(["readonly"]);

      if (allowModifiers === false && (accessibility || readonly)) {
        this.raise(startPos, TSErrors.UnexpectedParameterModifier);
      }
    }

    const left = this.parseMaybeDefault();
    this.parseAssignableListItemTypes(left);
    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);

    if (accessibility || readonly) {
      const pp = this.startNodeAt(startPos, startLoc);

      if (decorators.length) {
        pp.decorators = decorators;
      }

      if (accessibility) pp.accessibility = accessibility;
      if (readonly) pp.readonly = readonly;

      if (elt.type !== "Identifier" && elt.type !== "AssignmentPattern") {
        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);
      }

      pp.parameter = elt;
      return this.finishNode(pp, "TSParameterProperty");
    }

    if (decorators.length) {
      left.decorators = decorators;
    }

    return elt;
  }

  parseFunctionBodyAndFinish(node, type, isMethod = false) {
    if (this.match(types$1.colon)) {
      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);
    }

    const bodilessType = type === "FunctionDeclaration" ? "TSDeclareFunction" : type === "ClassMethod" ? "TSDeclareMethod" : undefined;

    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {
      this.finishNode(node, bodilessType);
      return;
    }

    if (bodilessType === "TSDeclareFunction" && this.state.isAmbientContext) {
      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);

      if (node.declare) {
        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);
        return;
      }
    }

    super.parseFunctionBodyAndFinish(node, type, isMethod);
  }

  registerFunctionStatementId(node) {
    if (!node.body && node.id) {
      this.checkLVal(node.id, "function name", BIND_TS_AMBIENT);
    } else {
      super.registerFunctionStatementId(...arguments);
    }
  }

  tsCheckForInvalidTypeCasts(items) {
    items.forEach(node => {
      if ((node == null ? void 0 : node.type) === "TSTypeCastExpression") {
        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);
      }
    });
  }

  toReferencedList(exprList, isInParens) {
    this.tsCheckForInvalidTypeCasts(exprList);
    return exprList;
  }

  parseArrayLike(...args) {
    const node = super.parseArrayLike(...args);

    if (node.type === "ArrayExpression") {
      this.tsCheckForInvalidTypeCasts(node.elements);
    }

    return node;
  }

  parseSubscript(base, startPos, startLoc, noCalls, state) {
    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {
      this.state.exprAllowed = false;
      this.next();
      const nonNullExpression = this.startNodeAt(startPos, startLoc);
      nonNullExpression.expression = base;
      return this.finishNode(nonNullExpression, "TSNonNullExpression");
    }

    if (this.isRelational("<")) {
      const result = this.tsTryParseAndCatch(() => {
        if (!noCalls && this.atPossibleAsyncArrow(base)) {
          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);

          if (asyncArrowFn) {
            return asyncArrowFn;
          }
        }

        const node = this.startNodeAt(startPos, startLoc);
        node.callee = base;
        const typeArguments = this.tsParseTypeArguments();

        if (typeArguments) {
          if (!noCalls && this.eat(types$1.parenL)) {
            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);
            this.tsCheckForInvalidTypeCasts(node.arguments);
            node.typeParameters = typeArguments;

            if (state.optionalChainMember) {
              node.optional = false;
            }

            return this.finishCallExpression(node, state.optionalChainMember);
          } else if (this.match(types$1.backQuote)) {
            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);
            result.typeParameters = typeArguments;
            return result;
          }
        }

        this.unexpected();
      });
      if (result) return result;
    }

    return super.parseSubscript(base, startPos, startLoc, noCalls, state);
  }

  parseNewArguments(node) {
    if (this.isRelational("<")) {
      const typeParameters = this.tsTryParseAndCatch(() => {
        const args = this.tsParseTypeArguments();
        if (!this.match(types$1.parenL)) this.unexpected();
        return args;
      });

      if (typeParameters) {
        node.typeParameters = typeParameters;
      }
    }

    super.parseNewArguments(node);
  }

  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {
    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual("as")) {
      const node = this.startNodeAt(leftStartPos, leftStartLoc);
      node.expression = left;

      const _const = this.tsTryNextParseConstantContext();

      if (_const) {
        node.typeAnnotation = _const;
      } else {
        node.typeAnnotation = this.tsNextThenParseType();
      }

      this.finishNode(node, "TSAsExpression");
      this.reScan_lt_gt();
      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);
    }

    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);
  }

  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}

  checkDuplicateExports() {}

  parseImport(node) {
    node.importKind = "value";

    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {
      let ahead = this.lookahead();

      if (this.isContextual("type") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === "from") && ahead.type !== types$1.eq) {
        node.importKind = "type";
        this.next();
        ahead = this.lookahead();
      }

      if (this.match(types$1.name) && ahead.type === types$1.eq) {
        return this.tsParseImportEqualsDeclaration(node);
      }
    }

    const importNode = super.parseImport(node);

    if (importNode.importKind === "type" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === "ImportDefaultSpecifier") {
      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);
    }

    return importNode;
  }

  parseExport(node) {
    if (this.match(types$1._import)) {
      this.next();

      if (this.isContextual("type") && this.lookaheadCharCode() !== 61) {
        node.importKind = "type";
        this.next();
      } else {
        node.importKind = "value";
      }

      return this.tsParseImportEqualsDeclaration(node, true);
    } else if (this.eat(types$1.eq)) {
      const assign = node;
      assign.expression = this.parseExpression();
      this.semicolon();
      return this.finishNode(assign, "TSExportAssignment");
    } else if (this.eatContextual("as")) {
      const decl = node;
      this.expectContextual("namespace");
      decl.id = this.parseIdentifier();
      this.semicolon();
      return this.finishNode(decl, "TSNamespaceExportDeclaration");
    } else {
      if (this.isContextual("type") && this.lookahead().type === types$1.braceL) {
        this.next();
        node.exportKind = "type";
      } else {
        node.exportKind = "value";
      }

      return super.parseExport(node);
    }
  }

  isAbstractClass() {
    return this.isContextual("abstract") && this.lookahead().type === types$1._class;
  }

  parseExportDefaultExpression() {
    if (this.isAbstractClass()) {
      const cls = this.startNode();
      this.next();
      cls.abstract = true;
      this.parseClass(cls, true, true);
      return cls;
    }

    if (this.state.value === "interface") {
      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);
      if (result) return result;
    }

    return super.parseExportDefaultExpression();
  }

  parseStatementContent(context, topLevel) {
    if (this.state.type === types$1._const) {
      const ahead = this.lookahead();

      if (ahead.type === types$1.name && ahead.value === "enum") {
        const node = this.startNode();
        this.expect(types$1._const);
        this.expectContextual("enum");
        return this.tsParseEnumDeclaration(node, true);
      }
    }

    return super.parseStatementContent(context, topLevel);
  }

  parseAccessModifier() {
    return this.tsParseModifier(["public", "protected", "private"]);
  }

  tsHasSomeModifiers(member, modifiers) {
    return modifiers.some(modifier => {
      if (tsIsAccessModifier(modifier)) {
        return member.accessibility === modifier;
      }

      return !!member[modifier];
    });
  }

  parseClassMember(classBody, member, state) {
    const invalidModifersForStaticBlocks = ["declare", "private", "public", "protected", "override", "abstract", "readonly"];
    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat(["static"]));

    const callParseClassMemberWithIsStatic = () => {
      const isStatic = !!member.static;

      if (isStatic && this.eat(types$1.braceL)) {
        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {
          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);
        }

        this.parseClassStaticBlock(classBody, member);
      } else {
        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);
      }
    };

    if (member.declare) {
      this.tsInAmbientContext(callParseClassMemberWithIsStatic);
    } else {
      callParseClassMemberWithIsStatic();
    }
  }

  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {
    const idx = this.tsTryParseIndexSignature(member);

    if (idx) {
      classBody.body.push(idx);

      if (member.abstract) {
        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);
      }

      if (member.accessibility) {
        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);
      }

      if (member.declare) {
        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);
      }

      if (member.override) {
        this.raise(member.start, TSErrors.IndexSignatureHasOverride);
      }

      return;
    }

    if (!this.state.inAbstractClass && member.abstract) {
      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);
    }

    if (member.override) {
      if (!state.hadSuperClass) {
        this.raise(member.start, TSErrors.OverrideNotInSubClass);
      }
    }

    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);
  }

  parsePostMemberNameModifiers(methodOrProp) {
    const optional = this.eat(types$1.question);
    if (optional) methodOrProp.optional = true;

    if (methodOrProp.readonly && this.match(types$1.parenL)) {
      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);
    }

    if (methodOrProp.declare && this.match(types$1.parenL)) {
      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);
    }
  }

  parseExpressionStatement(node, expr) {
    const decl = expr.type === "Identifier" ? this.tsParseExpressionStatement(node, expr) : undefined;
    return decl || super.parseExpressionStatement(node, expr);
  }

  shouldParseExportDeclaration() {
    if (this.tsIsDeclarationStart()) return true;
    return super.shouldParseExportDeclaration();
  }

  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {
    if (!refNeedsArrowPos || !this.match(types$1.question)) {
      return super.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);
    }

    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));

    if (!result.node) {
      refNeedsArrowPos.start = result.error.pos || this.state.start;
      return expr;
    }

    if (result.error) this.state = result.failState;
    return result.node;
  }

  parseParenItem(node, startPos, startLoc) {
    node = super.parseParenItem(node, startPos, startLoc);

    if (this.eat(types$1.question)) {
      node.optional = true;
      this.resetEndLocation(node);
    }

    if (this.match(types$1.colon)) {
      const typeCastNode = this.startNodeAt(startPos, startLoc);
      typeCastNode.expression = node;
      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();
      return this.finishNode(typeCastNode, "TSTypeCastExpression");
    }

    return node;
  }

  parseExportDeclaration(node) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const isDeclare = this.eatContextual("declare");

    if (isDeclare && (this.isContextual("declare") || !this.shouldParseExportDeclaration())) {
      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);
    }

    let declaration;

    if (this.match(types$1.name)) {
      declaration = this.tsTryParseExportDeclaration();
    }

    if (!declaration) {
      declaration = super.parseExportDeclaration(node);
    }

    if (declaration && (declaration.type === "TSInterfaceDeclaration" || declaration.type === "TSTypeAliasDeclaration" || isDeclare)) {
      node.exportKind = "type";
    }

    if (declaration && isDeclare) {
      this.resetStartLocation(declaration, startPos, startLoc);
      declaration.declare = true;
    }

    return declaration;
  }

  parseClassId(node, isStatement, optionalId) {
    if ((!isStatement || optionalId) && this.isContextual("implements")) {
      return;
    }

    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);
    const typeParameters = this.tsTryParseTypeParameters();
    if (typeParameters) node.typeParameters = typeParameters;
  }

  parseClassPropertyAnnotation(node) {
    if (!node.optional && this.eat(types$1.bang)) {
      node.definite = true;
    }

    const type = this.tsTryParseTypeAnnotation();
    if (type) node.typeAnnotation = type;
  }

  parseClassProperty(node) {
    this.parseClassPropertyAnnotation(node);

    if (this.state.isAmbientContext && this.match(types$1.eq)) {
      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);
    }

    return super.parseClassProperty(node);
  }

  parseClassPrivateProperty(node) {
    if (node.abstract) {
      this.raise(node.start, TSErrors.PrivateElementHasAbstract);
    }

    if (node.accessibility) {
      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);
    }

    this.parseClassPropertyAnnotation(node);
    return super.parseClassPrivateProperty(node);
  }

  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {
    const typeParameters = this.tsTryParseTypeParameters();

    if (typeParameters && isConstructor) {
      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);
    }

    if (method.declare && (method.kind === "get" || method.kind === "set")) {
      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);
    }

    if (typeParameters) method.typeParameters = typeParameters;
    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);
  }

  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {
    const typeParameters = this.tsTryParseTypeParameters();
    if (typeParameters) method.typeParameters = typeParameters;
    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);
  }

  parseClassSuper(node) {
    super.parseClassSuper(node);

    if (node.superClass && this.isRelational("<")) {
      node.superTypeParameters = this.tsParseTypeArguments();
    }

    if (this.eatContextual("implements")) {
      node.implements = this.tsParseHeritageClause("implements");
    }
  }

  parseObjPropValue(prop, ...args) {
    const typeParameters = this.tsTryParseTypeParameters();
    if (typeParameters) prop.typeParameters = typeParameters;
    super.parseObjPropValue(prop, ...args);
  }

  parseFunctionParams(node, allowModifiers) {
    const typeParameters = this.tsTryParseTypeParameters();
    if (typeParameters) node.typeParameters = typeParameters;
    super.parseFunctionParams(node, allowModifiers);
  }

  parseVarId(decl, kind) {
    super.parseVarId(decl, kind);

    if (decl.id.type === "Identifier" && this.eat(types$1.bang)) {
      decl.definite = true;
    }

    const type = this.tsTryParseTypeAnnotation();

    if (type) {
      decl.id.typeAnnotation = type;
      this.resetEndLocation(decl.id);
    }
  }

  parseAsyncArrowFromCallExpression(node, call) {
    if (this.match(types$1.colon)) {
      node.returnType = this.tsParseTypeAnnotation();
    }

    return super.parseAsyncArrowFromCallExpression(node, call);
  }

  parseMaybeAssign(...args) {
    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;

    let state;
    let jsx;
    let typeCast;

    if (this.hasPlugin("jsx") && (this.match(types$1.jsxTagStart) || this.isRelational("<"))) {
      state = this.state.clone();
      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);
      if (!jsx.error) return jsx.node;
      const {
        context
      } = this.state;

      if (context[context.length - 1] === types.j_oTag) {
        context.length -= 2;
      } else if (context[context.length - 1] === types.j_expr) {
        context.length -= 1;
      }
    }

    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational("<")) {
      return super.parseMaybeAssign(...args);
    }

    let typeParameters;
    state = state || this.state.clone();
    const arrow = this.tryParse(abort => {
      var _expr$extra, _typeParameters;

      typeParameters = this.tsParseTypeParameters();
      const expr = super.parseMaybeAssign(...args);

      if (expr.type !== "ArrowFunctionExpression" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {
        abort();
      }

      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {
        this.resetStartLocationFromNode(expr, typeParameters);
      }

      expr.typeParameters = typeParameters;
      return expr;
    }, state);
    if (!arrow.error && !arrow.aborted) return arrow.node;

    if (!jsx) {
      assert(!this.hasPlugin("jsx"));
      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);
      if (!typeCast.error) return typeCast.node;
    }

    if ((_jsx2 = jsx) != null && _jsx2.node) {
      this.state = jsx.failState;
      return jsx.node;
    }

    if (arrow.node) {
      this.state = arrow.failState;
      return arrow.node;
    }

    if ((_typeCast = typeCast) != null && _typeCast.node) {
      this.state = typeCast.failState;
      return typeCast.node;
    }

    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;
    if (arrow.thrown) throw arrow.error;
    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;
    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);
  }

  parseMaybeUnary(refExpressionErrors) {
    if (!this.hasPlugin("jsx") && this.isRelational("<")) {
      return this.tsParseTypeAssertion();
    } else {
      return super.parseMaybeUnary(refExpressionErrors);
    }
  }

  parseArrow(node) {
    if (this.match(types$1.colon)) {
      const result = this.tryParse(abort => {
        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);
        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();
        return returnType;
      });
      if (result.aborted) return;

      if (!result.thrown) {
        if (result.error) this.state = result.failState;
        node.returnType = result.node;
      }
    }

    return super.parseArrow(node);
  }

  parseAssignableListItemTypes(param) {
    if (this.eat(types$1.question)) {
      if (param.type !== "Identifier" && !this.state.isAmbientContext && !this.state.inType) {
        this.raise(param.start, TSErrors.PatternIsOptional);
      }

      param.optional = true;
    }

    const type = this.tsTryParseTypeAnnotation();
    if (type) param.typeAnnotation = type;
    this.resetEndLocation(param);
    return param;
  }

  toAssignable(node, isLHS = false) {
    switch (node.type) {
      case "TSTypeCastExpression":
        return super.toAssignable(this.typeCastToParameter(node), isLHS);

      case "TSParameterProperty":
        return super.toAssignable(node, isLHS);

      case "ParenthesizedExpression":
        return this.toAssignableParenthesizedExpression(node, isLHS);

      case "TSAsExpression":
      case "TSNonNullExpression":
      case "TSTypeAssertion":
        node.expression = this.toAssignable(node.expression, isLHS);
        return node;

      default:
        return super.toAssignable(node, isLHS);
    }
  }

  toAssignableParenthesizedExpression(node, isLHS) {
    switch (node.expression.type) {
      case "TSAsExpression":
      case "TSNonNullExpression":
      case "TSTypeAssertion":
      case "ParenthesizedExpression":
        node.expression = this.toAssignable(node.expression, isLHS);
        return node;

      default:
        return super.toAssignable(node, isLHS);
    }
  }

  checkLVal(expr, contextDescription, ...args) {
    var _expr$extra2;

    switch (expr.type) {
      case "TSTypeCastExpression":
        return;

      case "TSParameterProperty":
        this.checkLVal(expr.parameter, "parameter property", ...args);
        return;

      case "TSAsExpression":
      case "TSTypeAssertion":
        if (!args[0] && contextDescription !== "parenthesized expression" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {
          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);
          break;
        }

        this.checkLVal(expr.expression, "parenthesized expression", ...args);
        return;

      case "TSNonNullExpression":
        this.checkLVal(expr.expression, contextDescription, ...args);
        return;

      default:
        super.checkLVal(expr, contextDescription, ...args);
        return;
    }
  }

  parseBindingAtom() {
    switch (this.state.type) {
      case types$1._this:
        return this.parseIdentifier(true);

      default:
        return super.parseBindingAtom();
    }
  }

  parseMaybeDecoratorArguments(expr) {
    if (this.isRelational("<")) {
      const typeArguments = this.tsParseTypeArguments();

      if (this.match(types$1.parenL)) {
        const call = super.parseMaybeDecoratorArguments(expr);
        call.typeParameters = typeArguments;
        return call;
      }

      this.unexpected(this.state.start, types$1.parenL);
    }

    return super.parseMaybeDecoratorArguments(expr);
  }

  checkCommaAfterRest(close) {
    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {
      this.next();
    } else {
      super.checkCommaAfterRest(close);
    }
  }

  isClassMethod() {
    return this.isRelational("<") || super.isClassMethod();
  }

  isClassProperty() {
    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();
  }

  parseMaybeDefault(...args) {
    const node = super.parseMaybeDefault(...args);

    if (node.type === "AssignmentPattern" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {
      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);
    }

    return node;
  }

  getTokenFromCode(code) {
    if (this.state.inType && (code === 62 || code === 60)) {
      return this.finishOp(types$1.relational, 1);
    } else {
      return super.getTokenFromCode(code);
    }
  }

  reScan_lt_gt() {
    if (this.match(types$1.relational)) {
      const code = this.input.charCodeAt(this.state.start);

      if (code === 60 || code === 62) {
        this.state.pos -= 1;
        this.readToken_lt_gt(code);
      }
    }
  }

  toAssignableList(exprList) {
    for (let i = 0; i < exprList.length; i++) {
      const expr = exprList[i];
      if (!expr) continue;

      switch (expr.type) {
        case "TSTypeCastExpression":
          exprList[i] = this.typeCastToParameter(expr);
          break;

        case "TSAsExpression":
        case "TSTypeAssertion":
          if (!this.state.maybeInArrowParameters) {
            exprList[i] = this.typeCastToParameter(expr);
          } else {
            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);
          }

          break;
      }
    }

    return super.toAssignableList(...arguments);
  }

  typeCastToParameter(node) {
    node.expression.typeAnnotation = node.typeAnnotation;
    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);
    return node.expression;
  }

  shouldParseArrow() {
    return this.match(types$1.colon) || super.shouldParseArrow();
  }

  shouldParseAsyncArrow() {
    return this.match(types$1.colon) || super.shouldParseAsyncArrow();
  }

  canHaveLeadingDecorator() {
    return super.canHaveLeadingDecorator() || this.isAbstractClass();
  }

  jsxParseOpeningElementAfterName(node) {
    if (this.isRelational("<")) {
      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());
      if (typeArguments) node.typeParameters = typeArguments;
    }

    return super.jsxParseOpeningElementAfterName(node);
  }

  getGetterSetterExpectedParamCount(method) {
    const baseCount = super.getGetterSetterExpectedParamCount(method);
    const params = this.getObjectOrClassMethodParams(method);
    const firstParam = params[0];
    const hasContextParam = firstParam && this.isThisParam(firstParam);
    return hasContextParam ? baseCount + 1 : baseCount;
  }

  parseCatchClauseParam() {
    const param = super.parseCatchClauseParam();
    const type = this.tsTryParseTypeAnnotation();

    if (type) {
      param.typeAnnotation = type;
      this.resetEndLocation(param);
    }

    return param;
  }

  tsInAmbientContext(cb) {
    const oldIsAmbientContext = this.state.isAmbientContext;
    this.state.isAmbientContext = true;

    try {
      return cb();
    } finally {
      this.state.isAmbientContext = oldIsAmbientContext;
    }
  }

  parseClass(node, ...args) {
    const oldInAbstractClass = this.state.inAbstractClass;
    this.state.inAbstractClass = !!node.abstract;

    try {
      return super.parseClass(node, ...args);
    } finally {
      this.state.inAbstractClass = oldInAbstractClass;
    }
  }

  tsParseAbstractDeclaration(node) {
    if (this.match(types$1._class)) {
      node.abstract = true;
      return this.parseClass(node, true, false);
    } else if (this.isContextual("interface")) {
      if (!this.hasFollowingLineBreak()) {
        node.abstract = true;
        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);
        this.next();
        return this.tsParseInterfaceDeclaration(node);
      }
    } else {
      this.unexpected(null, types$1._class);
    }
  }

  parseMethod(...args) {
    const method = super.parseMethod(...args);

    if (method.abstract) {
      const hasBody = this.hasPlugin("estree") ? !!method.value.body : !!method.body;

      if (hasBody) {
        const {
          key
        } = method;
        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === "Identifier" ? key.name : `[${this.input.slice(key.start, key.end)}]`);
      }
    }

    return method;
  }

  shouldParseAsAmbientContext() {
    return !!this.getPluginOption("typescript", "dts");
  }

  parse() {
    if (this.shouldParseAsAmbientContext()) {
      this.state.isAmbientContext = true;
    }

    return super.parse();
  }

  getExpression() {
    if (this.shouldParseAsAmbientContext()) {
      this.state.isAmbientContext = true;
    }

    return super.getExpression();
  }

});

types$1.placeholder = new TokenType("%%", {
  startsExpr: true
});
const PlaceHolderErrors = makeErrorTemplates({
  ClassNameIsRequired: "A class name is required."
}, ErrorCodes.SyntaxError);
var placeholders = (superClass => class extends superClass {
  parsePlaceholder(expectedNode) {
    if (this.match(types$1.placeholder)) {
      const node = this.startNode();
      this.next();
      this.assertNoSpace("Unexpected space in placeholder.");
      node.name = super.parseIdentifier(true);
      this.assertNoSpace("Unexpected space in placeholder.");
      this.expect(types$1.placeholder);
      return this.finishPlaceholder(node, expectedNode);
    }
  }

  finishPlaceholder(node, expectedNode) {
    const isFinished = !!(node.expectedNode && node.type === "Placeholder");
    node.expectedNode = expectedNode;
    return isFinished ? node : this.finishNode(node, "Placeholder");
  }

  getTokenFromCode(code) {
    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {
      return this.finishOp(types$1.placeholder, 2);
    }

    return super.getTokenFromCode(...arguments);
  }

  parseExprAtom() {
    return this.parsePlaceholder("Expression") || super.parseExprAtom(...arguments);
  }

  parseIdentifier() {
    return this.parsePlaceholder("Identifier") || super.parseIdentifier(...arguments);
  }

  checkReservedWord(word) {
    if (word !== undefined) super.checkReservedWord(...arguments);
  }

  parseBindingAtom() {
    return this.parsePlaceholder("Pattern") || super.parseBindingAtom(...arguments);
  }

  checkLVal(expr) {
    if (expr.type !== "Placeholder") super.checkLVal(...arguments);
  }

  toAssignable(node) {
    if (node && node.type === "Placeholder" && node.expectedNode === "Expression") {
      node.expectedNode = "Pattern";
      return node;
    }

    return super.toAssignable(...arguments);
  }

  isLet(context) {
    if (super.isLet(context)) {
      return true;
    }

    if (!this.isContextual("let")) {
      return false;
    }

    if (context) return false;
    const nextToken = this.lookahead();

    if (nextToken.type === types$1.placeholder) {
      return true;
    }

    return false;
  }

  verifyBreakContinue(node) {
    if (node.label && node.label.type === "Placeholder") return;
    super.verifyBreakContinue(...arguments);
  }

  parseExpressionStatement(node, expr) {
    if (expr.type !== "Placeholder" || expr.extra && expr.extra.parenthesized) {
      return super.parseExpressionStatement(...arguments);
    }

    if (this.match(types$1.colon)) {
      const stmt = node;
      stmt.label = this.finishPlaceholder(expr, "Identifier");
      this.next();
      stmt.body = this.parseStatement("label");
      return this.finishNode(stmt, "LabeledStatement");
    }

    this.semicolon();
    node.name = expr.name;
    return this.finishPlaceholder(node, "Statement");
  }

  parseBlock() {
    return this.parsePlaceholder("BlockStatement") || super.parseBlock(...arguments);
  }

  parseFunctionId() {
    return this.parsePlaceholder("Identifier") || super.parseFunctionId(...arguments);
  }

  parseClass(node, isStatement, optionalId) {
    const type = isStatement ? "ClassDeclaration" : "ClassExpression";
    this.next();
    this.takeDecorators(node);
    const oldStrict = this.state.strict;
    const placeholder = this.parsePlaceholder("Identifier");

    if (placeholder) {
      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {
        node.id = placeholder;
      } else if (optionalId || !isStatement) {
        node.id = null;
        node.body = this.finishPlaceholder(placeholder, "ClassBody");
        return this.finishNode(node, type);
      } else {
        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);
      }
    } else {
      this.parseClassId(node, isStatement, optionalId);
    }

    this.parseClassSuper(node);
    node.body = this.parsePlaceholder("ClassBody") || this.parseClassBody(!!node.superClass, oldStrict);
    return this.finishNode(node, type);
  }

  parseExport(node) {
    const placeholder = this.parsePlaceholder("Identifier");
    if (!placeholder) return super.parseExport(...arguments);

    if (!this.isContextual("from") && !this.match(types$1.comma)) {
      node.specifiers = [];
      node.source = null;
      node.declaration = this.finishPlaceholder(placeholder, "Declaration");
      return this.finishNode(node, "ExportNamedDeclaration");
    }

    this.expectPlugin("exportDefaultFrom");
    const specifier = this.startNode();
    specifier.exported = placeholder;
    node.specifiers = [this.finishNode(specifier, "ExportDefaultSpecifier")];
    return super.parseExport(node);
  }

  isExportDefaultSpecifier() {
    if (this.match(types$1._default)) {
      const next = this.nextTokenStart();

      if (this.isUnparsedContextual(next, "from")) {
        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {
          return true;
        }
      }
    }

    return super.isExportDefaultSpecifier();
  }

  maybeParseExportDefaultSpecifier(node) {
    if (node.specifiers && node.specifiers.length > 0) {
      return true;
    }

    return super.maybeParseExportDefaultSpecifier(...arguments);
  }

  checkExport(node) {
    const {
      specifiers
    } = node;

    if (specifiers != null && specifiers.length) {
      node.specifiers = specifiers.filter(node => node.exported.type === "Placeholder");
    }

    super.checkExport(node);
    node.specifiers = specifiers;
  }

  parseImport(node) {
    const placeholder = this.parsePlaceholder("Identifier");
    if (!placeholder) return super.parseImport(...arguments);
    node.specifiers = [];

    if (!this.isContextual("from") && !this.match(types$1.comma)) {
      node.source = this.finishPlaceholder(placeholder, "StringLiteral");
      this.semicolon();
      return this.finishNode(node, "ImportDeclaration");
    }

    const specifier = this.startNodeAtNode(placeholder);
    specifier.local = placeholder;
    this.finishNode(specifier, "ImportDefaultSpecifier");
    node.specifiers.push(specifier);

    if (this.eat(types$1.comma)) {
      const hasStarImport = this.maybeParseStarImportSpecifier(node);
      if (!hasStarImport) this.parseNamedImportSpecifiers(node);
    }

    this.expectContextual("from");
    node.source = this.parseImportSource();
    this.semicolon();
    return this.finishNode(node, "ImportDeclaration");
  }

  parseImportSource() {
    return this.parsePlaceholder("StringLiteral") || super.parseImportSource(...arguments);
  }

});

var v8intrinsic = (superClass => class extends superClass {
  parseV8Intrinsic() {
    if (this.match(types$1.modulo)) {
      const v8IntrinsicStart = this.state.start;
      const node = this.startNode();
      this.eat(types$1.modulo);

      if (this.match(types$1.name)) {
        const name = this.parseIdentifierName(this.state.start);
        const identifier = this.createIdentifier(node, name);
        identifier.type = "V8IntrinsicIdentifier";

        if (this.match(types$1.parenL)) {
          return identifier;
        }
      }

      this.unexpected(v8IntrinsicStart);
    }
  }

  parseExprAtom() {
    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);
  }

});

function hasPlugin(plugins, name) {
  return plugins.some(plugin => {
    if (Array.isArray(plugin)) {
      return plugin[0] === name;
    } else {
      return plugin === name;
    }
  });
}
function getPluginOption(plugins, name, option) {
  const plugin = plugins.find(plugin => {
    if (Array.isArray(plugin)) {
      return plugin[0] === name;
    } else {
      return plugin === name;
    }
  });

  if (plugin && Array.isArray(plugin)) {
    return plugin[1][option];
  }

  return null;
}
const PIPELINE_PROPOSALS = ["minimal", "smart", "fsharp"];
const RECORD_AND_TUPLE_SYNTAX_TYPES = ["hash", "bar"];
function validatePlugins(plugins) {
  if (hasPlugin(plugins, "decorators")) {
    if (hasPlugin(plugins, "decorators-legacy")) {
      throw new Error("Cannot use the decorators and decorators-legacy plugin together");
    }

    const decoratorsBeforeExport = getPluginOption(plugins, "decorators", "decoratorsBeforeExport");

    if (decoratorsBeforeExport == null) {
      throw new Error("The 'decorators' plugin requires a 'decoratorsBeforeExport' option," + " whose value must be a boolean. If you are migrating from" + " Babylon/Babel 6 or want to use the old decorators proposal, you" + " should use the 'decorators-legacy' plugin instead of 'decorators'.");
    } else if (typeof decoratorsBeforeExport !== "boolean") {
      throw new Error("'decoratorsBeforeExport' must be a boolean.");
    }
  }

  if (hasPlugin(plugins, "flow") && hasPlugin(plugins, "typescript")) {
    throw new Error("Cannot combine flow and typescript plugins.");
  }

  if (hasPlugin(plugins, "placeholders") && hasPlugin(plugins, "v8intrinsic")) {
    throw new Error("Cannot combine placeholders and v8intrinsic plugins.");
  }

  if (hasPlugin(plugins, "pipelineOperator") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, "pipelineOperator", "proposal"))) {
    throw new Error("'pipelineOperator' requires 'proposal' option whose value should be one of: " + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(", "));
  }

  if (hasPlugin(plugins, "moduleAttributes")) {
    {
      if (hasPlugin(plugins, "importAssertions")) {
        throw new Error("Cannot combine importAssertions and moduleAttributes plugins.");
      }

      const moduleAttributesVerionPluginOption = getPluginOption(plugins, "moduleAttributes", "version");

      if (moduleAttributesVerionPluginOption !== "may-2020") {
        throw new Error("The 'moduleAttributes' plugin requires a 'version' option," + " representing the last proposal update. Currently, the" + " only supported value is 'may-2020'.");
      }
    }
  }

  if (hasPlugin(plugins, "recordAndTuple") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, "recordAndTuple", "syntaxType"))) {
    throw new Error("'recordAndTuple' requires 'syntaxType' option whose value should be one of: " + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(", "));
  }

  if (hasPlugin(plugins, "asyncDoExpressions") && !hasPlugin(plugins, "doExpressions")) {
    const error = new Error("'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.");
    error.missingPlugins = "doExpressions";
    throw error;
  }
}
const mixinPlugins = {
  estree,
  jsx,
  flow,
  typescript,
  v8intrinsic,
  placeholders
};
const mixinPluginNames = Object.keys(mixinPlugins);

const defaultOptions = {
  sourceType: "script",
  sourceFilename: undefined,
  startLine: 1,
  allowAwaitOutsideFunction: false,
  allowReturnOutsideFunction: false,
  allowImportExportEverywhere: false,
  allowSuperOutsideMethod: false,
  allowUndeclaredExports: false,
  plugins: [],
  strictMode: null,
  ranges: false,
  tokens: false,
  createParenthesizedExpressions: false,
  errorRecovery: false
};
function getOptions(opts) {
  const options = {};

  for (const key of Object.keys(defaultOptions)) {
    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];
  }

  return options;
}

var _isDigit = function isDigit(code) {
  return code >= 48 && code <= 57;
};
const VALID_REGEX_FLAGS = new Set(["g", "m", "s", "i", "y", "u"]);
const forbiddenNumericSeparatorSiblings = {
  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],
  hex: [46, 88, 95, 120]
};
const allowedNumericSeparatorSiblings = {};
allowedNumericSeparatorSiblings.bin = [48, 49];
allowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];
allowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];
allowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];
class Token {
  constructor(state) {
    this.type = state.type;
    this.value = state.value;
    this.start = state.start;
    this.end = state.end;
    this.loc = new SourceLocation(state.startLoc, state.endLoc);
  }

}
class Tokenizer extends ParserError {
  constructor(options, input) {
    super();
    this.isLookahead = void 0;
    this.tokens = [];
    this.state = new State();
    this.state.init(options);
    this.input = input;
    this.length = input.length;
    this.isLookahead = false;
  }

  pushToken(token) {
    this.tokens.length = this.state.tokensLength;
    this.tokens.push(token);
    ++this.state.tokensLength;
  }

  next() {
    this.checkKeywordEscapes();

    if (this.options.tokens) {
      this.pushToken(new Token(this.state));
    }

    this.state.lastTokEnd = this.state.end;
    this.state.lastTokStart = this.state.start;
    this.state.lastTokEndLoc = this.state.endLoc;
    this.state.lastTokStartLoc = this.state.startLoc;
    this.nextToken();
  }

  eat(type) {
    if (this.match(type)) {
      this.next();
      return true;
    } else {
      return false;
    }
  }

  match(type) {
    return this.state.type === type;
  }

  createLookaheadState(state) {
    return {
      pos: state.pos,
      value: null,
      type: state.type,
      start: state.start,
      end: state.end,
      lastTokEnd: state.end,
      context: [this.curContext()],
      exprAllowed: state.exprAllowed,
      inType: state.inType
    };
  }

  lookahead() {
    const old = this.state;
    this.state = this.createLookaheadState(old);
    this.isLookahead = true;
    this.nextToken();
    this.isLookahead = false;
    const curr = this.state;
    this.state = old;
    return curr;
  }

  nextTokenStart() {
    return this.nextTokenStartSince(this.state.pos);
  }

  nextTokenStartSince(pos) {
    skipWhiteSpace.lastIndex = pos;
    const skip = skipWhiteSpace.exec(this.input);
    return pos + skip[0].length;
  }

  lookaheadCharCode() {
    return this.input.charCodeAt(this.nextTokenStart());
  }

  codePointAtPos(pos) {
    let cp = this.input.charCodeAt(pos);

    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {
      const trail = this.input.charCodeAt(pos);

      if ((trail & 0xfc00) === 0xdc00) {
        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);
      }
    }

    return cp;
  }

  setStrict(strict) {
    this.state.strict = strict;

    if (strict) {
      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));
      this.state.strictErrors.clear();
    }
  }

  curContext() {
    return this.state.context[this.state.context.length - 1];
  }

  nextToken() {
    const curContext = this.curContext();
    if (!curContext.preserveSpace) this.skipSpace();
    this.state.start = this.state.pos;
    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();

    if (this.state.pos >= this.length) {
      this.finishToken(types$1.eof);
      return;
    }

    if (curContext === types.template) {
      this.readTmplToken();
    } else {
      this.getTokenFromCode(this.codePointAtPos(this.state.pos));
    }
  }

  pushComment(block, text, start, end, startLoc, endLoc) {
    const comment = {
      type: block ? "CommentBlock" : "CommentLine",
      value: text,
      start: start,
      end: end,
      loc: new SourceLocation(startLoc, endLoc)
    };
    if (this.options.tokens) this.pushToken(comment);
    this.state.comments.push(comment);
    this.addComment(comment);
  }

  skipBlockComment() {
    let startLoc;
    if (!this.isLookahead) startLoc = this.state.curPosition();
    const start = this.state.pos;
    const end = this.input.indexOf("*/", this.state.pos + 2);
    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);
    this.state.pos = end + 2;
    lineBreakG.lastIndex = start;
    let match;

    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {
      ++this.state.curLine;
      this.state.lineStart = match.index + match[0].length;
    }

    if (this.isLookahead) return;
    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());
  }

  skipLineComment(startSkip) {
    const start = this.state.pos;
    let startLoc;
    if (!this.isLookahead) startLoc = this.state.curPosition();
    let ch = this.input.charCodeAt(this.state.pos += startSkip);

    if (this.state.pos < this.length) {
      while (!isNewLine(ch) && ++this.state.pos < this.length) {
        ch = this.input.charCodeAt(this.state.pos);
      }
    }

    if (this.isLookahead) return;
    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());
  }

  skipSpace() {
    loop: while (this.state.pos < this.length) {
      const ch = this.input.charCodeAt(this.state.pos);

      switch (ch) {
        case 32:
        case 160:
        case 9:
          ++this.state.pos;
          break;

        case 13:
          if (this.input.charCodeAt(this.state.pos + 1) === 10) {
            ++this.state.pos;
          }

        case 10:
        case 8232:
        case 8233:
          ++this.state.pos;
          ++this.state.curLine;
          this.state.lineStart = this.state.pos;
          break;

        case 47:
          switch (this.input.charCodeAt(this.state.pos + 1)) {
            case 42:
              this.skipBlockComment();
              break;

            case 47:
              this.skipLineComment(2);
              break;

            default:
              break loop;
          }

          break;

        default:
          if (isWhitespace(ch)) {
            ++this.state.pos;
          } else {
            break loop;
          }

      }
    }
  }

  finishToken(type, val) {
    this.state.end = this.state.pos;
    const prevType = this.state.type;
    this.state.type = type;
    this.state.value = val;

    if (!this.isLookahead) {
      this.state.endLoc = this.state.curPosition();
      this.updateContext(prevType);
    }
  }

  readToken_numberSign() {
    if (this.state.pos === 0 && this.readToken_interpreter()) {
      return;
    }

    const nextPos = this.state.pos + 1;
    const next = this.codePointAtPos(nextPos);

    if (next >= 48 && next <= 57) {
      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);
    }

    if (next === 123 || next === 91 && this.hasPlugin("recordAndTuple")) {
      this.expectPlugin("recordAndTuple");

      if (this.getPluginOption("recordAndTuple", "syntaxType") !== "hash") {
        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);
      }

      if (next === 123) {
        this.finishToken(types$1.braceHashL);
      } else {
        this.finishToken(types$1.bracketHashL);
      }

      this.state.pos += 2;
    } else if (isIdentifierStart(next)) {
      ++this.state.pos;
      this.finishToken(types$1.privateName, this.readWord1(next));
    } else if (next === 92) {
      ++this.state.pos;
      this.finishToken(types$1.privateName, this.readWord1());
    } else {
      this.finishOp(types$1.hash, 1);
    }
  }

  readToken_dot() {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (next >= 48 && next <= 57) {
      this.readNumber(true);
      return;
    }

    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {
      this.state.pos += 3;
      this.finishToken(types$1.ellipsis);
    } else {
      ++this.state.pos;
      this.finishToken(types$1.dot);
    }
  }

  readToken_slash() {
    if (this.state.exprAllowed && !this.state.inType) {
      ++this.state.pos;
      this.readRegexp();
      return;
    }

    const next = this.input.charCodeAt(this.state.pos + 1);

    if (next === 61) {
      this.finishOp(types$1.assign, 2);
    } else {
      this.finishOp(types$1.slash, 1);
    }
  }

  readToken_interpreter() {
    if (this.state.pos !== 0 || this.length < 2) return false;
    let ch = this.input.charCodeAt(this.state.pos + 1);
    if (ch !== 33) return false;
    const start = this.state.pos;
    this.state.pos += 1;

    while (!isNewLine(ch) && ++this.state.pos < this.length) {
      ch = this.input.charCodeAt(this.state.pos);
    }

    const value = this.input.slice(start + 2, this.state.pos);
    this.finishToken(types$1.interpreterDirective, value);
    return true;
  }

  readToken_mult_modulo(code) {
    let type = code === 42 ? types$1.star : types$1.modulo;
    let width = 1;
    let next = this.input.charCodeAt(this.state.pos + 1);
    const exprAllowed = this.state.exprAllowed;

    if (code === 42 && next === 42) {
      width++;
      next = this.input.charCodeAt(this.state.pos + 2);
      type = types$1.exponent;
    }

    if (next === 61 && !exprAllowed) {
      width++;
      type = types$1.assign;
    }

    this.finishOp(type, width);
  }

  readToken_pipe_amp(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (next === code) {
      if (this.input.charCodeAt(this.state.pos + 2) === 61) {
        this.finishOp(types$1.assign, 3);
      } else {
        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);
      }

      return;
    }

    if (code === 124) {
      if (next === 62) {
        this.finishOp(types$1.pipeline, 2);
        return;
      }

      if (this.hasPlugin("recordAndTuple") && next === 125) {
        if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") {
          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);
        }

        this.finishOp(types$1.braceBarR, 2);
        return;
      }

      if (this.hasPlugin("recordAndTuple") && next === 93) {
        if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") {
          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);
        }

        this.finishOp(types$1.bracketBarR, 2);
        return;
      }
    }

    if (next === 61) {
      this.finishOp(types$1.assign, 2);
      return;
    }

    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);
  }

  readToken_caret() {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (next === 61) {
      this.finishOp(types$1.assign, 2);
    } else {
      this.finishOp(types$1.bitwiseXOR, 1);
    }
  }

  readToken_plus_min(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (next === code) {
      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {
        this.skipLineComment(3);
        this.skipSpace();
        this.nextToken();
        return;
      }

      this.finishOp(types$1.incDec, 2);
      return;
    }

    if (next === 61) {
      this.finishOp(types$1.assign, 2);
    } else {
      this.finishOp(types$1.plusMin, 1);
    }
  }

  readToken_lt_gt(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);
    let size = 1;

    if (next === code) {
      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;

      if (this.input.charCodeAt(this.state.pos + size) === 61) {
        this.finishOp(types$1.assign, size + 1);
        return;
      }

      this.finishOp(types$1.bitShift, size);
      return;
    }

    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {
      this.skipLineComment(4);
      this.skipSpace();
      this.nextToken();
      return;
    }

    if (next === 61) {
      size = 2;
    }

    this.finishOp(types$1.relational, size);
  }

  readToken_eq_excl(code) {
    const next = this.input.charCodeAt(this.state.pos + 1);

    if (next === 61) {
      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);
      return;
    }

    if (code === 61 && next === 62) {
      this.state.pos += 2;
      this.finishToken(types$1.arrow);
      return;
    }

    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);
  }

  readToken_question() {
    const next = this.input.charCodeAt(this.state.pos + 1);
    const next2 = this.input.charCodeAt(this.state.pos + 2);

    if (next === 63) {
      if (next2 === 61) {
        this.finishOp(types$1.assign, 3);
      } else {
        this.finishOp(types$1.nullishCoalescing, 2);
      }
    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {
      this.state.pos += 2;
      this.finishToken(types$1.questionDot);
    } else {
      ++this.state.pos;
      this.finishToken(types$1.question);
    }
  }

  getTokenFromCode(code) {
    switch (code) {
      case 46:
        this.readToken_dot();
        return;

      case 40:
        ++this.state.pos;
        this.finishToken(types$1.parenL);
        return;

      case 41:
        ++this.state.pos;
        this.finishToken(types$1.parenR);
        return;

      case 59:
        ++this.state.pos;
        this.finishToken(types$1.semi);
        return;

      case 44:
        ++this.state.pos;
        this.finishToken(types$1.comma);
        return;

      case 91:
        if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
          if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") {
            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);
          }

          this.finishToken(types$1.bracketBarL);
          this.state.pos += 2;
        } else {
          ++this.state.pos;
          this.finishToken(types$1.bracketL);
        }

        return;

      case 93:
        ++this.state.pos;
        this.finishToken(types$1.bracketR);
        return;

      case 123:
        if (this.hasPlugin("recordAndTuple") && this.input.charCodeAt(this.state.pos + 1) === 124) {
          if (this.getPluginOption("recordAndTuple", "syntaxType") !== "bar") {
            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);
          }

          this.finishToken(types$1.braceBarL);
          this.state.pos += 2;
        } else {
          ++this.state.pos;
          this.finishToken(types$1.braceL);
        }

        return;

      case 125:
        ++this.state.pos;
        this.finishToken(types$1.braceR);
        return;

      case 58:
        if (this.hasPlugin("functionBind") && this.input.charCodeAt(this.state.pos + 1) === 58) {
          this.finishOp(types$1.doubleColon, 2);
        } else {
          ++this.state.pos;
          this.finishToken(types$1.colon);
        }

        return;

      case 63:
        this.readToken_question();
        return;

      case 96:
        ++this.state.pos;
        this.finishToken(types$1.backQuote);
        return;

      case 48:
        {
          const next = this.input.charCodeAt(this.state.pos + 1);

          if (next === 120 || next === 88) {
            this.readRadixNumber(16);
            return;
          }

          if (next === 111 || next === 79) {
            this.readRadixNumber(8);
            return;
          }

          if (next === 98 || next === 66) {
            this.readRadixNumber(2);
            return;
          }
        }

      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        this.readNumber(false);
        return;

      case 34:
      case 39:
        this.readString(code);
        return;

      case 47:
        this.readToken_slash();
        return;

      case 37:
      case 42:
        this.readToken_mult_modulo(code);
        return;

      case 124:
      case 38:
        this.readToken_pipe_amp(code);
        return;

      case 94:
        this.readToken_caret();
        return;

      case 43:
      case 45:
        this.readToken_plus_min(code);
        return;

      case 60:
      case 62:
        this.readToken_lt_gt(code);
        return;

      case 61:
      case 33:
        this.readToken_eq_excl(code);
        return;

      case 126:
        this.finishOp(types$1.tilde, 1);
        return;

      case 64:
        ++this.state.pos;
        this.finishToken(types$1.at);
        return;

      case 35:
        this.readToken_numberSign();
        return;

      case 92:
        this.readWord();
        return;

      default:
        if (isIdentifierStart(code)) {
          this.readWord(code);
          return;
        }

    }

    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));
  }

  finishOp(type, size) {
    const str = this.input.slice(this.state.pos, this.state.pos + size);
    this.state.pos += size;
    this.finishToken(type, str);
  }

  readRegexp() {
    const start = this.state.pos;
    let escaped, inClass;

    for (;;) {
      if (this.state.pos >= this.length) {
        throw this.raise(start, ErrorMessages.UnterminatedRegExp);
      }

      const ch = this.input.charAt(this.state.pos);

      if (lineBreak.test(ch)) {
        throw this.raise(start, ErrorMessages.UnterminatedRegExp);
      }

      if (escaped) {
        escaped = false;
      } else {
        if (ch === "[") {
          inClass = true;
        } else if (ch === "]" && inClass) {
          inClass = false;
        } else if (ch === "/" && !inClass) {
          break;
        }

        escaped = ch === "\\";
      }

      ++this.state.pos;
    }

    const content = this.input.slice(start, this.state.pos);
    ++this.state.pos;
    let mods = "";

    while (this.state.pos < this.length) {
      const char = this.input[this.state.pos];
      const charCode = this.codePointAtPos(this.state.pos);

      if (VALID_REGEX_FLAGS.has(char)) {
        if (mods.indexOf(char) > -1) {
          this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);
        }
      } else if (isIdentifierChar(charCode) || charCode === 92) {
        this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);
      } else {
        break;
      }

      ++this.state.pos;
      mods += char;
    }

    this.finishToken(types$1.regexp, {
      pattern: content,
      flags: mods
    });
  }

  readInt(radix, len, forceLen, allowNumSeparator = true) {
    const start = this.state.pos;
    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;
    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;
    let invalid = false;
    let total = 0;

    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {
      const code = this.input.charCodeAt(this.state.pos);
      let val;

      if (code === 95) {
        const prev = this.input.charCodeAt(this.state.pos - 1);
        const next = this.input.charCodeAt(this.state.pos + 1);

        if (allowedSiblings.indexOf(next) === -1) {
          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);
        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {
          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);
        }

        if (!allowNumSeparator) {
          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);
        }

        ++this.state.pos;
        continue;
      }

      if (code >= 97) {
        val = code - 97 + 10;
      } else if (code >= 65) {
        val = code - 65 + 10;
      } else if (_isDigit(code)) {
        val = code - 48;
      } else {
        val = Infinity;
      }

      if (val >= radix) {
        if (this.options.errorRecovery && val <= 9) {
          val = 0;
          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);
        } else if (forceLen) {
          val = 0;
          invalid = true;
        } else {
          break;
        }
      }

      ++this.state.pos;
      total = total * radix + val;
    }

    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {
      return null;
    }

    return total;
  }

  readRadixNumber(radix) {
    const start = this.state.pos;
    let isBigInt = false;
    this.state.pos += 2;
    const val = this.readInt(radix);

    if (val == null) {
      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);
    }

    const next = this.input.charCodeAt(this.state.pos);

    if (next === 110) {
      ++this.state.pos;
      isBigInt = true;
    } else if (next === 109) {
      throw this.raise(start, ErrorMessages.InvalidDecimal);
    }

    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {
      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);
    }

    if (isBigInt) {
      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, "");
      this.finishToken(types$1.bigint, str);
      return;
    }

    this.finishToken(types$1.num, val);
  }

  readNumber(startsWithDot) {
    const start = this.state.pos;
    let isFloat = false;
    let isBigInt = false;
    let isDecimal = false;
    let hasExponent = false;
    let isOctal = false;

    if (!startsWithDot && this.readInt(10) === null) {
      this.raise(start, ErrorMessages.InvalidNumber);
    }

    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;

    if (hasLeadingZero) {
      const integer = this.input.slice(start, this.state.pos);
      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);

      if (!this.state.strict) {
        const underscorePos = integer.indexOf("_");

        if (underscorePos > 0) {
          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);
        }
      }

      isOctal = hasLeadingZero && !/[89]/.test(integer);
    }

    let next = this.input.charCodeAt(this.state.pos);

    if (next === 46 && !isOctal) {
      ++this.state.pos;
      this.readInt(10);
      isFloat = true;
      next = this.input.charCodeAt(this.state.pos);
    }

    if ((next === 69 || next === 101) && !isOctal) {
      next = this.input.charCodeAt(++this.state.pos);

      if (next === 43 || next === 45) {
        ++this.state.pos;
      }

      if (this.readInt(10) === null) {
        this.raise(start, ErrorMessages.InvalidOrMissingExponent);
      }

      isFloat = true;
      hasExponent = true;
      next = this.input.charCodeAt(this.state.pos);
    }

    if (next === 110) {
      if (isFloat || hasLeadingZero) {
        this.raise(start, ErrorMessages.InvalidBigIntLiteral);
      }

      ++this.state.pos;
      isBigInt = true;
    }

    if (next === 109) {
      this.expectPlugin("decimal", this.state.pos);

      if (hasExponent || hasLeadingZero) {
        this.raise(start, ErrorMessages.InvalidDecimal);
      }

      ++this.state.pos;
      isDecimal = true;
    }

    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {
      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);
    }

    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, "");

    if (isBigInt) {
      this.finishToken(types$1.bigint, str);
      return;
    }

    if (isDecimal) {
      this.finishToken(types$1.decimal, str);
      return;
    }

    const val = isOctal ? parseInt(str, 8) : parseFloat(str);
    this.finishToken(types$1.num, val);
  }

  readCodePoint(throwOnInvalid) {
    const ch = this.input.charCodeAt(this.state.pos);
    let code;

    if (ch === 123) {
      const codePos = ++this.state.pos;
      code = this.readHexChar(this.input.indexOf("}", this.state.pos) - this.state.pos, true, throwOnInvalid);
      ++this.state.pos;

      if (code !== null && code > 0x10ffff) {
        if (throwOnInvalid) {
          this.raise(codePos, ErrorMessages.InvalidCodePoint);
        } else {
          return null;
        }
      }
    } else {
      code = this.readHexChar(4, false, throwOnInvalid);
    }

    return code;
  }

  readString(quote) {
    let out = "",
        chunkStart = ++this.state.pos;

    for (;;) {
      if (this.state.pos >= this.length) {
        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);
      }

      const ch = this.input.charCodeAt(this.state.pos);
      if (ch === quote) break;

      if (ch === 92) {
        out += this.input.slice(chunkStart, this.state.pos);
        out += this.readEscapedChar(false);
        chunkStart = this.state.pos;
      } else if (ch === 8232 || ch === 8233) {
        ++this.state.pos;
        ++this.state.curLine;
        this.state.lineStart = this.state.pos;
      } else if (isNewLine(ch)) {
        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);
      } else {
        ++this.state.pos;
      }
    }

    out += this.input.slice(chunkStart, this.state.pos++);
    this.finishToken(types$1.string, out);
  }

  readTmplToken() {
    let out = "",
        chunkStart = this.state.pos,
        containsInvalid = false;

    for (;;) {
      if (this.state.pos >= this.length) {
        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);
      }

      const ch = this.input.charCodeAt(this.state.pos);

      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {
        if (this.state.pos === this.state.start && this.match(types$1.template)) {
          if (ch === 36) {
            this.state.pos += 2;
            this.finishToken(types$1.dollarBraceL);
            return;
          } else {
            ++this.state.pos;
            this.finishToken(types$1.backQuote);
            return;
          }
        }

        out += this.input.slice(chunkStart, this.state.pos);
        this.finishToken(types$1.template, containsInvalid ? null : out);
        return;
      }

      if (ch === 92) {
        out += this.input.slice(chunkStart, this.state.pos);
        const escaped = this.readEscapedChar(true);

        if (escaped === null) {
          containsInvalid = true;
        } else {
          out += escaped;
        }

        chunkStart = this.state.pos;
      } else if (isNewLine(ch)) {
        out += this.input.slice(chunkStart, this.state.pos);
        ++this.state.pos;

        switch (ch) {
          case 13:
            if (this.input.charCodeAt(this.state.pos) === 10) {
              ++this.state.pos;
            }

          case 10:
            out += "\n";
            break;

          default:
            out += String.fromCharCode(ch);
            break;
        }

        ++this.state.curLine;
        this.state.lineStart = this.state.pos;
        chunkStart = this.state.pos;
      } else {
        ++this.state.pos;
      }
    }
  }

  recordStrictModeErrors(pos, message) {
    if (this.state.strict && !this.state.strictErrors.has(pos)) {
      this.raise(pos, message);
    } else {
      this.state.strictErrors.set(pos, message);
    }
  }

  readEscapedChar(inTemplate) {
    const throwOnInvalid = !inTemplate;
    const ch = this.input.charCodeAt(++this.state.pos);
    ++this.state.pos;

    switch (ch) {
      case 110:
        return "\n";

      case 114:
        return "\r";

      case 120:
        {
          const code = this.readHexChar(2, false, throwOnInvalid);
          return code === null ? null : String.fromCharCode(code);
        }

      case 117:
        {
          const code = this.readCodePoint(throwOnInvalid);
          return code === null ? null : String.fromCodePoint(code);
        }

      case 116:
        return "\t";

      case 98:
        return "\b";

      case 118:
        return "\u000b";

      case 102:
        return "\f";

      case 13:
        if (this.input.charCodeAt(this.state.pos) === 10) {
          ++this.state.pos;
        }

      case 10:
        this.state.lineStart = this.state.pos;
        ++this.state.curLine;

      case 8232:
      case 8233:
        return "";

      case 56:
      case 57:
        if (inTemplate) {
          return null;
        } else {
          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);
        }

      default:
        if (ch >= 48 && ch <= 55) {
          const codePos = this.state.pos - 1;
          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);
          let octalStr = match[0];
          let octal = parseInt(octalStr, 8);

          if (octal > 255) {
            octalStr = octalStr.slice(0, -1);
            octal = parseInt(octalStr, 8);
          }

          this.state.pos += octalStr.length - 1;
          const next = this.input.charCodeAt(this.state.pos);

          if (octalStr !== "0" || next === 56 || next === 57) {
            if (inTemplate) {
              return null;
            } else {
              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);
            }
          }

          return String.fromCharCode(octal);
        }

        return String.fromCharCode(ch);
    }
  }

  readHexChar(len, forceLen, throwOnInvalid) {
    const codePos = this.state.pos;
    const n = this.readInt(16, len, forceLen, false);

    if (n === null) {
      if (throwOnInvalid) {
        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);
      } else {
        this.state.pos = codePos - 1;
      }
    }

    return n;
  }

  readWord1(firstCode) {
    this.state.containsEsc = false;
    let word = "";
    const start = this.state.pos;
    let chunkStart = this.state.pos;

    if (firstCode !== undefined) {
      this.state.pos += firstCode <= 0xffff ? 1 : 2;
    }

    while (this.state.pos < this.length) {
      const ch = this.codePointAtPos(this.state.pos);

      if (isIdentifierChar(ch)) {
        this.state.pos += ch <= 0xffff ? 1 : 2;
      } else if (ch === 92) {
        this.state.containsEsc = true;
        word += this.input.slice(chunkStart, this.state.pos);
        const escStart = this.state.pos;
        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;

        if (this.input.charCodeAt(++this.state.pos) !== 117) {
          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);
          chunkStart = this.state.pos - 1;
          continue;
        }

        ++this.state.pos;
        const esc = this.readCodePoint(true);

        if (esc !== null) {
          if (!identifierCheck(esc)) {
            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);
          }

          word += String.fromCodePoint(esc);
        }

        chunkStart = this.state.pos;
      } else {
        break;
      }
    }

    return word + this.input.slice(chunkStart, this.state.pos);
  }

  readWord(firstCode) {
    const word = this.readWord1(firstCode);
    const type = keywords$1.get(word) || types$1.name;
    this.finishToken(type, word);
  }

  checkKeywordEscapes() {
    const kw = this.state.type.keyword;

    if (kw && this.state.containsEsc) {
      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);
    }
  }

  braceIsBlock(prevType) {
    const parent = this.curContext();

    if (parent === types.functionExpression || parent === types.functionStatement) {
      return true;
    }

    if (prevType === types$1.colon && (parent === types.braceStatement || parent === types.braceExpression)) {
      return !parent.isExpr;
    }

    if (prevType === types$1._return || prevType === types$1.name && this.state.exprAllowed) {
      return this.hasPrecedingLineBreak();
    }

    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow) {
      return true;
    }

    if (prevType === types$1.braceL) {
      return parent === types.braceStatement;
    }

    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name) {
      return false;
    }

    if (prevType === types$1.relational) {
      return true;
    }

    return !this.state.exprAllowed;
  }

  updateContext(prevType) {
    const type = this.state.type;
    let update;

    if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {
      this.state.exprAllowed = false;
    } else if (update = type.updateContext) {
      update.call(this, prevType);
    } else {
      this.state.exprAllowed = type.beforeExpr;
    }
  }

}

class ClassScope {
  constructor() {
    this.privateNames = new Set();
    this.loneAccessors = new Map();
    this.undefinedPrivateNames = new Map();
  }

}
class ClassScopeHandler {
  constructor(raise) {
    this.stack = [];
    this.undefinedPrivateNames = new Map();
    this.raise = raise;
  }

  current() {
    return this.stack[this.stack.length - 1];
  }

  enter() {
    this.stack.push(new ClassScope());
  }

  exit() {
    const oldClassScope = this.stack.pop();
    const current = this.current();

    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {
      if (current) {
        if (!current.undefinedPrivateNames.has(name)) {
          current.undefinedPrivateNames.set(name, pos);
        }
      } else {
        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);
      }
    }
  }

  declarePrivateName(name, elementType, pos) {
    const classScope = this.current();
    let redefined = classScope.privateNames.has(name);

    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {
      const accessor = redefined && classScope.loneAccessors.get(name);

      if (accessor) {
        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;
        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;
        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;
        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;
        redefined = oldKind === newKind || oldStatic !== newStatic;
        if (!redefined) classScope.loneAccessors.delete(name);
      } else if (!redefined) {
        classScope.loneAccessors.set(name, elementType);
      }
    }

    if (redefined) {
      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);
    }

    classScope.privateNames.add(name);
    classScope.undefinedPrivateNames.delete(name);
  }

  usePrivateName(name, pos) {
    let classScope;

    for (classScope of this.stack) {
      if (classScope.privateNames.has(name)) return;
    }

    if (classScope) {
      classScope.undefinedPrivateNames.set(name, pos);
    } else {
      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);
    }
  }

}

const kExpression = 0,
      kMaybeArrowParameterDeclaration = 1,
      kMaybeAsyncArrowParameterDeclaration = 2,
      kParameterDeclaration = 3;

class ExpressionScope {
  constructor(type = kExpression) {
    this.type = void 0;
    this.type = type;
  }

  canBeArrowParameterDeclaration() {
    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;
  }

  isCertainlyParameterDeclaration() {
    return this.type === kParameterDeclaration;
  }

}

class ArrowHeadParsingScope extends ExpressionScope {
  constructor(type) {
    super(type);
    this.errors = new Map();
  }

  recordDeclarationError(pos, template) {
    this.errors.set(pos, template);
  }

  clearDeclarationError(pos) {
    this.errors.delete(pos);
  }

  iterateErrors(iterator) {
    this.errors.forEach(iterator);
  }

}

class ExpressionScopeHandler {
  constructor(raise) {
    this.stack = [new ExpressionScope()];
    this.raise = raise;
  }

  enter(scope) {
    this.stack.push(scope);
  }

  exit() {
    this.stack.pop();
  }

  recordParameterInitializerError(pos, template) {
    const {
      stack
    } = this;
    let i = stack.length - 1;
    let scope = stack[i];

    while (!scope.isCertainlyParameterDeclaration()) {
      if (scope.canBeArrowParameterDeclaration()) {
        scope.recordDeclarationError(pos, template);
      } else {
        return;
      }

      scope = stack[--i];
    }

    this.raise(pos, template);
  }

  recordParenthesizedIdentifierError(pos, template) {
    const {
      stack
    } = this;
    const scope = stack[stack.length - 1];

    if (scope.isCertainlyParameterDeclaration()) {
      this.raise(pos, template);
    } else if (scope.canBeArrowParameterDeclaration()) {
      scope.recordDeclarationError(pos, template);
    } else {
      return;
    }
  }

  recordAsyncArrowParametersError(pos, template) {
    const {
      stack
    } = this;
    let i = stack.length - 1;
    let scope = stack[i];

    while (scope.canBeArrowParameterDeclaration()) {
      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {
        scope.recordDeclarationError(pos, template);
      }

      scope = stack[--i];
    }
  }

  validateAsPattern() {
    const {
      stack
    } = this;
    const currentScope = stack[stack.length - 1];
    if (!currentScope.canBeArrowParameterDeclaration()) return;
    currentScope.iterateErrors((template, pos) => {
      this.raise(pos, template);
      let i = stack.length - 2;
      let scope = stack[i];

      while (scope.canBeArrowParameterDeclaration()) {
        scope.clearDeclarationError(pos);
        scope = stack[--i];
      }
    });
  }

}
function newParameterDeclarationScope() {
  return new ExpressionScope(kParameterDeclaration);
}
function newArrowHeadScope() {
  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);
}
function newAsyncArrowScope() {
  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);
}
function newExpressionScope() {
  return new ExpressionScope();
}

class UtilParser extends Tokenizer {
  addExtra(node, key, val) {
    if (!node) return;
    const extra = node.extra = node.extra || {};
    extra[key] = val;
  }

  isRelational(op) {
    return this.match(types$1.relational) && this.state.value === op;
  }

  expectRelational(op) {
    if (this.isRelational(op)) {
      this.next();
    } else {
      this.unexpected(null, types$1.relational);
    }
  }

  isContextual(name) {
    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;
  }

  isUnparsedContextual(nameStart, name) {
    const nameEnd = nameStart + name.length;

    if (this.input.slice(nameStart, nameEnd) === name) {
      const nextCh = this.input.charCodeAt(nameEnd);
      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);
    }

    return false;
  }

  isLookaheadContextual(name) {
    const next = this.nextTokenStart();
    return this.isUnparsedContextual(next, name);
  }

  eatContextual(name) {
    return this.isContextual(name) && this.eat(types$1.name);
  }

  expectContextual(name, template) {
    if (!this.eatContextual(name)) this.unexpected(null, template);
  }

  canInsertSemicolon() {
    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();
  }

  hasPrecedingLineBreak() {
    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));
  }

  hasFollowingLineBreak() {
    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));
  }

  isLineTerminator() {
    return this.eat(types$1.semi) || this.canInsertSemicolon();
  }

  semicolon(allowAsi = true) {
    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;
    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);
  }

  expect(type, pos) {
    this.eat(type) || this.unexpected(pos, type);
  }

  assertNoSpace(message = "Unexpected space.") {
    if (this.state.start > this.state.lastTokEnd) {
      this.raise(this.state.lastTokEnd, {
        code: ErrorCodes.SyntaxError,
        reasonCode: "UnexpectedSpace",
        template: message
      });
    }
  }

  unexpected(pos, messageOrType = {
    code: ErrorCodes.SyntaxError,
    reasonCode: "UnexpectedToken",
    template: "Unexpected token"
  }) {
    if (messageOrType instanceof TokenType) {
      messageOrType = {
        code: ErrorCodes.SyntaxError,
        reasonCode: "UnexpectedToken",
        template: `Unexpected token, expected "${messageOrType.label}"`
      };
    }

    throw this.raise(pos != null ? pos : this.state.start, messageOrType);
  }

  expectPlugin(name, pos) {
    if (!this.hasPlugin(name)) {
      throw this.raiseWithData(pos != null ? pos : this.state.start, {
        missingPlugin: [name]
      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);
    }

    return true;
  }

  expectOnePlugin(names, pos) {
    if (!names.some(n => this.hasPlugin(n))) {
      throw this.raiseWithData(pos != null ? pos : this.state.start, {
        missingPlugin: names
      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(", ")}'`);
    }
  }

  tryParse(fn, oldState = this.state.clone()) {
    const abortSignal = {
      node: null
    };

    try {
      const node = fn((node = null) => {
        abortSignal.node = node;
        throw abortSignal;
      });

      if (this.state.errors.length > oldState.errors.length) {
        const failState = this.state;
        this.state = oldState;
        this.state.tokensLength = failState.tokensLength;
        return {
          node,
          error: failState.errors[oldState.errors.length],
          thrown: false,
          aborted: false,
          failState
        };
      }

      return {
        node,
        error: null,
        thrown: false,
        aborted: false,
        failState: null
      };
    } catch (error) {
      const failState = this.state;
      this.state = oldState;

      if (error instanceof SyntaxError) {
        return {
          node: null,
          error,
          thrown: true,
          aborted: false,
          failState
        };
      }

      if (error === abortSignal) {
        return {
          node: abortSignal.node,
          error: null,
          thrown: false,
          aborted: true,
          failState
        };
      }

      throw error;
    }
  }

  checkExpressionErrors(refExpressionErrors, andThrow) {
    if (!refExpressionErrors) return false;
    const {
      shorthandAssign,
      doubleProto
    } = refExpressionErrors;
    if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;

    if (shorthandAssign >= 0) {
      this.unexpected(shorthandAssign);
    }

    if (doubleProto >= 0) {
      this.raise(doubleProto, ErrorMessages.DuplicateProto);
    }
  }

  isLiteralPropertyName() {
    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);
  }

  isPrivateName(node) {
    return node.type === "PrivateName";
  }

  getPrivateNameSV(node) {
    return node.id.name;
  }

  hasPropertyAsPrivateName(node) {
    return (node.type === "MemberExpression" || node.type === "OptionalMemberExpression") && this.isPrivateName(node.property);
  }

  isOptionalChain(node) {
    return node.type === "OptionalMemberExpression" || node.type === "OptionalCallExpression";
  }

  isObjectProperty(node) {
    return node.type === "ObjectProperty";
  }

  isObjectMethod(node) {
    return node.type === "ObjectMethod";
  }

  initializeScopes(inModule = this.options.sourceType === "module") {
    const oldLabels = this.state.labels;
    this.state.labels = [];
    const oldExportedIdentifiers = this.state.exportedIdentifiers;
    this.state.exportedIdentifiers = [];
    const oldInModule = this.inModule;
    this.inModule = inModule;
    const oldScope = this.scope;
    const ScopeHandler = this.getScopeHandler();
    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);
    const oldProdParam = this.prodParam;
    this.prodParam = new ProductionParameterHandler();
    const oldClassScope = this.classScope;
    this.classScope = new ClassScopeHandler(this.raise.bind(this));
    const oldExpressionScope = this.expressionScope;
    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));
    return () => {
      this.state.labels = oldLabels;
      this.state.exportedIdentifiers = oldExportedIdentifiers;
      this.inModule = oldInModule;
      this.scope = oldScope;
      this.prodParam = oldProdParam;
      this.classScope = oldClassScope;
      this.expressionScope = oldExpressionScope;
    };
  }

  enterInitialScopes() {
    let paramFlags = PARAM;

    if (this.hasPlugin("topLevelAwait") && this.inModule) {
      paramFlags |= PARAM_AWAIT;
    }

    this.scope.enter(SCOPE_PROGRAM);
    this.prodParam.enter(paramFlags);
  }

}
class ExpressionErrors {
  constructor() {
    this.shorthandAssign = -1;
    this.doubleProto = -1;
  }

}

class Node {
  constructor(parser, pos, loc) {
    this.type = void 0;
    this.start = void 0;
    this.end = void 0;
    this.loc = void 0;
    this.range = void 0;
    this.leadingComments = void 0;
    this.trailingComments = void 0;
    this.innerComments = void 0;
    this.extra = void 0;
    this.type = "";
    this.start = pos;
    this.end = 0;
    this.loc = new SourceLocation(loc);
    if (parser != null && parser.options.ranges) this.range = [pos, 0];
    if (parser != null && parser.filename) this.loc.filename = parser.filename;
  }

  __clone() {
    const newNode = new Node();
    const keys = Object.keys(this);

    for (let i = 0, length = keys.length; i < length; i++) {
      const key = keys[i];

      if (key !== "leadingComments" && key !== "trailingComments" && key !== "innerComments") {
        newNode[key] = this[key];
      }
    }

    return newNode;
  }

}

class NodeUtils extends UtilParser {
  startNode() {
    return new Node(this, this.state.start, this.state.startLoc);
  }

  startNodeAt(pos, loc) {
    return new Node(this, pos, loc);
  }

  startNodeAtNode(type) {
    return this.startNodeAt(type.start, type.loc.start);
  }

  finishNode(node, type) {
    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);
  }

  finishNodeAt(node, type, pos, loc) {

    node.type = type;
    node.end = pos;
    node.loc.end = loc;
    if (this.options.ranges) node.range[1] = pos;
    this.processComment(node);
    return node;
  }

  resetStartLocation(node, start, startLoc) {
    node.start = start;
    node.loc.start = startLoc;
    if (this.options.ranges) node.range[0] = start;
  }

  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {
    node.end = end;
    node.loc.end = endLoc;
    if (this.options.ranges) node.range[1] = end;
  }

  resetStartLocationFromNode(node, locationNode) {
    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);
  }

}

const unwrapParenthesizedExpression = node => {
  return node.type === "ParenthesizedExpression" ? unwrapParenthesizedExpression(node.expression) : node;
};

class LValParser extends NodeUtils {
  toAssignable(node, isLHS = false) {
    var _node$extra, _node$extra3;

    let parenthesized = undefined;

    if (node.type === "ParenthesizedExpression" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {
      parenthesized = unwrapParenthesizedExpression(node);

      if (isLHS) {
        if (parenthesized.type === "Identifier") {
          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);
        } else if (parenthesized.type !== "MemberExpression") {
          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);
        }
      } else {
        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);
      }
    }

    switch (node.type) {
      case "Identifier":
      case "ObjectPattern":
      case "ArrayPattern":
      case "AssignmentPattern":
        break;

      case "ObjectExpression":
        node.type = "ObjectPattern";

        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {
          var _node$extra2;

          const prop = node.properties[i];
          const isLast = i === last;
          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);

          if (isLast && prop.type === "RestElement" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {
            this.raiseRestNotLast(node.extra.trailingComma);
          }
        }

        break;

      case "ObjectProperty":
        this.toAssignable(node.value, isLHS);
        break;

      case "SpreadElement":
        {
          this.checkToRestConversion(node);
          node.type = "RestElement";
          const arg = node.argument;
          this.toAssignable(arg, isLHS);
          break;
        }

      case "ArrayExpression":
        node.type = "ArrayPattern";
        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);
        break;

      case "AssignmentExpression":
        if (node.operator !== "=") {
          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);
        }

        node.type = "AssignmentPattern";
        delete node.operator;
        this.toAssignable(node.left, isLHS);
        break;

      case "ParenthesizedExpression":
        this.toAssignable(parenthesized, isLHS);
        break;
    }

    return node;
  }

  toAssignableObjectExpressionProp(prop, isLast, isLHS) {
    if (prop.type === "ObjectMethod") {
      const error = prop.kind === "get" || prop.kind === "set" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;
      this.raise(prop.key.start, error);
    } else if (prop.type === "SpreadElement" && !isLast) {
      this.raiseRestNotLast(prop.start);
    } else {
      this.toAssignable(prop, isLHS);
    }
  }

  toAssignableList(exprList, trailingCommaPos, isLHS) {
    let end = exprList.length;

    if (end) {
      const last = exprList[end - 1];

      if ((last == null ? void 0 : last.type) === "RestElement") {
        --end;
      } else if ((last == null ? void 0 : last.type) === "SpreadElement") {
        last.type = "RestElement";
        let arg = last.argument;
        this.toAssignable(arg, isLHS);
        arg = unwrapParenthesizedExpression(arg);

        if (arg.type !== "Identifier" && arg.type !== "MemberExpression" && arg.type !== "ArrayPattern" && arg.type !== "ObjectPattern") {
          this.unexpected(arg.start);
        }

        if (trailingCommaPos) {
          this.raiseTrailingCommaAfterRest(trailingCommaPos);
        }

        --end;
      }
    }

    for (let i = 0; i < end; i++) {
      const elt = exprList[i];

      if (elt) {
        this.toAssignable(elt, isLHS);

        if (elt.type === "RestElement") {
          this.raiseRestNotLast(elt.start);
        }
      }
    }

    return exprList;
  }

  toReferencedList(exprList, isParenthesizedExpr) {
    return exprList;
  }

  toReferencedListDeep(exprList, isParenthesizedExpr) {
    this.toReferencedList(exprList, isParenthesizedExpr);

    for (const expr of exprList) {
      if ((expr == null ? void 0 : expr.type) === "ArrayExpression") {
        this.toReferencedListDeep(expr.elements);
      }
    }
  }

  parseSpread(refExpressionErrors, refNeedsArrowPos) {
    const node = this.startNode();
    this.next();
    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);
    return this.finishNode(node, "SpreadElement");
  }

  parseRestBinding() {
    const node = this.startNode();
    this.next();
    node.argument = this.parseBindingAtom();
    return this.finishNode(node, "RestElement");
  }

  parseBindingAtom() {
    switch (this.state.type) {
      case types$1.bracketL:
        {
          const node = this.startNode();
          this.next();
          node.elements = this.parseBindingList(types$1.bracketR, 93, true);
          return this.finishNode(node, "ArrayPattern");
        }

      case types$1.braceL:
        return this.parseObjectLike(types$1.braceR, true);
    }

    return this.parseIdentifier();
  }

  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {
    const elts = [];
    let first = true;

    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types$1.comma);
      }

      if (allowEmpty && this.match(types$1.comma)) {
        elts.push(null);
      } else if (this.eat(close)) {
        break;
      } else if (this.match(types$1.ellipsis)) {
        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));
        this.checkCommaAfterRest(closeCharCode);
        this.expect(close);
        break;
      } else {
        const decorators = [];

        if (this.match(types$1.at) && this.hasPlugin("decorators")) {
          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);
        }

        while (this.match(types$1.at)) {
          decorators.push(this.parseDecorator());
        }

        elts.push(this.parseAssignableListItem(allowModifiers, decorators));
      }
    }

    return elts;
  }

  parseAssignableListItem(allowModifiers, decorators) {
    const left = this.parseMaybeDefault();
    this.parseAssignableListItemTypes(left);
    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);

    if (decorators.length) {
      left.decorators = decorators;
    }

    return elt;
  }

  parseAssignableListItemTypes(param) {
    return param;
  }

  parseMaybeDefault(startPos, startLoc, left) {
    var _startLoc, _startPos, _left;

    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;
    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;
    left = (_left = left) != null ? _left : this.parseBindingAtom();
    if (!this.eat(types$1.eq)) return left;
    const node = this.startNodeAt(startPos, startLoc);
    node.left = left;
    node.right = this.parseMaybeAssignAllowIn();
    return this.finishNode(node, "AssignmentPattern");
  }

  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {
    switch (expr.type) {
      case "Identifier":
        {
          const {
            name
          } = expr;

          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {
            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);
          }

          if (checkClashes) {
            if (checkClashes.has(name)) {
              this.raise(expr.start, ErrorMessages.ParamDupe);
            } else {
              checkClashes.add(name);
            }
          }

          if (disallowLetBinding && name === "let") {
            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);
          }

          if (!(bindingType & BIND_NONE)) {
            this.scope.declareName(name, bindingType, expr.start);
          }

          break;
        }

      case "MemberExpression":
        if (bindingType !== BIND_NONE) {
          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);
        }

        break;

      case "ObjectPattern":
        for (let prop of expr.properties) {
          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;
          this.checkLVal(prop, "object destructuring pattern", bindingType, checkClashes, disallowLetBinding);
        }

        break;

      case "ArrayPattern":
        for (const elem of expr.elements) {
          if (elem) {
            this.checkLVal(elem, "array destructuring pattern", bindingType, checkClashes, disallowLetBinding);
          }
        }

        break;

      case "AssignmentPattern":
        this.checkLVal(expr.left, "assignment pattern", bindingType, checkClashes);
        break;

      case "RestElement":
        this.checkLVal(expr.argument, "rest element", bindingType, checkClashes);
        break;

      case "ParenthesizedExpression":
        this.checkLVal(expr.expression, "parenthesized expression", bindingType, checkClashes);
        break;

      default:
        {
          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);
        }
    }
  }

  checkToRestConversion(node) {
    if (node.argument.type !== "Identifier" && node.argument.type !== "MemberExpression") {
      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);
    }
  }

  checkCommaAfterRest(close) {
    if (this.match(types$1.comma)) {
      if (this.lookaheadCharCode() === close) {
        this.raiseTrailingCommaAfterRest(this.state.start);
      } else {
        this.raiseRestNotLast(this.state.start);
      }
    }
  }

  raiseRestNotLast(pos) {
    throw this.raise(pos, ErrorMessages.ElementAfterRest);
  }

  raiseTrailingCommaAfterRest(pos) {
    this.raise(pos, ErrorMessages.RestTrailingComma);
  }

}

class ExpressionParser extends LValParser {
  checkProto(prop, isRecord, protoRef, refExpressionErrors) {
    if (prop.type === "SpreadElement" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {
      return;
    }

    const key = prop.key;
    const name = key.type === "Identifier" ? key.name : key.value;

    if (name === "__proto__") {
      if (isRecord) {
        this.raise(key.start, ErrorMessages.RecordNoProto);
        return;
      }

      if (protoRef.used) {
        if (refExpressionErrors) {
          if (refExpressionErrors.doubleProto === -1) {
            refExpressionErrors.doubleProto = key.start;
          }
        } else {
          this.raise(key.start, ErrorMessages.DuplicateProto);
        }
      }

      protoRef.used = true;
    }
  }

  shouldExitDescending(expr, potentialArrowAt) {
    return expr.type === "ArrowFunctionExpression" && expr.start === potentialArrowAt;
  }

  getExpression() {
    let paramFlags = PARAM;

    if (this.hasPlugin("topLevelAwait") && this.inModule) {
      paramFlags |= PARAM_AWAIT;
    }

    this.scope.enter(SCOPE_PROGRAM);
    this.prodParam.enter(paramFlags);
    this.nextToken();
    const expr = this.parseExpression();

    if (!this.match(types$1.eof)) {
      this.unexpected();
    }

    expr.comments = this.state.comments;
    expr.errors = this.state.errors;

    if (this.options.tokens) {
      expr.tokens = this.tokens;
    }

    return expr;
  }

  parseExpression(disallowIn, refExpressionErrors) {
    if (disallowIn) {
      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));
    }

    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));
  }

  parseExpressionBase(refExpressionErrors) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const expr = this.parseMaybeAssign(refExpressionErrors);

    if (this.match(types$1.comma)) {
      const node = this.startNodeAt(startPos, startLoc);
      node.expressions = [expr];

      while (this.eat(types$1.comma)) {
        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));
      }

      this.toReferencedList(node.expressions);
      return this.finishNode(node, "SequenceExpression");
    }

    return expr;
  }

  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {
    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));
  }

  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {
    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos));
  }

  parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;

    if (this.isContextual("yield")) {
      if (this.prodParam.hasYield) {
        this.state.exprAllowed = true;
        let left = this.parseYield();

        if (afterLeftParse) {
          left = afterLeftParse.call(this, left, startPos, startLoc);
        }

        return left;
      }
    }

    let ownExpressionErrors;

    if (refExpressionErrors) {
      ownExpressionErrors = false;
    } else {
      refExpressionErrors = new ExpressionErrors();
      ownExpressionErrors = true;
    }

    if (this.match(types$1.parenL) || this.match(types$1.name)) {
      this.state.potentialArrowAt = this.state.start;
    }

    let left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);

    if (afterLeftParse) {
      left = afterLeftParse.call(this, left, startPos, startLoc);
    }

    if (this.state.type.isAssign) {
      const node = this.startNodeAt(startPos, startLoc);
      const operator = this.state.value;
      node.operator = operator;

      if (this.match(types$1.eq)) {
        node.left = this.toAssignable(left, true);
        refExpressionErrors.doubleProto = -1;
      } else {
        node.left = left;
      }

      if (refExpressionErrors.shorthandAssign >= node.left.start) {
        refExpressionErrors.shorthandAssign = -1;
      }

      this.checkLVal(left, "assignment expression");
      this.next();
      node.right = this.parseMaybeAssign();
      return this.finishNode(node, "AssignmentExpression");
    } else if (ownExpressionErrors) {
      this.checkExpressionErrors(refExpressionErrors, true);
    }

    return left;
  }

  parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const potentialArrowAt = this.state.potentialArrowAt;
    const expr = this.parseExprOps(refExpressionErrors);

    if (this.shouldExitDescending(expr, potentialArrowAt)) {
      return expr;
    }

    return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);
  }

  parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {
    if (this.eat(types$1.question)) {
      const node = this.startNodeAt(startPos, startLoc);
      node.test = expr;
      node.consequent = this.parseMaybeAssignAllowIn();
      this.expect(types$1.colon);
      node.alternate = this.parseMaybeAssign();
      return this.finishNode(node, "ConditionalExpression");
    }

    return expr;
  }

  parseExprOps(refExpressionErrors) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const potentialArrowAt = this.state.potentialArrowAt;
    const expr = this.parseMaybeUnary(refExpressionErrors);

    if (this.shouldExitDescending(expr, potentialArrowAt)) {
      return expr;
    }

    return this.parseExprOp(expr, startPos, startLoc, -1);
  }

  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {
    let prec = this.state.type.binop;

    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {
      if (prec > minPrec) {
        const op = this.state.type;

        if (op === types$1.pipeline) {
          this.expectPlugin("pipelineOperator");

          if (this.state.inFSharpPipelineDirectBody) {
            return left;
          }

          this.state.inPipeline = true;
          this.checkPipelineAtInfixOperator(left, leftStartPos);
        }

        const node = this.startNodeAt(leftStartPos, leftStartLoc);
        node.left = left;
        node.operator = this.state.value;
        const logical = op === types$1.logicalOR || op === types$1.logicalAND;
        const coalesce = op === types$1.nullishCoalescing;

        if (coalesce) {
          prec = types$1.logicalAND.binop;
        }

        this.next();

        if (op === types$1.pipeline && this.getPluginOption("pipelineOperator", "proposal") === "minimal") {
          if (this.match(types$1.name) && this.state.value === "await" && this.prodParam.hasAwait) {
            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);
          }
        }

        node.right = this.parseExprOpRightExpr(op, prec);
        this.finishNode(node, logical || coalesce ? "LogicalExpression" : "BinaryExpression");
        const nextOp = this.state.type;

        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {
          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);
        }

        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);
      }
    }

    return left;
  }

  parseExprOpRightExpr(op, prec) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;

    switch (op) {
      case types$1.pipeline:
        switch (this.getPluginOption("pipelineOperator", "proposal")) {
          case "smart":
            return this.withTopicPermittingContext(() => {
              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);
            });

          case "fsharp":
            return this.withSoloAwaitPermittingContext(() => {
              return this.parseFSharpPipelineBody(prec);
            });
        }

      default:
        return this.parseExprOpBaseRightExpr(op, prec);
    }
  }

  parseExprOpBaseRightExpr(op, prec) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);
  }

  checkExponentialAfterUnary(node) {
    if (this.match(types$1.exponent)) {
      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);
    }
  }

  parseMaybeUnary(refExpressionErrors, sawUnary) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const isAwait = this.isContextual("await");

    if (isAwait && this.isAwaitAllowed()) {
      this.next();
      const expr = this.parseAwait(startPos, startLoc);
      if (!sawUnary) this.checkExponentialAfterUnary(expr);
      return expr;
    }

    if (this.isContextual("module") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {
      return this.parseModuleExpression();
    }

    const update = this.match(types$1.incDec);
    const node = this.startNode();

    if (this.state.type.prefix) {
      node.operator = this.state.value;
      node.prefix = true;

      if (this.match(types$1._throw)) {
        this.expectPlugin("throwExpressions");
      }

      const isDelete = this.match(types$1._delete);
      this.next();
      node.argument = this.parseMaybeUnary(null, true);
      this.checkExpressionErrors(refExpressionErrors, true);

      if (this.state.strict && isDelete) {
        const arg = node.argument;

        if (arg.type === "Identifier") {
          this.raise(node.start, ErrorMessages.StrictDelete);
        } else if (this.hasPropertyAsPrivateName(arg)) {
          this.raise(node.start, ErrorMessages.DeletePrivateField);
        }
      }

      if (!update) {
        if (!sawUnary) this.checkExponentialAfterUnary(node);
        return this.finishNode(node, "UnaryExpression");
      }
    }

    const expr = this.parseUpdate(node, update, refExpressionErrors);

    if (isAwait) {
      const startsExpr = this.hasPlugin("v8intrinsic") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);

      if (startsExpr && !this.isAmbiguousAwait()) {
        this.raiseOverwrite(startPos, this.hasPlugin("topLevelAwait") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);
        return this.parseAwait(startPos, startLoc);
      }
    }

    return expr;
  }

  parseUpdate(node, update, refExpressionErrors) {
    if (update) {
      this.checkLVal(node.argument, "prefix operation");
      return this.finishNode(node, "UpdateExpression");
    }

    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    let expr = this.parseExprSubscripts(refExpressionErrors);
    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;

    while (this.state.type.postfix && !this.canInsertSemicolon()) {
      const node = this.startNodeAt(startPos, startLoc);
      node.operator = this.state.value;
      node.prefix = false;
      node.argument = expr;
      this.checkLVal(expr, "postfix operation");
      this.next();
      expr = this.finishNode(node, "UpdateExpression");
    }

    return expr;
  }

  parseExprSubscripts(refExpressionErrors) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    const potentialArrowAt = this.state.potentialArrowAt;
    const expr = this.parseExprAtom(refExpressionErrors);

    if (this.shouldExitDescending(expr, potentialArrowAt)) {
      return expr;
    }

    return this.parseSubscripts(expr, startPos, startLoc);
  }

  parseSubscripts(base, startPos, startLoc, noCalls) {
    const state = {
      optionalChainMember: false,
      maybeAsyncArrow: this.atPossibleAsyncArrow(base),
      stop: false
    };

    do {
      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);
      state.maybeAsyncArrow = false;
    } while (!state.stop);

    return base;
  }

  parseSubscript(base, startPos, startLoc, noCalls, state) {
    if (!noCalls && this.eat(types$1.doubleColon)) {
      return this.parseBind(base, startPos, startLoc, noCalls, state);
    } else if (this.match(types$1.backQuote)) {
      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);
    }

    let optional = false;

    if (this.match(types$1.questionDot)) {
      if (noCalls && this.lookaheadCharCode() === 40) {
        state.stop = true;
        return base;
      }

      state.optionalChainMember = optional = true;
      this.next();
    }

    if (!noCalls && this.match(types$1.parenL)) {
      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);
    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {
      return this.parseMember(base, startPos, startLoc, state, optional);
    } else {
      state.stop = true;
      return base;
    }
  }

  parseMember(base, startPos, startLoc, state, optional) {
    const node = this.startNodeAt(startPos, startLoc);
    const computed = this.eat(types$1.bracketL);
    node.object = base;
    node.computed = computed;
    const privateName = !computed && this.match(types$1.privateName) && this.state.value;
    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);

    if (privateName !== false) {
      if (node.object.type === "Super") {
        this.raise(startPos, ErrorMessages.SuperPrivateField);
      }

      this.classScope.usePrivateName(privateName, property.start);
    }

    node.property = property;

    if (computed) {
      this.expect(types$1.bracketR);
    }

    if (state.optionalChainMember) {
      node.optional = optional;
      return this.finishNode(node, "OptionalMemberExpression");
    } else {
      return this.finishNode(node, "MemberExpression");
    }
  }

  parseBind(base, startPos, startLoc, noCalls, state) {
    const node = this.startNodeAt(startPos, startLoc);
    node.object = base;
    node.callee = this.parseNoCallExpr();
    state.stop = true;
    return this.parseSubscripts(this.finishNode(node, "BindExpression"), startPos, startLoc, noCalls);
  }

  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {
    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;
    this.state.maybeInArrowParameters = true;
    this.next();
    let node = this.startNodeAt(startPos, startLoc);
    node.callee = base;

    if (state.maybeAsyncArrow) {
      this.expressionScope.enter(newAsyncArrowScope());
    }

    if (state.optionalChainMember) {
      node.optional = optional;
    }

    if (optional) {
      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);
    } else {
      node.arguments = this.parseCallExpressionArguments(types$1.parenR, state.maybeAsyncArrow, base.type === "Import", base.type !== "Super", node);
    }

    this.finishCallExpression(node, state.optionalChainMember);

    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {
      state.stop = true;
      this.expressionScope.validateAsPattern();
      this.expressionScope.exit();
      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);
    } else {
      if (state.maybeAsyncArrow) {
        this.expressionScope.exit();
      }

      this.toReferencedArguments(node);
    }

    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;
    return node;
  }

  toReferencedArguments(node, isParenthesizedExpr) {
    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);
  }

  parseTaggedTemplateExpression(base, startPos, startLoc, state) {
    const node = this.startNodeAt(startPos, startLoc);
    node.tag = base;
    node.quasi = this.parseTemplate(true);

    if (state.optionalChainMember) {
      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);
    }

    return this.finishNode(node, "TaggedTemplateExpression");
  }

  atPossibleAsyncArrow(base) {
    return base.type === "Identifier" && base.name === "async" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;
  }

  finishCallExpression(node, optional) {
    if (node.callee.type === "Import") {
      if (node.arguments.length === 2) {
        {
          if (!this.hasPlugin("moduleAttributes")) {
            this.expectPlugin("importAssertions");
          }
        }
      }

      if (node.arguments.length === 0 || node.arguments.length > 2) {
        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin("importAssertions") || this.hasPlugin("moduleAttributes") ? "one or two arguments" : "one argument");
      } else {
        for (const arg of node.arguments) {
          if (arg.type === "SpreadElement") {
            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);
          }
        }
      }
    }

    return this.finishNode(node, optional ? "OptionalCallExpression" : "CallExpression");
  }

  parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {
    const elts = [];
    let first = true;
    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;
    this.state.inFSharpPipelineDirectBody = false;

    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types$1.comma);

        if (this.match(close)) {
          if (dynamicImport && !this.hasPlugin("importAssertions") && !this.hasPlugin("moduleAttributes")) {
            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);
          }

          if (nodeForExtra) {
            this.addExtra(nodeForExtra, "trailingComma", this.state.lastTokStart);
          }

          this.next();
          break;
        }
      }

      elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {
        start: 0
      } : undefined, allowPlaceholder));
    }

    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;
    return elts;
  }

  shouldParseAsyncArrow() {
    return this.match(types$1.arrow) && !this.canInsertSemicolon();
  }

  parseAsyncArrowFromCallExpression(node, call) {
    var _call$extra;

    this.expect(types$1.arrow);
    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);
    return node;
  }

  parseNoCallExpr() {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);
  }

  parseExprAtom(refExpressionErrors) {
    if (this.state.type === types$1.slash) this.readRegexp();
    const canBeArrow = this.state.potentialArrowAt === this.state.start;
    let node;

    switch (this.state.type) {
      case types$1._super:
        return this.parseSuper();

      case types$1._import:
        node = this.startNode();
        this.next();

        if (this.match(types$1.dot)) {
          return this.parseImportMetaProperty(node);
        }

        if (!this.match(types$1.parenL)) {
          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);
        }

        return this.finishNode(node, "Import");

      case types$1._this:
        node = this.startNode();
        this.next();
        return this.finishNode(node, "ThisExpression");

      case types$1.name:
        {
          const containsEsc = this.state.containsEsc;
          const id = this.parseIdentifier();

          if (!containsEsc && id.name === "async" && !this.canInsertSemicolon()) {
            if (this.match(types$1._function)) {
              const last = this.state.context.length - 1;

              if (this.state.context[last] !== types.functionStatement) {
                throw new Error("Internal error");
              }

              this.state.context[last] = types.functionExpression;
              this.next();
              return this.parseFunction(this.startNodeAtNode(id), undefined, true);
            } else if (this.match(types$1.name)) {
              if (this.lookaheadCharCode() === 61) {
                return this.parseAsyncArrowUnaryFunction(id);
              } else {
                return id;
              }
            } else if (this.match(types$1._do)) {
              return this.parseDo(true);
            }
          }

          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {
            this.next();
            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);
          }

          return id;
        }

      case types$1._do:
        {
          return this.parseDo(false);
        }

      case types$1.regexp:
        {
          return this.parseRegExpLiteral(this.state.value);
        }

      case types$1.num:
        return this.parseNumericLiteral(this.state.value);

      case types$1.bigint:
        return this.parseBigIntLiteral(this.state.value);

      case types$1.decimal:
        return this.parseDecimalLiteral(this.state.value);

      case types$1.string:
        return this.parseStringLiteral(this.state.value);

      case types$1._null:
        return this.parseNullLiteral();

      case types$1._true:
        return this.parseBooleanLiteral(true);

      case types$1._false:
        return this.parseBooleanLiteral(false);

      case types$1.parenL:
        return this.parseParenAndDistinguishExpression(canBeArrow);

      case types$1.bracketBarL:
      case types$1.bracketHashL:
        {
          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);
        }

      case types$1.bracketL:
        {
          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);
        }

      case types$1.braceBarL:
      case types$1.braceHashL:
        {
          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);
        }

      case types$1.braceL:
        {
          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);
        }

      case types$1._function:
        return this.parseFunctionOrFunctionSent();

      case types$1.at:
        this.parseDecorators();

      case types$1._class:
        node = this.startNode();
        this.takeDecorators(node);
        return this.parseClass(node, false);

      case types$1._new:
        return this.parseNewOrNewTarget();

      case types$1.backQuote:
        return this.parseTemplate(false);

      case types$1.doubleColon:
        {
          node = this.startNode();
          this.next();
          node.object = null;
          const callee = node.callee = this.parseNoCallExpr();

          if (callee.type === "MemberExpression") {
            return this.finishNode(node, "BindExpression");
          } else {
            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);
          }
        }

      case types$1.privateName:
        {
          const start = this.state.start;
          const value = this.state.value;
          node = this.parsePrivateName();

          if (this.match(types$1._in)) {
            this.expectPlugin("privateIn");
            this.classScope.usePrivateName(value, node.start);
          } else if (this.hasPlugin("privateIn")) {
            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);
          } else {
            throw this.unexpected(start);
          }

          return node;
        }

      case types$1.hash:
        {
          if (this.state.inPipeline) {
            node = this.startNode();

            if (this.getPluginOption("pipelineOperator", "proposal") !== "smart") {
              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);
            }

            this.next();

            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {
              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);
            }

            this.registerTopicReference();
            return this.finishNode(node, "PipelinePrimaryTopicReference");
          }
        }

      case types$1.relational:
        {
          if (this.state.value === "<") {
            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());

            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {
                this.expectOnePlugin(["jsx", "flow", "typescript"]);
              }
          }
        }

      default:
        throw this.unexpected();
    }
  }

  parseAsyncArrowUnaryFunction(id) {
    const node = this.startNodeAtNode(id);
    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));
    const params = [this.parseIdentifier()];
    this.prodParam.exit();

    if (this.hasPrecedingLineBreak()) {
      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);
    }

    this.expect(types$1.arrow);
    this.parseArrowExpression(node, params, true);
    return node;
  }

  parseDo(isAsync) {
    this.expectPlugin("doExpressions");

    if (isAsync) {
      this.expectPlugin("asyncDoExpressions");
    }

    const node = this.startNode();
    node.async = isAsync;
    this.next();
    const oldLabels = this.state.labels;
    this.state.labels = [];

    if (isAsync) {
      this.prodParam.enter(PARAM_AWAIT);
      node.body = this.parseBlock();
      this.prodParam.exit();
    } else {
      node.body = this.parseBlock();
    }

    this.state.labels = oldLabels;
    return this.finishNode(node, "DoExpression");
  }

  parseSuper() {
    const node = this.startNode();
    this.next();

    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {
      this.raise(node.start, ErrorMessages.SuperNotAllowed);
    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {
      this.raise(node.start, ErrorMessages.UnexpectedSuper);
    }

    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {
      this.raise(node.start, ErrorMessages.UnsupportedSuper);
    }

    return this.finishNode(node, "Super");
  }

  parseMaybePrivateName(isPrivateNameAllowed) {
    const isPrivate = this.match(types$1.privateName);

    if (isPrivate) {
      if (!isPrivateNameAllowed) {
        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);
      }

      return this.parsePrivateName();
    } else {
      return this.parseIdentifier(true);
    }
  }

  parsePrivateName() {
    const node = this.startNode();
    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));
    const name = this.state.value;
    this.next();
    node.id = this.createIdentifier(id, name);
    return this.finishNode(node, "PrivateName");
  }

  parseFunctionOrFunctionSent() {
    const node = this.startNode();
    this.next();

    if (this.prodParam.hasYield && this.match(types$1.dot)) {
      const meta = this.createIdentifier(this.startNodeAtNode(node), "function");
      this.next();
      return this.parseMetaProperty(node, meta, "sent");
    }

    return this.parseFunction(node);
  }

  parseMetaProperty(node, meta, propertyName) {
    node.meta = meta;

    if (meta.name === "function" && propertyName === "sent") {
      if (this.isContextual(propertyName)) {
        this.expectPlugin("functionSent");
      } else if (!this.hasPlugin("functionSent")) {
        this.unexpected();
      }
    }

    const containsEsc = this.state.containsEsc;
    node.property = this.parseIdentifier(true);

    if (node.property.name !== propertyName || containsEsc) {
      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);
    }

    return this.finishNode(node, "MetaProperty");
  }

  parseImportMetaProperty(node) {
    const id = this.createIdentifier(this.startNodeAtNode(node), "import");
    this.next();

    if (this.isContextual("meta")) {
      if (!this.inModule) {
        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);
      }

      this.sawUnambiguousESM = true;
    }

    return this.parseMetaProperty(node, id, "meta");
  }

  parseLiteralAtNode(value, type, node) {
    this.addExtra(node, "rawValue", value);
    this.addExtra(node, "raw", this.input.slice(node.start, this.state.end));
    node.value = value;
    this.next();
    return this.finishNode(node, type);
  }

  parseLiteral(value, type) {
    const node = this.startNode();
    return this.parseLiteralAtNode(value, type, node);
  }

  parseStringLiteral(value) {
    return this.parseLiteral(value, "StringLiteral");
  }

  parseNumericLiteral(value) {
    return this.parseLiteral(value, "NumericLiteral");
  }

  parseBigIntLiteral(value) {
    return this.parseLiteral(value, "BigIntLiteral");
  }

  parseDecimalLiteral(value) {
    return this.parseLiteral(value, "DecimalLiteral");
  }

  parseRegExpLiteral(value) {
    const node = this.parseLiteral(value.value, "RegExpLiteral");
    node.pattern = value.pattern;
    node.flags = value.flags;
    return node;
  }

  parseBooleanLiteral(value) {
    const node = this.startNode();
    node.value = value;
    this.next();
    return this.finishNode(node, "BooleanLiteral");
  }

  parseNullLiteral() {
    const node = this.startNode();
    this.next();
    return this.finishNode(node, "NullLiteral");
  }

  parseParenAndDistinguishExpression(canBeArrow) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    let val;
    this.next();
    this.expressionScope.enter(newArrowHeadScope());
    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;
    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;
    this.state.maybeInArrowParameters = true;
    this.state.inFSharpPipelineDirectBody = false;
    const innerStartPos = this.state.start;
    const innerStartLoc = this.state.startLoc;
    const exprList = [];
    const refExpressionErrors = new ExpressionErrors();
    const refNeedsArrowPos = {
      start: 0
    };
    let first = true;
    let spreadStart;
    let optionalCommaStart;

    while (!this.match(types$1.parenR)) {
      if (first) {
        first = false;
      } else {
        this.expect(types$1.comma, refNeedsArrowPos.start || null);

        if (this.match(types$1.parenR)) {
          optionalCommaStart = this.state.start;
          break;
        }
      }

      if (this.match(types$1.ellipsis)) {
        const spreadNodeStartPos = this.state.start;
        const spreadNodeStartLoc = this.state.startLoc;
        spreadStart = this.state.start;
        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));
        this.checkCommaAfterRest(41);
        break;
      } else {
        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));
      }
    }

    const innerEndPos = this.state.lastTokEnd;
    const innerEndLoc = this.state.lastTokEndLoc;
    this.expect(types$1.parenR);
    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;
    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;
    let arrowNode = this.startNodeAt(startPos, startLoc);

    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {
      this.expressionScope.validateAsPattern();
      this.expressionScope.exit();
      this.parseArrowExpression(arrowNode, exprList, false);
      return arrowNode;
    }

    this.expressionScope.exit();

    if (!exprList.length) {
      this.unexpected(this.state.lastTokStart);
    }

    if (optionalCommaStart) this.unexpected(optionalCommaStart);
    if (spreadStart) this.unexpected(spreadStart);
    this.checkExpressionErrors(refExpressionErrors, true);
    if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);
    this.toReferencedListDeep(exprList, true);

    if (exprList.length > 1) {
      val = this.startNodeAt(innerStartPos, innerStartLoc);
      val.expressions = exprList;
      this.finishNodeAt(val, "SequenceExpression", innerEndPos, innerEndLoc);
    } else {
      val = exprList[0];
    }

    if (!this.options.createParenthesizedExpressions) {
      this.addExtra(val, "parenthesized", true);
      this.addExtra(val, "parenStart", startPos);
      return val;
    }

    const parenExpression = this.startNodeAt(startPos, startLoc);
    parenExpression.expression = val;
    this.finishNode(parenExpression, "ParenthesizedExpression");
    return parenExpression;
  }

  shouldParseArrow() {
    return !this.canInsertSemicolon();
  }

  parseArrow(node) {
    if (this.eat(types$1.arrow)) {
      return node;
    }
  }

  parseParenItem(node, startPos, startLoc) {
    return node;
  }

  parseNewOrNewTarget() {
    const node = this.startNode();
    this.next();

    if (this.match(types$1.dot)) {
      const meta = this.createIdentifier(this.startNodeAtNode(node), "new");
      this.next();
      const metaProp = this.parseMetaProperty(node, meta, "target");

      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {
        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);
      }

      return metaProp;
    }

    return this.parseNew(node);
  }

  parseNew(node) {
    node.callee = this.parseNoCallExpr();

    if (node.callee.type === "Import") {
      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);
    } else if (this.isOptionalChain(node.callee)) {
      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);
    } else if (this.eat(types$1.questionDot)) {
      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);
    }

    this.parseNewArguments(node);
    return this.finishNode(node, "NewExpression");
  }

  parseNewArguments(node) {
    if (this.eat(types$1.parenL)) {
      const args = this.parseExprList(types$1.parenR);
      this.toReferencedList(args);
      node.arguments = args;
    } else {
      node.arguments = [];
    }
  }

  parseTemplateElement(isTagged) {
    const elem = this.startNode();

    if (this.state.value === null) {
      if (!isTagged) {
        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);
      }
    }

    elem.value = {
      raw: this.input.slice(this.state.start, this.state.end).replace(/\r\n?/g, "\n"),
      cooked: this.state.value
    };
    this.next();
    elem.tail = this.match(types$1.backQuote);
    return this.finishNode(elem, "TemplateElement");
  }

  parseTemplate(isTagged) {
    const node = this.startNode();
    this.next();
    node.expressions = [];
    let curElt = this.parseTemplateElement(isTagged);
    node.quasis = [curElt];

    while (!curElt.tail) {
      this.expect(types$1.dollarBraceL);
      node.expressions.push(this.parseTemplateSubstitution());
      this.expect(types$1.braceR);
      node.quasis.push(curElt = this.parseTemplateElement(isTagged));
    }

    this.next();
    return this.finishNode(node, "TemplateLiteral");
  }

  parseTemplateSubstitution() {
    return this.parseExpression();
  }

  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {
    if (isRecord) {
      this.expectPlugin("recordAndTuple");
    }

    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;
    this.state.inFSharpPipelineDirectBody = false;
    const propHash = Object.create(null);
    let first = true;
    const node = this.startNode();
    node.properties = [];
    this.next();

    while (!this.match(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types$1.comma);

        if (this.match(close)) {
          this.addExtra(node, "trailingComma", this.state.lastTokStart);
          break;
        }
      }

      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);

      if (!isPattern) {
        this.checkProto(prop, isRecord, propHash, refExpressionErrors);
      }

      if (isRecord && !this.isObjectProperty(prop) && prop.type !== "SpreadElement") {
        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);
      }

      if (prop.shorthand) {
        this.addExtra(prop, "shorthand", true);
      }

      node.properties.push(prop);
    }

    this.state.exprAllowed = false;
    this.next();
    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;
    let type = "ObjectExpression";

    if (isPattern) {
      type = "ObjectPattern";
    } else if (isRecord) {
      type = "RecordExpression";
    }

    return this.finishNode(node, type);
  }

  maybeAsyncOrAccessorProp(prop) {
    return !prop.computed && prop.key.type === "Identifier" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));
  }

  parsePropertyDefinition(isPattern, refExpressionErrors) {
    let decorators = [];

    if (this.match(types$1.at)) {
      if (this.hasPlugin("decorators")) {
        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);
      }

      while (this.match(types$1.at)) {
        decorators.push(this.parseDecorator());
      }
    }

    const prop = this.startNode();
    let isGenerator = false;
    let isAsync = false;
    let isAccessor = false;
    let startPos;
    let startLoc;

    if (this.match(types$1.ellipsis)) {
      if (decorators.length) this.unexpected();

      if (isPattern) {
        this.next();
        prop.argument = this.parseIdentifier();
        this.checkCommaAfterRest(125);
        return this.finishNode(prop, "RestElement");
      }

      return this.parseSpread();
    }

    if (decorators.length) {
      prop.decorators = decorators;
      decorators = [];
    }

    prop.method = false;

    if (isPattern || refExpressionErrors) {
      startPos = this.state.start;
      startLoc = this.state.startLoc;
    }

    if (!isPattern) {
      isGenerator = this.eat(types$1.star);
    }

    const containsEsc = this.state.containsEsc;
    const key = this.parsePropertyName(prop, false);

    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {
      const keyName = key.name;

      if (keyName === "async" && !this.hasPrecedingLineBreak()) {
        isAsync = true;
        isGenerator = this.eat(types$1.star);
        this.parsePropertyName(prop, false);
      }

      if (keyName === "get" || keyName === "set") {
        isAccessor = true;
        prop.kind = keyName;

        if (this.match(types$1.star)) {
          isGenerator = true;
          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);
          this.next();
        }

        this.parsePropertyName(prop, false);
      }
    }

    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);
    return prop;
  }

  getGetterSetterExpectedParamCount(method) {
    return method.kind === "get" ? 0 : 1;
  }

  getObjectOrClassMethodParams(method) {
    return method.params;
  }

  checkGetterSetterParams(method) {
    var _params;

    const paramCount = this.getGetterSetterExpectedParamCount(method);
    const params = this.getObjectOrClassMethodParams(method);
    const start = method.start;

    if (params.length !== paramCount) {
      if (method.kind === "get") {
        this.raise(start, ErrorMessages.BadGetterArity);
      } else {
        this.raise(start, ErrorMessages.BadSetterArity);
      }
    }

    if (method.kind === "set" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === "RestElement") {
      this.raise(start, ErrorMessages.BadSetterRestParameter);
    }
  }

  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {
    if (isAccessor) {
      this.parseMethod(prop, isGenerator, false, false, false, "ObjectMethod");
      this.checkGetterSetterParams(prop);
      return prop;
    }

    if (isAsync || isGenerator || this.match(types$1.parenL)) {
      if (isPattern) this.unexpected();
      prop.kind = "method";
      prop.method = true;
      return this.parseMethod(prop, isGenerator, isAsync, false, false, "ObjectMethod");
    }
  }

  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {
    prop.shorthand = false;

    if (this.eat(types$1.colon)) {
      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);
      return this.finishNode(prop, "ObjectProperty");
    }

    if (!prop.computed && prop.key.type === "Identifier") {
      this.checkReservedWord(prop.key.name, prop.key.start, true, false);

      if (isPattern) {
        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
      } else if (this.match(types$1.eq) && refExpressionErrors) {
        if (refExpressionErrors.shorthandAssign === -1) {
          refExpressionErrors.shorthandAssign = this.state.start;
        }

        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());
      } else {
        prop.value = prop.key.__clone();
      }

      prop.shorthand = true;
      return this.finishNode(prop, "ObjectProperty");
    }
  }

  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {
    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);
    if (!node) this.unexpected();
    return node;
  }

  parsePropertyName(prop, isPrivateNameAllowed) {
    if (this.eat(types$1.bracketL)) {
      prop.computed = true;
      prop.key = this.parseMaybeAssignAllowIn();
      this.expect(types$1.bracketR);
    } else {
      const oldInPropertyName = this.state.inPropertyName;
      this.state.inPropertyName = true;
      const type = this.state.type;
      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);

      if (type !== types$1.privateName) {
        prop.computed = false;
      }

      this.state.inPropertyName = oldInPropertyName;
    }

    return prop.key;
  }

  initFunction(node, isAsync) {
    node.id = null;
    node.generator = false;
    node.async = !!isAsync;
  }

  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {
    this.initFunction(node, isAsync);
    node.generator = !!isGenerator;
    const allowModifiers = isConstructor;
    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));
    this.prodParam.enter(functionFlags(isAsync, node.generator));
    this.parseFunctionParams(node, allowModifiers);
    this.parseFunctionBodyAndFinish(node, type, true);
    this.prodParam.exit();
    this.scope.exit();
    return node;
  }

  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {
    if (isTuple) {
      this.expectPlugin("recordAndTuple");
    }

    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;
    this.state.inFSharpPipelineDirectBody = false;
    const node = this.startNode();
    this.next();
    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);
    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;
    return this.finishNode(node, isTuple ? "TupleExpression" : "ArrayExpression");
  }

  parseArrowExpression(node, params, isAsync, trailingCommaPos) {
    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);
    let flags = functionFlags(isAsync, false);

    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {
      flags |= PARAM_IN;
    }

    this.prodParam.enter(flags);
    this.initFunction(node, isAsync);
    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;

    if (params) {
      this.state.maybeInArrowParameters = true;
      this.setArrowFunctionParameters(node, params, trailingCommaPos);
    }

    this.state.maybeInArrowParameters = false;
    this.parseFunctionBody(node, true);
    this.prodParam.exit();
    this.scope.exit();
    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;
    return this.finishNode(node, "ArrowFunctionExpression");
  }

  setArrowFunctionParameters(node, params, trailingCommaPos) {
    node.params = this.toAssignableList(params, trailingCommaPos, false);
  }

  parseFunctionBodyAndFinish(node, type, isMethod = false) {
    this.parseFunctionBody(node, false, isMethod);
    this.finishNode(node, type);
  }

  parseFunctionBody(node, allowExpression, isMethod = false) {
    const isExpression = allowExpression && !this.match(types$1.braceL);
    this.expressionScope.enter(newExpressionScope());

    if (isExpression) {
      node.body = this.parseMaybeAssign();
      this.checkParams(node, false, allowExpression, false);
    } else {
      const oldStrict = this.state.strict;
      const oldLabels = this.state.labels;
      this.state.labels = [];
      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);
      node.body = this.parseBlock(true, false, hasStrictModeDirective => {
        const nonSimple = !this.isSimpleParamList(node.params);

        if (hasStrictModeDirective && nonSimple) {
          const errorPos = (node.kind === "method" || node.kind === "constructor") && !!node.key ? node.key.end : node.start;
          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);
        }

        const strictModeChanged = !oldStrict && this.state.strict;
        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);

        if (this.state.strict && node.id) {
          this.checkLVal(node.id, "function name", BIND_OUTSIDE, undefined, undefined, strictModeChanged);
        }
      });
      this.prodParam.exit();
      this.expressionScope.exit();
      this.state.labels = oldLabels;
    }
  }

  isSimpleParamList(params) {
    for (let i = 0, len = params.length; i < len; i++) {
      if (params[i].type !== "Identifier") return false;
    }

    return true;
  }

  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {
    const checkClashes = new Set();

    for (const param of node.params) {
      this.checkLVal(param, "function parameter list", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);
    }
  }

  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {
    const elts = [];
    let first = true;

    while (!this.eat(close)) {
      if (first) {
        first = false;
      } else {
        this.expect(types$1.comma);

        if (this.match(close)) {
          if (nodeForExtra) {
            this.addExtra(nodeForExtra, "trailingComma", this.state.lastTokStart);
          }

          this.next();
          break;
        }
      }

      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));
    }

    return elts;
  }

  parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {
    let elt;

    if (this.match(types$1.comma)) {
      if (!allowEmpty) {
        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, ",");
      }

      elt = null;
    } else if (this.match(types$1.ellipsis)) {
      const spreadNodeStartPos = this.state.start;
      const spreadNodeStartLoc = this.state.startLoc;
      elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);
    } else if (this.match(types$1.question)) {
      this.expectPlugin("partialApplication");

      if (!allowPlaceholder) {
        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);
      }

      const node = this.startNode();
      this.next();
      elt = this.finishNode(node, "ArgumentPlaceholder");
    } else {
      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);
    }

    return elt;
  }

  parseIdentifier(liberal) {
    const node = this.startNode();
    const name = this.parseIdentifierName(node.start, liberal);
    return this.createIdentifier(node, name);
  }

  createIdentifier(node, name) {
    node.name = name;
    node.loc.identifierName = name;
    return this.finishNode(node, "Identifier");
  }

  parseIdentifierName(pos, liberal) {
    let name;
    const {
      start,
      type
    } = this.state;

    if (type === types$1.name) {
      name = this.state.value;
    } else if (type.keyword) {
      name = type.keyword;
      const curContext = this.curContext();

      if ((type === types$1._class || type === types$1._function) && (curContext === types.functionStatement || curContext === types.functionExpression)) {
        this.state.context.pop();
      }
    } else {
      throw this.unexpected();
    }

    if (liberal) {
      this.state.type = types$1.name;
    } else {
      this.checkReservedWord(name, start, !!type.keyword, false);
    }

    this.next();
    return name;
  }

  checkReservedWord(word, startLoc, checkKeywords, isBinding) {
    if (this.prodParam.hasYield && word === "yield") {
      this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);
      return;
    }

    if (word === "await") {
      if (this.prodParam.hasAwait) {
        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);
        return;
      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {
        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);
        return;
      } else {
        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);
      }
    }

    if (this.scope.inClass && !this.scope.inNonArrowFunction && word === "arguments") {
      this.raise(startLoc, ErrorMessages.ArgumentsInClass);
      return;
    }

    if (checkKeywords && isKeyword(word)) {
      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);
      return;
    }

    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;

    if (reservedTest(word, this.inModule)) {
      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);
    }
  }

  isAwaitAllowed() {
    if (this.prodParam.hasAwait) return true;

    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {
      return true;
    }

    return false;
  }

  parseAwait(startPos, startLoc) {
    const node = this.startNodeAt(startPos, startLoc);
    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);

    if (this.eat(types$1.star)) {
      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);
    }

    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {
      if (this.isAmbiguousAwait()) {
        this.ambiguousScriptDifferentAst = true;
      } else {
        this.sawUnambiguousESM = true;
      }
    }

    if (!this.state.soloAwait) {
      node.argument = this.parseMaybeUnary(null, true);
    }

    return this.finishNode(node, "AwaitExpression");
  }

  isAmbiguousAwait() {
    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin("v8intrinsic") && this.match(types$1.modulo);
  }

  parseYield() {
    const node = this.startNode();
    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);
    this.next();

    if (this.match(types$1.semi) || !this.match(types$1.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {
      node.delegate = false;
      node.argument = null;
    } else {
      node.delegate = this.eat(types$1.star);
      node.argument = this.parseMaybeAssign();
    }

    return this.finishNode(node, "YieldExpression");
  }

  checkPipelineAtInfixOperator(left, leftStartPos) {
    if (this.getPluginOption("pipelineOperator", "proposal") === "smart") {
      if (left.type === "SequenceExpression") {
        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);
      }
    }
  }

  parseSmartPipelineBody(childExpression, startPos, startLoc) {
    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);
    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);
  }

  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {
    if (this.match(types$1.arrow)) {
      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);
    } else if (childExpression.type === "SequenceExpression") {
      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);
    }
  }

  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {
    const bodyNode = this.startNodeAt(startPos, startLoc);
    const isSimpleReference = this.isSimpleReference(childExpression);

    if (isSimpleReference) {
      bodyNode.callee = childExpression;
    } else {
      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {
        this.raise(startPos, ErrorMessages.PipelineTopicUnused);
      }

      bodyNode.expression = childExpression;
    }

    return this.finishNode(bodyNode, isSimpleReference ? "PipelineBareFunction" : "PipelineTopicExpression");
  }

  isSimpleReference(expression) {
    switch (expression.type) {
      case "MemberExpression":
        return !expression.computed && this.isSimpleReference(expression.object);

      case "Identifier":
        return true;

      default:
        return false;
    }
  }

  withTopicPermittingContext(callback) {
    const outerContextTopicState = this.state.topicContext;
    this.state.topicContext = {
      maxNumOfResolvableTopics: 1,
      maxTopicIndex: null
    };

    try {
      return callback();
    } finally {
      this.state.topicContext = outerContextTopicState;
    }
  }

  withTopicForbiddingContext(callback) {
    const outerContextTopicState = this.state.topicContext;
    this.state.topicContext = {
      maxNumOfResolvableTopics: 0,
      maxTopicIndex: null
    };

    try {
      return callback();
    } finally {
      this.state.topicContext = outerContextTopicState;
    }
  }

  withSoloAwaitPermittingContext(callback) {
    const outerContextSoloAwaitState = this.state.soloAwait;
    this.state.soloAwait = true;

    try {
      return callback();
    } finally {
      this.state.soloAwait = outerContextSoloAwaitState;
    }
  }

  allowInAnd(callback) {
    const flags = this.prodParam.currentFlags();
    const prodParamToSet = PARAM_IN & ~flags;

    if (prodParamToSet) {
      this.prodParam.enter(flags | PARAM_IN);

      try {
        return callback();
      } finally {
        this.prodParam.exit();
      }
    }

    return callback();
  }

  disallowInAnd(callback) {
    const flags = this.prodParam.currentFlags();
    const prodParamToClear = PARAM_IN & flags;

    if (prodParamToClear) {
      this.prodParam.enter(flags & ~PARAM_IN);

      try {
        return callback();
      } finally {
        this.prodParam.exit();
      }
    }

    return callback();
  }

  registerTopicReference() {
    this.state.topicContext.maxTopicIndex = 0;
  }

  primaryTopicReferenceIsAllowedInCurrentTopicContext() {
    return this.state.topicContext.maxNumOfResolvableTopics >= 1;
  }

  topicReferenceWasUsedInCurrentTopicContext() {
    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;
  }

  parseFSharpPipelineBody(prec) {
    const startPos = this.state.start;
    const startLoc = this.state.startLoc;
    this.state.potentialArrowAt = this.state.start;
    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;
    this.state.inFSharpPipelineDirectBody = true;
    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);
    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;
    return ret;
  }

  parseModuleExpression() {
    this.expectPlugin("moduleBlocks");
    const node = this.startNode();
    this.next();
    this.eat(types$1.braceL);
    const revertScopes = this.initializeScopes(true);
    this.enterInitialScopes();
    const program = this.startNode();

    try {
      node.body = this.parseProgram(program, types$1.braceR, "module");
    } finally {
      revertScopes();
    }

    this.eat(types$1.braceR);
    return this.finishNode(node, "ModuleExpression");
  }

}

const loopLabel = {
  kind: "loop"
},
      switchLabel = {
  kind: "switch"
};
const FUNC_NO_FLAGS = 0b000,
      FUNC_STATEMENT = 0b001,
      FUNC_HANGING_STATEMENT = 0b010,
      FUNC_NULLABLE_ID = 0b100;
const loneSurrogate = /[\uD800-\uDFFF]/u;
const keywordRelationalOperator = /in(?:stanceof)?/y;

function babel7CompatTokens(tokens) {
  {
    for (let i = 0; i < tokens.length; i++) {
      const token = tokens[i];

      if (token.type === types$1.privateName) {
        const {
          loc,
          start,
          value,
          end
        } = token;
        const hashEndPos = start + 1;
        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);
        tokens.splice(i, 1, new Token({
          type: types$1.hash,
          value: "#",
          start: start,
          end: hashEndPos,
          startLoc: loc.start,
          endLoc: hashEndLoc
        }), new Token({
          type: types$1.name,
          value: value,
          start: hashEndPos,
          end: end,
          startLoc: hashEndLoc,
          endLoc: loc.end
        }));
      }
    }
  }
  return tokens;
}

class StatementParser extends ExpressionParser {
  parseTopLevel(file, program) {
    file.program = this.parseProgram(program);
    file.comments = this.state.comments;
    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);
    return this.finishNode(file, "File");
  }

  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {
    program.sourceType = sourceType;
    program.interpreter = this.parseInterpreterDirective();
    this.parseBlockBody(program, true, true, end);

    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {
      for (const [name] of Array.from(this.scope.undefinedExports)) {
        const pos = this.scope.undefinedExports.get(name);
        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);
      }
    }

    return this.finishNode(program, "Program");
  }

  stmtToDirective(stmt) {
    const expr = stmt.expression;
    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);
    const directive = this.startNodeAt(stmt.start, stmt.loc.start);
    const raw = this.input.slice(expr.start, expr.end);
    const val = directiveLiteral.value = raw.slice(1, -1);
    this.addExtra(directiveLiteral, "raw", raw);
    this.addExtra(directiveLiteral, "rawValue", val);
    directive.value = this.finishNodeAt(directiveLiteral, "DirectiveLiteral", expr.end, expr.loc.end);
    return this.finishNodeAt(directive, "Directive", stmt.end, stmt.loc.end);
  }

  parseInterpreterDirective() {
    if (!this.match(types$1.interpreterDirective)) {
      return null;
    }

    const node = this.startNode();
    node.value = this.state.value;
    this.next();
    return this.finishNode(node, "InterpreterDirective");
  }

  isLet(context) {
    if (!this.isContextual("let")) {
      return false;
    }

    return this.isLetKeyword(context);
  }

  isLetKeyword(context) {
    const next = this.nextTokenStart();
    const nextCh = this.codePointAtPos(next);

    if (nextCh === 92 || nextCh === 91) {
      return true;
    }

    if (context) return false;
    if (nextCh === 123) return true;

    if (isIdentifierStart(nextCh)) {
      keywordRelationalOperator.lastIndex = next;
      const matched = keywordRelationalOperator.exec(this.input);

      if (matched !== null) {
        const endCh = this.codePointAtPos(next + matched[0].length);

        if (!isIdentifierChar(endCh) && endCh !== 92) {
          return false;
        }
      }

      return true;
    }

    return false;
  }

  parseStatement(context, topLevel) {
    if (this.match(types$1.at)) {
      this.parseDecorators(true);
    }

    return this.parseStatementContent(context, topLevel);
  }

  parseStatementContent(context, topLevel) {
    let starttype = this.state.type;
    const node = this.startNode();
    let kind;

    if (this.isLet(context)) {
      starttype = types$1._var;
      kind = "let";
    }

    switch (starttype) {
      case types$1._break:
      case types$1._continue:
        return this.parseBreakContinueStatement(node, starttype.keyword);

      case types$1._debugger:
        return this.parseDebuggerStatement(node);

      case types$1._do:
        return this.parseDoStatement(node);

      case types$1._for:
        return this.parseForStatement(node);

      case types$1._function:
        if (this.lookaheadCharCode() === 46) break;

        if (context) {
          if (this.state.strict) {
            this.raise(this.state.start, ErrorMessages.StrictFunction);
          } else if (context !== "if" && context !== "label") {
            this.raise(this.state.start, ErrorMessages.SloppyFunction);
          }
        }

        return this.parseFunctionStatement(node, false, !context);

      case types$1._class:
        if (context) this.unexpected();
        return this.parseClass(node, true);

      case types$1._if:
        return this.parseIfStatement(node);

      case types$1._return:
        return this.parseReturnStatement(node);

      case types$1._switch:
        return this.parseSwitchStatement(node);

      case types$1._throw:
        return this.parseThrowStatement(node);

      case types$1._try:
        return this.parseTryStatement(node);

      case types$1._const:
      case types$1._var:
        kind = kind || this.state.value;

        if (context && kind !== "var") {
          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);
        }

        return this.parseVarStatement(node, kind);

      case types$1._while:
        return this.parseWhileStatement(node);

      case types$1._with:
        return this.parseWithStatement(node);

      case types$1.braceL:
        return this.parseBlock();

      case types$1.semi:
        return this.parseEmptyStatement(node);

      case types$1._import:
        {
          const nextTokenCharCode = this.lookaheadCharCode();

          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {
              break;
            }
        }

      case types$1._export:
        {
          if (!this.options.allowImportExportEverywhere && !topLevel) {
            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);
          }

          this.next();
          let result;

          if (starttype === types$1._import) {
            result = this.parseImport(node);

            if (result.type === "ImportDeclaration" && (!result.importKind || result.importKind === "value")) {
              this.sawUnambiguousESM = true;
            }
          } else {
            result = this.parseExport(node);

            if (result.type === "ExportNamedDeclaration" && (!result.exportKind || result.exportKind === "value") || result.type === "ExportAllDeclaration" && (!result.exportKind || result.exportKind === "value") || result.type === "ExportDefaultDeclaration") {
              this.sawUnambiguousESM = true;
            }
          }

          this.assertModuleNodeAllowed(node);
          return result;
        }

      default:
        {
          if (this.isAsyncFunction()) {
            if (context) {
              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);
            }

            this.next();
            return this.parseFunctionStatement(node, true, !context);
          }
        }
    }

    const maybeName = this.state.value;
    const expr = this.parseExpression();

    if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon)) {
      return this.parseLabeledStatement(node, maybeName, expr, context);
    } else {
      return this.parseExpressionStatement(node, expr);
    }
  }

  assertModuleNodeAllowed(node) {
    if (!this.options.allowImportExportEverywhere && !this.inModule) {
      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);
    }
  }

  takeDecorators(node) {
    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];

    if (decorators.length) {
      node.decorators = decorators;
      this.resetStartLocationFromNode(node, decorators[0]);
      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];
    }
  }

  canHaveLeadingDecorator() {
    return this.match(types$1._class);
  }

  parseDecorators(allowExport) {
    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];

    while (this.match(types$1.at)) {
      const decorator = this.parseDecorator();
      currentContextDecorators.push(decorator);
    }

    if (this.match(types$1._export)) {
      if (!allowExport) {
        this.unexpected();
      }

      if (this.hasPlugin("decorators") && !this.getPluginOption("decorators", "decoratorsBeforeExport")) {
        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);
      }
    } else if (!this.canHaveLeadingDecorator()) {
      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);
    }
  }

  parseDecorator() {
    this.expectOnePlugin(["decorators-legacy", "decorators"]);
    const node = this.startNode();
    this.next();

    if (this.hasPlugin("decorators")) {
      this.state.decoratorStack.push([]);
      const startPos = this.state.start;
      const startLoc = this.state.startLoc;
      let expr;

      if (this.eat(types$1.parenL)) {
        expr = this.parseExpression();
        this.expect(types$1.parenR);
      } else {
        expr = this.parseIdentifier(false);

        while (this.eat(types$1.dot)) {
          const node = this.startNodeAt(startPos, startLoc);
          node.object = expr;
          node.property = this.parseIdentifier(true);
          node.computed = false;
          expr = this.finishNode(node, "MemberExpression");
        }
      }

      node.expression = this.parseMaybeDecoratorArguments(expr);
      this.state.decoratorStack.pop();
    } else {
      node.expression = this.parseExprSubscripts();
    }

    return this.finishNode(node, "Decorator");
  }

  parseMaybeDecoratorArguments(expr) {
    if (this.eat(types$1.parenL)) {
      const node = this.startNodeAtNode(expr);
      node.callee = expr;
      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);
      this.toReferencedList(node.arguments);
      return this.finishNode(node, "CallExpression");
    }

    return expr;
  }

  parseBreakContinueStatement(node, keyword) {
    const isBreak = keyword === "break";
    this.next();

    if (this.isLineTerminator()) {
      node.label = null;
    } else {
      node.label = this.parseIdentifier();
      this.semicolon();
    }

    this.verifyBreakContinue(node, keyword);
    return this.finishNode(node, isBreak ? "BreakStatement" : "ContinueStatement");
  }

  verifyBreakContinue(node, keyword) {
    const isBreak = keyword === "break";
    let i;

    for (i = 0; i < this.state.labels.length; ++i) {
      const lab = this.state.labels[i];

      if (node.label == null || lab.name === node.label.name) {
        if (lab.kind != null && (isBreak || lab.kind === "loop")) break;
        if (node.label && isBreak) break;
      }
    }

    if (i === this.state.labels.length) {
      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);
    }
  }

  parseDebuggerStatement(node) {
    this.next();
    this.semicolon();
    return this.finishNode(node, "DebuggerStatement");
  }

  parseHeaderExpression() {
    this.expect(types$1.parenL);
    const val = this.parseExpression();
    this.expect(types$1.parenR);
    return val;
  }

  parseDoStatement(node) {
    this.next();
    this.state.labels.push(loopLabel);
    node.body = this.withTopicForbiddingContext(() => this.parseStatement("do"));
    this.state.labels.pop();
    this.expect(types$1._while);
    node.test = this.parseHeaderExpression();
    this.eat(types$1.semi);
    return this.finishNode(node, "DoWhileStatement");
  }

  parseForStatement(node) {
    this.next();
    this.state.labels.push(loopLabel);
    let awaitAt = -1;

    if (this.isAwaitAllowed() && this.eatContextual("await")) {
      awaitAt = this.state.lastTokStart;
    }

    this.scope.enter(SCOPE_OTHER);
    this.expect(types$1.parenL);

    if (this.match(types$1.semi)) {
      if (awaitAt > -1) {
        this.unexpected(awaitAt);
      }

      return this.parseFor(node, null);
    }

    const startsWithLet = this.isContextual("let");
    const isLet = startsWithLet && this.isLetKeyword();

    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {
      const init = this.startNode();
      const kind = isLet ? "let" : this.state.value;
      this.next();
      this.parseVar(init, true, kind);
      this.finishNode(init, "VariableDeclaration");

      if ((this.match(types$1._in) || this.isContextual("of")) && init.declarations.length === 1) {
        return this.parseForIn(node, init, awaitAt);
      }

      if (awaitAt > -1) {
        this.unexpected(awaitAt);
      }

      return this.parseFor(node, init);
    }

    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;
    const refExpressionErrors = new ExpressionErrors();
    const init = this.parseExpression(true, refExpressionErrors);
    const isForOf = this.isContextual("of");

    if (isForOf) {
      if (startsWithLet) {
        this.raise(init.start, ErrorMessages.ForOfLet);
      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === "Identifier" && init.name === "async") {
        this.raise(init.start, ErrorMessages.ForOfAsync);
      }
    }

    if (isForOf || this.match(types$1._in)) {
      this.toAssignable(init, true);
      const description = isForOf ? "for-of statement" : "for-in statement";
      this.checkLVal(init, description);
      return this.parseForIn(node, init, awaitAt);
    } else {
      this.checkExpressionErrors(refExpressionErrors, true);
    }

    if (awaitAt > -1) {
      this.unexpected(awaitAt);
    }

    return this.parseFor(node, init);
  }

  parseFunctionStatement(node, isAsync, declarationPosition) {
    this.next();
    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);
  }

  parseIfStatement(node) {
    this.next();
    node.test = this.parseHeaderExpression();
    node.consequent = this.parseStatement("if");
    node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;
    return this.finishNode(node, "IfStatement");
  }

  parseReturnStatement(node) {
    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {
      this.raise(this.state.start, ErrorMessages.IllegalReturn);
    }

    this.next();

    if (this.isLineTerminator()) {
      node.argument = null;
    } else {
      node.argument = this.parseExpression();
      this.semicolon();
    }

    return this.finishNode(node, "ReturnStatement");
  }

  parseSwitchStatement(node) {
    this.next();
    node.discriminant = this.parseHeaderExpression();
    const cases = node.cases = [];
    this.expect(types$1.braceL);
    this.state.labels.push(switchLabel);
    this.scope.enter(SCOPE_OTHER);
    let cur;

    for (let sawDefault; !this.match(types$1.braceR);) {
      if (this.match(types$1._case) || this.match(types$1._default)) {
        const isCase = this.match(types$1._case);
        if (cur) this.finishNode(cur, "SwitchCase");
        cases.push(cur = this.startNode());
        cur.consequent = [];
        this.next();

        if (isCase) {
          cur.test = this.parseExpression();
        } else {
          if (sawDefault) {
            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);
          }

          sawDefault = true;
          cur.test = null;
        }

        this.expect(types$1.colon);
      } else {
        if (cur) {
          cur.consequent.push(this.parseStatement(null));
        } else {
          this.unexpected();
        }
      }
    }

    this.scope.exit();
    if (cur) this.finishNode(cur, "SwitchCase");
    this.next();
    this.state.labels.pop();
    return this.finishNode(node, "SwitchStatement");
  }

  parseThrowStatement(node) {
    this.next();

    if (this.hasPrecedingLineBreak()) {
      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);
    }

    node.argument = this.parseExpression();
    this.semicolon();
    return this.finishNode(node, "ThrowStatement");
  }

  parseCatchClauseParam() {
    const param = this.parseBindingAtom();
    const simple = param.type === "Identifier";
    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);
    this.checkLVal(param, "catch clause", BIND_LEXICAL);
    return param;
  }

  parseTryStatement(node) {
    this.next();
    node.block = this.parseBlock();
    node.handler = null;

    if (this.match(types$1._catch)) {
      const clause = this.startNode();
      this.next();

      if (this.match(types$1.parenL)) {
        this.expect(types$1.parenL);
        clause.param = this.parseCatchClauseParam();
        this.expect(types$1.parenR);
      } else {
        clause.param = null;
        this.scope.enter(SCOPE_OTHER);
      }

      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));
      this.scope.exit();
      node.handler = this.finishNode(clause, "CatchClause");
    }

    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;

    if (!node.handler && !node.finalizer) {
      this.raise(node.start, ErrorMessages.NoCatchOrFinally);
    }

    return this.finishNode(node, "TryStatement");
  }

  parseVarStatement(node, kind) {
    this.next();
    this.parseVar(node, false, kind);
    this.semicolon();
    return this.finishNode(node, "VariableDeclaration");
  }

  parseWhileStatement(node) {
    this.next();
    node.test = this.parseHeaderExpression();
    this.state.labels.push(loopLabel);
    node.body = this.withTopicForbiddingContext(() => this.parseStatement("while"));
    this.state.labels.pop();
    return this.finishNode(node, "WhileStatement");
  }

  parseWithStatement(node) {
    if (this.state.strict) {
      this.raise(this.state.start, ErrorMessages.StrictWith);
    }

    this.next();
    node.object = this.parseHeaderExpression();
    node.body = this.withTopicForbiddingContext(() => this.parseStatement("with"));
    return this.finishNode(node, "WithStatement");
  }

  parseEmptyStatement(node) {
    this.next();
    return this.finishNode(node, "EmptyStatement");
  }

  parseLabeledStatement(node, maybeName, expr, context) {
    for (const label of this.state.labels) {
      if (label.name === maybeName) {
        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);
      }
    }

    const kind = this.state.type.isLoop ? "loop" : this.match(types$1._switch) ? "switch" : null;

    for (let i = this.state.labels.length - 1; i >= 0; i--) {
      const label = this.state.labels[i];

      if (label.statementStart === node.start) {
        label.statementStart = this.state.start;
        label.kind = kind;
      } else {
        break;
      }
    }

    this.state.labels.push({
      name: maybeName,
      kind: kind,
      statementStart: this.state.start
    });
    node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");
    this.state.labels.pop();
    node.label = expr;
    return this.finishNode(node, "LabeledStatement");
  }

  parseExpressionStatement(node, expr) {
    node.expression = expr;
    this.semicolon();
    return this.finishNode(node, "ExpressionStatement");
  }

  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {
    const node = this.startNode();

    if (allowDirectives) {
      this.state.strictErrors.clear();
    }

    this.expect(types$1.braceL);

    if (createNewLexicalScope) {
      this.scope.enter(SCOPE_OTHER);
    }

    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);

    if (createNewLexicalScope) {
      this.scope.exit();
    }

    return this.finishNode(node, "BlockStatement");
  }

  isValidDirective(stmt) {
    return stmt.type === "ExpressionStatement" && stmt.expression.type === "StringLiteral" && !stmt.expression.extra.parenthesized;
  }

  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {
    const body = node.body = [];
    const directives = node.directives = [];
    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);
  }

  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {
    const oldStrict = this.state.strict;
    let hasStrictModeDirective = false;
    let parsedNonDirective = false;

    while (!this.match(end)) {
      const stmt = this.parseStatement(null, topLevel);

      if (directives && !parsedNonDirective) {
        if (this.isValidDirective(stmt)) {
          const directive = this.stmtToDirective(stmt);
          directives.push(directive);

          if (!hasStrictModeDirective && directive.value.value === "use strict") {
            hasStrictModeDirective = true;
            this.setStrict(true);
          }

          continue;
        }

        parsedNonDirective = true;
        this.state.strictErrors.clear();
      }

      body.push(stmt);
    }

    if (afterBlockParse) {
      afterBlockParse.call(this, hasStrictModeDirective);
    }

    if (!oldStrict) {
      this.setStrict(false);
    }

    this.next();
  }

  parseFor(node, init) {
    node.init = init;
    this.semicolon(false);
    node.test = this.match(types$1.semi) ? null : this.parseExpression();
    this.semicolon(false);
    node.update = this.match(types$1.parenR) ? null : this.parseExpression();
    this.expect(types$1.parenR);
    node.body = this.withTopicForbiddingContext(() => this.parseStatement("for"));
    this.scope.exit();
    this.state.labels.pop();
    return this.finishNode(node, "ForStatement");
  }

  parseForIn(node, init, awaitAt) {
    const isForIn = this.match(types$1._in);
    this.next();

    if (isForIn) {
      if (awaitAt > -1) this.unexpected(awaitAt);
    } else {
      node.await = awaitAt > -1;
    }

    if (init.type === "VariableDeclaration" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== "var" || init.declarations[0].id.type !== "Identifier")) {
      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? "for-in" : "for-of");
    } else if (init.type === "AssignmentPattern") {
      this.raise(init.start, ErrorMessages.InvalidLhs, "for-loop");
    }

    node.left = init;
    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();
    this.expect(types$1.parenR);
    node.body = this.withTopicForbiddingContext(() => this.parseStatement("for"));
    this.scope.exit();
    this.state.labels.pop();
    return this.finishNode(node, isForIn ? "ForInStatement" : "ForOfStatement");
  }

  parseVar(node, isFor, kind) {
    const declarations = node.declarations = [];
    const isTypescript = this.hasPlugin("typescript");
    node.kind = kind;

    for (;;) {
      const decl = this.startNode();
      this.parseVarId(decl, kind);

      if (this.eat(types$1.eq)) {
        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();
      } else {
        if (kind === "const" && !(this.match(types$1._in) || this.isContextual("of"))) {
          if (!isTypescript) {
            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, "Const declarations");
          }
        } else if (decl.id.type !== "Identifier" && !(isFor && (this.match(types$1._in) || this.isContextual("of")))) {
          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, "Complex binding patterns");
        }

        decl.init = null;
      }

      declarations.push(this.finishNode(decl, "VariableDeclarator"));
      if (!this.eat(types$1.comma)) break;
    }

    return node;
  }

  parseVarId(decl, kind) {
    decl.id = this.parseBindingAtom();
    this.checkLVal(decl.id, "variable declaration", kind === "var" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== "var");
  }

  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {
    const isStatement = statement & FUNC_STATEMENT;
    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;
    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);
    this.initFunction(node, isAsync);

    if (this.match(types$1.star) && isHangingStatement) {
      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);
    }

    node.generator = this.eat(types$1.star);

    if (isStatement) {
      node.id = this.parseFunctionId(requireId);
    }

    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;
    this.state.maybeInArrowParameters = false;
    this.scope.enter(SCOPE_FUNCTION);
    this.prodParam.enter(functionFlags(isAsync, node.generator));

    if (!isStatement) {
      node.id = this.parseFunctionId();
    }

    this.parseFunctionParams(node, false);
    this.withTopicForbiddingContext(() => {
      this.parseFunctionBodyAndFinish(node, isStatement ? "FunctionDeclaration" : "FunctionExpression");
    });
    this.prodParam.exit();
    this.scope.exit();

    if (isStatement && !isHangingStatement) {
      this.registerFunctionStatementId(node);
    }

    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;
    return node;
  }

  parseFunctionId(requireId) {
    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;
  }

  parseFunctionParams(node, allowModifiers) {
    this.expect(types$1.parenL);
    this.expressionScope.enter(newParameterDeclarationScope());
    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);
    this.expressionScope.exit();
  }

  registerFunctionStatementId(node) {
    if (!node.id) return;
    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);
  }

  parseClass(node, isStatement, optionalId) {
    this.next();
    this.takeDecorators(node);
    const oldStrict = this.state.strict;
    this.state.strict = true;
    this.parseClassId(node, isStatement, optionalId);
    this.parseClassSuper(node);
    node.body = this.parseClassBody(!!node.superClass, oldStrict);
    return this.finishNode(node, isStatement ? "ClassDeclaration" : "ClassExpression");
  }

  isClassProperty() {
    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);
  }

  isClassMethod() {
    return this.match(types$1.parenL);
  }

  isNonstaticConstructor(method) {
    return !method.computed && !method.static && (method.key.name === "constructor" || method.key.value === "constructor");
  }

  parseClassBody(hadSuperClass, oldStrict) {
    this.classScope.enter();
    const state = {
      hadConstructor: false,
      hadSuperClass
    };
    let decorators = [];
    const classBody = this.startNode();
    classBody.body = [];
    this.expect(types$1.braceL);
    this.withTopicForbiddingContext(() => {
      while (!this.match(types$1.braceR)) {
        if (this.eat(types$1.semi)) {
          if (decorators.length > 0) {
            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);
          }

          continue;
        }

        if (this.match(types$1.at)) {
          decorators.push(this.parseDecorator());
          continue;
        }

        const member = this.startNode();

        if (decorators.length) {
          member.decorators = decorators;
          this.resetStartLocationFromNode(member, decorators[0]);
          decorators = [];
        }

        this.parseClassMember(classBody, member, state);

        if (member.kind === "constructor" && member.decorators && member.decorators.length > 0) {
          this.raise(member.start, ErrorMessages.DecoratorConstructor);
        }
      }
    });
    this.state.strict = oldStrict;
    this.next();

    if (decorators.length) {
      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);
    }

    this.classScope.exit();
    return this.finishNode(classBody, "ClassBody");
  }

  parseClassMemberFromModifier(classBody, member) {
    const key = this.parseIdentifier(true);

    if (this.isClassMethod()) {
      const method = member;
      method.kind = "method";
      method.computed = false;
      method.key = key;
      method.static = false;
      this.pushClassMethod(classBody, method, false, false, false, false);
      return true;
    } else if (this.isClassProperty()) {
      const prop = member;
      prop.computed = false;
      prop.key = key;
      prop.static = false;
      classBody.body.push(this.parseClassProperty(prop));
      return true;
    }

    return false;
  }

  parseClassMember(classBody, member, state) {
    const isStatic = this.isContextual("static");

    if (isStatic) {
      if (this.parseClassMemberFromModifier(classBody, member)) {
        return;
      }

      if (this.eat(types$1.braceL)) {
        this.parseClassStaticBlock(classBody, member);
        return;
      }
    }

    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);
  }

  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {
    const publicMethod = member;
    const privateMethod = member;
    const publicProp = member;
    const privateProp = member;
    const method = publicMethod;
    const publicMember = publicMethod;
    member.static = isStatic;

    if (this.eat(types$1.star)) {
      method.kind = "method";
      const isPrivateName = this.match(types$1.privateName);
      this.parseClassElementName(method);

      if (isPrivateName) {
        this.pushClassPrivateMethod(classBody, privateMethod, true, false);
        return;
      }

      if (this.isNonstaticConstructor(publicMethod)) {
        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);
      }

      this.pushClassMethod(classBody, publicMethod, true, false, false, false);
      return;
    }

    const containsEsc = this.state.containsEsc;
    const isPrivate = this.match(types$1.privateName);
    const key = this.parseClassElementName(member);
    const isSimple = key.type === "Identifier";
    const maybeQuestionTokenStart = this.state.start;
    this.parsePostMemberNameModifiers(publicMember);

    if (this.isClassMethod()) {
      method.kind = "method";

      if (isPrivate) {
        this.pushClassPrivateMethod(classBody, privateMethod, false, false);
        return;
      }

      const isConstructor = this.isNonstaticConstructor(publicMethod);
      let allowsDirectSuper = false;

      if (isConstructor) {
        publicMethod.kind = "constructor";

        if (state.hadConstructor && !this.hasPlugin("typescript")) {
          this.raise(key.start, ErrorMessages.DuplicateConstructor);
        }

        if (isConstructor && this.hasPlugin("typescript") && member.override) {
          this.raise(key.start, ErrorMessages.OverrideOnConstructor);
        }

        state.hadConstructor = true;
        allowsDirectSuper = state.hadSuperClass;
      }

      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);
    } else if (this.isClassProperty()) {
      if (isPrivate) {
        this.pushClassPrivateProperty(classBody, privateProp);
      } else {
        this.pushClassProperty(classBody, publicProp);
      }
    } else if (isSimple && key.name === "async" && !containsEsc && !this.isLineTerminator()) {
      const isGenerator = this.eat(types$1.star);

      if (publicMember.optional) {
        this.unexpected(maybeQuestionTokenStart);
      }

      method.kind = "method";
      const isPrivate = this.match(types$1.privateName);
      this.parseClassElementName(method);
      this.parsePostMemberNameModifiers(publicMember);

      if (isPrivate) {
        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);
      } else {
        if (this.isNonstaticConstructor(publicMethod)) {
          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);
        }

        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);
      }
    } else if (isSimple && (key.name === "get" || key.name === "set") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {
      method.kind = key.name;
      const isPrivate = this.match(types$1.privateName);
      this.parseClassElementName(publicMethod);

      if (isPrivate) {
        this.pushClassPrivateMethod(classBody, privateMethod, false, false);
      } else {
        if (this.isNonstaticConstructor(publicMethod)) {
          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);
        }

        this.pushClassMethod(classBody, publicMethod, false, false, false, false);
      }

      this.checkGetterSetterParams(publicMethod);
    } else if (this.isLineTerminator()) {
      if (isPrivate) {
        this.pushClassPrivateProperty(classBody, privateProp);
      } else {
        this.pushClassProperty(classBody, publicProp);
      }
    } else {
      this.unexpected();
    }
  }

  parseClassElementName(member) {
    const {
      type,
      value,
      start
    } = this.state;

    if ((type === types$1.name || type === types$1.string) && member.static && value === "prototype") {
      this.raise(start, ErrorMessages.StaticPrototype);
    }

    if (type === types$1.privateName && value === "constructor") {
      this.raise(start, ErrorMessages.ConstructorClassPrivateField);
    }

    return this.parsePropertyName(member, true);
  }

  parseClassStaticBlock(classBody, member) {
    var _member$decorators;

    this.expectPlugin("classStaticBlock", member.start);
    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);
    const oldLabels = this.state.labels;
    this.state.labels = [];
    this.prodParam.enter(PARAM);
    const body = member.body = [];
    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);
    this.prodParam.exit();
    this.scope.exit();
    this.state.labels = oldLabels;
    classBody.body.push(this.finishNode(member, "StaticBlock"));

    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {
      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);
    }
  }

  pushClassProperty(classBody, prop) {
    if (!prop.computed && (prop.key.name === "constructor" || prop.key.value === "constructor")) {
      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);
    }

    classBody.body.push(this.parseClassProperty(prop));
  }

  pushClassPrivateProperty(classBody, prop) {
    const node = this.parseClassPrivateProperty(prop);
    classBody.body.push(node);
    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);
  }

  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {
    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, "ClassMethod", true));
  }

  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {
    const node = this.parseMethod(method, isGenerator, isAsync, false, false, "ClassPrivateMethod", true);
    classBody.body.push(node);
    const kind = node.kind === "get" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === "set" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;
    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);
  }

  parsePostMemberNameModifiers(methodOrProp) {}

  parseClassPrivateProperty(node) {
    this.parseInitializer(node);
    this.semicolon();
    return this.finishNode(node, "ClassPrivateProperty");
  }

  parseClassProperty(node) {
    this.parseInitializer(node);
    this.semicolon();
    return this.finishNode(node, "ClassProperty");
  }

  parseInitializer(node) {
    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);
    this.expressionScope.enter(newExpressionScope());
    this.prodParam.enter(PARAM);
    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;
    this.expressionScope.exit();
    this.prodParam.exit();
    this.scope.exit();
  }

  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {
    if (this.match(types$1.name)) {
      node.id = this.parseIdentifier();

      if (isStatement) {
        this.checkLVal(node.id, "class name", bindingType);
      }
    } else {
      if (optionalId || !isStatement) {
        node.id = null;
      } else {
        this.unexpected(null, ErrorMessages.MissingClassName);
      }
    }
  }

  parseClassSuper(node) {
    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;
  }

  parseExport(node) {
    const hasDefault = this.maybeParseExportDefaultSpecifier(node);
    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);
    const hasStar = parseAfterDefault && this.eatExportStar(node);
    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);
    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));
    const isFromRequired = hasDefault || hasStar;

    if (hasStar && !hasNamespace) {
      if (hasDefault) this.unexpected();
      this.parseExportFrom(node, true);
      return this.finishNode(node, "ExportAllDeclaration");
    }

    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);

    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {
      throw this.unexpected(null, types$1.braceL);
    }

    let hasDeclaration;

    if (isFromRequired || hasSpecifiers) {
      hasDeclaration = false;
      this.parseExportFrom(node, isFromRequired);
    } else {
      hasDeclaration = this.maybeParseExportDeclaration(node);
    }

    if (isFromRequired || hasSpecifiers || hasDeclaration) {
      this.checkExport(node, true, false, !!node.source);
      return this.finishNode(node, "ExportNamedDeclaration");
    }

    if (this.eat(types$1._default)) {
      node.declaration = this.parseExportDefaultExpression();
      this.checkExport(node, true, true);
      return this.finishNode(node, "ExportDefaultDeclaration");
    }

    throw this.unexpected(null, types$1.braceL);
  }

  eatExportStar(node) {
    return this.eat(types$1.star);
  }

  maybeParseExportDefaultSpecifier(node) {
    if (this.isExportDefaultSpecifier()) {
      this.expectPlugin("exportDefaultFrom");
      const specifier = this.startNode();
      specifier.exported = this.parseIdentifier(true);
      node.specifiers = [this.finishNode(specifier, "ExportDefaultSpecifier")];
      return true;
    }

    return false;
  }

  maybeParseExportNamespaceSpecifier(node) {
    if (this.isContextual("as")) {
      if (!node.specifiers) node.specifiers = [];
      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);
      this.next();
      specifier.exported = this.parseModuleExportName();
      node.specifiers.push(this.finishNode(specifier, "ExportNamespaceSpecifier"));
      return true;
    }

    return false;
  }

  maybeParseExportNamedSpecifiers(node) {
    if (this.match(types$1.braceL)) {
      if (!node.specifiers) node.specifiers = [];
      node.specifiers.push(...this.parseExportSpecifiers());
      node.source = null;
      node.declaration = null;
      return true;
    }

    return false;
  }

  maybeParseExportDeclaration(node) {
    if (this.shouldParseExportDeclaration()) {
      node.specifiers = [];
      node.source = null;
      node.declaration = this.parseExportDeclaration(node);
      return true;
    }

    return false;
  }

  isAsyncFunction() {
    if (!this.isContextual("async")) return false;
    const next = this.nextTokenStart();
    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, "function");
  }

  parseExportDefaultExpression() {
    const expr = this.startNode();
    const isAsync = this.isAsyncFunction();

    if (this.match(types$1._function) || isAsync) {
      this.next();

      if (isAsync) {
        this.next();
      }

      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);
    } else if (this.match(types$1._class)) {
      return this.parseClass(expr, true, true);
    } else if (this.match(types$1.at)) {
      if (this.hasPlugin("decorators") && this.getPluginOption("decorators", "decoratorsBeforeExport")) {
        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);
      }

      this.parseDecorators(false);
      return this.parseClass(expr, true, true);
    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {
      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);
    } else {
      const res = this.parseMaybeAssignAllowIn();
      this.semicolon();
      return res;
    }
  }

  parseExportDeclaration(node) {
    return this.parseStatement(null);
  }

  isExportDefaultSpecifier() {
    if (this.match(types$1.name)) {
      const value = this.state.value;

      if (value === "async" && !this.state.containsEsc || value === "let") {
        return false;
      }

      if ((value === "type" || value === "interface") && !this.state.containsEsc) {
        const l = this.lookahead();

        if (l.type === types$1.name && l.value !== "from" || l.type === types$1.braceL) {
          this.expectOnePlugin(["flow", "typescript"]);
          return false;
        }
      }
    } else if (!this.match(types$1._default)) {
      return false;
    }

    const next = this.nextTokenStart();
    const hasFrom = this.isUnparsedContextual(next, "from");

    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {
      return true;
    }

    if (this.match(types$1._default) && hasFrom) {
      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));
      return nextAfterFrom === 34 || nextAfterFrom === 39;
    }

    return false;
  }

  parseExportFrom(node, expect) {
    if (this.eatContextual("from")) {
      node.source = this.parseImportSource();
      this.checkExport(node);
      const assertions = this.maybeParseImportAssertions();

      if (assertions) {
        node.assertions = assertions;
      }
    } else {
      if (expect) {
        this.unexpected();
      } else {
        node.source = null;
      }
    }

    this.semicolon();
  }

  shouldParseExportDeclaration() {
    if (this.match(types$1.at)) {
      this.expectOnePlugin(["decorators", "decorators-legacy"]);

      if (this.hasPlugin("decorators")) {
        if (this.getPluginOption("decorators", "decoratorsBeforeExport")) {
          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);
        } else {
          return true;
        }
      }
    }

    return this.state.type.keyword === "var" || this.state.type.keyword === "const" || this.state.type.keyword === "function" || this.state.type.keyword === "class" || this.isLet() || this.isAsyncFunction();
  }

  checkExport(node, checkNames, isDefault, isFrom) {
    if (checkNames) {
      if (isDefault) {
        this.checkDuplicateExports(node, "default");

        if (this.hasPlugin("exportDefaultFrom")) {
          var _declaration$extra;

          const declaration = node.declaration;

          if (declaration.type === "Identifier" && declaration.name === "from" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {
            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);
          }
        }
      } else if (node.specifiers && node.specifiers.length) {
        for (const specifier of node.specifiers) {
          const {
            exported
          } = specifier;
          const exportedName = exported.type === "Identifier" ? exported.name : exported.value;
          this.checkDuplicateExports(specifier, exportedName);

          if (!isFrom && specifier.local) {
            const {
              local
            } = specifier;

            if (local.type !== "Identifier") {
              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);
            } else {
              this.checkReservedWord(local.name, local.start, true, false);
              this.scope.checkLocalExport(local);
            }
          }
        }
      } else if (node.declaration) {
        if (node.declaration.type === "FunctionDeclaration" || node.declaration.type === "ClassDeclaration") {
          const id = node.declaration.id;
          if (!id) throw new Error("Assertion failure");
          this.checkDuplicateExports(node, id.name);
        } else if (node.declaration.type === "VariableDeclaration") {
          for (const declaration of node.declaration.declarations) {
            this.checkDeclaration(declaration.id);
          }
        }
      }
    }

    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];

    if (currentContextDecorators.length) {
      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);
    }
  }

  checkDeclaration(node) {
    if (node.type === "Identifier") {
      this.checkDuplicateExports(node, node.name);
    } else if (node.type === "ObjectPattern") {
      for (const prop of node.properties) {
        this.checkDeclaration(prop);
      }
    } else if (node.type === "ArrayPattern") {
      for (const elem of node.elements) {
        if (elem) {
          this.checkDeclaration(elem);
        }
      }
    } else if (node.type === "ObjectProperty") {
      this.checkDeclaration(node.value);
    } else if (node.type === "RestElement") {
      this.checkDeclaration(node.argument);
    } else if (node.type === "AssignmentPattern") {
      this.checkDeclaration(node.left);
    }
  }

  checkDuplicateExports(node, name) {
    if (this.state.exportedIdentifiers.indexOf(name) > -1) {
      this.raise(node.start, name === "default" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);
    }

    this.state.exportedIdentifiers.push(name);
  }

  parseExportSpecifiers() {
    const nodes = [];
    let first = true;
    this.expect(types$1.braceL);

    while (!this.eat(types$1.braceR)) {
      if (first) {
        first = false;
      } else {
        this.expect(types$1.comma);
        if (this.eat(types$1.braceR)) break;
      }

      const node = this.startNode();
      node.local = this.parseModuleExportName();
      node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local.__clone();
      nodes.push(this.finishNode(node, "ExportSpecifier"));
    }

    return nodes;
  }

  parseModuleExportName() {
    if (this.match(types$1.string)) {
      const result = this.parseStringLiteral(this.state.value);
      const surrogate = result.value.match(loneSurrogate);

      if (surrogate) {
        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));
      }

      return result;
    }

    return this.parseIdentifier(true);
  }

  parseImport(node) {
    node.specifiers = [];

    if (!this.match(types$1.string)) {
      const hasDefault = this.maybeParseDefaultImportSpecifier(node);
      const parseNext = !hasDefault || this.eat(types$1.comma);
      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);
      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);
      this.expectContextual("from");
    }

    node.source = this.parseImportSource();
    const assertions = this.maybeParseImportAssertions();

    if (assertions) {
      node.assertions = assertions;
    } else {
      const attributes = this.maybeParseModuleAttributes();

      if (attributes) {
        node.attributes = attributes;
      }
    }

    this.semicolon();
    return this.finishNode(node, "ImportDeclaration");
  }

  parseImportSource() {
    if (!this.match(types$1.string)) this.unexpected();
    return this.parseExprAtom();
  }

  shouldParseDefaultImport(node) {
    return this.match(types$1.name);
  }

  parseImportSpecifierLocal(node, specifier, type, contextDescription) {
    specifier.local = this.parseIdentifier();
    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);
    node.specifiers.push(this.finishNode(specifier, type));
  }

  parseAssertEntries() {
    const attrs = [];
    const attrNames = new Set();

    do {
      if (this.match(types$1.braceR)) {
        break;
      }

      const node = this.startNode();
      const keyName = this.state.value;

      if (this.match(types$1.string)) {
        node.key = this.parseStringLiteral(keyName);
      } else {
        node.key = this.parseIdentifier(true);
      }

      this.expect(types$1.colon);

      if (keyName !== "type") {
        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);
      }

      if (attrNames.has(keyName)) {
        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);
      }

      attrNames.add(keyName);

      if (!this.match(types$1.string)) {
        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);
      }

      node.value = this.parseStringLiteral(this.state.value);
      this.finishNode(node, "ImportAttribute");
      attrs.push(node);
    } while (this.eat(types$1.comma));

    return attrs;
  }

  maybeParseModuleAttributes() {
    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {
      this.expectPlugin("moduleAttributes");
      this.next();
    } else {
      if (this.hasPlugin("moduleAttributes")) return [];
      return null;
    }

    const attrs = [];
    const attributes = new Set();

    do {
      const node = this.startNode();
      node.key = this.parseIdentifier(true);

      if (node.key.name !== "type") {
        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);
      }

      if (attributes.has(node.key.name)) {
        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);
      }

      attributes.add(node.key.name);
      this.expect(types$1.colon);

      if (!this.match(types$1.string)) {
        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);
      }

      node.value = this.parseStringLiteral(this.state.value);
      this.finishNode(node, "ImportAttribute");
      attrs.push(node);
    } while (this.eat(types$1.comma));

    return attrs;
  }

  maybeParseImportAssertions() {
    if (this.isContextual("assert") && !this.hasPrecedingLineBreak()) {
      this.expectPlugin("importAssertions");
      this.next();
    } else {
      if (this.hasPlugin("importAssertions")) return [];
      return null;
    }

    this.eat(types$1.braceL);
    const attrs = this.parseAssertEntries();
    this.eat(types$1.braceR);
    return attrs;
  }

  maybeParseDefaultImportSpecifier(node) {
    if (this.shouldParseDefaultImport(node)) {
      this.parseImportSpecifierLocal(node, this.startNode(), "ImportDefaultSpecifier", "default import specifier");
      return true;
    }

    return false;
  }

  maybeParseStarImportSpecifier(node) {
    if (this.match(types$1.star)) {
      const specifier = this.startNode();
      this.next();
      this.expectContextual("as");
      this.parseImportSpecifierLocal(node, specifier, "ImportNamespaceSpecifier", "import namespace specifier");
      return true;
    }

    return false;
  }

  parseNamedImportSpecifiers(node) {
    let first = true;
    this.expect(types$1.braceL);

    while (!this.eat(types$1.braceR)) {
      if (first) {
        first = false;
      } else {
        if (this.eat(types$1.colon)) {
          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);
        }

        this.expect(types$1.comma);
        if (this.eat(types$1.braceR)) break;
      }

      this.parseImportSpecifier(node);
    }
  }

  parseImportSpecifier(node) {
    const specifier = this.startNode();
    const importedIsString = this.match(types$1.string);
    specifier.imported = this.parseModuleExportName();

    if (this.eatContextual("as")) {
      specifier.local = this.parseIdentifier();
    } else {
      const {
        imported
      } = specifier;

      if (importedIsString) {
        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);
      }

      this.checkReservedWord(imported.name, specifier.start, true, true);
      specifier.local = imported.__clone();
    }

    this.checkLVal(specifier.local, "import specifier", BIND_LEXICAL);
    node.specifiers.push(this.finishNode(specifier, "ImportSpecifier"));
  }

  isThisParam(param) {
    return param.type === "Identifier" && param.name === "this";
  }

}

class Parser extends StatementParser {
  constructor(options, input) {
    options = getOptions(options);
    super(options, input);
    this.options = options;
    this.initializeScopes();
    this.plugins = pluginsMap(this.options.plugins);
    this.filename = options.sourceFilename;
  }

  getScopeHandler() {
    return ScopeHandler;
  }

  parse() {
    this.enterInitialScopes();
    const file = this.startNode();
    const program = this.startNode();
    this.nextToken();
    file.errors = null;
    this.parseTopLevel(file, program);
    file.errors = this.state.errors;
    return file;
  }

}

function pluginsMap(plugins) {
  const pluginMap = new Map();

  for (const plugin of plugins) {
    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];
    if (!pluginMap.has(name)) pluginMap.set(name, options || {});
  }

  return pluginMap;
}

function parse(input, options) {
  var _options;

  if (((_options = options) == null ? void 0 : _options.sourceType) === "unambiguous") {
    options = Object.assign({}, options);

    try {
      options.sourceType = "module";
      const parser = getParser(options, input);
      const ast = parser.parse();

      if (parser.sawUnambiguousESM) {
        return ast;
      }

      if (parser.ambiguousScriptDifferentAst) {
        try {
          options.sourceType = "script";
          return getParser(options, input).parse();
        } catch (_unused) {}
      } else {
        ast.program.sourceType = "script";
      }

      return ast;
    } catch (moduleError) {
      try {
        options.sourceType = "script";
        return getParser(options, input).parse();
      } catch (_unused2) {}

      throw moduleError;
    }
  } else {
    return getParser(options, input).parse();
  }
}
function parseExpression(input, options) {
  const parser = getParser(options, input);

  if (parser.options.strictMode) {
    parser.state.strict = true;
  }

  return parser.getExpression();
}

function getParser(options, input) {
  let cls = Parser;

  if (options != null && options.plugins) {
    validatePlugins(options.plugins);
    cls = getParserClass(options.plugins);
  }

  return new cls(options, input);
}

const parserClassCache = {};

function getParserClass(pluginsFromOptions) {
  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));
  const key = pluginList.join("/");
  let cls = parserClassCache[key];

  if (!cls) {
    cls = Parser;

    for (const plugin of pluginList) {
      cls = mixinPlugins[plugin](cls);
    }

    parserClassCache[key] = cls;
  }

  return cls;
}

exports.parse = parse;
exports.parseExpression = parseExpression;
exports.tokTypes = types$1;
//# sourceMappingURL=index.js.map


/***/ }),
/* 4 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Plugin = Plugin;
Object.defineProperty(exports, "File", ({
  enumerable: true,
  get: function () {
    return _file.default;
  }
}));
Object.defineProperty(exports, "buildExternalHelpers", ({
  enumerable: true,
  get: function () {
    return _buildExternalHelpers.default;
  }
}));
Object.defineProperty(exports, "resolvePlugin", ({
  enumerable: true,
  get: function () {
    return _files.resolvePlugin;
  }
}));
Object.defineProperty(exports, "resolvePreset", ({
  enumerable: true,
  get: function () {
    return _files.resolvePreset;
  }
}));
Object.defineProperty(exports, "getEnv", ({
  enumerable: true,
  get: function () {
    return _environment.getEnv;
  }
}));
Object.defineProperty(exports, "tokTypes", ({
  enumerable: true,
  get: function () {
    return _parser().tokTypes;
  }
}));
Object.defineProperty(exports, "traverse", ({
  enumerable: true,
  get: function () {
    return _traverse().default;
  }
}));
Object.defineProperty(exports, "template", ({
  enumerable: true,
  get: function () {
    return _template().default;
  }
}));
Object.defineProperty(exports, "createConfigItem", ({
  enumerable: true,
  get: function () {
    return _config.createConfigItem;
  }
}));
Object.defineProperty(exports, "createConfigItemSync", ({
  enumerable: true,
  get: function () {
    return _config.createConfigItemSync;
  }
}));
Object.defineProperty(exports, "createConfigItemAsync", ({
  enumerable: true,
  get: function () {
    return _config.createConfigItemAsync;
  }
}));
Object.defineProperty(exports, "loadPartialConfig", ({
  enumerable: true,
  get: function () {
    return _config.loadPartialConfig;
  }
}));
Object.defineProperty(exports, "loadPartialConfigSync", ({
  enumerable: true,
  get: function () {
    return _config.loadPartialConfigSync;
  }
}));
Object.defineProperty(exports, "loadPartialConfigAsync", ({
  enumerable: true,
  get: function () {
    return _config.loadPartialConfigAsync;
  }
}));
Object.defineProperty(exports, "loadOptions", ({
  enumerable: true,
  get: function () {
    return _config.loadOptions;
  }
}));
Object.defineProperty(exports, "loadOptionsSync", ({
  enumerable: true,
  get: function () {
    return _config.loadOptionsSync;
  }
}));
Object.defineProperty(exports, "loadOptionsAsync", ({
  enumerable: true,
  get: function () {
    return _config.loadOptionsAsync;
  }
}));
Object.defineProperty(exports, "transform", ({
  enumerable: true,
  get: function () {
    return _transform.transform;
  }
}));
Object.defineProperty(exports, "transformSync", ({
  enumerable: true,
  get: function () {
    return _transform.transformSync;
  }
}));
Object.defineProperty(exports, "transformAsync", ({
  enumerable: true,
  get: function () {
    return _transform.transformAsync;
  }
}));
Object.defineProperty(exports, "transformFile", ({
  enumerable: true,
  get: function () {
    return _transformFile.transformFile;
  }
}));
Object.defineProperty(exports, "transformFileSync", ({
  enumerable: true,
  get: function () {
    return _transformFile.transformFileSync;
  }
}));
Object.defineProperty(exports, "transformFileAsync", ({
  enumerable: true,
  get: function () {
    return _transformFile.transformFileAsync;
  }
}));
Object.defineProperty(exports, "transformFromAst", ({
  enumerable: true,
  get: function () {
    return _transformAst.transformFromAst;
  }
}));
Object.defineProperty(exports, "transformFromAstSync", ({
  enumerable: true,
  get: function () {
    return _transformAst.transformFromAstSync;
  }
}));
Object.defineProperty(exports, "transformFromAstAsync", ({
  enumerable: true,
  get: function () {
    return _transformAst.transformFromAstAsync;
  }
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parse.parse;
  }
}));
Object.defineProperty(exports, "parseSync", ({
  enumerable: true,
  get: function () {
    return _parse.parseSync;
  }
}));
Object.defineProperty(exports, "parseAsync", ({
  enumerable: true,
  get: function () {
    return _parse.parseAsync;
  }
}));
exports.types = exports.OptionManager = exports.DEFAULT_EXTENSIONS = exports.version = void 0;

var _file = __webpack_require__(5);

var _buildExternalHelpers = __webpack_require__(201);

var _files = __webpack_require__(202);

var _environment = __webpack_require__(223);

function _types() {
  const data = __webpack_require__(11);

  _types = function () {
    return data;
  };

  return data;
}

Object.defineProperty(exports, "types", ({
  enumerable: true,
  get: function () {
    return _types();
  }
}));

function _parser() {
  const data = __webpack_require__(3);

  _parser = function () {
    return data;
  };

  return data;
}

function _traverse() {
  const data = __webpack_require__(7);

  _traverse = function () {
    return data;
  };

  return data;
}

function _template() {
  const data = __webpack_require__(165);

  _template = function () {
    return data;
  };

  return data;
}

var _config = __webpack_require__(224);

var _transform = __webpack_require__(1055);

var _transformFile = __webpack_require__(1082);

var _transformAst = __webpack_require__(1083);

var _parse = __webpack_require__(1084);

const version = "7.14.3";
exports.version = version;
const DEFAULT_EXTENSIONS = Object.freeze([".js", ".jsx", ".es6", ".es", ".mjs", ".cjs"]);
exports.DEFAULT_EXTENSIONS = DEFAULT_EXTENSIONS;

class OptionManager {
  init(opts) {
    return (0, _config.loadOptions)(opts);
  }

}

exports.OptionManager = OptionManager;

function Plugin(alias) {
  throw new Error(`The (${alias}) Babel 5 plugin is being run with an unsupported Babel version.`);
}

/***/ }),
/* 5 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

function helpers() {
  const data = __webpack_require__(6);

  helpers = function () {
    return data;
  };

  return data;
}

function _traverse() {
  const data = __webpack_require__(7);

  _traverse = function () {
    return data;
  };

  return data;
}

function _codeFrame() {
  const data = __webpack_require__(148);

  _codeFrame = function () {
    return data;
  };

  return data;
}

function t() {
  const data = __webpack_require__(11);

  t = function () {
    return data;
  };

  return data;
}

function _helperModuleTransforms() {
  const data = __webpack_require__(185);

  _helperModuleTransforms = function () {
    return data;
  };

  return data;
}

function _semver() {
  const data = __webpack_require__(200);

  _semver = function () {
    return data;
  };

  return data;
}

const errorVisitor = {
  enter(path, state) {
    const loc = path.node.loc;

    if (loc) {
      state.loc = loc;
      path.stop();
    }
  }

};

class File {
  constructor(options, {
    code,
    ast,
    inputMap
  }) {
    this._map = new Map();
    this.opts = void 0;
    this.declarations = {};
    this.path = null;
    this.ast = {};
    this.scope = void 0;
    this.metadata = {};
    this.code = "";
    this.inputMap = null;
    this.hub = {
      file: this,
      getCode: () => this.code,
      getScope: () => this.scope,
      addHelper: this.addHelper.bind(this),
      buildError: this.buildCodeFrameError.bind(this)
    };
    this.opts = options;
    this.code = code;
    this.ast = ast;
    this.inputMap = inputMap;
    this.path = _traverse().NodePath.get({
      hub: this.hub,
      parentPath: null,
      parent: this.ast,
      container: this.ast,
      key: "program"
    }).setContext();
    this.scope = this.path.scope;
  }

  get shebang() {
    const {
      interpreter
    } = this.path.node;
    return interpreter ? interpreter.value : "";
  }

  set shebang(value) {
    if (value) {
      this.path.get("interpreter").replaceWith(t().interpreterDirective(value));
    } else {
      this.path.get("interpreter").remove();
    }
  }

  set(key, val) {
    if (key === "helpersNamespace") {
      throw new Error("Babel 7.0.0-beta.56 has dropped support for the 'helpersNamespace' utility." + "If you are using @babel/plugin-external-helpers you will need to use a newer " + "version than the one you currently have installed. " + "If you have your own implementation, you'll want to explore using 'helperGenerator' " + "alongside 'file.availableHelper()'.");
    }

    this._map.set(key, val);
  }

  get(key) {
    return this._map.get(key);
  }

  has(key) {
    return this._map.has(key);
  }

  getModuleName() {
    return (0, _helperModuleTransforms().getModuleName)(this.opts, this.opts);
  }

  addImport() {
    throw new Error("This API has been removed. If you're looking for this " + "functionality in Babel 7, you should import the " + "'@babel/helper-module-imports' module and use the functions exposed " + " from that module, such as 'addNamed' or 'addDefault'.");
  }

  availableHelper(name, versionRange) {
    let minVersion;

    try {
      minVersion = helpers().minVersion(name);
    } catch (err) {
      if (err.code !== "BABEL_HELPER_UNKNOWN") throw err;
      return false;
    }

    if (typeof versionRange !== "string") return true;
    if (_semver().valid(versionRange)) versionRange = `^${versionRange}`;
    return !_semver().intersects(`<${minVersion}`, versionRange) && !_semver().intersects(`>=8.0.0`, versionRange);
  }

  addHelper(name) {
    const declar = this.declarations[name];
    if (declar) return t().cloneNode(declar);
    const generator = this.get("helperGenerator");

    if (generator) {
      const res = generator(name);
      if (res) return res;
    }

    helpers().ensure(name, File);
    const uid = this.declarations[name] = this.scope.generateUidIdentifier(name);
    const dependencies = {};

    for (const dep of helpers().getDependencies(name)) {
      dependencies[dep] = this.addHelper(dep);
    }

    const {
      nodes,
      globals
    } = helpers().get(name, dep => dependencies[dep], uid, Object.keys(this.scope.getAllBindings()));
    globals.forEach(name => {
      if (this.path.scope.hasBinding(name, true)) {
        this.path.scope.rename(name);
      }
    });
    nodes.forEach(node => {
      node._compact = true;
    });
    this.path.unshiftContainer("body", nodes);
    this.path.get("body").forEach(path => {
      if (nodes.indexOf(path.node) === -1) return;
      if (path.isVariableDeclaration()) this.scope.registerDeclaration(path);
    });
    return uid;
  }

  addTemplateObject() {
    throw new Error("This function has been moved into the template literal transform itself.");
  }

  buildCodeFrameError(node, msg, _Error = SyntaxError) {
    let loc = node && (node.loc || node._loc);

    if (!loc && node) {
      const state = {
        loc: null
      };
      (0, _traverse().default)(node, errorVisitor, this.scope, state);
      loc = state.loc;
      let txt = "This is an error on an internal node. Probably an internal error.";
      if (loc) txt += " Location has been estimated.";
      msg += ` (${txt})`;
    }

    if (loc) {
      const {
        highlightCode = true
      } = this.opts;
      msg += "\n" + (0, _codeFrame().codeFrameColumns)(this.code, {
        start: {
          line: loc.start.line,
          column: loc.start.column + 1
        },
        end: loc.end && loc.start.line === loc.end.line ? {
          line: loc.end.line,
          column: loc.end.column + 1
        } : undefined
      }, {
        highlightCode
      });
    }

    return new _Error(msg);
  }

}

exports.default = File;

/***/ }),
/* 6 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.get = get;
exports.minVersion = minVersion;
exports.getDependencies = getDependencies;
exports.ensure = ensure;
exports.default = exports.list = void 0;

var _traverse = _interopRequireDefault(__webpack_require__(7));

var t = _interopRequireWildcard(__webpack_require__(11));

var _helpers = _interopRequireDefault(__webpack_require__(183));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function makePath(path) {
  const parts = [];

  for (; path.parentPath; path = path.parentPath) {
    parts.push(path.key);
    if (path.inList) parts.push(path.listKey);
  }

  return parts.reverse().join(".");
}

let fileClass = undefined;

function getHelperMetadata(file) {
  const globals = new Set();
  const localBindingNames = new Set();
  const dependencies = new Map();
  let exportName;
  let exportPath;
  const exportBindingAssignments = [];
  const importPaths = [];
  const importBindingsReferences = [];
  const dependencyVisitor = {
    ImportDeclaration(child) {
      const name = child.node.source.value;

      if (!_helpers.default[name]) {
        throw child.buildCodeFrameError(`Unknown helper ${name}`);
      }

      if (child.get("specifiers").length !== 1 || !child.get("specifiers.0").isImportDefaultSpecifier()) {
        throw child.buildCodeFrameError("Helpers can only import a default value");
      }

      const bindingIdentifier = child.node.specifiers[0].local;
      dependencies.set(bindingIdentifier, name);
      importPaths.push(makePath(child));
    },

    ExportDefaultDeclaration(child) {
      const decl = child.get("declaration");

      if (decl.isFunctionDeclaration()) {
        if (!decl.node.id) {
          throw decl.buildCodeFrameError("Helpers should give names to their exported func declaration");
        }

        exportName = decl.node.id.name;
      }

      exportPath = makePath(child);
    },

    ExportAllDeclaration(child) {
      throw child.buildCodeFrameError("Helpers can only export default");
    },

    ExportNamedDeclaration(child) {
      throw child.buildCodeFrameError("Helpers can only export default");
    },

    Statement(child) {
      if (child.isModuleDeclaration()) return;
      child.skip();
    }

  };
  const referenceVisitor = {
    Program(path) {
      const bindings = path.scope.getAllBindings();
      Object.keys(bindings).forEach(name => {
        if (name === exportName) return;
        if (dependencies.has(bindings[name].identifier)) return;
        localBindingNames.add(name);
      });
    },

    ReferencedIdentifier(child) {
      const name = child.node.name;
      const binding = child.scope.getBinding(name, true);

      if (!binding) {
        globals.add(name);
      } else if (dependencies.has(binding.identifier)) {
        importBindingsReferences.push(makePath(child));
      }
    },

    AssignmentExpression(child) {
      const left = child.get("left");
      if (!(exportName in left.getBindingIdentifiers())) return;

      if (!left.isIdentifier()) {
        throw left.buildCodeFrameError("Only simple assignments to exports are allowed in helpers");
      }

      const binding = child.scope.getBinding(exportName);

      if (binding != null && binding.scope.path.isProgram()) {
        exportBindingAssignments.push(makePath(child));
      }
    }

  };
  (0, _traverse.default)(file.ast, dependencyVisitor, file.scope);
  (0, _traverse.default)(file.ast, referenceVisitor, file.scope);
  if (!exportPath) throw new Error("Helpers must default-export something.");
  exportBindingAssignments.reverse();
  return {
    globals: Array.from(globals),
    localBindingNames: Array.from(localBindingNames),
    dependencies,
    exportBindingAssignments,
    exportPath,
    exportName,
    importBindingsReferences,
    importPaths
  };
}

function permuteHelperAST(file, metadata, id, localBindings, getDependency) {
  if (localBindings && !id) {
    throw new Error("Unexpected local bindings for module-based helpers.");
  }

  if (!id) return;
  const {
    localBindingNames,
    dependencies,
    exportBindingAssignments,
    exportPath,
    exportName,
    importBindingsReferences,
    importPaths
  } = metadata;
  const dependenciesRefs = {};
  dependencies.forEach((name, id) => {
    dependenciesRefs[id.name] = typeof getDependency === "function" && getDependency(name) || id;
  });
  const toRename = {};
  const bindings = new Set(localBindings || []);
  localBindingNames.forEach(name => {
    let newName = name;

    while (bindings.has(newName)) newName = "_" + newName;

    if (newName !== name) toRename[name] = newName;
  });

  if (id.type === "Identifier" && exportName !== id.name) {
    toRename[exportName] = id.name;
  }

  const visitor = {
    Program(path) {
      const exp = path.get(exportPath);
      const imps = importPaths.map(p => path.get(p));
      const impsBindingRefs = importBindingsReferences.map(p => path.get(p));
      const decl = exp.get("declaration");

      if (id.type === "Identifier") {
        if (decl.isFunctionDeclaration()) {
          exp.replaceWith(decl);
        } else {
          exp.replaceWith(t.variableDeclaration("var", [t.variableDeclarator(id, decl.node)]));
        }
      } else if (id.type === "MemberExpression") {
        if (decl.isFunctionDeclaration()) {
          exportBindingAssignments.forEach(assignPath => {
            const assign = path.get(assignPath);
            assign.replaceWith(t.assignmentExpression("=", id, assign.node));
          });
          exp.replaceWith(decl);
          path.pushContainer("body", t.expressionStatement(t.assignmentExpression("=", id, t.identifier(exportName))));
        } else {
          exp.replaceWith(t.expressionStatement(t.assignmentExpression("=", id, decl.node)));
        }
      } else {
        throw new Error("Unexpected helper format.");
      }

      Object.keys(toRename).forEach(name => {
        path.scope.rename(name, toRename[name]);
      });

      for (const path of imps) path.remove();

      for (const path of impsBindingRefs) {
        const node = t.cloneNode(dependenciesRefs[path.node.name]);
        path.replaceWith(node);
      }

      path.stop();
    }

  };
  (0, _traverse.default)(file.ast, visitor, file.scope);
}

const helperData = Object.create(null);

function loadHelper(name) {
  if (!helperData[name]) {
    const helper = _helpers.default[name];

    if (!helper) {
      throw Object.assign(new ReferenceError(`Unknown helper ${name}`), {
        code: "BABEL_HELPER_UNKNOWN",
        helper: name
      });
    }

    const fn = () => {
      const file = {
        ast: t.file(helper.ast())
      };

      if (fileClass) {
        return new fileClass({
          filename: `babel-helper://${name}`
        }, file);
      }

      return file;
    };

    const metadata = getHelperMetadata(fn());
    helperData[name] = {
      build(getDependency, id, localBindings) {
        const file = fn();
        permuteHelperAST(file, metadata, id, localBindings, getDependency);
        return {
          nodes: file.ast.program.body,
          globals: metadata.globals
        };
      },

      minVersion() {
        return helper.minVersion;
      },

      dependencies: metadata.dependencies
    };
  }

  return helperData[name];
}

function get(name, getDependency, id, localBindings) {
  return loadHelper(name).build(getDependency, id, localBindings);
}

function minVersion(name) {
  return loadHelper(name).minVersion();
}

function getDependencies(name) {
  return Array.from(loadHelper(name).dependencies.values());
}

function ensure(name, newFileClass) {
  if (!fileClass) {
    fileClass = newFileClass;
  }

  loadHelper(name);
}

const list = Object.keys(_helpers.default).map(name => name.replace(/^_/, "")).filter(name => name !== "__esModule");
exports.list = list;
var _default = get;
exports.default = _default;

/***/ }),
/* 7 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "NodePath", ({
  enumerable: true,
  get: function () {
    return _path.default;
  }
}));
Object.defineProperty(exports, "Scope", ({
  enumerable: true,
  get: function () {
    return _scope.default;
  }
}));
Object.defineProperty(exports, "Hub", ({
  enumerable: true,
  get: function () {
    return _hub.default;
  }
}));
exports.visitors = exports.default = void 0;

var _context = __webpack_require__(8);

var visitors = __webpack_require__(181);

exports.visitors = visitors;

var t = __webpack_require__(11);

var cache = __webpack_require__(111);

var _path = __webpack_require__(9);

var _scope = __webpack_require__(105);

var _hub = __webpack_require__(182);

function traverse(parent, opts = {}, scope, state, parentPath) {
  if (!parent) return;

  if (!opts.noScope && !scope) {
    if (parent.type !== "Program" && parent.type !== "File") {
      throw new Error("You must pass a scope and parentPath unless traversing a Program/File. " + `Instead of that you tried to traverse a ${parent.type} node without ` + "passing scope and parentPath.");
    }
  }

  if (!t.VISITOR_KEYS[parent.type]) {
    return;
  }

  visitors.explode(opts);
  traverse.node(parent, opts, scope, state, parentPath);
}

var _default = traverse;
exports.default = _default;
traverse.visitors = visitors;
traverse.verify = visitors.verify;
traverse.explode = visitors.explode;

traverse.cheap = function (node, enter) {
  return t.traverseFast(node, enter);
};

traverse.node = function (node, opts, scope, state, parentPath, skipKeys) {
  const keys = t.VISITOR_KEYS[node.type];
  if (!keys) return;
  const context = new _context.default(scope, opts, state, parentPath);

  for (const key of keys) {
    if (skipKeys && skipKeys[key]) continue;
    if (context.visit(node, key)) return;
  }
};

traverse.clearNode = function (node, opts) {
  t.removeProperties(node, opts);
  cache.path.delete(node);
};

traverse.removeProperties = function (tree, opts) {
  t.traverseFast(tree, traverse.clearNode, opts);
  return tree;
};

function hasDenylistedType(path, state) {
  if (path.node.type === state.type) {
    state.has = true;
    path.stop();
  }
}

traverse.hasType = function (tree, type, denylistTypes) {
  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;
  if (tree.type === type) return true;
  const state = {
    has: false,
    type: type
  };
  traverse(tree, {
    noScope: true,
    denylist: denylistTypes,
    enter: hasDenylistedType
  }, null, state);
  return state.has;
};

traverse.cache = cache;

/***/ }),
/* 8 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _path = __webpack_require__(9);

var t = __webpack_require__(11);

const testing = process.env.NODE_ENV === "test";

class TraversalContext {
  constructor(scope, opts, state, parentPath) {
    this.queue = null;
    this.priorityQueue = null;
    this.parentPath = parentPath;
    this.scope = scope;
    this.state = state;
    this.opts = opts;
  }

  shouldVisit(node) {
    const opts = this.opts;
    if (opts.enter || opts.exit) return true;
    if (opts[node.type]) return true;
    const keys = t.VISITOR_KEYS[node.type];
    if (!(keys != null && keys.length)) return false;

    for (const key of keys) {
      if (node[key]) return true;
    }

    return false;
  }

  create(node, obj, key, listKey) {
    return _path.default.get({
      parentPath: this.parentPath,
      parent: node,
      container: obj,
      key: key,
      listKey
    });
  }

  maybeQueue(path, notPriority) {
    if (this.trap) {
      throw new Error("Infinite cycle detected");
    }

    if (this.queue) {
      if (notPriority) {
        this.queue.push(path);
      } else {
        this.priorityQueue.push(path);
      }
    }
  }

  visitMultiple(container, parent, listKey) {
    if (container.length === 0) return false;
    const queue = [];

    for (let key = 0; key < container.length; key++) {
      const node = container[key];

      if (node && this.shouldVisit(node)) {
        queue.push(this.create(parent, container, key, listKey));
      }
    }

    return this.visitQueue(queue);
  }

  visitSingle(node, key) {
    if (this.shouldVisit(node[key])) {
      return this.visitQueue([this.create(node, node, key)]);
    } else {
      return false;
    }
  }

  visitQueue(queue) {
    this.queue = queue;
    this.priorityQueue = [];
    const visited = new WeakSet();
    let stop = false;

    for (const path of queue) {
      path.resync();

      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {
        path.pushContext(this);
      }

      if (path.key === null) continue;

      if (testing && queue.length >= 10000) {
        this.trap = true;
      }

      const {
        node
      } = path;
      if (visited.has(node)) continue;
      if (node) visited.add(node);

      if (path.visit()) {
        stop = true;
        break;
      }

      if (this.priorityQueue.length) {
        stop = this.visitQueue(this.priorityQueue);
        this.priorityQueue = [];
        this.queue = queue;
        if (stop) break;
      }
    }

    for (const path of queue) {
      path.popContext();
    }

    this.queue = null;
    return stop;
  }

  visit(node, key) {
    const nodes = node[key];
    if (!nodes) return false;

    if (Array.isArray(nodes)) {
      return this.visitMultiple(nodes, node, key);
    } else {
      return this.visitSingle(node, key);
    }
  }

}

exports.default = TraversalContext;

/***/ }),
/* 9 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;

var virtualTypes = __webpack_require__(10);

var _debug = __webpack_require__(95);

var _index = __webpack_require__(7);

var _scope = __webpack_require__(105);

var t = __webpack_require__(11);

var _cache = __webpack_require__(111);

var _generator = __webpack_require__(112);

var NodePath_ancestry = __webpack_require__(143);

var NodePath_inference = __webpack_require__(144);

var NodePath_replacement = __webpack_require__(147);

var NodePath_evaluation = __webpack_require__(161);

var NodePath_conversion = __webpack_require__(162);

var NodePath_introspection = __webpack_require__(173);

var NodePath_context = __webpack_require__(174);

var NodePath_removal = __webpack_require__(175);

var NodePath_modification = __webpack_require__(177);

var NodePath_family = __webpack_require__(179);

var NodePath_comments = __webpack_require__(180);

const debug = _debug("babel");

const REMOVED = 1 << 0;
exports.REMOVED = REMOVED;
const SHOULD_STOP = 1 << 1;
exports.SHOULD_STOP = SHOULD_STOP;
const SHOULD_SKIP = 1 << 2;
exports.SHOULD_SKIP = SHOULD_SKIP;

class NodePath {
  constructor(hub, parent) {
    this.contexts = [];
    this.state = null;
    this.opts = null;
    this._traverseFlags = 0;
    this.skipKeys = null;
    this.parentPath = null;
    this.container = null;
    this.listKey = null;
    this.key = null;
    this.node = null;
    this.type = null;
    this.parent = parent;
    this.hub = hub;
    this.data = null;
    this.context = null;
    this.scope = null;
  }

  static get({
    hub,
    parentPath,
    parent,
    container,
    listKey,
    key
  }) {
    if (!hub && parentPath) {
      hub = parentPath.hub;
    }

    if (!parent) {
      throw new Error("To get a node path the parent needs to exist");
    }

    const targetNode = container[key];

    let paths = _cache.path.get(parent);

    if (!paths) {
      paths = new Map();

      _cache.path.set(parent, paths);
    }

    let path = paths.get(targetNode);

    if (!path) {
      path = new NodePath(hub, parent);
      if (targetNode) paths.set(targetNode, path);
    }

    path.setup(parentPath, container, listKey, key);
    return path;
  }

  getScope(scope) {
    return this.isScope() ? new _scope.default(this) : scope;
  }

  setData(key, val) {
    if (this.data == null) {
      this.data = Object.create(null);
    }

    return this.data[key] = val;
  }

  getData(key, def) {
    if (this.data == null) {
      this.data = Object.create(null);
    }

    let val = this.data[key];
    if (val === undefined && def !== undefined) val = this.data[key] = def;
    return val;
  }

  buildCodeFrameError(msg, Error = SyntaxError) {
    return this.hub.buildError(this.node, msg, Error);
  }

  traverse(visitor, state) {
    (0, _index.default)(this.node, visitor, this.scope, state, this);
  }

  set(key, node) {
    t.validate(this.node, key, node);
    this.node[key] = node;
  }

  getPathLocation() {
    const parts = [];
    let path = this;

    do {
      let key = path.key;
      if (path.inList) key = `${path.listKey}[${key}]`;
      parts.unshift(key);
    } while (path = path.parentPath);

    return parts.join(".");
  }

  debug(message) {
    if (!debug.enabled) return;
    debug(`${this.getPathLocation()} ${this.type}: ${message}`);
  }

  toString() {
    return (0, _generator.default)(this.node).code;
  }

  get inList() {
    return !!this.listKey;
  }

  set inList(inList) {
    if (!inList) {
      this.listKey = null;
    }
  }

  get parentKey() {
    return this.listKey || this.key;
  }

  get shouldSkip() {
    return !!(this._traverseFlags & SHOULD_SKIP);
  }

  set shouldSkip(v) {
    if (v) {
      this._traverseFlags |= SHOULD_SKIP;
    } else {
      this._traverseFlags &= ~SHOULD_SKIP;
    }
  }

  get shouldStop() {
    return !!(this._traverseFlags & SHOULD_STOP);
  }

  set shouldStop(v) {
    if (v) {
      this._traverseFlags |= SHOULD_STOP;
    } else {
      this._traverseFlags &= ~SHOULD_STOP;
    }
  }

  get removed() {
    return !!(this._traverseFlags & REMOVED);
  }

  set removed(v) {
    if (v) {
      this._traverseFlags |= REMOVED;
    } else {
      this._traverseFlags &= ~REMOVED;
    }
  }

}

Object.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);

for (const type of t.TYPES) {
  const typeKey = `is${type}`;
  const fn = t[typeKey];

  NodePath.prototype[typeKey] = function (opts) {
    return fn(this.node, opts);
  };

  NodePath.prototype[`assert${type}`] = function (opts) {
    if (!fn(this.node, opts)) {
      throw new TypeError(`Expected node path of type ${type}`);
    }
  };
}

for (const type of Object.keys(virtualTypes)) {
  if (type[0] === "_") continue;
  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);
  const virtualType = virtualTypes[type];

  NodePath.prototype[`is${type}`] = function (opts) {
    return virtualType.checkPath(this, opts);
  };
}

var _default = NodePath;
exports.default = _default;

/***/ }),
/* 10 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;

var t = __webpack_require__(11);

const ReferencedIdentifier = {
  types: ["Identifier", "JSXIdentifier"],

  checkPath(path, opts) {
    const {
      node,
      parent
    } = path;

    if (!t.isIdentifier(node, opts) && !t.isJSXMemberExpression(parent, opts)) {
      if (t.isJSXIdentifier(node, opts)) {
        if (t.react.isCompatTag(node.name)) return false;
      } else {
        return false;
      }
    }

    return t.isReferenced(node, parent, path.parentPath.parent);
  }

};
exports.ReferencedIdentifier = ReferencedIdentifier;
const ReferencedMemberExpression = {
  types: ["MemberExpression"],

  checkPath({
    node,
    parent
  }) {
    return t.isMemberExpression(node) && t.isReferenced(node, parent);
  }

};
exports.ReferencedMemberExpression = ReferencedMemberExpression;
const BindingIdentifier = {
  types: ["Identifier"],

  checkPath(path) {
    const {
      node,
      parent
    } = path;
    const grandparent = path.parentPath.parent;
    return t.isIdentifier(node) && t.isBinding(node, parent, grandparent);
  }

};
exports.BindingIdentifier = BindingIdentifier;
const Statement = {
  types: ["Statement"],

  checkPath({
    node,
    parent
  }) {
    if (t.isStatement(node)) {
      if (t.isVariableDeclaration(node)) {
        if (t.isForXStatement(parent, {
          left: node
        })) return false;
        if (t.isForStatement(parent, {
          init: node
        })) return false;
      }

      return true;
    } else {
      return false;
    }
  }

};
exports.Statement = Statement;
const Expression = {
  types: ["Expression"],

  checkPath(path) {
    if (path.isIdentifier()) {
      return path.isReferencedIdentifier();
    } else {
      return t.isExpression(path.node);
    }
  }

};
exports.Expression = Expression;
const Scope = {
  types: ["Scopable", "Pattern"],

  checkPath(path) {
    return t.isScope(path.node, path.parent);
  }

};
exports.Scope = Scope;
const Referenced = {
  checkPath(path) {
    return t.isReferenced(path.node, path.parent);
  }

};
exports.Referenced = Referenced;
const BlockScoped = {
  checkPath(path) {
    return t.isBlockScoped(path.node);
  }

};
exports.BlockScoped = BlockScoped;
const Var = {
  types: ["VariableDeclaration"],

  checkPath(path) {
    return t.isVar(path.node);
  }

};
exports.Var = Var;
const User = {
  checkPath(path) {
    return path.node && !!path.node.loc;
  }

};
exports.User = User;
const Generated = {
  checkPath(path) {
    return !path.isUser();
  }

};
exports.Generated = Generated;
const Pure = {
  checkPath(path, opts) {
    return path.scope.isPure(path.node, opts);
  }

};
exports.Pure = Pure;
const Flow = {
  types: ["Flow", "ImportDeclaration", "ExportDeclaration", "ImportSpecifier"],

  checkPath({
    node
  }) {
    if (t.isFlow(node)) {
      return true;
    } else if (t.isImportDeclaration(node)) {
      return node.importKind === "type" || node.importKind === "typeof";
    } else if (t.isExportDeclaration(node)) {
      return node.exportKind === "type";
    } else if (t.isImportSpecifier(node)) {
      return node.importKind === "type" || node.importKind === "typeof";
    } else {
      return false;
    }
  }

};
exports.Flow = Flow;
const RestProperty = {
  types: ["RestElement"],

  checkPath(path) {
    return path.parentPath && path.parentPath.isObjectPattern();
  }

};
exports.RestProperty = RestProperty;
const SpreadProperty = {
  types: ["RestElement"],

  checkPath(path) {
    return path.parentPath && path.parentPath.isObjectExpression();
  }

};
exports.SpreadProperty = SpreadProperty;
const ExistentialTypeParam = {
  types: ["ExistsTypeAnnotation"]
};
exports.ExistentialTypeParam = ExistentialTypeParam;
const NumericLiteralTypeAnnotation = {
  types: ["NumberLiteralTypeAnnotation"]
};
exports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;
const ForAwaitStatement = {
  types: ["ForOfStatement"],

  checkPath({
    node
  }) {
    return node.await === true;
  }

};
exports.ForAwaitStatement = ForAwaitStatement;

/***/ }),
/* 11 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
var _exportNames = {
  react: true,
  assertNode: true,
  createTypeAnnotationBasedOnTypeof: true,
  createUnionTypeAnnotation: true,
  createFlowUnionType: true,
  createTSUnionType: true,
  cloneNode: true,
  clone: true,
  cloneDeep: true,
  cloneDeepWithoutLoc: true,
  cloneWithoutLoc: true,
  addComment: true,
  addComments: true,
  inheritInnerComments: true,
  inheritLeadingComments: true,
  inheritsComments: true,
  inheritTrailingComments: true,
  removeComments: true,
  ensureBlock: true,
  toBindingIdentifierName: true,
  toBlock: true,
  toComputedKey: true,
  toExpression: true,
  toIdentifier: true,
  toKeyAlias: true,
  toSequenceExpression: true,
  toStatement: true,
  valueToNode: true,
  appendToMemberExpression: true,
  inherits: true,
  prependToMemberExpression: true,
  removeProperties: true,
  removePropertiesDeep: true,
  removeTypeDuplicates: true,
  getBindingIdentifiers: true,
  getOuterBindingIdentifiers: true,
  traverse: true,
  traverseFast: true,
  shallowEqual: true,
  is: true,
  isBinding: true,
  isBlockScoped: true,
  isImmutable: true,
  isLet: true,
  isNode: true,
  isNodesEquivalent: true,
  isPlaceholderType: true,
  isReferenced: true,
  isScope: true,
  isSpecifierDefault: true,
  isType: true,
  isValidES3Identifier: true,
  isValidIdentifier: true,
  isVar: true,
  matchesPattern: true,
  validate: true,
  buildMatchMemberExpression: true
};
Object.defineProperty(exports, "assertNode", ({
  enumerable: true,
  get: function () {
    return _assertNode.default;
  }
}));
Object.defineProperty(exports, "createTypeAnnotationBasedOnTypeof", ({
  enumerable: true,
  get: function () {
    return _createTypeAnnotationBasedOnTypeof.default;
  }
}));
Object.defineProperty(exports, "createUnionTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _createFlowUnionType.default;
  }
}));
Object.defineProperty(exports, "createFlowUnionType", ({
  enumerable: true,
  get: function () {
    return _createFlowUnionType.default;
  }
}));
Object.defineProperty(exports, "createTSUnionType", ({
  enumerable: true,
  get: function () {
    return _createTSUnionType.default;
  }
}));
Object.defineProperty(exports, "cloneNode", ({
  enumerable: true,
  get: function () {
    return _cloneNode.default;
  }
}));
Object.defineProperty(exports, "clone", ({
  enumerable: true,
  get: function () {
    return _clone.default;
  }
}));
Object.defineProperty(exports, "cloneDeep", ({
  enumerable: true,
  get: function () {
    return _cloneDeep.default;
  }
}));
Object.defineProperty(exports, "cloneDeepWithoutLoc", ({
  enumerable: true,
  get: function () {
    return _cloneDeepWithoutLoc.default;
  }
}));
Object.defineProperty(exports, "cloneWithoutLoc", ({
  enumerable: true,
  get: function () {
    return _cloneWithoutLoc.default;
  }
}));
Object.defineProperty(exports, "addComment", ({
  enumerable: true,
  get: function () {
    return _addComment.default;
  }
}));
Object.defineProperty(exports, "addComments", ({
  enumerable: true,
  get: function () {
    return _addComments.default;
  }
}));
Object.defineProperty(exports, "inheritInnerComments", ({
  enumerable: true,
  get: function () {
    return _inheritInnerComments.default;
  }
}));
Object.defineProperty(exports, "inheritLeadingComments", ({
  enumerable: true,
  get: function () {
    return _inheritLeadingComments.default;
  }
}));
Object.defineProperty(exports, "inheritsComments", ({
  enumerable: true,
  get: function () {
    return _inheritsComments.default;
  }
}));
Object.defineProperty(exports, "inheritTrailingComments", ({
  enumerable: true,
  get: function () {
    return _inheritTrailingComments.default;
  }
}));
Object.defineProperty(exports, "removeComments", ({
  enumerable: true,
  get: function () {
    return _removeComments.default;
  }
}));
Object.defineProperty(exports, "ensureBlock", ({
  enumerable: true,
  get: function () {
    return _ensureBlock.default;
  }
}));
Object.defineProperty(exports, "toBindingIdentifierName", ({
  enumerable: true,
  get: function () {
    return _toBindingIdentifierName.default;
  }
}));
Object.defineProperty(exports, "toBlock", ({
  enumerable: true,
  get: function () {
    return _toBlock.default;
  }
}));
Object.defineProperty(exports, "toComputedKey", ({
  enumerable: true,
  get: function () {
    return _toComputedKey.default;
  }
}));
Object.defineProperty(exports, "toExpression", ({
  enumerable: true,
  get: function () {
    return _toExpression.default;
  }
}));
Object.defineProperty(exports, "toIdentifier", ({
  enumerable: true,
  get: function () {
    return _toIdentifier.default;
  }
}));
Object.defineProperty(exports, "toKeyAlias", ({
  enumerable: true,
  get: function () {
    return _toKeyAlias.default;
  }
}));
Object.defineProperty(exports, "toSequenceExpression", ({
  enumerable: true,
  get: function () {
    return _toSequenceExpression.default;
  }
}));
Object.defineProperty(exports, "toStatement", ({
  enumerable: true,
  get: function () {
    return _toStatement.default;
  }
}));
Object.defineProperty(exports, "valueToNode", ({
  enumerable: true,
  get: function () {
    return _valueToNode.default;
  }
}));
Object.defineProperty(exports, "appendToMemberExpression", ({
  enumerable: true,
  get: function () {
    return _appendToMemberExpression.default;
  }
}));
Object.defineProperty(exports, "inherits", ({
  enumerable: true,
  get: function () {
    return _inherits.default;
  }
}));
Object.defineProperty(exports, "prependToMemberExpression", ({
  enumerable: true,
  get: function () {
    return _prependToMemberExpression.default;
  }
}));
Object.defineProperty(exports, "removeProperties", ({
  enumerable: true,
  get: function () {
    return _removeProperties.default;
  }
}));
Object.defineProperty(exports, "removePropertiesDeep", ({
  enumerable: true,
  get: function () {
    return _removePropertiesDeep.default;
  }
}));
Object.defineProperty(exports, "removeTypeDuplicates", ({
  enumerable: true,
  get: function () {
    return _removeTypeDuplicates.default;
  }
}));
Object.defineProperty(exports, "getBindingIdentifiers", ({
  enumerable: true,
  get: function () {
    return _getBindingIdentifiers.default;
  }
}));
Object.defineProperty(exports, "getOuterBindingIdentifiers", ({
  enumerable: true,
  get: function () {
    return _getOuterBindingIdentifiers.default;
  }
}));
Object.defineProperty(exports, "traverse", ({
  enumerable: true,
  get: function () {
    return _traverse.default;
  }
}));
Object.defineProperty(exports, "traverseFast", ({
  enumerable: true,
  get: function () {
    return _traverseFast.default;
  }
}));
Object.defineProperty(exports, "shallowEqual", ({
  enumerable: true,
  get: function () {
    return _shallowEqual.default;
  }
}));
Object.defineProperty(exports, "is", ({
  enumerable: true,
  get: function () {
    return _is.default;
  }
}));
Object.defineProperty(exports, "isBinding", ({
  enumerable: true,
  get: function () {
    return _isBinding.default;
  }
}));
Object.defineProperty(exports, "isBlockScoped", ({
  enumerable: true,
  get: function () {
    return _isBlockScoped.default;
  }
}));
Object.defineProperty(exports, "isImmutable", ({
  enumerable: true,
  get: function () {
    return _isImmutable.default;
  }
}));
Object.defineProperty(exports, "isLet", ({
  enumerable: true,
  get: function () {
    return _isLet.default;
  }
}));
Object.defineProperty(exports, "isNode", ({
  enumerable: true,
  get: function () {
    return _isNode.default;
  }
}));
Object.defineProperty(exports, "isNodesEquivalent", ({
  enumerable: true,
  get: function () {
    return _isNodesEquivalent.default;
  }
}));
Object.defineProperty(exports, "isPlaceholderType", ({
  enumerable: true,
  get: function () {
    return _isPlaceholderType.default;
  }
}));
Object.defineProperty(exports, "isReferenced", ({
  enumerable: true,
  get: function () {
    return _isReferenced.default;
  }
}));
Object.defineProperty(exports, "isScope", ({
  enumerable: true,
  get: function () {
    return _isScope.default;
  }
}));
Object.defineProperty(exports, "isSpecifierDefault", ({
  enumerable: true,
  get: function () {
    return _isSpecifierDefault.default;
  }
}));
Object.defineProperty(exports, "isType", ({
  enumerable: true,
  get: function () {
    return _isType.default;
  }
}));
Object.defineProperty(exports, "isValidES3Identifier", ({
  enumerable: true,
  get: function () {
    return _isValidES3Identifier.default;
  }
}));
Object.defineProperty(exports, "isValidIdentifier", ({
  enumerable: true,
  get: function () {
    return _isValidIdentifier.default;
  }
}));
Object.defineProperty(exports, "isVar", ({
  enumerable: true,
  get: function () {
    return _isVar.default;
  }
}));
Object.defineProperty(exports, "matchesPattern", ({
  enumerable: true,
  get: function () {
    return _matchesPattern.default;
  }
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.default;
  }
}));
Object.defineProperty(exports, "buildMatchMemberExpression", ({
  enumerable: true,
  get: function () {
    return _buildMatchMemberExpression.default;
  }
}));
exports.react = void 0;

var _isReactComponent = __webpack_require__(12);

var _isCompatTag = __webpack_require__(17);

var _buildChildren = __webpack_require__(18);

var _assertNode = __webpack_require__(41);

var _generated = __webpack_require__(43);

Object.keys(_generated).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _generated[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _generated[key];
    }
  });
});

var _createTypeAnnotationBasedOnTypeof = __webpack_require__(44);

var _createFlowUnionType = __webpack_require__(45);

var _createTSUnionType = __webpack_require__(47);

var _generated2 = __webpack_require__(20);

Object.keys(_generated2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _generated2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _generated2[key];
    }
  });
});

var _uppercase = __webpack_require__(49);

Object.keys(_uppercase).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _uppercase[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _uppercase[key];
    }
  });
});

var _cloneNode = __webpack_require__(50);

var _clone = __webpack_require__(51);

var _cloneDeep = __webpack_require__(52);

var _cloneDeepWithoutLoc = __webpack_require__(53);

var _cloneWithoutLoc = __webpack_require__(54);

var _addComment = __webpack_require__(55);

var _addComments = __webpack_require__(56);

var _inheritInnerComments = __webpack_require__(57);

var _inheritLeadingComments = __webpack_require__(59);

var _inheritsComments = __webpack_require__(60);

var _inheritTrailingComments = __webpack_require__(61);

var _removeComments = __webpack_require__(62);

var _generated3 = __webpack_require__(63);

Object.keys(_generated3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _generated3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _generated3[key];
    }
  });
});

var _constants = __webpack_require__(32);

Object.keys(_constants).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _constants[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _constants[key];
    }
  });
});

var _ensureBlock = __webpack_require__(64);

var _toBindingIdentifierName = __webpack_require__(66);

var _toBlock = __webpack_require__(65);

var _toComputedKey = __webpack_require__(68);

var _toExpression = __webpack_require__(69);

var _toIdentifier = __webpack_require__(67);

var _toKeyAlias = __webpack_require__(70);

var _toSequenceExpression = __webpack_require__(74);

var _toStatement = __webpack_require__(77);

var _valueToNode = __webpack_require__(78);

var _definitions = __webpack_require__(22);

Object.keys(_definitions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _definitions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _definitions[key];
    }
  });
});

var _appendToMemberExpression = __webpack_require__(79);

var _inherits = __webpack_require__(80);

var _prependToMemberExpression = __webpack_require__(81);

var _removeProperties = __webpack_require__(73);

var _removePropertiesDeep = __webpack_require__(71);

var _removeTypeDuplicates = __webpack_require__(46);

var _getBindingIdentifiers = __webpack_require__(76);

var _getOuterBindingIdentifiers = __webpack_require__(82);

var _traverse = __webpack_require__(83);

Object.keys(_traverse).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _traverse[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _traverse[key];
    }
  });
});

var _traverseFast = __webpack_require__(72);

var _shallowEqual = __webpack_require__(16);

var _is = __webpack_require__(25);

var _isBinding = __webpack_require__(84);

var _isBlockScoped = __webpack_require__(85);

var _isImmutable = __webpack_require__(87);

var _isLet = __webpack_require__(86);

var _isNode = __webpack_require__(42);

var _isNodesEquivalent = __webpack_require__(88);

var _isPlaceholderType = __webpack_require__(27);

var _isReferenced = __webpack_require__(89);

var _isScope = __webpack_require__(90);

var _isSpecifierDefault = __webpack_require__(91);

var _isType = __webpack_require__(26);

var _isValidES3Identifier = __webpack_require__(92);

var _isValidIdentifier = __webpack_require__(28);

var _isVar = __webpack_require__(93);

var _matchesPattern = __webpack_require__(14);

var _validate = __webpack_require__(34);

var _buildMatchMemberExpression = __webpack_require__(13);

var _generated4 = __webpack_require__(15);

Object.keys(_generated4).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _generated4[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _generated4[key];
    }
  });
});

var _generated5 = __webpack_require__(94);

Object.keys(_generated5).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _generated5[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _generated5[key];
    }
  });
});
const react = {
  isReactComponent: _isReactComponent.default,
  isCompatTag: _isCompatTag.default,
  buildChildren: _buildChildren.default
};
exports.react = react;

/***/ }),
/* 12 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _buildMatchMemberExpression = __webpack_require__(13);

const isReactComponent = (0, _buildMatchMemberExpression.default)("React.Component");
var _default = isReactComponent;
exports.default = _default;

/***/ }),
/* 13 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = buildMatchMemberExpression;

var _matchesPattern = __webpack_require__(14);

function buildMatchMemberExpression(match, allowPartial) {
  const parts = match.split(".");
  return member => (0, _matchesPattern.default)(member, parts, allowPartial);
}

/***/ }),
/* 14 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = matchesPattern;

var _generated = __webpack_require__(15);

function matchesPattern(member, match, allowPartial) {
  if (!(0, _generated.isMemberExpression)(member)) return false;
  const parts = Array.isArray(match) ? match : match.split(".");
  const nodes = [];
  let node;

  for (node = member; (0, _generated.isMemberExpression)(node); node = node.object) {
    nodes.push(node.property);
  }

  nodes.push(node);
  if (nodes.length < parts.length) return false;
  if (!allowPartial && nodes.length > parts.length) return false;

  for (let i = 0, j = nodes.length - 1; i < parts.length; i++, j--) {
    const node = nodes[j];
    let value;

    if ((0, _generated.isIdentifier)(node)) {
      value = node.name;
    } else if ((0, _generated.isStringLiteral)(node)) {
      value = node.value;
    } else if ((0, _generated.isThisExpression)(node)) {
      value = "this";
    } else {
      return false;
    }

    if (parts[i] !== value) return false;
  }

  return true;
}

/***/ }),
/* 15 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isArrayExpression = isArrayExpression;
exports.isAssignmentExpression = isAssignmentExpression;
exports.isBinaryExpression = isBinaryExpression;
exports.isInterpreterDirective = isInterpreterDirective;
exports.isDirective = isDirective;
exports.isDirectiveLiteral = isDirectiveLiteral;
exports.isBlockStatement = isBlockStatement;
exports.isBreakStatement = isBreakStatement;
exports.isCallExpression = isCallExpression;
exports.isCatchClause = isCatchClause;
exports.isConditionalExpression = isConditionalExpression;
exports.isContinueStatement = isContinueStatement;
exports.isDebuggerStatement = isDebuggerStatement;
exports.isDoWhileStatement = isDoWhileStatement;
exports.isEmptyStatement = isEmptyStatement;
exports.isExpressionStatement = isExpressionStatement;
exports.isFile = isFile;
exports.isForInStatement = isForInStatement;
exports.isForStatement = isForStatement;
exports.isFunctionDeclaration = isFunctionDeclaration;
exports.isFunctionExpression = isFunctionExpression;
exports.isIdentifier = isIdentifier;
exports.isIfStatement = isIfStatement;
exports.isLabeledStatement = isLabeledStatement;
exports.isStringLiteral = isStringLiteral;
exports.isNumericLiteral = isNumericLiteral;
exports.isNullLiteral = isNullLiteral;
exports.isBooleanLiteral = isBooleanLiteral;
exports.isRegExpLiteral = isRegExpLiteral;
exports.isLogicalExpression = isLogicalExpression;
exports.isMemberExpression = isMemberExpression;
exports.isNewExpression = isNewExpression;
exports.isProgram = isProgram;
exports.isObjectExpression = isObjectExpression;
exports.isObjectMethod = isObjectMethod;
exports.isObjectProperty = isObjectProperty;
exports.isRestElement = isRestElement;
exports.isReturnStatement = isReturnStatement;
exports.isSequenceExpression = isSequenceExpression;
exports.isParenthesizedExpression = isParenthesizedExpression;
exports.isSwitchCase = isSwitchCase;
exports.isSwitchStatement = isSwitchStatement;
exports.isThisExpression = isThisExpression;
exports.isThrowStatement = isThrowStatement;
exports.isTryStatement = isTryStatement;
exports.isUnaryExpression = isUnaryExpression;
exports.isUpdateExpression = isUpdateExpression;
exports.isVariableDeclaration = isVariableDeclaration;
exports.isVariableDeclarator = isVariableDeclarator;
exports.isWhileStatement = isWhileStatement;
exports.isWithStatement = isWithStatement;
exports.isAssignmentPattern = isAssignmentPattern;
exports.isArrayPattern = isArrayPattern;
exports.isArrowFunctionExpression = isArrowFunctionExpression;
exports.isClassBody = isClassBody;
exports.isClassExpression = isClassExpression;
exports.isClassDeclaration = isClassDeclaration;
exports.isExportAllDeclaration = isExportAllDeclaration;
exports.isExportDefaultDeclaration = isExportDefaultDeclaration;
exports.isExportNamedDeclaration = isExportNamedDeclaration;
exports.isExportSpecifier = isExportSpecifier;
exports.isForOfStatement = isForOfStatement;
exports.isImportDeclaration = isImportDeclaration;
exports.isImportDefaultSpecifier = isImportDefaultSpecifier;
exports.isImportNamespaceSpecifier = isImportNamespaceSpecifier;
exports.isImportSpecifier = isImportSpecifier;
exports.isMetaProperty = isMetaProperty;
exports.isClassMethod = isClassMethod;
exports.isObjectPattern = isObjectPattern;
exports.isSpreadElement = isSpreadElement;
exports.isSuper = isSuper;
exports.isTaggedTemplateExpression = isTaggedTemplateExpression;
exports.isTemplateElement = isTemplateElement;
exports.isTemplateLiteral = isTemplateLiteral;
exports.isYieldExpression = isYieldExpression;
exports.isAwaitExpression = isAwaitExpression;
exports.isImport = isImport;
exports.isBigIntLiteral = isBigIntLiteral;
exports.isExportNamespaceSpecifier = isExportNamespaceSpecifier;
exports.isOptionalMemberExpression = isOptionalMemberExpression;
exports.isOptionalCallExpression = isOptionalCallExpression;
exports.isAnyTypeAnnotation = isAnyTypeAnnotation;
exports.isArrayTypeAnnotation = isArrayTypeAnnotation;
exports.isBooleanTypeAnnotation = isBooleanTypeAnnotation;
exports.isBooleanLiteralTypeAnnotation = isBooleanLiteralTypeAnnotation;
exports.isNullLiteralTypeAnnotation = isNullLiteralTypeAnnotation;
exports.isClassImplements = isClassImplements;
exports.isDeclareClass = isDeclareClass;
exports.isDeclareFunction = isDeclareFunction;
exports.isDeclareInterface = isDeclareInterface;
exports.isDeclareModule = isDeclareModule;
exports.isDeclareModuleExports = isDeclareModuleExports;
exports.isDeclareTypeAlias = isDeclareTypeAlias;
exports.isDeclareOpaqueType = isDeclareOpaqueType;
exports.isDeclareVariable = isDeclareVariable;
exports.isDeclareExportDeclaration = isDeclareExportDeclaration;
exports.isDeclareExportAllDeclaration = isDeclareExportAllDeclaration;
exports.isDeclaredPredicate = isDeclaredPredicate;
exports.isExistsTypeAnnotation = isExistsTypeAnnotation;
exports.isFunctionTypeAnnotation = isFunctionTypeAnnotation;
exports.isFunctionTypeParam = isFunctionTypeParam;
exports.isGenericTypeAnnotation = isGenericTypeAnnotation;
exports.isInferredPredicate = isInferredPredicate;
exports.isInterfaceExtends = isInterfaceExtends;
exports.isInterfaceDeclaration = isInterfaceDeclaration;
exports.isInterfaceTypeAnnotation = isInterfaceTypeAnnotation;
exports.isIntersectionTypeAnnotation = isIntersectionTypeAnnotation;
exports.isMixedTypeAnnotation = isMixedTypeAnnotation;
exports.isEmptyTypeAnnotation = isEmptyTypeAnnotation;
exports.isNullableTypeAnnotation = isNullableTypeAnnotation;
exports.isNumberLiteralTypeAnnotation = isNumberLiteralTypeAnnotation;
exports.isNumberTypeAnnotation = isNumberTypeAnnotation;
exports.isObjectTypeAnnotation = isObjectTypeAnnotation;
exports.isObjectTypeInternalSlot = isObjectTypeInternalSlot;
exports.isObjectTypeCallProperty = isObjectTypeCallProperty;
exports.isObjectTypeIndexer = isObjectTypeIndexer;
exports.isObjectTypeProperty = isObjectTypeProperty;
exports.isObjectTypeSpreadProperty = isObjectTypeSpreadProperty;
exports.isOpaqueType = isOpaqueType;
exports.isQualifiedTypeIdentifier = isQualifiedTypeIdentifier;
exports.isStringLiteralTypeAnnotation = isStringLiteralTypeAnnotation;
exports.isStringTypeAnnotation = isStringTypeAnnotation;
exports.isSymbolTypeAnnotation = isSymbolTypeAnnotation;
exports.isThisTypeAnnotation = isThisTypeAnnotation;
exports.isTupleTypeAnnotation = isTupleTypeAnnotation;
exports.isTypeofTypeAnnotation = isTypeofTypeAnnotation;
exports.isTypeAlias = isTypeAlias;
exports.isTypeAnnotation = isTypeAnnotation;
exports.isTypeCastExpression = isTypeCastExpression;
exports.isTypeParameter = isTypeParameter;
exports.isTypeParameterDeclaration = isTypeParameterDeclaration;
exports.isTypeParameterInstantiation = isTypeParameterInstantiation;
exports.isUnionTypeAnnotation = isUnionTypeAnnotation;
exports.isVariance = isVariance;
exports.isVoidTypeAnnotation = isVoidTypeAnnotation;
exports.isEnumDeclaration = isEnumDeclaration;
exports.isEnumBooleanBody = isEnumBooleanBody;
exports.isEnumNumberBody = isEnumNumberBody;
exports.isEnumStringBody = isEnumStringBody;
exports.isEnumSymbolBody = isEnumSymbolBody;
exports.isEnumBooleanMember = isEnumBooleanMember;
exports.isEnumNumberMember = isEnumNumberMember;
exports.isEnumStringMember = isEnumStringMember;
exports.isEnumDefaultedMember = isEnumDefaultedMember;
exports.isIndexedAccessType = isIndexedAccessType;
exports.isOptionalIndexedAccessType = isOptionalIndexedAccessType;
exports.isJSXAttribute = isJSXAttribute;
exports.isJSXClosingElement = isJSXClosingElement;
exports.isJSXElement = isJSXElement;
exports.isJSXEmptyExpression = isJSXEmptyExpression;
exports.isJSXExpressionContainer = isJSXExpressionContainer;
exports.isJSXSpreadChild = isJSXSpreadChild;
exports.isJSXIdentifier = isJSXIdentifier;
exports.isJSXMemberExpression = isJSXMemberExpression;
exports.isJSXNamespacedName = isJSXNamespacedName;
exports.isJSXOpeningElement = isJSXOpeningElement;
exports.isJSXSpreadAttribute = isJSXSpreadAttribute;
exports.isJSXText = isJSXText;
exports.isJSXFragment = isJSXFragment;
exports.isJSXOpeningFragment = isJSXOpeningFragment;
exports.isJSXClosingFragment = isJSXClosingFragment;
exports.isNoop = isNoop;
exports.isPlaceholder = isPlaceholder;
exports.isV8IntrinsicIdentifier = isV8IntrinsicIdentifier;
exports.isArgumentPlaceholder = isArgumentPlaceholder;
exports.isBindExpression = isBindExpression;
exports.isClassProperty = isClassProperty;
exports.isPipelineTopicExpression = isPipelineTopicExpression;
exports.isPipelineBareFunction = isPipelineBareFunction;
exports.isPipelinePrimaryTopicReference = isPipelinePrimaryTopicReference;
exports.isClassPrivateProperty = isClassPrivateProperty;
exports.isClassPrivateMethod = isClassPrivateMethod;
exports.isImportAttribute = isImportAttribute;
exports.isDecorator = isDecorator;
exports.isDoExpression = isDoExpression;
exports.isExportDefaultSpecifier = isExportDefaultSpecifier;
exports.isPrivateName = isPrivateName;
exports.isRecordExpression = isRecordExpression;
exports.isTupleExpression = isTupleExpression;
exports.isDecimalLiteral = isDecimalLiteral;
exports.isStaticBlock = isStaticBlock;
exports.isModuleExpression = isModuleExpression;
exports.isTSParameterProperty = isTSParameterProperty;
exports.isTSDeclareFunction = isTSDeclareFunction;
exports.isTSDeclareMethod = isTSDeclareMethod;
exports.isTSQualifiedName = isTSQualifiedName;
exports.isTSCallSignatureDeclaration = isTSCallSignatureDeclaration;
exports.isTSConstructSignatureDeclaration = isTSConstructSignatureDeclaration;
exports.isTSPropertySignature = isTSPropertySignature;
exports.isTSMethodSignature = isTSMethodSignature;
exports.isTSIndexSignature = isTSIndexSignature;
exports.isTSAnyKeyword = isTSAnyKeyword;
exports.isTSBooleanKeyword = isTSBooleanKeyword;
exports.isTSBigIntKeyword = isTSBigIntKeyword;
exports.isTSIntrinsicKeyword = isTSIntrinsicKeyword;
exports.isTSNeverKeyword = isTSNeverKeyword;
exports.isTSNullKeyword = isTSNullKeyword;
exports.isTSNumberKeyword = isTSNumberKeyword;
exports.isTSObjectKeyword = isTSObjectKeyword;
exports.isTSStringKeyword = isTSStringKeyword;
exports.isTSSymbolKeyword = isTSSymbolKeyword;
exports.isTSUndefinedKeyword = isTSUndefinedKeyword;
exports.isTSUnknownKeyword = isTSUnknownKeyword;
exports.isTSVoidKeyword = isTSVoidKeyword;
exports.isTSThisType = isTSThisType;
exports.isTSFunctionType = isTSFunctionType;
exports.isTSConstructorType = isTSConstructorType;
exports.isTSTypeReference = isTSTypeReference;
exports.isTSTypePredicate = isTSTypePredicate;
exports.isTSTypeQuery = isTSTypeQuery;
exports.isTSTypeLiteral = isTSTypeLiteral;
exports.isTSArrayType = isTSArrayType;
exports.isTSTupleType = isTSTupleType;
exports.isTSOptionalType = isTSOptionalType;
exports.isTSRestType = isTSRestType;
exports.isTSNamedTupleMember = isTSNamedTupleMember;
exports.isTSUnionType = isTSUnionType;
exports.isTSIntersectionType = isTSIntersectionType;
exports.isTSConditionalType = isTSConditionalType;
exports.isTSInferType = isTSInferType;
exports.isTSParenthesizedType = isTSParenthesizedType;
exports.isTSTypeOperator = isTSTypeOperator;
exports.isTSIndexedAccessType = isTSIndexedAccessType;
exports.isTSMappedType = isTSMappedType;
exports.isTSLiteralType = isTSLiteralType;
exports.isTSExpressionWithTypeArguments = isTSExpressionWithTypeArguments;
exports.isTSInterfaceDeclaration = isTSInterfaceDeclaration;
exports.isTSInterfaceBody = isTSInterfaceBody;
exports.isTSTypeAliasDeclaration = isTSTypeAliasDeclaration;
exports.isTSAsExpression = isTSAsExpression;
exports.isTSTypeAssertion = isTSTypeAssertion;
exports.isTSEnumDeclaration = isTSEnumDeclaration;
exports.isTSEnumMember = isTSEnumMember;
exports.isTSModuleDeclaration = isTSModuleDeclaration;
exports.isTSModuleBlock = isTSModuleBlock;
exports.isTSImportType = isTSImportType;
exports.isTSImportEqualsDeclaration = isTSImportEqualsDeclaration;
exports.isTSExternalModuleReference = isTSExternalModuleReference;
exports.isTSNonNullExpression = isTSNonNullExpression;
exports.isTSExportAssignment = isTSExportAssignment;
exports.isTSNamespaceExportDeclaration = isTSNamespaceExportDeclaration;
exports.isTSTypeAnnotation = isTSTypeAnnotation;
exports.isTSTypeParameterInstantiation = isTSTypeParameterInstantiation;
exports.isTSTypeParameterDeclaration = isTSTypeParameterDeclaration;
exports.isTSTypeParameter = isTSTypeParameter;
exports.isExpression = isExpression;
exports.isBinary = isBinary;
exports.isScopable = isScopable;
exports.isBlockParent = isBlockParent;
exports.isBlock = isBlock;
exports.isStatement = isStatement;
exports.isTerminatorless = isTerminatorless;
exports.isCompletionStatement = isCompletionStatement;
exports.isConditional = isConditional;
exports.isLoop = isLoop;
exports.isWhile = isWhile;
exports.isExpressionWrapper = isExpressionWrapper;
exports.isFor = isFor;
exports.isForXStatement = isForXStatement;
exports.isFunction = isFunction;
exports.isFunctionParent = isFunctionParent;
exports.isPureish = isPureish;
exports.isDeclaration = isDeclaration;
exports.isPatternLike = isPatternLike;
exports.isLVal = isLVal;
exports.isTSEntityName = isTSEntityName;
exports.isLiteral = isLiteral;
exports.isImmutable = isImmutable;
exports.isUserWhitespacable = isUserWhitespacable;
exports.isMethod = isMethod;
exports.isObjectMember = isObjectMember;
exports.isProperty = isProperty;
exports.isUnaryLike = isUnaryLike;
exports.isPattern = isPattern;
exports.isClass = isClass;
exports.isModuleDeclaration = isModuleDeclaration;
exports.isExportDeclaration = isExportDeclaration;
exports.isModuleSpecifier = isModuleSpecifier;
exports.isFlow = isFlow;
exports.isFlowType = isFlowType;
exports.isFlowBaseAnnotation = isFlowBaseAnnotation;
exports.isFlowDeclaration = isFlowDeclaration;
exports.isFlowPredicate = isFlowPredicate;
exports.isEnumBody = isEnumBody;
exports.isEnumMember = isEnumMember;
exports.isJSX = isJSX;
exports.isPrivate = isPrivate;
exports.isTSTypeElement = isTSTypeElement;
exports.isTSType = isTSType;
exports.isTSBaseType = isTSBaseType;
exports.isNumberLiteral = isNumberLiteral;
exports.isRegexLiteral = isRegexLiteral;
exports.isRestProperty = isRestProperty;
exports.isSpreadProperty = isSpreadProperty;

var _shallowEqual = __webpack_require__(16);

function isArrayExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ArrayExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isAssignmentExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "AssignmentExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBinaryExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BinaryExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isInterpreterDirective(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "InterpreterDirective") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDirective(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Directive") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDirectiveLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DirectiveLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBlockStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BlockStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBreakStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BreakStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isCallExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "CallExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isCatchClause(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "CatchClause") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isConditionalExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ConditionalExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isContinueStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ContinueStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDebuggerStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DebuggerStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDoWhileStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DoWhileStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEmptyStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EmptyStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExpressionStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExpressionStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFile(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "File") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isForInStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ForInStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isForStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ForStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFunctionDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "FunctionDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFunctionExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "FunctionExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isIdentifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Identifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isIfStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "IfStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isLabeledStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "LabeledStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isStringLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "StringLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNumericLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NumericLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNullLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NullLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBooleanLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BooleanLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isRegExpLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "RegExpLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isLogicalExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "LogicalExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isMemberExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "MemberExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNewExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NewExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isProgram(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Program") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectMethod(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectMethod") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isRestElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "RestElement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isReturnStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ReturnStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSequenceExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "SequenceExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isParenthesizedExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ParenthesizedExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSwitchCase(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "SwitchCase") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSwitchStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "SwitchStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isThisExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ThisExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isThrowStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ThrowStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTryStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TryStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isUnaryExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "UnaryExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isUpdateExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "UpdateExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isVariableDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "VariableDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isVariableDeclarator(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "VariableDeclarator") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isWhileStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "WhileStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isWithStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "WithStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isAssignmentPattern(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "AssignmentPattern") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isArrayPattern(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ArrayPattern") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isArrowFunctionExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ArrowFunctionExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassBody") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportAllDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExportAllDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportDefaultDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExportDefaultDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportNamedDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExportNamedDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExportSpecifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isForOfStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ForOfStatement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImportDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ImportDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImportDefaultSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ImportDefaultSpecifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImportNamespaceSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ImportNamespaceSpecifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImportSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ImportSpecifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isMetaProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "MetaProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassMethod(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassMethod") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectPattern(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectPattern") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSpreadElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "SpreadElement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSuper(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Super") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTaggedTemplateExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TaggedTemplateExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTemplateElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TemplateElement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTemplateLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TemplateLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isYieldExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "YieldExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isAwaitExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "AwaitExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImport(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Import") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBigIntLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BigIntLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportNamespaceSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExportNamespaceSpecifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isOptionalMemberExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "OptionalMemberExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isOptionalCallExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "OptionalCallExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isAnyTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "AnyTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isArrayTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ArrayTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBooleanTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BooleanTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBooleanLiteralTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BooleanLiteralTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNullLiteralTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NullLiteralTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassImplements(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassImplements") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareClass(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareClass") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareFunction(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareFunction") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareInterface(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareInterface") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareModule(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareModule") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareModuleExports(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareModuleExports") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareTypeAlias(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareTypeAlias") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareOpaqueType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareOpaqueType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareVariable(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareVariable") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareExportDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareExportDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclareExportAllDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclareExportAllDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclaredPredicate(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DeclaredPredicate") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExistsTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExistsTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFunctionTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "FunctionTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFunctionTypeParam(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "FunctionTypeParam") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isGenericTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "GenericTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isInferredPredicate(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "InferredPredicate") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isInterfaceExtends(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "InterfaceExtends") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isInterfaceDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "InterfaceDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isInterfaceTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "InterfaceTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isIntersectionTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "IntersectionTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isMixedTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "MixedTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEmptyTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EmptyTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNullableTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NullableTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNumberLiteralTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NumberLiteralTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNumberTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NumberTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectTypeInternalSlot(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectTypeInternalSlot") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectTypeCallProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectTypeCallProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectTypeIndexer(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectTypeIndexer") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectTypeProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectTypeProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectTypeSpreadProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ObjectTypeSpreadProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isOpaqueType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "OpaqueType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isQualifiedTypeIdentifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "QualifiedTypeIdentifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isStringLiteralTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "StringLiteralTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isStringTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "StringTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSymbolTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "SymbolTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isThisTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ThisTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTupleTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TupleTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeofTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeofTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeAlias(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeAlias") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeCastExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeCastExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeParameter(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeParameter") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeParameterDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeParameterDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTypeParameterInstantiation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TypeParameterInstantiation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isUnionTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "UnionTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isVariance(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Variance") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isVoidTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "VoidTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumBooleanBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumBooleanBody") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumNumberBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumNumberBody") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumStringBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumStringBody") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumSymbolBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumSymbolBody") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumBooleanMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumBooleanMember") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumNumberMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumNumberMember") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumStringMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumStringMember") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumDefaultedMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "EnumDefaultedMember") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isIndexedAccessType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "IndexedAccessType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isOptionalIndexedAccessType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "OptionalIndexedAccessType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXAttribute(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXAttribute") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXClosingElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXClosingElement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXElement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXEmptyExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXEmptyExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXExpressionContainer(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXExpressionContainer") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXSpreadChild(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXSpreadChild") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXIdentifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXIdentifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXMemberExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXMemberExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXNamespacedName(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXNamespacedName") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXOpeningElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXOpeningElement") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXSpreadAttribute(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXSpreadAttribute") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXText(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXText") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXFragment(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXFragment") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXOpeningFragment(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXOpeningFragment") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSXClosingFragment(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "JSXClosingFragment") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNoop(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Noop") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPlaceholder(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Placeholder") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isV8IntrinsicIdentifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "V8IntrinsicIdentifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isArgumentPlaceholder(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ArgumentPlaceholder") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBindExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "BindExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPipelineTopicExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "PipelineTopicExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPipelineBareFunction(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "PipelineBareFunction") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPipelinePrimaryTopicReference(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "PipelinePrimaryTopicReference") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassPrivateProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassPrivateProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClassPrivateMethod(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ClassPrivateMethod") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImportAttribute(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ImportAttribute") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDecorator(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "Decorator") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDoExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DoExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportDefaultSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ExportDefaultSpecifier") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPrivateName(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "PrivateName") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isRecordExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "RecordExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTupleExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TupleExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDecimalLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "DecimalLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isStaticBlock(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "StaticBlock") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isModuleExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "ModuleExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSParameterProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSParameterProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSDeclareFunction(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSDeclareFunction") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSDeclareMethod(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSDeclareMethod") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSQualifiedName(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSQualifiedName") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSCallSignatureDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSCallSignatureDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSConstructSignatureDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSConstructSignatureDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSPropertySignature(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSPropertySignature") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSMethodSignature(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSMethodSignature") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSIndexSignature(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSIndexSignature") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSAnyKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSAnyKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSBooleanKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSBooleanKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSBigIntKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSBigIntKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSIntrinsicKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSIntrinsicKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSNeverKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSNeverKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSNullKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSNullKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSNumberKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSNumberKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSObjectKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSObjectKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSStringKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSStringKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSSymbolKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSSymbolKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSUndefinedKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSUndefinedKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSUnknownKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSUnknownKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSVoidKeyword(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSVoidKeyword") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSThisType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSThisType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSFunctionType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSFunctionType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSConstructorType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSConstructorType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeReference(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeReference") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypePredicate(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypePredicate") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeQuery(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeQuery") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSArrayType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSArrayType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTupleType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTupleType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSOptionalType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSOptionalType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSRestType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSRestType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSNamedTupleMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSNamedTupleMember") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSUnionType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSUnionType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSIntersectionType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSIntersectionType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSConditionalType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSConditionalType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSInferType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSInferType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSParenthesizedType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSParenthesizedType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeOperator(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeOperator") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSIndexedAccessType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSIndexedAccessType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSMappedType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSMappedType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSLiteralType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSLiteralType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSExpressionWithTypeArguments(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSExpressionWithTypeArguments") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSInterfaceDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSInterfaceDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSInterfaceBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSInterfaceBody") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeAliasDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeAliasDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSAsExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSAsExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeAssertion(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeAssertion") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSEnumDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSEnumDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSEnumMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSEnumMember") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSModuleDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSModuleDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSModuleBlock(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSModuleBlock") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSImportType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSImportType") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSImportEqualsDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSImportEqualsDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSExternalModuleReference(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSExternalModuleReference") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSNonNullExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSNonNullExpression") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSExportAssignment(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSExportAssignment") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSNamespaceExportDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSNamespaceExportDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeAnnotation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeParameterInstantiation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeParameterInstantiation") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeParameterDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeParameterDeclaration") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeParameter(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "TSTypeParameter") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExpression(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ArrayExpression" === nodeType || "AssignmentExpression" === nodeType || "BinaryExpression" === nodeType || "CallExpression" === nodeType || "ConditionalExpression" === nodeType || "FunctionExpression" === nodeType || "Identifier" === nodeType || "StringLiteral" === nodeType || "NumericLiteral" === nodeType || "NullLiteral" === nodeType || "BooleanLiteral" === nodeType || "RegExpLiteral" === nodeType || "LogicalExpression" === nodeType || "MemberExpression" === nodeType || "NewExpression" === nodeType || "ObjectExpression" === nodeType || "SequenceExpression" === nodeType || "ParenthesizedExpression" === nodeType || "ThisExpression" === nodeType || "UnaryExpression" === nodeType || "UpdateExpression" === nodeType || "ArrowFunctionExpression" === nodeType || "ClassExpression" === nodeType || "MetaProperty" === nodeType || "Super" === nodeType || "TaggedTemplateExpression" === nodeType || "TemplateLiteral" === nodeType || "YieldExpression" === nodeType || "AwaitExpression" === nodeType || "Import" === nodeType || "BigIntLiteral" === nodeType || "OptionalMemberExpression" === nodeType || "OptionalCallExpression" === nodeType || "TypeCastExpression" === nodeType || "JSXElement" === nodeType || "JSXFragment" === nodeType || "BindExpression" === nodeType || "PipelinePrimaryTopicReference" === nodeType || "DoExpression" === nodeType || "RecordExpression" === nodeType || "TupleExpression" === nodeType || "DecimalLiteral" === nodeType || "ModuleExpression" === nodeType || "TSAsExpression" === nodeType || "TSTypeAssertion" === nodeType || "TSNonNullExpression" === nodeType || nodeType === "Placeholder" && ("Expression" === node.expectedNode || "Identifier" === node.expectedNode || "StringLiteral" === node.expectedNode)) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBinary(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BinaryExpression" === nodeType || "LogicalExpression" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isScopable(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BlockStatement" === nodeType || "CatchClause" === nodeType || "DoWhileStatement" === nodeType || "ForInStatement" === nodeType || "ForStatement" === nodeType || "FunctionDeclaration" === nodeType || "FunctionExpression" === nodeType || "Program" === nodeType || "ObjectMethod" === nodeType || "SwitchStatement" === nodeType || "WhileStatement" === nodeType || "ArrowFunctionExpression" === nodeType || "ClassExpression" === nodeType || "ClassDeclaration" === nodeType || "ForOfStatement" === nodeType || "ClassMethod" === nodeType || "ClassPrivateMethod" === nodeType || "StaticBlock" === nodeType || "TSModuleBlock" === nodeType || nodeType === "Placeholder" && "BlockStatement" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBlockParent(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BlockStatement" === nodeType || "CatchClause" === nodeType || "DoWhileStatement" === nodeType || "ForInStatement" === nodeType || "ForStatement" === nodeType || "FunctionDeclaration" === nodeType || "FunctionExpression" === nodeType || "Program" === nodeType || "ObjectMethod" === nodeType || "SwitchStatement" === nodeType || "WhileStatement" === nodeType || "ArrowFunctionExpression" === nodeType || "ForOfStatement" === nodeType || "ClassMethod" === nodeType || "ClassPrivateMethod" === nodeType || "StaticBlock" === nodeType || "TSModuleBlock" === nodeType || nodeType === "Placeholder" && "BlockStatement" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isBlock(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BlockStatement" === nodeType || "Program" === nodeType || "TSModuleBlock" === nodeType || nodeType === "Placeholder" && "BlockStatement" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BlockStatement" === nodeType || "BreakStatement" === nodeType || "ContinueStatement" === nodeType || "DebuggerStatement" === nodeType || "DoWhileStatement" === nodeType || "EmptyStatement" === nodeType || "ExpressionStatement" === nodeType || "ForInStatement" === nodeType || "ForStatement" === nodeType || "FunctionDeclaration" === nodeType || "IfStatement" === nodeType || "LabeledStatement" === nodeType || "ReturnStatement" === nodeType || "SwitchStatement" === nodeType || "ThrowStatement" === nodeType || "TryStatement" === nodeType || "VariableDeclaration" === nodeType || "WhileStatement" === nodeType || "WithStatement" === nodeType || "ClassDeclaration" === nodeType || "ExportAllDeclaration" === nodeType || "ExportDefaultDeclaration" === nodeType || "ExportNamedDeclaration" === nodeType || "ForOfStatement" === nodeType || "ImportDeclaration" === nodeType || "DeclareClass" === nodeType || "DeclareFunction" === nodeType || "DeclareInterface" === nodeType || "DeclareModule" === nodeType || "DeclareModuleExports" === nodeType || "DeclareTypeAlias" === nodeType || "DeclareOpaqueType" === nodeType || "DeclareVariable" === nodeType || "DeclareExportDeclaration" === nodeType || "DeclareExportAllDeclaration" === nodeType || "InterfaceDeclaration" === nodeType || "OpaqueType" === nodeType || "TypeAlias" === nodeType || "EnumDeclaration" === nodeType || "TSDeclareFunction" === nodeType || "TSInterfaceDeclaration" === nodeType || "TSTypeAliasDeclaration" === nodeType || "TSEnumDeclaration" === nodeType || "TSModuleDeclaration" === nodeType || "TSImportEqualsDeclaration" === nodeType || "TSExportAssignment" === nodeType || "TSNamespaceExportDeclaration" === nodeType || nodeType === "Placeholder" && ("Statement" === node.expectedNode || "Declaration" === node.expectedNode || "BlockStatement" === node.expectedNode)) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTerminatorless(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BreakStatement" === nodeType || "ContinueStatement" === nodeType || "ReturnStatement" === nodeType || "ThrowStatement" === nodeType || "YieldExpression" === nodeType || "AwaitExpression" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isCompletionStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("BreakStatement" === nodeType || "ContinueStatement" === nodeType || "ReturnStatement" === nodeType || "ThrowStatement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isConditional(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ConditionalExpression" === nodeType || "IfStatement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isLoop(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("DoWhileStatement" === nodeType || "ForInStatement" === nodeType || "ForStatement" === nodeType || "WhileStatement" === nodeType || "ForOfStatement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isWhile(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("DoWhileStatement" === nodeType || "WhileStatement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExpressionWrapper(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ExpressionStatement" === nodeType || "ParenthesizedExpression" === nodeType || "TypeCastExpression" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFor(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ForInStatement" === nodeType || "ForStatement" === nodeType || "ForOfStatement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isForXStatement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ForInStatement" === nodeType || "ForOfStatement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFunction(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("FunctionDeclaration" === nodeType || "FunctionExpression" === nodeType || "ObjectMethod" === nodeType || "ArrowFunctionExpression" === nodeType || "ClassMethod" === nodeType || "ClassPrivateMethod" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFunctionParent(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("FunctionDeclaration" === nodeType || "FunctionExpression" === nodeType || "ObjectMethod" === nodeType || "ArrowFunctionExpression" === nodeType || "ClassMethod" === nodeType || "ClassPrivateMethod" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPureish(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("FunctionDeclaration" === nodeType || "FunctionExpression" === nodeType || "StringLiteral" === nodeType || "NumericLiteral" === nodeType || "NullLiteral" === nodeType || "BooleanLiteral" === nodeType || "RegExpLiteral" === nodeType || "ArrowFunctionExpression" === nodeType || "BigIntLiteral" === nodeType || "DecimalLiteral" === nodeType || nodeType === "Placeholder" && "StringLiteral" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("FunctionDeclaration" === nodeType || "VariableDeclaration" === nodeType || "ClassDeclaration" === nodeType || "ExportAllDeclaration" === nodeType || "ExportDefaultDeclaration" === nodeType || "ExportNamedDeclaration" === nodeType || "ImportDeclaration" === nodeType || "DeclareClass" === nodeType || "DeclareFunction" === nodeType || "DeclareInterface" === nodeType || "DeclareModule" === nodeType || "DeclareModuleExports" === nodeType || "DeclareTypeAlias" === nodeType || "DeclareOpaqueType" === nodeType || "DeclareVariable" === nodeType || "DeclareExportDeclaration" === nodeType || "DeclareExportAllDeclaration" === nodeType || "InterfaceDeclaration" === nodeType || "OpaqueType" === nodeType || "TypeAlias" === nodeType || "EnumDeclaration" === nodeType || "TSDeclareFunction" === nodeType || "TSInterfaceDeclaration" === nodeType || "TSTypeAliasDeclaration" === nodeType || "TSEnumDeclaration" === nodeType || "TSModuleDeclaration" === nodeType || nodeType === "Placeholder" && "Declaration" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPatternLike(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("Identifier" === nodeType || "RestElement" === nodeType || "AssignmentPattern" === nodeType || "ArrayPattern" === nodeType || "ObjectPattern" === nodeType || nodeType === "Placeholder" && ("Pattern" === node.expectedNode || "Identifier" === node.expectedNode)) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isLVal(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("Identifier" === nodeType || "MemberExpression" === nodeType || "RestElement" === nodeType || "AssignmentPattern" === nodeType || "ArrayPattern" === nodeType || "ObjectPattern" === nodeType || "TSParameterProperty" === nodeType || nodeType === "Placeholder" && ("Pattern" === node.expectedNode || "Identifier" === node.expectedNode)) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSEntityName(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("Identifier" === nodeType || "TSQualifiedName" === nodeType || nodeType === "Placeholder" && "Identifier" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isLiteral(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("StringLiteral" === nodeType || "NumericLiteral" === nodeType || "NullLiteral" === nodeType || "BooleanLiteral" === nodeType || "RegExpLiteral" === nodeType || "TemplateLiteral" === nodeType || "BigIntLiteral" === nodeType || "DecimalLiteral" === nodeType || nodeType === "Placeholder" && "StringLiteral" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isImmutable(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("StringLiteral" === nodeType || "NumericLiteral" === nodeType || "NullLiteral" === nodeType || "BooleanLiteral" === nodeType || "BigIntLiteral" === nodeType || "JSXAttribute" === nodeType || "JSXClosingElement" === nodeType || "JSXElement" === nodeType || "JSXExpressionContainer" === nodeType || "JSXSpreadChild" === nodeType || "JSXOpeningElement" === nodeType || "JSXText" === nodeType || "JSXFragment" === nodeType || "JSXOpeningFragment" === nodeType || "JSXClosingFragment" === nodeType || "DecimalLiteral" === nodeType || nodeType === "Placeholder" && "StringLiteral" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isUserWhitespacable(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ObjectMethod" === nodeType || "ObjectProperty" === nodeType || "ObjectTypeInternalSlot" === nodeType || "ObjectTypeCallProperty" === nodeType || "ObjectTypeIndexer" === nodeType || "ObjectTypeProperty" === nodeType || "ObjectTypeSpreadProperty" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isMethod(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ObjectMethod" === nodeType || "ClassMethod" === nodeType || "ClassPrivateMethod" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isObjectMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ObjectMethod" === nodeType || "ObjectProperty" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isProperty(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ObjectProperty" === nodeType || "ClassProperty" === nodeType || "ClassPrivateProperty" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isUnaryLike(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("UnaryExpression" === nodeType || "SpreadElement" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPattern(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("AssignmentPattern" === nodeType || "ArrayPattern" === nodeType || "ObjectPattern" === nodeType || nodeType === "Placeholder" && "Pattern" === node.expectedNode) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isClass(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ClassExpression" === nodeType || "ClassDeclaration" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isModuleDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ExportAllDeclaration" === nodeType || "ExportDefaultDeclaration" === nodeType || "ExportNamedDeclaration" === nodeType || "ImportDeclaration" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isExportDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ExportAllDeclaration" === nodeType || "ExportDefaultDeclaration" === nodeType || "ExportNamedDeclaration" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isModuleSpecifier(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ExportSpecifier" === nodeType || "ImportDefaultSpecifier" === nodeType || "ImportNamespaceSpecifier" === nodeType || "ImportSpecifier" === nodeType || "ExportNamespaceSpecifier" === nodeType || "ExportDefaultSpecifier" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFlow(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("AnyTypeAnnotation" === nodeType || "ArrayTypeAnnotation" === nodeType || "BooleanTypeAnnotation" === nodeType || "BooleanLiteralTypeAnnotation" === nodeType || "NullLiteralTypeAnnotation" === nodeType || "ClassImplements" === nodeType || "DeclareClass" === nodeType || "DeclareFunction" === nodeType || "DeclareInterface" === nodeType || "DeclareModule" === nodeType || "DeclareModuleExports" === nodeType || "DeclareTypeAlias" === nodeType || "DeclareOpaqueType" === nodeType || "DeclareVariable" === nodeType || "DeclareExportDeclaration" === nodeType || "DeclareExportAllDeclaration" === nodeType || "DeclaredPredicate" === nodeType || "ExistsTypeAnnotation" === nodeType || "FunctionTypeAnnotation" === nodeType || "FunctionTypeParam" === nodeType || "GenericTypeAnnotation" === nodeType || "InferredPredicate" === nodeType || "InterfaceExtends" === nodeType || "InterfaceDeclaration" === nodeType || "InterfaceTypeAnnotation" === nodeType || "IntersectionTypeAnnotation" === nodeType || "MixedTypeAnnotation" === nodeType || "EmptyTypeAnnotation" === nodeType || "NullableTypeAnnotation" === nodeType || "NumberLiteralTypeAnnotation" === nodeType || "NumberTypeAnnotation" === nodeType || "ObjectTypeAnnotation" === nodeType || "ObjectTypeInternalSlot" === nodeType || "ObjectTypeCallProperty" === nodeType || "ObjectTypeIndexer" === nodeType || "ObjectTypeProperty" === nodeType || "ObjectTypeSpreadProperty" === nodeType || "OpaqueType" === nodeType || "QualifiedTypeIdentifier" === nodeType || "StringLiteralTypeAnnotation" === nodeType || "StringTypeAnnotation" === nodeType || "SymbolTypeAnnotation" === nodeType || "ThisTypeAnnotation" === nodeType || "TupleTypeAnnotation" === nodeType || "TypeofTypeAnnotation" === nodeType || "TypeAlias" === nodeType || "TypeAnnotation" === nodeType || "TypeCastExpression" === nodeType || "TypeParameter" === nodeType || "TypeParameterDeclaration" === nodeType || "TypeParameterInstantiation" === nodeType || "UnionTypeAnnotation" === nodeType || "Variance" === nodeType || "VoidTypeAnnotation" === nodeType || "IndexedAccessType" === nodeType || "OptionalIndexedAccessType" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFlowType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("AnyTypeAnnotation" === nodeType || "ArrayTypeAnnotation" === nodeType || "BooleanTypeAnnotation" === nodeType || "BooleanLiteralTypeAnnotation" === nodeType || "NullLiteralTypeAnnotation" === nodeType || "ExistsTypeAnnotation" === nodeType || "FunctionTypeAnnotation" === nodeType || "GenericTypeAnnotation" === nodeType || "InterfaceTypeAnnotation" === nodeType || "IntersectionTypeAnnotation" === nodeType || "MixedTypeAnnotation" === nodeType || "EmptyTypeAnnotation" === nodeType || "NullableTypeAnnotation" === nodeType || "NumberLiteralTypeAnnotation" === nodeType || "NumberTypeAnnotation" === nodeType || "ObjectTypeAnnotation" === nodeType || "StringLiteralTypeAnnotation" === nodeType || "StringTypeAnnotation" === nodeType || "SymbolTypeAnnotation" === nodeType || "ThisTypeAnnotation" === nodeType || "TupleTypeAnnotation" === nodeType || "TypeofTypeAnnotation" === nodeType || "UnionTypeAnnotation" === nodeType || "VoidTypeAnnotation" === nodeType || "IndexedAccessType" === nodeType || "OptionalIndexedAccessType" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFlowBaseAnnotation(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("AnyTypeAnnotation" === nodeType || "BooleanTypeAnnotation" === nodeType || "NullLiteralTypeAnnotation" === nodeType || "MixedTypeAnnotation" === nodeType || "EmptyTypeAnnotation" === nodeType || "NumberTypeAnnotation" === nodeType || "StringTypeAnnotation" === nodeType || "SymbolTypeAnnotation" === nodeType || "ThisTypeAnnotation" === nodeType || "VoidTypeAnnotation" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFlowDeclaration(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("DeclareClass" === nodeType || "DeclareFunction" === nodeType || "DeclareInterface" === nodeType || "DeclareModule" === nodeType || "DeclareModuleExports" === nodeType || "DeclareTypeAlias" === nodeType || "DeclareOpaqueType" === nodeType || "DeclareVariable" === nodeType || "DeclareExportDeclaration" === nodeType || "DeclareExportAllDeclaration" === nodeType || "InterfaceDeclaration" === nodeType || "OpaqueType" === nodeType || "TypeAlias" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isFlowPredicate(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("DeclaredPredicate" === nodeType || "InferredPredicate" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumBody(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("EnumBooleanBody" === nodeType || "EnumNumberBody" === nodeType || "EnumStringBody" === nodeType || "EnumSymbolBody" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isEnumMember(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("EnumBooleanMember" === nodeType || "EnumNumberMember" === nodeType || "EnumStringMember" === nodeType || "EnumDefaultedMember" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isJSX(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("JSXAttribute" === nodeType || "JSXClosingElement" === nodeType || "JSXElement" === nodeType || "JSXEmptyExpression" === nodeType || "JSXExpressionContainer" === nodeType || "JSXSpreadChild" === nodeType || "JSXIdentifier" === nodeType || "JSXMemberExpression" === nodeType || "JSXNamespacedName" === nodeType || "JSXOpeningElement" === nodeType || "JSXSpreadAttribute" === nodeType || "JSXText" === nodeType || "JSXFragment" === nodeType || "JSXOpeningFragment" === nodeType || "JSXClosingFragment" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isPrivate(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("ClassPrivateProperty" === nodeType || "ClassPrivateMethod" === nodeType || "PrivateName" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSTypeElement(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("TSCallSignatureDeclaration" === nodeType || "TSConstructSignatureDeclaration" === nodeType || "TSPropertySignature" === nodeType || "TSMethodSignature" === nodeType || "TSIndexSignature" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("TSAnyKeyword" === nodeType || "TSBooleanKeyword" === nodeType || "TSBigIntKeyword" === nodeType || "TSIntrinsicKeyword" === nodeType || "TSNeverKeyword" === nodeType || "TSNullKeyword" === nodeType || "TSNumberKeyword" === nodeType || "TSObjectKeyword" === nodeType || "TSStringKeyword" === nodeType || "TSSymbolKeyword" === nodeType || "TSUndefinedKeyword" === nodeType || "TSUnknownKeyword" === nodeType || "TSVoidKeyword" === nodeType || "TSThisType" === nodeType || "TSFunctionType" === nodeType || "TSConstructorType" === nodeType || "TSTypeReference" === nodeType || "TSTypePredicate" === nodeType || "TSTypeQuery" === nodeType || "TSTypeLiteral" === nodeType || "TSArrayType" === nodeType || "TSTupleType" === nodeType || "TSOptionalType" === nodeType || "TSRestType" === nodeType || "TSUnionType" === nodeType || "TSIntersectionType" === nodeType || "TSConditionalType" === nodeType || "TSInferType" === nodeType || "TSParenthesizedType" === nodeType || "TSTypeOperator" === nodeType || "TSIndexedAccessType" === nodeType || "TSMappedType" === nodeType || "TSLiteralType" === nodeType || "TSExpressionWithTypeArguments" === nodeType || "TSImportType" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isTSBaseType(node, opts) {
  if (!node) return false;
  const nodeType = node.type;

  if ("TSAnyKeyword" === nodeType || "TSBooleanKeyword" === nodeType || "TSBigIntKeyword" === nodeType || "TSIntrinsicKeyword" === nodeType || "TSNeverKeyword" === nodeType || "TSNullKeyword" === nodeType || "TSNumberKeyword" === nodeType || "TSObjectKeyword" === nodeType || "TSStringKeyword" === nodeType || "TSSymbolKeyword" === nodeType || "TSUndefinedKeyword" === nodeType || "TSUnknownKeyword" === nodeType || "TSVoidKeyword" === nodeType || "TSThisType" === nodeType || "TSLiteralType" === nodeType) {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isNumberLiteral(node, opts) {
  console.trace("The node type NumberLiteral has been renamed to NumericLiteral");
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "NumberLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isRegexLiteral(node, opts) {
  console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "RegexLiteral") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isRestProperty(node, opts) {
  console.trace("The node type RestProperty has been renamed to RestElement");
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "RestProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

function isSpreadProperty(node, opts) {
  console.trace("The node type SpreadProperty has been renamed to SpreadElement");
  if (!node) return false;
  const nodeType = node.type;

  if (nodeType === "SpreadProperty") {
    if (typeof opts === "undefined") {
      return true;
    } else {
      return (0, _shallowEqual.default)(node, opts);
    }
  }

  return false;
}

/***/ }),
/* 16 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = shallowEqual;

function shallowEqual(actual, expected) {
  const keys = Object.keys(expected);

  for (const key of keys) {
    if (actual[key] !== expected[key]) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 17 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isCompatTag;

function isCompatTag(tagName) {
  return !!tagName && /^[a-z]/.test(tagName);
}

/***/ }),
/* 18 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = buildChildren;

var _generated = __webpack_require__(15);

var _cleanJSXElementLiteralChild = __webpack_require__(19);

function buildChildren(node) {
  const elements = [];

  for (let i = 0; i < node.children.length; i++) {
    let child = node.children[i];

    if ((0, _generated.isJSXText)(child)) {
      (0, _cleanJSXElementLiteralChild.default)(child, elements);
      continue;
    }

    if ((0, _generated.isJSXExpressionContainer)(child)) child = child.expression;
    if ((0, _generated.isJSXEmptyExpression)(child)) continue;
    elements.push(child);
  }

  return elements;
}

/***/ }),
/* 19 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = cleanJSXElementLiteralChild;

var _generated = __webpack_require__(20);

function cleanJSXElementLiteralChild(child, args) {
  const lines = child.value.split(/\r\n|\n|\r/);
  let lastNonEmptyLine = 0;

  for (let i = 0; i < lines.length; i++) {
    if (lines[i].match(/[^ \t]/)) {
      lastNonEmptyLine = i;
    }
  }

  let str = "";

  for (let i = 0; i < lines.length; i++) {
    const line = lines[i];
    const isFirstLine = i === 0;
    const isLastLine = i === lines.length - 1;
    const isLastNonEmptyLine = i === lastNonEmptyLine;
    let trimmedLine = line.replace(/\t/g, " ");

    if (!isFirstLine) {
      trimmedLine = trimmedLine.replace(/^[ ]+/, "");
    }

    if (!isLastLine) {
      trimmedLine = trimmedLine.replace(/[ ]+$/, "");
    }

    if (trimmedLine) {
      if (!isLastNonEmptyLine) {
        trimmedLine += " ";
      }

      str += trimmedLine;
    }
  }

  if (str) args.push((0, _generated.stringLiteral)(str));
}

/***/ }),
/* 20 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.arrayExpression = arrayExpression;
exports.assignmentExpression = assignmentExpression;
exports.binaryExpression = binaryExpression;
exports.interpreterDirective = interpreterDirective;
exports.directive = directive;
exports.directiveLiteral = directiveLiteral;
exports.blockStatement = blockStatement;
exports.breakStatement = breakStatement;
exports.callExpression = callExpression;
exports.catchClause = catchClause;
exports.conditionalExpression = conditionalExpression;
exports.continueStatement = continueStatement;
exports.debuggerStatement = debuggerStatement;
exports.doWhileStatement = doWhileStatement;
exports.emptyStatement = emptyStatement;
exports.expressionStatement = expressionStatement;
exports.file = file;
exports.forInStatement = forInStatement;
exports.forStatement = forStatement;
exports.functionDeclaration = functionDeclaration;
exports.functionExpression = functionExpression;
exports.identifier = identifier;
exports.ifStatement = ifStatement;
exports.labeledStatement = labeledStatement;
exports.stringLiteral = stringLiteral;
exports.numericLiteral = numericLiteral;
exports.nullLiteral = nullLiteral;
exports.booleanLiteral = booleanLiteral;
exports.regExpLiteral = regExpLiteral;
exports.logicalExpression = logicalExpression;
exports.memberExpression = memberExpression;
exports.newExpression = newExpression;
exports.program = program;
exports.objectExpression = objectExpression;
exports.objectMethod = objectMethod;
exports.objectProperty = objectProperty;
exports.restElement = restElement;
exports.returnStatement = returnStatement;
exports.sequenceExpression = sequenceExpression;
exports.parenthesizedExpression = parenthesizedExpression;
exports.switchCase = switchCase;
exports.switchStatement = switchStatement;
exports.thisExpression = thisExpression;
exports.throwStatement = throwStatement;
exports.tryStatement = tryStatement;
exports.unaryExpression = unaryExpression;
exports.updateExpression = updateExpression;
exports.variableDeclaration = variableDeclaration;
exports.variableDeclarator = variableDeclarator;
exports.whileStatement = whileStatement;
exports.withStatement = withStatement;
exports.assignmentPattern = assignmentPattern;
exports.arrayPattern = arrayPattern;
exports.arrowFunctionExpression = arrowFunctionExpression;
exports.classBody = classBody;
exports.classExpression = classExpression;
exports.classDeclaration = classDeclaration;
exports.exportAllDeclaration = exportAllDeclaration;
exports.exportDefaultDeclaration = exportDefaultDeclaration;
exports.exportNamedDeclaration = exportNamedDeclaration;
exports.exportSpecifier = exportSpecifier;
exports.forOfStatement = forOfStatement;
exports.importDeclaration = importDeclaration;
exports.importDefaultSpecifier = importDefaultSpecifier;
exports.importNamespaceSpecifier = importNamespaceSpecifier;
exports.importSpecifier = importSpecifier;
exports.metaProperty = metaProperty;
exports.classMethod = classMethod;
exports.objectPattern = objectPattern;
exports.spreadElement = spreadElement;
exports.super = _super;
exports.taggedTemplateExpression = taggedTemplateExpression;
exports.templateElement = templateElement;
exports.templateLiteral = templateLiteral;
exports.yieldExpression = yieldExpression;
exports.awaitExpression = awaitExpression;
exports.import = _import;
exports.bigIntLiteral = bigIntLiteral;
exports.exportNamespaceSpecifier = exportNamespaceSpecifier;
exports.optionalMemberExpression = optionalMemberExpression;
exports.optionalCallExpression = optionalCallExpression;
exports.anyTypeAnnotation = anyTypeAnnotation;
exports.arrayTypeAnnotation = arrayTypeAnnotation;
exports.booleanTypeAnnotation = booleanTypeAnnotation;
exports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;
exports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;
exports.classImplements = classImplements;
exports.declareClass = declareClass;
exports.declareFunction = declareFunction;
exports.declareInterface = declareInterface;
exports.declareModule = declareModule;
exports.declareModuleExports = declareModuleExports;
exports.declareTypeAlias = declareTypeAlias;
exports.declareOpaqueType = declareOpaqueType;
exports.declareVariable = declareVariable;
exports.declareExportDeclaration = declareExportDeclaration;
exports.declareExportAllDeclaration = declareExportAllDeclaration;
exports.declaredPredicate = declaredPredicate;
exports.existsTypeAnnotation = existsTypeAnnotation;
exports.functionTypeAnnotation = functionTypeAnnotation;
exports.functionTypeParam = functionTypeParam;
exports.genericTypeAnnotation = genericTypeAnnotation;
exports.inferredPredicate = inferredPredicate;
exports.interfaceExtends = interfaceExtends;
exports.interfaceDeclaration = interfaceDeclaration;
exports.interfaceTypeAnnotation = interfaceTypeAnnotation;
exports.intersectionTypeAnnotation = intersectionTypeAnnotation;
exports.mixedTypeAnnotation = mixedTypeAnnotation;
exports.emptyTypeAnnotation = emptyTypeAnnotation;
exports.nullableTypeAnnotation = nullableTypeAnnotation;
exports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;
exports.numberTypeAnnotation = numberTypeAnnotation;
exports.objectTypeAnnotation = objectTypeAnnotation;
exports.objectTypeInternalSlot = objectTypeInternalSlot;
exports.objectTypeCallProperty = objectTypeCallProperty;
exports.objectTypeIndexer = objectTypeIndexer;
exports.objectTypeProperty = objectTypeProperty;
exports.objectTypeSpreadProperty = objectTypeSpreadProperty;
exports.opaqueType = opaqueType;
exports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;
exports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;
exports.stringTypeAnnotation = stringTypeAnnotation;
exports.symbolTypeAnnotation = symbolTypeAnnotation;
exports.thisTypeAnnotation = thisTypeAnnotation;
exports.tupleTypeAnnotation = tupleTypeAnnotation;
exports.typeofTypeAnnotation = typeofTypeAnnotation;
exports.typeAlias = typeAlias;
exports.typeAnnotation = typeAnnotation;
exports.typeCastExpression = typeCastExpression;
exports.typeParameter = typeParameter;
exports.typeParameterDeclaration = typeParameterDeclaration;
exports.typeParameterInstantiation = typeParameterInstantiation;
exports.unionTypeAnnotation = unionTypeAnnotation;
exports.variance = variance;
exports.voidTypeAnnotation = voidTypeAnnotation;
exports.enumDeclaration = enumDeclaration;
exports.enumBooleanBody = enumBooleanBody;
exports.enumNumberBody = enumNumberBody;
exports.enumStringBody = enumStringBody;
exports.enumSymbolBody = enumSymbolBody;
exports.enumBooleanMember = enumBooleanMember;
exports.enumNumberMember = enumNumberMember;
exports.enumStringMember = enumStringMember;
exports.enumDefaultedMember = enumDefaultedMember;
exports.indexedAccessType = indexedAccessType;
exports.optionalIndexedAccessType = optionalIndexedAccessType;
exports.jSXAttribute = exports.jsxAttribute = jsxAttribute;
exports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;
exports.jSXElement = exports.jsxElement = jsxElement;
exports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;
exports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;
exports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;
exports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;
exports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;
exports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;
exports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;
exports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;
exports.jSXText = exports.jsxText = jsxText;
exports.jSXFragment = exports.jsxFragment = jsxFragment;
exports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;
exports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;
exports.noop = noop;
exports.placeholder = placeholder;
exports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;
exports.argumentPlaceholder = argumentPlaceholder;
exports.bindExpression = bindExpression;
exports.classProperty = classProperty;
exports.pipelineTopicExpression = pipelineTopicExpression;
exports.pipelineBareFunction = pipelineBareFunction;
exports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;
exports.classPrivateProperty = classPrivateProperty;
exports.classPrivateMethod = classPrivateMethod;
exports.importAttribute = importAttribute;
exports.decorator = decorator;
exports.doExpression = doExpression;
exports.exportDefaultSpecifier = exportDefaultSpecifier;
exports.privateName = privateName;
exports.recordExpression = recordExpression;
exports.tupleExpression = tupleExpression;
exports.decimalLiteral = decimalLiteral;
exports.staticBlock = staticBlock;
exports.moduleExpression = moduleExpression;
exports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;
exports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;
exports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;
exports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;
exports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;
exports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;
exports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;
exports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;
exports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;
exports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;
exports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;
exports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;
exports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;
exports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;
exports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;
exports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;
exports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;
exports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;
exports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;
exports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;
exports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;
exports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;
exports.tSThisType = exports.tsThisType = tsThisType;
exports.tSFunctionType = exports.tsFunctionType = tsFunctionType;
exports.tSConstructorType = exports.tsConstructorType = tsConstructorType;
exports.tSTypeReference = exports.tsTypeReference = tsTypeReference;
exports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;
exports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;
exports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;
exports.tSArrayType = exports.tsArrayType = tsArrayType;
exports.tSTupleType = exports.tsTupleType = tsTupleType;
exports.tSOptionalType = exports.tsOptionalType = tsOptionalType;
exports.tSRestType = exports.tsRestType = tsRestType;
exports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;
exports.tSUnionType = exports.tsUnionType = tsUnionType;
exports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;
exports.tSConditionalType = exports.tsConditionalType = tsConditionalType;
exports.tSInferType = exports.tsInferType = tsInferType;
exports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;
exports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;
exports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;
exports.tSMappedType = exports.tsMappedType = tsMappedType;
exports.tSLiteralType = exports.tsLiteralType = tsLiteralType;
exports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;
exports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;
exports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;
exports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;
exports.tSAsExpression = exports.tsAsExpression = tsAsExpression;
exports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;
exports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;
exports.tSEnumMember = exports.tsEnumMember = tsEnumMember;
exports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;
exports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;
exports.tSImportType = exports.tsImportType = tsImportType;
exports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;
exports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;
exports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;
exports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;
exports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;
exports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;
exports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;
exports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;
exports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;
exports.numberLiteral = NumberLiteral;
exports.regexLiteral = RegexLiteral;
exports.restProperty = RestProperty;
exports.spreadProperty = SpreadProperty;

var _builder = __webpack_require__(21);

function arrayExpression(elements) {
  return (0, _builder.default)("ArrayExpression", ...arguments);
}

function assignmentExpression(operator, left, right) {
  return (0, _builder.default)("AssignmentExpression", ...arguments);
}

function binaryExpression(operator, left, right) {
  return (0, _builder.default)("BinaryExpression", ...arguments);
}

function interpreterDirective(value) {
  return (0, _builder.default)("InterpreterDirective", ...arguments);
}

function directive(value) {
  return (0, _builder.default)("Directive", ...arguments);
}

function directiveLiteral(value) {
  return (0, _builder.default)("DirectiveLiteral", ...arguments);
}

function blockStatement(body, directives) {
  return (0, _builder.default)("BlockStatement", ...arguments);
}

function breakStatement(label) {
  return (0, _builder.default)("BreakStatement", ...arguments);
}

function callExpression(callee, _arguments) {
  return (0, _builder.default)("CallExpression", ...arguments);
}

function catchClause(param, body) {
  return (0, _builder.default)("CatchClause", ...arguments);
}

function conditionalExpression(test, consequent, alternate) {
  return (0, _builder.default)("ConditionalExpression", ...arguments);
}

function continueStatement(label) {
  return (0, _builder.default)("ContinueStatement", ...arguments);
}

function debuggerStatement() {
  return (0, _builder.default)("DebuggerStatement", ...arguments);
}

function doWhileStatement(test, body) {
  return (0, _builder.default)("DoWhileStatement", ...arguments);
}

function emptyStatement() {
  return (0, _builder.default)("EmptyStatement", ...arguments);
}

function expressionStatement(expression) {
  return (0, _builder.default)("ExpressionStatement", ...arguments);
}

function file(program, comments, tokens) {
  return (0, _builder.default)("File", ...arguments);
}

function forInStatement(left, right, body) {
  return (0, _builder.default)("ForInStatement", ...arguments);
}

function forStatement(init, test, update, body) {
  return (0, _builder.default)("ForStatement", ...arguments);
}

function functionDeclaration(id, params, body, generator, async) {
  return (0, _builder.default)("FunctionDeclaration", ...arguments);
}

function functionExpression(id, params, body, generator, async) {
  return (0, _builder.default)("FunctionExpression", ...arguments);
}

function identifier(name) {
  return (0, _builder.default)("Identifier", ...arguments);
}

function ifStatement(test, consequent, alternate) {
  return (0, _builder.default)("IfStatement", ...arguments);
}

function labeledStatement(label, body) {
  return (0, _builder.default)("LabeledStatement", ...arguments);
}

function stringLiteral(value) {
  return (0, _builder.default)("StringLiteral", ...arguments);
}

function numericLiteral(value) {
  return (0, _builder.default)("NumericLiteral", ...arguments);
}

function nullLiteral() {
  return (0, _builder.default)("NullLiteral", ...arguments);
}

function booleanLiteral(value) {
  return (0, _builder.default)("BooleanLiteral", ...arguments);
}

function regExpLiteral(pattern, flags) {
  return (0, _builder.default)("RegExpLiteral", ...arguments);
}

function logicalExpression(operator, left, right) {
  return (0, _builder.default)("LogicalExpression", ...arguments);
}

function memberExpression(object, property, computed, optional) {
  return (0, _builder.default)("MemberExpression", ...arguments);
}

function newExpression(callee, _arguments) {
  return (0, _builder.default)("NewExpression", ...arguments);
}

function program(body, directives, sourceType, interpreter) {
  return (0, _builder.default)("Program", ...arguments);
}

function objectExpression(properties) {
  return (0, _builder.default)("ObjectExpression", ...arguments);
}

function objectMethod(kind, key, params, body, computed, generator, async) {
  return (0, _builder.default)("ObjectMethod", ...arguments);
}

function objectProperty(key, value, computed, shorthand, decorators) {
  return (0, _builder.default)("ObjectProperty", ...arguments);
}

function restElement(argument) {
  return (0, _builder.default)("RestElement", ...arguments);
}

function returnStatement(argument) {
  return (0, _builder.default)("ReturnStatement", ...arguments);
}

function sequenceExpression(expressions) {
  return (0, _builder.default)("SequenceExpression", ...arguments);
}

function parenthesizedExpression(expression) {
  return (0, _builder.default)("ParenthesizedExpression", ...arguments);
}

function switchCase(test, consequent) {
  return (0, _builder.default)("SwitchCase", ...arguments);
}

function switchStatement(discriminant, cases) {
  return (0, _builder.default)("SwitchStatement", ...arguments);
}

function thisExpression() {
  return (0, _builder.default)("ThisExpression", ...arguments);
}

function throwStatement(argument) {
  return (0, _builder.default)("ThrowStatement", ...arguments);
}

function tryStatement(block, handler, finalizer) {
  return (0, _builder.default)("TryStatement", ...arguments);
}

function unaryExpression(operator, argument, prefix) {
  return (0, _builder.default)("UnaryExpression", ...arguments);
}

function updateExpression(operator, argument, prefix) {
  return (0, _builder.default)("UpdateExpression", ...arguments);
}

function variableDeclaration(kind, declarations) {
  return (0, _builder.default)("VariableDeclaration", ...arguments);
}

function variableDeclarator(id, init) {
  return (0, _builder.default)("VariableDeclarator", ...arguments);
}

function whileStatement(test, body) {
  return (0, _builder.default)("WhileStatement", ...arguments);
}

function withStatement(object, body) {
  return (0, _builder.default)("WithStatement", ...arguments);
}

function assignmentPattern(left, right) {
  return (0, _builder.default)("AssignmentPattern", ...arguments);
}

function arrayPattern(elements) {
  return (0, _builder.default)("ArrayPattern", ...arguments);
}

function arrowFunctionExpression(params, body, async) {
  return (0, _builder.default)("ArrowFunctionExpression", ...arguments);
}

function classBody(body) {
  return (0, _builder.default)("ClassBody", ...arguments);
}

function classExpression(id, superClass, body, decorators) {
  return (0, _builder.default)("ClassExpression", ...arguments);
}

function classDeclaration(id, superClass, body, decorators) {
  return (0, _builder.default)("ClassDeclaration", ...arguments);
}

function exportAllDeclaration(source) {
  return (0, _builder.default)("ExportAllDeclaration", ...arguments);
}

function exportDefaultDeclaration(declaration) {
  return (0, _builder.default)("ExportDefaultDeclaration", ...arguments);
}

function exportNamedDeclaration(declaration, specifiers, source) {
  return (0, _builder.default)("ExportNamedDeclaration", ...arguments);
}

function exportSpecifier(local, exported) {
  return (0, _builder.default)("ExportSpecifier", ...arguments);
}

function forOfStatement(left, right, body, _await) {
  return (0, _builder.default)("ForOfStatement", ...arguments);
}

function importDeclaration(specifiers, source) {
  return (0, _builder.default)("ImportDeclaration", ...arguments);
}

function importDefaultSpecifier(local) {
  return (0, _builder.default)("ImportDefaultSpecifier", ...arguments);
}

function importNamespaceSpecifier(local) {
  return (0, _builder.default)("ImportNamespaceSpecifier", ...arguments);
}

function importSpecifier(local, imported) {
  return (0, _builder.default)("ImportSpecifier", ...arguments);
}

function metaProperty(meta, property) {
  return (0, _builder.default)("MetaProperty", ...arguments);
}

function classMethod(kind, key, params, body, computed, _static, generator, async) {
  return (0, _builder.default)("ClassMethod", ...arguments);
}

function objectPattern(properties) {
  return (0, _builder.default)("ObjectPattern", ...arguments);
}

function spreadElement(argument) {
  return (0, _builder.default)("SpreadElement", ...arguments);
}

function _super() {
  return (0, _builder.default)("Super", ...arguments);
}

function taggedTemplateExpression(tag, quasi) {
  return (0, _builder.default)("TaggedTemplateExpression", ...arguments);
}

function templateElement(value, tail) {
  return (0, _builder.default)("TemplateElement", ...arguments);
}

function templateLiteral(quasis, expressions) {
  return (0, _builder.default)("TemplateLiteral", ...arguments);
}

function yieldExpression(argument, delegate) {
  return (0, _builder.default)("YieldExpression", ...arguments);
}

function awaitExpression(argument) {
  return (0, _builder.default)("AwaitExpression", ...arguments);
}

function _import() {
  return (0, _builder.default)("Import", ...arguments);
}

function bigIntLiteral(value) {
  return (0, _builder.default)("BigIntLiteral", ...arguments);
}

function exportNamespaceSpecifier(exported) {
  return (0, _builder.default)("ExportNamespaceSpecifier", ...arguments);
}

function optionalMemberExpression(object, property, computed, optional) {
  return (0, _builder.default)("OptionalMemberExpression", ...arguments);
}

function optionalCallExpression(callee, _arguments, optional) {
  return (0, _builder.default)("OptionalCallExpression", ...arguments);
}

function anyTypeAnnotation() {
  return (0, _builder.default)("AnyTypeAnnotation", ...arguments);
}

function arrayTypeAnnotation(elementType) {
  return (0, _builder.default)("ArrayTypeAnnotation", ...arguments);
}

function booleanTypeAnnotation() {
  return (0, _builder.default)("BooleanTypeAnnotation", ...arguments);
}

function booleanLiteralTypeAnnotation(value) {
  return (0, _builder.default)("BooleanLiteralTypeAnnotation", ...arguments);
}

function nullLiteralTypeAnnotation() {
  return (0, _builder.default)("NullLiteralTypeAnnotation", ...arguments);
}

function classImplements(id, typeParameters) {
  return (0, _builder.default)("ClassImplements", ...arguments);
}

function declareClass(id, typeParameters, _extends, body) {
  return (0, _builder.default)("DeclareClass", ...arguments);
}

function declareFunction(id) {
  return (0, _builder.default)("DeclareFunction", ...arguments);
}

function declareInterface(id, typeParameters, _extends, body) {
  return (0, _builder.default)("DeclareInterface", ...arguments);
}

function declareModule(id, body, kind) {
  return (0, _builder.default)("DeclareModule", ...arguments);
}

function declareModuleExports(typeAnnotation) {
  return (0, _builder.default)("DeclareModuleExports", ...arguments);
}

function declareTypeAlias(id, typeParameters, right) {
  return (0, _builder.default)("DeclareTypeAlias", ...arguments);
}

function declareOpaqueType(id, typeParameters, supertype) {
  return (0, _builder.default)("DeclareOpaqueType", ...arguments);
}

function declareVariable(id) {
  return (0, _builder.default)("DeclareVariable", ...arguments);
}

function declareExportDeclaration(declaration, specifiers, source) {
  return (0, _builder.default)("DeclareExportDeclaration", ...arguments);
}

function declareExportAllDeclaration(source) {
  return (0, _builder.default)("DeclareExportAllDeclaration", ...arguments);
}

function declaredPredicate(value) {
  return (0, _builder.default)("DeclaredPredicate", ...arguments);
}

function existsTypeAnnotation() {
  return (0, _builder.default)("ExistsTypeAnnotation", ...arguments);
}

function functionTypeAnnotation(typeParameters, params, rest, returnType) {
  return (0, _builder.default)("FunctionTypeAnnotation", ...arguments);
}

function functionTypeParam(name, typeAnnotation) {
  return (0, _builder.default)("FunctionTypeParam", ...arguments);
}

function genericTypeAnnotation(id, typeParameters) {
  return (0, _builder.default)("GenericTypeAnnotation", ...arguments);
}

function inferredPredicate() {
  return (0, _builder.default)("InferredPredicate", ...arguments);
}

function interfaceExtends(id, typeParameters) {
  return (0, _builder.default)("InterfaceExtends", ...arguments);
}

function interfaceDeclaration(id, typeParameters, _extends, body) {
  return (0, _builder.default)("InterfaceDeclaration", ...arguments);
}

function interfaceTypeAnnotation(_extends, body) {
  return (0, _builder.default)("InterfaceTypeAnnotation", ...arguments);
}

function intersectionTypeAnnotation(types) {
  return (0, _builder.default)("IntersectionTypeAnnotation", ...arguments);
}

function mixedTypeAnnotation() {
  return (0, _builder.default)("MixedTypeAnnotation", ...arguments);
}

function emptyTypeAnnotation() {
  return (0, _builder.default)("EmptyTypeAnnotation", ...arguments);
}

function nullableTypeAnnotation(typeAnnotation) {
  return (0, _builder.default)("NullableTypeAnnotation", ...arguments);
}

function numberLiteralTypeAnnotation(value) {
  return (0, _builder.default)("NumberLiteralTypeAnnotation", ...arguments);
}

function numberTypeAnnotation() {
  return (0, _builder.default)("NumberTypeAnnotation", ...arguments);
}

function objectTypeAnnotation(properties, indexers, callProperties, internalSlots, exact) {
  return (0, _builder.default)("ObjectTypeAnnotation", ...arguments);
}

function objectTypeInternalSlot(id, value, optional, _static, method) {
  return (0, _builder.default)("ObjectTypeInternalSlot", ...arguments);
}

function objectTypeCallProperty(value) {
  return (0, _builder.default)("ObjectTypeCallProperty", ...arguments);
}

function objectTypeIndexer(id, key, value, variance) {
  return (0, _builder.default)("ObjectTypeIndexer", ...arguments);
}

function objectTypeProperty(key, value, variance) {
  return (0, _builder.default)("ObjectTypeProperty", ...arguments);
}

function objectTypeSpreadProperty(argument) {
  return (0, _builder.default)("ObjectTypeSpreadProperty", ...arguments);
}

function opaqueType(id, typeParameters, supertype, impltype) {
  return (0, _builder.default)("OpaqueType", ...arguments);
}

function qualifiedTypeIdentifier(id, qualification) {
  return (0, _builder.default)("QualifiedTypeIdentifier", ...arguments);
}

function stringLiteralTypeAnnotation(value) {
  return (0, _builder.default)("StringLiteralTypeAnnotation", ...arguments);
}

function stringTypeAnnotation() {
  return (0, _builder.default)("StringTypeAnnotation", ...arguments);
}

function symbolTypeAnnotation() {
  return (0, _builder.default)("SymbolTypeAnnotation", ...arguments);
}

function thisTypeAnnotation() {
  return (0, _builder.default)("ThisTypeAnnotation", ...arguments);
}

function tupleTypeAnnotation(types) {
  return (0, _builder.default)("TupleTypeAnnotation", ...arguments);
}

function typeofTypeAnnotation(argument) {
  return (0, _builder.default)("TypeofTypeAnnotation", ...arguments);
}

function typeAlias(id, typeParameters, right) {
  return (0, _builder.default)("TypeAlias", ...arguments);
}

function typeAnnotation(typeAnnotation) {
  return (0, _builder.default)("TypeAnnotation", ...arguments);
}

function typeCastExpression(expression, typeAnnotation) {
  return (0, _builder.default)("TypeCastExpression", ...arguments);
}

function typeParameter(bound, _default, variance) {
  return (0, _builder.default)("TypeParameter", ...arguments);
}

function typeParameterDeclaration(params) {
  return (0, _builder.default)("TypeParameterDeclaration", ...arguments);
}

function typeParameterInstantiation(params) {
  return (0, _builder.default)("TypeParameterInstantiation", ...arguments);
}

function unionTypeAnnotation(types) {
  return (0, _builder.default)("UnionTypeAnnotation", ...arguments);
}

function variance(kind) {
  return (0, _builder.default)("Variance", ...arguments);
}

function voidTypeAnnotation() {
  return (0, _builder.default)("VoidTypeAnnotation", ...arguments);
}

function enumDeclaration(id, body) {
  return (0, _builder.default)("EnumDeclaration", ...arguments);
}

function enumBooleanBody(members) {
  return (0, _builder.default)("EnumBooleanBody", ...arguments);
}

function enumNumberBody(members) {
  return (0, _builder.default)("EnumNumberBody", ...arguments);
}

function enumStringBody(members) {
  return (0, _builder.default)("EnumStringBody", ...arguments);
}

function enumSymbolBody(members) {
  return (0, _builder.default)("EnumSymbolBody", ...arguments);
}

function enumBooleanMember(id) {
  return (0, _builder.default)("EnumBooleanMember", ...arguments);
}

function enumNumberMember(id, init) {
  return (0, _builder.default)("EnumNumberMember", ...arguments);
}

function enumStringMember(id, init) {
  return (0, _builder.default)("EnumStringMember", ...arguments);
}

function enumDefaultedMember(id) {
  return (0, _builder.default)("EnumDefaultedMember", ...arguments);
}

function indexedAccessType(objectType, indexType) {
  return (0, _builder.default)("IndexedAccessType", ...arguments);
}

function optionalIndexedAccessType(objectType, indexType) {
  return (0, _builder.default)("OptionalIndexedAccessType", ...arguments);
}

function jsxAttribute(name, value) {
  return (0, _builder.default)("JSXAttribute", ...arguments);
}

function jsxClosingElement(name) {
  return (0, _builder.default)("JSXClosingElement", ...arguments);
}

function jsxElement(openingElement, closingElement, children, selfClosing) {
  return (0, _builder.default)("JSXElement", ...arguments);
}

function jsxEmptyExpression() {
  return (0, _builder.default)("JSXEmptyExpression", ...arguments);
}

function jsxExpressionContainer(expression) {
  return (0, _builder.default)("JSXExpressionContainer", ...arguments);
}

function jsxSpreadChild(expression) {
  return (0, _builder.default)("JSXSpreadChild", ...arguments);
}

function jsxIdentifier(name) {
  return (0, _builder.default)("JSXIdentifier", ...arguments);
}

function jsxMemberExpression(object, property) {
  return (0, _builder.default)("JSXMemberExpression", ...arguments);
}

function jsxNamespacedName(namespace, name) {
  return (0, _builder.default)("JSXNamespacedName", ...arguments);
}

function jsxOpeningElement(name, attributes, selfClosing) {
  return (0, _builder.default)("JSXOpeningElement", ...arguments);
}

function jsxSpreadAttribute(argument) {
  return (0, _builder.default)("JSXSpreadAttribute", ...arguments);
}

function jsxText(value) {
  return (0, _builder.default)("JSXText", ...arguments);
}

function jsxFragment(openingFragment, closingFragment, children) {
  return (0, _builder.default)("JSXFragment", ...arguments);
}

function jsxOpeningFragment() {
  return (0, _builder.default)("JSXOpeningFragment", ...arguments);
}

function jsxClosingFragment() {
  return (0, _builder.default)("JSXClosingFragment", ...arguments);
}

function noop() {
  return (0, _builder.default)("Noop", ...arguments);
}

function placeholder(expectedNode, name) {
  return (0, _builder.default)("Placeholder", ...arguments);
}

function v8IntrinsicIdentifier(name) {
  return (0, _builder.default)("V8IntrinsicIdentifier", ...arguments);
}

function argumentPlaceholder() {
  return (0, _builder.default)("ArgumentPlaceholder", ...arguments);
}

function bindExpression(object, callee) {
  return (0, _builder.default)("BindExpression", ...arguments);
}

function classProperty(key, value, typeAnnotation, decorators, computed, _static) {
  return (0, _builder.default)("ClassProperty", ...arguments);
}

function pipelineTopicExpression(expression) {
  return (0, _builder.default)("PipelineTopicExpression", ...arguments);
}

function pipelineBareFunction(callee) {
  return (0, _builder.default)("PipelineBareFunction", ...arguments);
}

function pipelinePrimaryTopicReference() {
  return (0, _builder.default)("PipelinePrimaryTopicReference", ...arguments);
}

function classPrivateProperty(key, value, decorators, _static) {
  return (0, _builder.default)("ClassPrivateProperty", ...arguments);
}

function classPrivateMethod(kind, key, params, body, _static) {
  return (0, _builder.default)("ClassPrivateMethod", ...arguments);
}

function importAttribute(key, value) {
  return (0, _builder.default)("ImportAttribute", ...arguments);
}

function decorator(expression) {
  return (0, _builder.default)("Decorator", ...arguments);
}

function doExpression(body, async) {
  return (0, _builder.default)("DoExpression", ...arguments);
}

function exportDefaultSpecifier(exported) {
  return (0, _builder.default)("ExportDefaultSpecifier", ...arguments);
}

function privateName(id) {
  return (0, _builder.default)("PrivateName", ...arguments);
}

function recordExpression(properties) {
  return (0, _builder.default)("RecordExpression", ...arguments);
}

function tupleExpression(elements) {
  return (0, _builder.default)("TupleExpression", ...arguments);
}

function decimalLiteral(value) {
  return (0, _builder.default)("DecimalLiteral", ...arguments);
}

function staticBlock(body) {
  return (0, _builder.default)("StaticBlock", ...arguments);
}

function moduleExpression(body) {
  return (0, _builder.default)("ModuleExpression", ...arguments);
}

function tsParameterProperty(parameter) {
  return (0, _builder.default)("TSParameterProperty", ...arguments);
}

function tsDeclareFunction(id, typeParameters, params, returnType) {
  return (0, _builder.default)("TSDeclareFunction", ...arguments);
}

function tsDeclareMethod(decorators, key, typeParameters, params, returnType) {
  return (0, _builder.default)("TSDeclareMethod", ...arguments);
}

function tsQualifiedName(left, right) {
  return (0, _builder.default)("TSQualifiedName", ...arguments);
}

function tsCallSignatureDeclaration(typeParameters, parameters, typeAnnotation) {
  return (0, _builder.default)("TSCallSignatureDeclaration", ...arguments);
}

function tsConstructSignatureDeclaration(typeParameters, parameters, typeAnnotation) {
  return (0, _builder.default)("TSConstructSignatureDeclaration", ...arguments);
}

function tsPropertySignature(key, typeAnnotation, initializer) {
  return (0, _builder.default)("TSPropertySignature", ...arguments);
}

function tsMethodSignature(key, typeParameters, parameters, typeAnnotation) {
  return (0, _builder.default)("TSMethodSignature", ...arguments);
}

function tsIndexSignature(parameters, typeAnnotation) {
  return (0, _builder.default)("TSIndexSignature", ...arguments);
}

function tsAnyKeyword() {
  return (0, _builder.default)("TSAnyKeyword", ...arguments);
}

function tsBooleanKeyword() {
  return (0, _builder.default)("TSBooleanKeyword", ...arguments);
}

function tsBigIntKeyword() {
  return (0, _builder.default)("TSBigIntKeyword", ...arguments);
}

function tsIntrinsicKeyword() {
  return (0, _builder.default)("TSIntrinsicKeyword", ...arguments);
}

function tsNeverKeyword() {
  return (0, _builder.default)("TSNeverKeyword", ...arguments);
}

function tsNullKeyword() {
  return (0, _builder.default)("TSNullKeyword", ...arguments);
}

function tsNumberKeyword() {
  return (0, _builder.default)("TSNumberKeyword", ...arguments);
}

function tsObjectKeyword() {
  return (0, _builder.default)("TSObjectKeyword", ...arguments);
}

function tsStringKeyword() {
  return (0, _builder.default)("TSStringKeyword", ...arguments);
}

function tsSymbolKeyword() {
  return (0, _builder.default)("TSSymbolKeyword", ...arguments);
}

function tsUndefinedKeyword() {
  return (0, _builder.default)("TSUndefinedKeyword", ...arguments);
}

function tsUnknownKeyword() {
  return (0, _builder.default)("TSUnknownKeyword", ...arguments);
}

function tsVoidKeyword() {
  return (0, _builder.default)("TSVoidKeyword", ...arguments);
}

function tsThisType() {
  return (0, _builder.default)("TSThisType", ...arguments);
}

function tsFunctionType(typeParameters, parameters, typeAnnotation) {
  return (0, _builder.default)("TSFunctionType", ...arguments);
}

function tsConstructorType(typeParameters, parameters, typeAnnotation) {
  return (0, _builder.default)("TSConstructorType", ...arguments);
}

function tsTypeReference(typeName, typeParameters) {
  return (0, _builder.default)("TSTypeReference", ...arguments);
}

function tsTypePredicate(parameterName, typeAnnotation, asserts) {
  return (0, _builder.default)("TSTypePredicate", ...arguments);
}

function tsTypeQuery(exprName) {
  return (0, _builder.default)("TSTypeQuery", ...arguments);
}

function tsTypeLiteral(members) {
  return (0, _builder.default)("TSTypeLiteral", ...arguments);
}

function tsArrayType(elementType) {
  return (0, _builder.default)("TSArrayType", ...arguments);
}

function tsTupleType(elementTypes) {
  return (0, _builder.default)("TSTupleType", ...arguments);
}

function tsOptionalType(typeAnnotation) {
  return (0, _builder.default)("TSOptionalType", ...arguments);
}

function tsRestType(typeAnnotation) {
  return (0, _builder.default)("TSRestType", ...arguments);
}

function tsNamedTupleMember(label, elementType, optional) {
  return (0, _builder.default)("TSNamedTupleMember", ...arguments);
}

function tsUnionType(types) {
  return (0, _builder.default)("TSUnionType", ...arguments);
}

function tsIntersectionType(types) {
  return (0, _builder.default)("TSIntersectionType", ...arguments);
}

function tsConditionalType(checkType, extendsType, trueType, falseType) {
  return (0, _builder.default)("TSConditionalType", ...arguments);
}

function tsInferType(typeParameter) {
  return (0, _builder.default)("TSInferType", ...arguments);
}

function tsParenthesizedType(typeAnnotation) {
  return (0, _builder.default)("TSParenthesizedType", ...arguments);
}

function tsTypeOperator(typeAnnotation) {
  return (0, _builder.default)("TSTypeOperator", ...arguments);
}

function tsIndexedAccessType(objectType, indexType) {
  return (0, _builder.default)("TSIndexedAccessType", ...arguments);
}

function tsMappedType(typeParameter, typeAnnotation, nameType) {
  return (0, _builder.default)("TSMappedType", ...arguments);
}

function tsLiteralType(literal) {
  return (0, _builder.default)("TSLiteralType", ...arguments);
}

function tsExpressionWithTypeArguments(expression, typeParameters) {
  return (0, _builder.default)("TSExpressionWithTypeArguments", ...arguments);
}

function tsInterfaceDeclaration(id, typeParameters, _extends, body) {
  return (0, _builder.default)("TSInterfaceDeclaration", ...arguments);
}

function tsInterfaceBody(body) {
  return (0, _builder.default)("TSInterfaceBody", ...arguments);
}

function tsTypeAliasDeclaration(id, typeParameters, typeAnnotation) {
  return (0, _builder.default)("TSTypeAliasDeclaration", ...arguments);
}

function tsAsExpression(expression, typeAnnotation) {
  return (0, _builder.default)("TSAsExpression", ...arguments);
}

function tsTypeAssertion(typeAnnotation, expression) {
  return (0, _builder.default)("TSTypeAssertion", ...arguments);
}

function tsEnumDeclaration(id, members) {
  return (0, _builder.default)("TSEnumDeclaration", ...arguments);
}

function tsEnumMember(id, initializer) {
  return (0, _builder.default)("TSEnumMember", ...arguments);
}

function tsModuleDeclaration(id, body) {
  return (0, _builder.default)("TSModuleDeclaration", ...arguments);
}

function tsModuleBlock(body) {
  return (0, _builder.default)("TSModuleBlock", ...arguments);
}

function tsImportType(argument, qualifier, typeParameters) {
  return (0, _builder.default)("TSImportType", ...arguments);
}

function tsImportEqualsDeclaration(id, moduleReference) {
  return (0, _builder.default)("TSImportEqualsDeclaration", ...arguments);
}

function tsExternalModuleReference(expression) {
  return (0, _builder.default)("TSExternalModuleReference", ...arguments);
}

function tsNonNullExpression(expression) {
  return (0, _builder.default)("TSNonNullExpression", ...arguments);
}

function tsExportAssignment(expression) {
  return (0, _builder.default)("TSExportAssignment", ...arguments);
}

function tsNamespaceExportDeclaration(id) {
  return (0, _builder.default)("TSNamespaceExportDeclaration", ...arguments);
}

function tsTypeAnnotation(typeAnnotation) {
  return (0, _builder.default)("TSTypeAnnotation", ...arguments);
}

function tsTypeParameterInstantiation(params) {
  return (0, _builder.default)("TSTypeParameterInstantiation", ...arguments);
}

function tsTypeParameterDeclaration(params) {
  return (0, _builder.default)("TSTypeParameterDeclaration", ...arguments);
}

function tsTypeParameter(constraint, _default, name) {
  return (0, _builder.default)("TSTypeParameter", ...arguments);
}

function NumberLiteral(...args) {
  console.trace("The node type NumberLiteral has been renamed to NumericLiteral");
  return (0, _builder.default)("NumberLiteral", ...args);
}

function RegexLiteral(...args) {
  console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");
  return (0, _builder.default)("RegexLiteral", ...args);
}

function RestProperty(...args) {
  console.trace("The node type RestProperty has been renamed to RestElement");
  return (0, _builder.default)("RestProperty", ...args);
}

function SpreadProperty(...args) {
  console.trace("The node type SpreadProperty has been renamed to SpreadElement");
  return (0, _builder.default)("SpreadProperty", ...args);
}

/***/ }),
/* 21 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = builder;

var _definitions = __webpack_require__(22);

var _validate = __webpack_require__(34);

function builder(type, ...args) {
  const keys = _definitions.BUILDER_KEYS[type];
  const countArgs = args.length;

  if (countArgs > keys.length) {
    throw new Error(`${type}: Too many arguments passed. Received ${countArgs} but can receive no more than ${keys.length}`);
  }

  const node = {
    type
  };
  let i = 0;
  keys.forEach(key => {
    const field = _definitions.NODE_FIELDS[type][key];
    let arg;
    if (i < countArgs) arg = args[i];

    if (arg === undefined) {
      arg = Array.isArray(field.default) ? [] : field.default;
    }

    node[key] = arg;
    i++;
  });

  for (const key of Object.keys(node)) {
    (0, _validate.default)(node, key, node[key]);
  }

  return node;
}

/***/ }),
/* 22 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "VISITOR_KEYS", ({
  enumerable: true,
  get: function () {
    return _utils.VISITOR_KEYS;
  }
}));
Object.defineProperty(exports, "ALIAS_KEYS", ({
  enumerable: true,
  get: function () {
    return _utils.ALIAS_KEYS;
  }
}));
Object.defineProperty(exports, "FLIPPED_ALIAS_KEYS", ({
  enumerable: true,
  get: function () {
    return _utils.FLIPPED_ALIAS_KEYS;
  }
}));
Object.defineProperty(exports, "NODE_FIELDS", ({
  enumerable: true,
  get: function () {
    return _utils.NODE_FIELDS;
  }
}));
Object.defineProperty(exports, "BUILDER_KEYS", ({
  enumerable: true,
  get: function () {
    return _utils.BUILDER_KEYS;
  }
}));
Object.defineProperty(exports, "DEPRECATED_KEYS", ({
  enumerable: true,
  get: function () {
    return _utils.DEPRECATED_KEYS;
  }
}));
Object.defineProperty(exports, "NODE_PARENT_VALIDATIONS", ({
  enumerable: true,
  get: function () {
    return _utils.NODE_PARENT_VALIDATIONS;
  }
}));
Object.defineProperty(exports, "PLACEHOLDERS", ({
  enumerable: true,
  get: function () {
    return _placeholders.PLACEHOLDERS;
  }
}));
Object.defineProperty(exports, "PLACEHOLDERS_ALIAS", ({
  enumerable: true,
  get: function () {
    return _placeholders.PLACEHOLDERS_ALIAS;
  }
}));
Object.defineProperty(exports, "PLACEHOLDERS_FLIPPED_ALIAS", ({
  enumerable: true,
  get: function () {
    return _placeholders.PLACEHOLDERS_FLIPPED_ALIAS;
  }
}));
exports.TYPES = void 0;

var _toFastProperties = __webpack_require__(23);

__webpack_require__(24);

__webpack_require__(35);

__webpack_require__(36);

__webpack_require__(37);

__webpack_require__(39);

__webpack_require__(40);

var _utils = __webpack_require__(33);

var _placeholders = __webpack_require__(38);

_toFastProperties(_utils.VISITOR_KEYS);

_toFastProperties(_utils.ALIAS_KEYS);

_toFastProperties(_utils.FLIPPED_ALIAS_KEYS);

_toFastProperties(_utils.NODE_FIELDS);

_toFastProperties(_utils.BUILDER_KEYS);

_toFastProperties(_utils.DEPRECATED_KEYS);

_toFastProperties(_placeholders.PLACEHOLDERS_ALIAS);

_toFastProperties(_placeholders.PLACEHOLDERS_FLIPPED_ALIAS);

const TYPES = Object.keys(_utils.VISITOR_KEYS).concat(Object.keys(_utils.FLIPPED_ALIAS_KEYS)).concat(Object.keys(_utils.DEPRECATED_KEYS));
exports.TYPES = TYPES;

/***/ }),
/* 23 */
/***/ ((module) => {

"use strict";


let fastProto = null;

// Creates an object with permanently fast properties in V8. See Toon Verwaest's
// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62
// for more details. Use %HasFastProperties(object) and the Node.js flag
// --allow-natives-syntax to check whether an object has fast properties.
function FastObject(o) {
	// A prototype object will have "fast properties" enabled once it is checked
	// against the inline property cache of a function, e.g. fastProto.property:
	// https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63
	if (fastProto !== null && typeof fastProto.property) {
		const result = fastProto;
		fastProto = FastObject.prototype = null;
		return result;
	}
	fastProto = FastObject.prototype = o == null ? Object.create(null) : o;
	return new FastObject;
}

// Initialize the inline property cache of FastObject
FastObject();

module.exports = function toFastproperties(o) {
	return FastObject(o);
};


/***/ }),
/* 24 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.classMethodOrDeclareMethodCommon = exports.classMethodOrPropertyCommon = exports.patternLikeCommon = exports.functionDeclarationCommon = exports.functionTypeAnnotationCommon = exports.functionCommon = void 0;

var _is = __webpack_require__(25);

var _isValidIdentifier = __webpack_require__(28);

var _helperValidatorIdentifier = __webpack_require__(29);

var _constants = __webpack_require__(32);

var _utils = __webpack_require__(33);

(0, _utils.default)("ArrayExpression", {
  fields: {
    elements: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)("null", "Expression", "SpreadElement"))),
      default: !process.env.BABEL_TYPES_8_BREAKING ? [] : undefined
    }
  },
  visitor: ["elements"],
  aliases: ["Expression"]
});
(0, _utils.default)("AssignmentExpression", {
  fields: {
    operator: {
      validate: function () {
        if (!process.env.BABEL_TYPES_8_BREAKING) {
          return (0, _utils.assertValueType)("string");
        }

        const identifier = (0, _utils.assertOneOf)(..._constants.ASSIGNMENT_OPERATORS);
        const pattern = (0, _utils.assertOneOf)("=");
        return function (node, key, val) {
          const validator = (0, _is.default)("Pattern", node.left) ? pattern : identifier;
          validator(node, key, val);
        };
      }()
    },
    left: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)("LVal") : (0, _utils.assertNodeType)("Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern")
    },
    right: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  },
  builder: ["operator", "left", "right"],
  visitor: ["left", "right"],
  aliases: ["Expression"]
});
(0, _utils.default)("BinaryExpression", {
  builder: ["operator", "left", "right"],
  fields: {
    operator: {
      validate: (0, _utils.assertOneOf)(..._constants.BINARY_OPERATORS)
    },
    left: {
      validate: function () {
        const expression = (0, _utils.assertNodeType)("Expression");
        const inOp = (0, _utils.assertNodeType)("Expression", "PrivateName");

        const validator = function (node, key, val) {
          const validator = node.operator === "in" ? inOp : expression;
          validator(node, key, val);
        };

        validator.oneOfNodeTypes = ["Expression", "PrivateName"];
        return validator;
      }()
    },
    right: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  },
  visitor: ["left", "right"],
  aliases: ["Binary", "Expression"]
});
(0, _utils.default)("InterpreterDirective", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("string")
    }
  }
});
(0, _utils.default)("Directive", {
  visitor: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertNodeType)("DirectiveLiteral")
    }
  }
});
(0, _utils.default)("DirectiveLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("string")
    }
  }
});
(0, _utils.default)("BlockStatement", {
  builder: ["body", "directives"],
  visitor: ["directives", "body"],
  fields: {
    directives: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Directive"))),
      default: []
    },
    body: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Statement")))
    }
  },
  aliases: ["Scopable", "BlockParent", "Block", "Statement"]
});
(0, _utils.default)("BreakStatement", {
  visitor: ["label"],
  fields: {
    label: {
      validate: (0, _utils.assertNodeType)("Identifier"),
      optional: true
    }
  },
  aliases: ["Statement", "Terminatorless", "CompletionStatement"]
});
(0, _utils.default)("CallExpression", {
  visitor: ["callee", "arguments", "typeParameters", "typeArguments"],
  builder: ["callee", "arguments"],
  aliases: ["Expression"],
  fields: Object.assign({
    callee: {
      validate: (0, _utils.assertNodeType)("Expression", "V8IntrinsicIdentifier")
    },
    arguments: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Expression", "SpreadElement", "JSXNamespacedName", "ArgumentPlaceholder")))
    }
  }, !process.env.BABEL_TYPES_8_BREAKING ? {
    optional: {
      validate: (0, _utils.assertOneOf)(true, false),
      optional: true
    }
  } : {}, {
    typeArguments: {
      validate: (0, _utils.assertNodeType)("TypeParameterInstantiation"),
      optional: true
    },
    typeParameters: {
      validate: (0, _utils.assertNodeType)("TSTypeParameterInstantiation"),
      optional: true
    }
  })
});
(0, _utils.default)("CatchClause", {
  visitor: ["param", "body"],
  fields: {
    param: {
      validate: (0, _utils.assertNodeType)("Identifier", "ArrayPattern", "ObjectPattern"),
      optional: true
    },
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  },
  aliases: ["Scopable", "BlockParent"]
});
(0, _utils.default)("ConditionalExpression", {
  visitor: ["test", "consequent", "alternate"],
  fields: {
    test: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    consequent: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    alternate: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  },
  aliases: ["Expression", "Conditional"]
});
(0, _utils.default)("ContinueStatement", {
  visitor: ["label"],
  fields: {
    label: {
      validate: (0, _utils.assertNodeType)("Identifier"),
      optional: true
    }
  },
  aliases: ["Statement", "Terminatorless", "CompletionStatement"]
});
(0, _utils.default)("DebuggerStatement", {
  aliases: ["Statement"]
});
(0, _utils.default)("DoWhileStatement", {
  visitor: ["test", "body"],
  fields: {
    test: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    }
  },
  aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"]
});
(0, _utils.default)("EmptyStatement", {
  aliases: ["Statement"]
});
(0, _utils.default)("ExpressionStatement", {
  visitor: ["expression"],
  fields: {
    expression: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  },
  aliases: ["Statement", "ExpressionWrapper"]
});
(0, _utils.default)("File", {
  builder: ["program", "comments", "tokens"],
  visitor: ["program"],
  fields: {
    program: {
      validate: (0, _utils.assertNodeType)("Program")
    },
    comments: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? Object.assign(() => {}, {
        each: {
          oneOfNodeTypes: ["CommentBlock", "CommentLine"]
        }
      }) : (0, _utils.assertEach)((0, _utils.assertNodeType)("CommentBlock", "CommentLine")),
      optional: true
    },
    tokens: {
      validate: (0, _utils.assertEach)(Object.assign(() => {}, {
        type: "any"
      })),
      optional: true
    }
  }
});
(0, _utils.default)("ForInStatement", {
  visitor: ["left", "right", "body"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
  fields: {
    left: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)("VariableDeclaration", "LVal") : (0, _utils.assertNodeType)("VariableDeclaration", "Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern")
    },
    right: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    }
  }
});
(0, _utils.default)("ForStatement", {
  visitor: ["init", "test", "update", "body"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop"],
  fields: {
    init: {
      validate: (0, _utils.assertNodeType)("VariableDeclaration", "Expression"),
      optional: true
    },
    test: {
      validate: (0, _utils.assertNodeType)("Expression"),
      optional: true
    },
    update: {
      validate: (0, _utils.assertNodeType)("Expression"),
      optional: true
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    }
  }
});
const functionCommon = {
  params: {
    validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Identifier", "Pattern", "RestElement")))
  },
  generator: {
    default: false
  },
  async: {
    default: false
  }
};
exports.functionCommon = functionCommon;
const functionTypeAnnotationCommon = {
  returnType: {
    validate: (0, _utils.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
    optional: true
  },
  typeParameters: {
    validate: (0, _utils.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"),
    optional: true
  }
};
exports.functionTypeAnnotationCommon = functionTypeAnnotationCommon;
const functionDeclarationCommon = Object.assign({}, functionCommon, {
  declare: {
    validate: (0, _utils.assertValueType)("boolean"),
    optional: true
  },
  id: {
    validate: (0, _utils.assertNodeType)("Identifier"),
    optional: true
  }
});
exports.functionDeclarationCommon = functionDeclarationCommon;
(0, _utils.default)("FunctionDeclaration", {
  builder: ["id", "params", "body", "generator", "async"],
  visitor: ["id", "params", "body", "returnType", "typeParameters"],
  fields: Object.assign({}, functionDeclarationCommon, functionTypeAnnotationCommon, {
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  }),
  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Statement", "Pureish", "Declaration"],
  validate: function () {
    if (!process.env.BABEL_TYPES_8_BREAKING) return () => {};
    const identifier = (0, _utils.assertNodeType)("Identifier");
    return function (parent, key, node) {
      if (!(0, _is.default)("ExportDefaultDeclaration", parent)) {
        identifier(node, "id", node.id);
      }
    };
  }()
});
(0, _utils.default)("FunctionExpression", {
  inherits: "FunctionDeclaration",
  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
  fields: Object.assign({}, functionCommon, functionTypeAnnotationCommon, {
    id: {
      validate: (0, _utils.assertNodeType)("Identifier"),
      optional: true
    },
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  })
});
const patternLikeCommon = {
  typeAnnotation: {
    validate: (0, _utils.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
    optional: true
  },
  decorators: {
    validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator")))
  }
};
exports.patternLikeCommon = patternLikeCommon;
(0, _utils.default)("Identifier", {
  builder: ["name"],
  visitor: ["typeAnnotation", "decorators"],
  aliases: ["Expression", "PatternLike", "LVal", "TSEntityName"],
  fields: Object.assign({}, patternLikeCommon, {
    name: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("string"), Object.assign(function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (!(0, _isValidIdentifier.default)(val, false)) {
          throw new TypeError(`"${val}" is not a valid identifier name`);
        }
      }, {
        type: "string"
      }))
    },
    optional: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    }
  }),

  validate(parent, key, node) {
    if (!process.env.BABEL_TYPES_8_BREAKING) return;
    const match = /\.(\w+)$/.exec(key);
    if (!match) return;
    const [, parentKey] = match;
    const nonComp = {
      computed: false
    };

    if (parentKey === "property") {
      if ((0, _is.default)("MemberExpression", parent, nonComp)) return;
      if ((0, _is.default)("OptionalMemberExpression", parent, nonComp)) return;
    } else if (parentKey === "key") {
      if ((0, _is.default)("Property", parent, nonComp)) return;
      if ((0, _is.default)("Method", parent, nonComp)) return;
    } else if (parentKey === "exported") {
      if ((0, _is.default)("ExportSpecifier", parent)) return;
    } else if (parentKey === "imported") {
      if ((0, _is.default)("ImportSpecifier", parent, {
        imported: node
      })) return;
    } else if (parentKey === "meta") {
      if ((0, _is.default)("MetaProperty", parent, {
        meta: node
      })) return;
    }

    if (((0, _helperValidatorIdentifier.isKeyword)(node.name) || (0, _helperValidatorIdentifier.isReservedWord)(node.name, false)) && node.name !== "this") {
      throw new TypeError(`"${node.name}" is not a valid identifier`);
    }
  }

});
(0, _utils.default)("IfStatement", {
  visitor: ["test", "consequent", "alternate"],
  aliases: ["Statement", "Conditional"],
  fields: {
    test: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    consequent: {
      validate: (0, _utils.assertNodeType)("Statement")
    },
    alternate: {
      optional: true,
      validate: (0, _utils.assertNodeType)("Statement")
    }
  }
});
(0, _utils.default)("LabeledStatement", {
  visitor: ["label", "body"],
  aliases: ["Statement"],
  fields: {
    label: {
      validate: (0, _utils.assertNodeType)("Identifier")
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    }
  }
});
(0, _utils.default)("StringLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("string")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});
(0, _utils.default)("NumericLiteral", {
  builder: ["value"],
  deprecatedAlias: "NumberLiteral",
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("number")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});
(0, _utils.default)("NullLiteral", {
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});
(0, _utils.default)("BooleanLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("boolean")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});
(0, _utils.default)("RegExpLiteral", {
  builder: ["pattern", "flags"],
  deprecatedAlias: "RegexLiteral",
  aliases: ["Expression", "Pureish", "Literal"],
  fields: {
    pattern: {
      validate: (0, _utils.assertValueType)("string")
    },
    flags: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("string"), Object.assign(function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;
        const invalid = /[^gimsuy]/.exec(val);

        if (invalid) {
          throw new TypeError(`"${invalid[0]}" is not a valid RegExp flag`);
        }
      }, {
        type: "string"
      })),
      default: ""
    }
  }
});
(0, _utils.default)("LogicalExpression", {
  builder: ["operator", "left", "right"],
  visitor: ["left", "right"],
  aliases: ["Binary", "Expression"],
  fields: {
    operator: {
      validate: (0, _utils.assertOneOf)(..._constants.LOGICAL_OPERATORS)
    },
    left: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    right: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("MemberExpression", {
  builder: ["object", "property", "computed", "optional"],
  visitor: ["object", "property"],
  aliases: ["Expression", "LVal"],
  fields: Object.assign({
    object: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    property: {
      validate: function () {
        const normal = (0, _utils.assertNodeType)("Identifier", "PrivateName");
        const computed = (0, _utils.assertNodeType)("Expression");

        const validator = function (node, key, val) {
          const validator = node.computed ? computed : normal;
          validator(node, key, val);
        };

        validator.oneOfNodeTypes = ["Expression", "Identifier", "PrivateName"];
        return validator;
      }()
    },
    computed: {
      default: false
    }
  }, !process.env.BABEL_TYPES_8_BREAKING ? {
    optional: {
      validate: (0, _utils.assertOneOf)(true, false),
      optional: true
    }
  } : {})
});
(0, _utils.default)("NewExpression", {
  inherits: "CallExpression"
});
(0, _utils.default)("Program", {
  visitor: ["directives", "body"],
  builder: ["body", "directives", "sourceType", "interpreter"],
  fields: {
    sourceFile: {
      validate: (0, _utils.assertValueType)("string")
    },
    sourceType: {
      validate: (0, _utils.assertOneOf)("script", "module"),
      default: "script"
    },
    interpreter: {
      validate: (0, _utils.assertNodeType)("InterpreterDirective"),
      default: null,
      optional: true
    },
    directives: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Directive"))),
      default: []
    },
    body: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Statement")))
    }
  },
  aliases: ["Scopable", "BlockParent", "Block"]
});
(0, _utils.default)("ObjectExpression", {
  visitor: ["properties"],
  aliases: ["Expression"],
  fields: {
    properties: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ObjectMethod", "ObjectProperty", "SpreadElement")))
    }
  }
});
(0, _utils.default)("ObjectMethod", {
  builder: ["kind", "key", "params", "body", "computed", "generator", "async"],
  fields: Object.assign({}, functionCommon, functionTypeAnnotationCommon, {
    kind: Object.assign({
      validate: (0, _utils.assertOneOf)("method", "get", "set")
    }, !process.env.BABEL_TYPES_8_BREAKING ? {
      default: "method"
    } : {}),
    computed: {
      default: false
    },
    key: {
      validate: function () {
        const normal = (0, _utils.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral");
        const computed = (0, _utils.assertNodeType)("Expression");

        const validator = function (node, key, val) {
          const validator = node.computed ? computed : normal;
          validator(node, key, val);
        };

        validator.oneOfNodeTypes = ["Expression", "Identifier", "StringLiteral", "NumericLiteral"];
        return validator;
      }()
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    },
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  }),
  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
  aliases: ["UserWhitespacable", "Function", "Scopable", "BlockParent", "FunctionParent", "Method", "ObjectMember"]
});
(0, _utils.default)("ObjectProperty", {
  builder: ["key", "value", "computed", "shorthand", ...(!process.env.BABEL_TYPES_8_BREAKING ? ["decorators"] : [])],
  fields: {
    computed: {
      default: false
    },
    key: {
      validate: function () {
        const normal = (0, _utils.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral");
        const computed = (0, _utils.assertNodeType)("Expression");

        const validator = function (node, key, val) {
          const validator = node.computed ? computed : normal;
          validator(node, key, val);
        };

        validator.oneOfNodeTypes = ["Expression", "Identifier", "StringLiteral", "NumericLiteral"];
        return validator;
      }()
    },
    value: {
      validate: (0, _utils.assertNodeType)("Expression", "PatternLike")
    },
    shorthand: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("boolean"), Object.assign(function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (val && node.computed) {
          throw new TypeError("Property shorthand of ObjectProperty cannot be true if computed is true");
        }
      }, {
        type: "boolean"
      }), function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (val && !(0, _is.default)("Identifier", node.key)) {
          throw new TypeError("Property shorthand of ObjectProperty cannot be true if key is not an Identifier");
        }
      }),
      default: false
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    }
  },
  visitor: ["key", "value", "decorators"],
  aliases: ["UserWhitespacable", "Property", "ObjectMember"],
  validate: function () {
    const pattern = (0, _utils.assertNodeType)("Identifier", "Pattern");
    const expression = (0, _utils.assertNodeType)("Expression");
    return function (parent, key, node) {
      if (!process.env.BABEL_TYPES_8_BREAKING) return;
      const validator = (0, _is.default)("ObjectPattern", parent) ? pattern : expression;
      validator(node, "value", node.value);
    };
  }()
});
(0, _utils.default)("RestElement", {
  visitor: ["argument", "typeAnnotation"],
  builder: ["argument"],
  aliases: ["LVal", "PatternLike"],
  deprecatedAlias: "RestProperty",
  fields: Object.assign({}, patternLikeCommon, {
    argument: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)("LVal") : (0, _utils.assertNodeType)("Identifier", "Pattern", "MemberExpression")
    }
  }),

  validate(parent, key) {
    if (!process.env.BABEL_TYPES_8_BREAKING) return;
    const match = /(\w+)\[(\d+)\]/.exec(key);
    if (!match) throw new Error("Internal Babel error: malformed key.");
    const [, listKey, index] = match;

    if (parent[listKey].length > index + 1) {
      throw new TypeError(`RestElement must be last element of ${listKey}`);
    }
  }

});
(0, _utils.default)("ReturnStatement", {
  visitor: ["argument"],
  aliases: ["Statement", "Terminatorless", "CompletionStatement"],
  fields: {
    argument: {
      validate: (0, _utils.assertNodeType)("Expression"),
      optional: true
    }
  }
});
(0, _utils.default)("SequenceExpression", {
  visitor: ["expressions"],
  fields: {
    expressions: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Expression")))
    }
  },
  aliases: ["Expression"]
});
(0, _utils.default)("ParenthesizedExpression", {
  visitor: ["expression"],
  aliases: ["Expression", "ExpressionWrapper"],
  fields: {
    expression: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("SwitchCase", {
  visitor: ["test", "consequent"],
  fields: {
    test: {
      validate: (0, _utils.assertNodeType)("Expression"),
      optional: true
    },
    consequent: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Statement")))
    }
  }
});
(0, _utils.default)("SwitchStatement", {
  visitor: ["discriminant", "cases"],
  aliases: ["Statement", "BlockParent", "Scopable"],
  fields: {
    discriminant: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    cases: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("SwitchCase")))
    }
  }
});
(0, _utils.default)("ThisExpression", {
  aliases: ["Expression"]
});
(0, _utils.default)("ThrowStatement", {
  visitor: ["argument"],
  aliases: ["Statement", "Terminatorless", "CompletionStatement"],
  fields: {
    argument: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("TryStatement", {
  visitor: ["block", "handler", "finalizer"],
  aliases: ["Statement"],
  fields: {
    block: {
      validate: (0, _utils.chain)((0, _utils.assertNodeType)("BlockStatement"), Object.assign(function (node) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (!node.handler && !node.finalizer) {
          throw new TypeError("TryStatement expects either a handler or finalizer, or both");
        }
      }, {
        oneOfNodeTypes: ["BlockStatement"]
      }))
    },
    handler: {
      optional: true,
      validate: (0, _utils.assertNodeType)("CatchClause")
    },
    finalizer: {
      optional: true,
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  }
});
(0, _utils.default)("UnaryExpression", {
  builder: ["operator", "argument", "prefix"],
  fields: {
    prefix: {
      default: true
    },
    argument: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    operator: {
      validate: (0, _utils.assertOneOf)(..._constants.UNARY_OPERATORS)
    }
  },
  visitor: ["argument"],
  aliases: ["UnaryLike", "Expression"]
});
(0, _utils.default)("UpdateExpression", {
  builder: ["operator", "argument", "prefix"],
  fields: {
    prefix: {
      default: false
    },
    argument: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertNodeType)("Expression") : (0, _utils.assertNodeType)("Identifier", "MemberExpression")
    },
    operator: {
      validate: (0, _utils.assertOneOf)(..._constants.UPDATE_OPERATORS)
    }
  },
  visitor: ["argument"],
  aliases: ["Expression"]
});
(0, _utils.default)("VariableDeclaration", {
  builder: ["kind", "declarations"],
  visitor: ["declarations"],
  aliases: ["Statement", "Declaration"],
  fields: {
    declare: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    },
    kind: {
      validate: (0, _utils.assertOneOf)("var", "let", "const")
    },
    declarations: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("VariableDeclarator")))
    }
  },

  validate(parent, key, node) {
    if (!process.env.BABEL_TYPES_8_BREAKING) return;
    if (!(0, _is.default)("ForXStatement", parent, {
      left: node
    })) return;

    if (node.declarations.length !== 1) {
      throw new TypeError(`Exactly one VariableDeclarator is required in the VariableDeclaration of a ${parent.type}`);
    }
  }

});
(0, _utils.default)("VariableDeclarator", {
  visitor: ["id", "init"],
  fields: {
    id: {
      validate: function () {
        if (!process.env.BABEL_TYPES_8_BREAKING) {
          return (0, _utils.assertNodeType)("LVal");
        }

        const normal = (0, _utils.assertNodeType)("Identifier", "ArrayPattern", "ObjectPattern");
        const without = (0, _utils.assertNodeType)("Identifier");
        return function (node, key, val) {
          const validator = node.init ? normal : without;
          validator(node, key, val);
        };
      }()
    },
    definite: {
      optional: true,
      validate: (0, _utils.assertValueType)("boolean")
    },
    init: {
      optional: true,
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("WhileStatement", {
  visitor: ["test", "body"],
  aliases: ["Statement", "BlockParent", "Loop", "While", "Scopable"],
  fields: {
    test: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    }
  }
});
(0, _utils.default)("WithStatement", {
  visitor: ["object", "body"],
  aliases: ["Statement"],
  fields: {
    object: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    }
  }
});
(0, _utils.default)("AssignmentPattern", {
  visitor: ["left", "right", "decorators"],
  builder: ["left", "right"],
  aliases: ["Pattern", "PatternLike", "LVal"],
  fields: Object.assign({}, patternLikeCommon, {
    left: {
      validate: (0, _utils.assertNodeType)("Identifier", "ObjectPattern", "ArrayPattern", "MemberExpression")
    },
    right: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    }
  })
});
(0, _utils.default)("ArrayPattern", {
  visitor: ["elements", "typeAnnotation"],
  builder: ["elements"],
  aliases: ["Pattern", "PatternLike", "LVal"],
  fields: Object.assign({}, patternLikeCommon, {
    elements: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeOrValueType)("null", "PatternLike")))
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    }
  })
});
(0, _utils.default)("ArrowFunctionExpression", {
  builder: ["params", "body", "async"],
  visitor: ["params", "body", "returnType", "typeParameters"],
  aliases: ["Scopable", "Function", "BlockParent", "FunctionParent", "Expression", "Pureish"],
  fields: Object.assign({}, functionCommon, functionTypeAnnotationCommon, {
    expression: {
      validate: (0, _utils.assertValueType)("boolean")
    },
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement", "Expression")
    }
  })
});
(0, _utils.default)("ClassBody", {
  visitor: ["body"],
  fields: {
    body: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ClassMethod", "ClassPrivateMethod", "ClassProperty", "ClassPrivateProperty", "TSDeclareMethod", "TSIndexSignature")))
    }
  }
});
(0, _utils.default)("ClassExpression", {
  builder: ["id", "superClass", "body", "decorators"],
  visitor: ["id", "body", "superClass", "mixins", "typeParameters", "superTypeParameters", "implements", "decorators"],
  aliases: ["Scopable", "Class", "Expression"],
  fields: {
    id: {
      validate: (0, _utils.assertNodeType)("Identifier"),
      optional: true
    },
    typeParameters: {
      validate: (0, _utils.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"),
      optional: true
    },
    body: {
      validate: (0, _utils.assertNodeType)("ClassBody")
    },
    superClass: {
      optional: true,
      validate: (0, _utils.assertNodeType)("Expression")
    },
    superTypeParameters: {
      validate: (0, _utils.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
      optional: true
    },
    implements: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("TSExpressionWithTypeArguments", "ClassImplements"))),
      optional: true
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    },
    mixins: {
      validate: (0, _utils.assertNodeType)("InterfaceExtends"),
      optional: true
    }
  }
});
(0, _utils.default)("ClassDeclaration", {
  inherits: "ClassExpression",
  aliases: ["Scopable", "Class", "Statement", "Declaration"],
  fields: {
    id: {
      validate: (0, _utils.assertNodeType)("Identifier")
    },
    typeParameters: {
      validate: (0, _utils.assertNodeType)("TypeParameterDeclaration", "TSTypeParameterDeclaration", "Noop"),
      optional: true
    },
    body: {
      validate: (0, _utils.assertNodeType)("ClassBody")
    },
    superClass: {
      optional: true,
      validate: (0, _utils.assertNodeType)("Expression")
    },
    superTypeParameters: {
      validate: (0, _utils.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
      optional: true
    },
    implements: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("TSExpressionWithTypeArguments", "ClassImplements"))),
      optional: true
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    },
    mixins: {
      validate: (0, _utils.assertNodeType)("InterfaceExtends"),
      optional: true
    },
    declare: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    },
    abstract: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    }
  },
  validate: function () {
    const identifier = (0, _utils.assertNodeType)("Identifier");
    return function (parent, key, node) {
      if (!process.env.BABEL_TYPES_8_BREAKING) return;

      if (!(0, _is.default)("ExportDefaultDeclaration", parent)) {
        identifier(node, "id", node.id);
      }
    };
  }()
});
(0, _utils.default)("ExportAllDeclaration", {
  visitor: ["source"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
  fields: {
    source: {
      validate: (0, _utils.assertNodeType)("StringLiteral")
    },
    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)("type", "value")),
    assertions: {
      optional: true,
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ImportAttribute")))
    }
  }
});
(0, _utils.default)("ExportDefaultDeclaration", {
  visitor: ["declaration"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
  fields: {
    declaration: {
      validate: (0, _utils.assertNodeType)("FunctionDeclaration", "TSDeclareFunction", "ClassDeclaration", "Expression")
    }
  }
});
(0, _utils.default)("ExportNamedDeclaration", {
  visitor: ["declaration", "specifiers", "source"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration", "ExportDeclaration"],
  fields: {
    declaration: {
      optional: true,
      validate: (0, _utils.chain)((0, _utils.assertNodeType)("Declaration"), Object.assign(function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (val && node.specifiers.length) {
          throw new TypeError("Only declaration or specifiers is allowed on ExportNamedDeclaration");
        }
      }, {
        oneOfNodeTypes: ["Declaration"]
      }), function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (val && node.source) {
          throw new TypeError("Cannot export a declaration from a source");
        }
      })
    },
    assertions: {
      optional: true,
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ImportAttribute")))
    },
    specifiers: {
      default: [],
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)(function () {
        const sourced = (0, _utils.assertNodeType)("ExportSpecifier", "ExportDefaultSpecifier", "ExportNamespaceSpecifier");
        const sourceless = (0, _utils.assertNodeType)("ExportSpecifier");
        if (!process.env.BABEL_TYPES_8_BREAKING) return sourced;
        return function (node, key, val) {
          const validator = node.source ? sourced : sourceless;
          validator(node, key, val);
        };
      }()))
    },
    source: {
      validate: (0, _utils.assertNodeType)("StringLiteral"),
      optional: true
    },
    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)("type", "value"))
  }
});
(0, _utils.default)("ExportSpecifier", {
  visitor: ["local", "exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _utils.assertNodeType)("Identifier")
    },
    exported: {
      validate: (0, _utils.assertNodeType)("Identifier", "StringLiteral")
    }
  }
});
(0, _utils.default)("ForOfStatement", {
  visitor: ["left", "right", "body"],
  builder: ["left", "right", "body", "await"],
  aliases: ["Scopable", "Statement", "For", "BlockParent", "Loop", "ForXStatement"],
  fields: {
    left: {
      validate: function () {
        if (!process.env.BABEL_TYPES_8_BREAKING) {
          return (0, _utils.assertNodeType)("VariableDeclaration", "LVal");
        }

        const declaration = (0, _utils.assertNodeType)("VariableDeclaration");
        const lval = (0, _utils.assertNodeType)("Identifier", "MemberExpression", "ArrayPattern", "ObjectPattern");
        return function (node, key, val) {
          if ((0, _is.default)("VariableDeclaration", val)) {
            declaration(node, key, val);
          } else {
            lval(node, key, val);
          }
        };
      }()
    },
    right: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    body: {
      validate: (0, _utils.assertNodeType)("Statement")
    },
    await: {
      default: false
    }
  }
});
(0, _utils.default)("ImportDeclaration", {
  visitor: ["specifiers", "source"],
  aliases: ["Statement", "Declaration", "ModuleDeclaration"],
  fields: {
    assertions: {
      optional: true,
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ImportAttribute")))
    },
    specifiers: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ImportSpecifier", "ImportDefaultSpecifier", "ImportNamespaceSpecifier")))
    },
    source: {
      validate: (0, _utils.assertNodeType)("StringLiteral")
    },
    importKind: {
      validate: (0, _utils.assertOneOf)("type", "typeof", "value"),
      optional: true
    }
  }
});
(0, _utils.default)("ImportDefaultSpecifier", {
  visitor: ["local"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _utils.assertNodeType)("Identifier")
    }
  }
});
(0, _utils.default)("ImportNamespaceSpecifier", {
  visitor: ["local"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _utils.assertNodeType)("Identifier")
    }
  }
});
(0, _utils.default)("ImportSpecifier", {
  visitor: ["local", "imported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    local: {
      validate: (0, _utils.assertNodeType)("Identifier")
    },
    imported: {
      validate: (0, _utils.assertNodeType)("Identifier", "StringLiteral")
    },
    importKind: {
      validate: (0, _utils.assertOneOf)("type", "typeof"),
      optional: true
    }
  }
});
(0, _utils.default)("MetaProperty", {
  visitor: ["meta", "property"],
  aliases: ["Expression"],
  fields: {
    meta: {
      validate: (0, _utils.chain)((0, _utils.assertNodeType)("Identifier"), Object.assign(function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;
        let property;

        switch (val.name) {
          case "function":
            property = "sent";
            break;

          case "new":
            property = "target";
            break;

          case "import":
            property = "meta";
            break;
        }

        if (!(0, _is.default)("Identifier", node.property, {
          name: property
        })) {
          throw new TypeError("Unrecognised MetaProperty");
        }
      }, {
        oneOfNodeTypes: ["Identifier"]
      }))
    },
    property: {
      validate: (0, _utils.assertNodeType)("Identifier")
    }
  }
});
const classMethodOrPropertyCommon = {
  abstract: {
    validate: (0, _utils.assertValueType)("boolean"),
    optional: true
  },
  accessibility: {
    validate: (0, _utils.assertOneOf)("public", "private", "protected"),
    optional: true
  },
  static: {
    default: false
  },
  override: {
    default: false
  },
  computed: {
    default: false
  },
  optional: {
    validate: (0, _utils.assertValueType)("boolean"),
    optional: true
  },
  key: {
    validate: (0, _utils.chain)(function () {
      const normal = (0, _utils.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral");
      const computed = (0, _utils.assertNodeType)("Expression");
      return function (node, key, val) {
        const validator = node.computed ? computed : normal;
        validator(node, key, val);
      };
    }(), (0, _utils.assertNodeType)("Identifier", "StringLiteral", "NumericLiteral", "Expression"))
  }
};
exports.classMethodOrPropertyCommon = classMethodOrPropertyCommon;
const classMethodOrDeclareMethodCommon = Object.assign({}, functionCommon, classMethodOrPropertyCommon, {
  params: {
    validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Identifier", "Pattern", "RestElement", "TSParameterProperty")))
  },
  kind: {
    validate: (0, _utils.assertOneOf)("get", "set", "method", "constructor"),
    default: "method"
  },
  access: {
    validate: (0, _utils.chain)((0, _utils.assertValueType)("string"), (0, _utils.assertOneOf)("public", "private", "protected")),
    optional: true
  },
  decorators: {
    validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
    optional: true
  }
});
exports.classMethodOrDeclareMethodCommon = classMethodOrDeclareMethodCommon;
(0, _utils.default)("ClassMethod", {
  aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method"],
  builder: ["kind", "key", "params", "body", "computed", "static", "generator", "async"],
  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
  fields: Object.assign({}, classMethodOrDeclareMethodCommon, functionTypeAnnotationCommon, {
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  })
});
(0, _utils.default)("ObjectPattern", {
  visitor: ["properties", "typeAnnotation", "decorators"],
  builder: ["properties"],
  aliases: ["Pattern", "PatternLike", "LVal"],
  fields: Object.assign({}, patternLikeCommon, {
    properties: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("RestElement", "ObjectProperty")))
    }
  })
});
(0, _utils.default)("SpreadElement", {
  visitor: ["argument"],
  aliases: ["UnaryLike"],
  deprecatedAlias: "SpreadProperty",
  fields: {
    argument: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("Super", {
  aliases: ["Expression"]
});
(0, _utils.default)("TaggedTemplateExpression", {
  visitor: ["tag", "quasi"],
  aliases: ["Expression"],
  fields: {
    tag: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    quasi: {
      validate: (0, _utils.assertNodeType)("TemplateLiteral")
    },
    typeParameters: {
      validate: (0, _utils.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
      optional: true
    }
  }
});
(0, _utils.default)("TemplateElement", {
  builder: ["value", "tail"],
  fields: {
    value: {
      validate: (0, _utils.assertShape)({
        raw: {
          validate: (0, _utils.assertValueType)("string")
        },
        cooked: {
          validate: (0, _utils.assertValueType)("string"),
          optional: true
        }
      })
    },
    tail: {
      default: false
    }
  }
});
(0, _utils.default)("TemplateLiteral", {
  visitor: ["quasis", "expressions"],
  aliases: ["Expression", "Literal"],
  fields: {
    quasis: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("TemplateElement")))
    },
    expressions: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Expression", "TSType")), function (node, key, val) {
        if (node.quasis.length !== val.length + 1) {
          throw new TypeError(`Number of ${node.type} quasis should be exactly one more than the number of expressions.\nExpected ${val.length + 1} quasis but got ${node.quasis.length}`);
        }
      })
    }
  }
});
(0, _utils.default)("YieldExpression", {
  builder: ["argument", "delegate"],
  visitor: ["argument"],
  aliases: ["Expression", "Terminatorless"],
  fields: {
    delegate: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("boolean"), Object.assign(function (node, key, val) {
        if (!process.env.BABEL_TYPES_8_BREAKING) return;

        if (val && !node.argument) {
          throw new TypeError("Property delegate of YieldExpression cannot be true if there is no argument");
        }
      }, {
        type: "boolean"
      })),
      default: false
    },
    argument: {
      optional: true,
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("AwaitExpression", {
  builder: ["argument"],
  visitor: ["argument"],
  aliases: ["Expression", "Terminatorless"],
  fields: {
    argument: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("Import", {
  aliases: ["Expression"]
});
(0, _utils.default)("BigIntLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("string")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});
(0, _utils.default)("ExportNamespaceSpecifier", {
  visitor: ["exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    exported: {
      validate: (0, _utils.assertNodeType)("Identifier")
    }
  }
});
(0, _utils.default)("OptionalMemberExpression", {
  builder: ["object", "property", "computed", "optional"],
  visitor: ["object", "property"],
  aliases: ["Expression"],
  fields: {
    object: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    property: {
      validate: function () {
        const normal = (0, _utils.assertNodeType)("Identifier");
        const computed = (0, _utils.assertNodeType)("Expression");

        const validator = function (node, key, val) {
          const validator = node.computed ? computed : normal;
          validator(node, key, val);
        };

        validator.oneOfNodeTypes = ["Expression", "Identifier"];
        return validator;
      }()
    },
    computed: {
      default: false
    },
    optional: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)("boolean") : (0, _utils.chain)((0, _utils.assertValueType)("boolean"), (0, _utils.assertOptionalChainStart)())
    }
  }
});
(0, _utils.default)("OptionalCallExpression", {
  visitor: ["callee", "arguments", "typeParameters", "typeArguments"],
  builder: ["callee", "arguments", "optional"],
  aliases: ["Expression"],
  fields: {
    callee: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    arguments: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Expression", "SpreadElement", "JSXNamespacedName", "ArgumentPlaceholder")))
    },
    optional: {
      validate: !process.env.BABEL_TYPES_8_BREAKING ? (0, _utils.assertValueType)("boolean") : (0, _utils.chain)((0, _utils.assertValueType)("boolean"), (0, _utils.assertOptionalChainStart)())
    },
    typeArguments: {
      validate: (0, _utils.assertNodeType)("TypeParameterInstantiation"),
      optional: true
    },
    typeParameters: {
      validate: (0, _utils.assertNodeType)("TSTypeParameterInstantiation"),
      optional: true
    }
  }
});

/***/ }),
/* 25 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = is;

var _shallowEqual = __webpack_require__(16);

var _isType = __webpack_require__(26);

var _isPlaceholderType = __webpack_require__(27);

var _definitions = __webpack_require__(22);

function is(type, node, opts) {
  if (!node) return false;
  const matches = (0, _isType.default)(node.type, type);

  if (!matches) {
    if (!opts && node.type === "Placeholder" && type in _definitions.FLIPPED_ALIAS_KEYS) {
      return (0, _isPlaceholderType.default)(node.expectedNode, type);
    }

    return false;
  }

  if (typeof opts === "undefined") {
    return true;
  } else {
    return (0, _shallowEqual.default)(node, opts);
  }
}

/***/ }),
/* 26 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isType;

var _definitions = __webpack_require__(22);

function isType(nodeType, targetType) {
  if (nodeType === targetType) return true;
  if (_definitions.ALIAS_KEYS[targetType]) return false;
  const aliases = _definitions.FLIPPED_ALIAS_KEYS[targetType];

  if (aliases) {
    if (aliases[0] === nodeType) return true;

    for (const alias of aliases) {
      if (nodeType === alias) return true;
    }
  }

  return false;
}

/***/ }),
/* 27 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isPlaceholderType;

var _definitions = __webpack_require__(22);

function isPlaceholderType(placeholderType, targetType) {
  if (placeholderType === targetType) return true;
  const aliases = _definitions.PLACEHOLDERS_ALIAS[placeholderType];

  if (aliases) {
    for (const alias of aliases) {
      if (targetType === alias) return true;
    }
  }

  return false;
}

/***/ }),
/* 28 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isValidIdentifier;

var _helperValidatorIdentifier = __webpack_require__(29);

function isValidIdentifier(name, reserved = true) {
  if (typeof name !== "string") return false;

  if (reserved) {
    if ((0, _helperValidatorIdentifier.isKeyword)(name) || (0, _helperValidatorIdentifier.isStrictReservedWord)(name, true)) {
      return false;
    }
  }

  return (0, _helperValidatorIdentifier.isIdentifierName)(name);
}

/***/ }),
/* 29 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "isIdentifierName", ({
  enumerable: true,
  get: function () {
    return _identifier.isIdentifierName;
  }
}));
Object.defineProperty(exports, "isIdentifierChar", ({
  enumerable: true,
  get: function () {
    return _identifier.isIdentifierChar;
  }
}));
Object.defineProperty(exports, "isIdentifierStart", ({
  enumerable: true,
  get: function () {
    return _identifier.isIdentifierStart;
  }
}));
Object.defineProperty(exports, "isReservedWord", ({
  enumerable: true,
  get: function () {
    return _keyword.isReservedWord;
  }
}));
Object.defineProperty(exports, "isStrictBindOnlyReservedWord", ({
  enumerable: true,
  get: function () {
    return _keyword.isStrictBindOnlyReservedWord;
  }
}));
Object.defineProperty(exports, "isStrictBindReservedWord", ({
  enumerable: true,
  get: function () {
    return _keyword.isStrictBindReservedWord;
  }
}));
Object.defineProperty(exports, "isStrictReservedWord", ({
  enumerable: true,
  get: function () {
    return _keyword.isStrictReservedWord;
  }
}));
Object.defineProperty(exports, "isKeyword", ({
  enumerable: true,
  get: function () {
    return _keyword.isKeyword;
  }
}));

var _identifier = __webpack_require__(30);

var _keyword = __webpack_require__(31);

/***/ }),
/* 30 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isIdentifierStart = isIdentifierStart;
exports.isIdentifierChar = isIdentifierChar;
exports.isIdentifierName = isIdentifierName;
let nonASCIIidentifierStartChars = "\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u037f\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u052f\u0531-\u0556\u0559\u0560-\u0588\u05d0-\u05ea\u05ef-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u0860-\u086a\u08a0-\u08b4\u08b6-\u08c7\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u09fc\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0af9\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c39\u0c3d\u0c58-\u0c5a\u0c60\u0c61\u0c80\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d04-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d54-\u0d56\u0d5f-\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e86-\u0e8a\u0e8c-\u0ea3\u0ea5\u0ea7-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f5\u13f8-\u13fd\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f8\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1878\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191e\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19b0-\u19c9\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1c80-\u1c88\u1c90-\u1cba\u1cbd-\u1cbf\u1ce9-\u1cec\u1cee-\u1cf3\u1cf5\u1cf6\u1cfa\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309b-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312f\u3131-\u318e\u31a0-\u31bf\u31f0-\u31ff\u3400-\u4dbf\u4e00-\u9ffc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua69d\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua7bf\ua7c2-\ua7ca\ua7f5-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua8fd\ua8fe\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\ua9e0-\ua9e4\ua9e6-\ua9ef\ua9fa-\ua9fe\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa7e-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uab30-\uab5a\uab5c-\uab69\uab70-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc";
let nonASCIIidentifierChars = "\u200c\u200d\xb7\u0300-\u036f\u0387\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u07fd\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08d3-\u08e1\u08e3-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u09fe\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0afa-\u0aff\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b55-\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c00-\u0c04\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c81-\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d00-\u0d03\u0d3b\u0d3c\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d81-\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0de6-\u0def\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1369-\u1371\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19d0-\u19da\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1ab0-\u1abd\u1abf\u1ac0\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf4\u1cf7-\u1cf9\u1dc0-\u1df9\u1dfb-\u1dff\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69e\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua82c\ua880\ua881\ua8b4-\ua8c5\ua8d0-\ua8d9\ua8e0-\ua8f1\ua8ff-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\ua9e5\ua9f0-\ua9f9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b-\uaa7d\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe2f\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f";
const nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");
const nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");
nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;
const astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];
const astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];

function isInAstralSet(code, set) {
  let pos = 0x10000;

  for (let i = 0, length = set.length; i < length; i += 2) {
    pos += set[i];
    if (pos > code) return false;
    pos += set[i + 1];
    if (pos >= code) return true;
  }

  return false;
}

function isIdentifierStart(code) {
  if (code < 65) return code === 36;
  if (code <= 90) return true;
  if (code < 97) return code === 95;
  if (code <= 122) return true;

  if (code <= 0xffff) {
    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));
  }

  return isInAstralSet(code, astralIdentifierStartCodes);
}

function isIdentifierChar(code) {
  if (code < 48) return code === 36;
  if (code < 58) return true;
  if (code < 65) return false;
  if (code <= 90) return true;
  if (code < 97) return code === 95;
  if (code <= 122) return true;

  if (code <= 0xffff) {
    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));
  }

  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);
}

function isIdentifierName(name) {
  let isFirst = true;

  for (let i = 0; i < name.length; i++) {
    let cp = name.charCodeAt(i);

    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {
      const trail = name.charCodeAt(++i);

      if ((trail & 0xfc00) === 0xdc00) {
        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);
      }
    }

    if (isFirst) {
      isFirst = false;

      if (!isIdentifierStart(cp)) {
        return false;
      }
    } else if (!isIdentifierChar(cp)) {
      return false;
    }
  }

  return !isFirst;
}

/***/ }),
/* 31 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isReservedWord = isReservedWord;
exports.isStrictReservedWord = isStrictReservedWord;
exports.isStrictBindOnlyReservedWord = isStrictBindOnlyReservedWord;
exports.isStrictBindReservedWord = isStrictBindReservedWord;
exports.isKeyword = isKeyword;
const reservedWords = {
  keyword: ["break", "case", "catch", "continue", "debugger", "default", "do", "else", "finally", "for", "function", "if", "return", "switch", "throw", "try", "var", "const", "while", "with", "new", "this", "super", "class", "extends", "export", "import", "null", "true", "false", "in", "instanceof", "typeof", "void", "delete"],
  strict: ["implements", "interface", "let", "package", "private", "protected", "public", "static", "yield"],
  strictBind: ["eval", "arguments"]
};
const keywords = new Set(reservedWords.keyword);
const reservedWordsStrictSet = new Set(reservedWords.strict);
const reservedWordsStrictBindSet = new Set(reservedWords.strictBind);

function isReservedWord(word, inModule) {
  return inModule && word === "await" || word === "enum";
}

function isStrictReservedWord(word, inModule) {
  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);
}

function isStrictBindOnlyReservedWord(word) {
  return reservedWordsStrictBindSet.has(word);
}

function isStrictBindReservedWord(word, inModule) {
  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);
}

function isKeyword(word) {
  return keywords.has(word);
}

/***/ }),
/* 32 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NOT_LOCAL_BINDING = exports.BLOCK_SCOPED_SYMBOL = exports.INHERIT_KEYS = exports.UNARY_OPERATORS = exports.STRING_UNARY_OPERATORS = exports.NUMBER_UNARY_OPERATORS = exports.BOOLEAN_UNARY_OPERATORS = exports.ASSIGNMENT_OPERATORS = exports.BINARY_OPERATORS = exports.NUMBER_BINARY_OPERATORS = exports.BOOLEAN_BINARY_OPERATORS = exports.COMPARISON_BINARY_OPERATORS = exports.EQUALITY_BINARY_OPERATORS = exports.BOOLEAN_NUMBER_BINARY_OPERATORS = exports.UPDATE_OPERATORS = exports.LOGICAL_OPERATORS = exports.COMMENT_KEYS = exports.FOR_INIT_KEYS = exports.FLATTENABLE_KEYS = exports.STATEMENT_OR_BLOCK_KEYS = void 0;
const STATEMENT_OR_BLOCK_KEYS = ["consequent", "body", "alternate"];
exports.STATEMENT_OR_BLOCK_KEYS = STATEMENT_OR_BLOCK_KEYS;
const FLATTENABLE_KEYS = ["body", "expressions"];
exports.FLATTENABLE_KEYS = FLATTENABLE_KEYS;
const FOR_INIT_KEYS = ["left", "init"];
exports.FOR_INIT_KEYS = FOR_INIT_KEYS;
const COMMENT_KEYS = ["leadingComments", "trailingComments", "innerComments"];
exports.COMMENT_KEYS = COMMENT_KEYS;
const LOGICAL_OPERATORS = ["||", "&&", "??"];
exports.LOGICAL_OPERATORS = LOGICAL_OPERATORS;
const UPDATE_OPERATORS = ["++", "--"];
exports.UPDATE_OPERATORS = UPDATE_OPERATORS;
const BOOLEAN_NUMBER_BINARY_OPERATORS = [">", "<", ">=", "<="];
exports.BOOLEAN_NUMBER_BINARY_OPERATORS = BOOLEAN_NUMBER_BINARY_OPERATORS;
const EQUALITY_BINARY_OPERATORS = ["==", "===", "!=", "!=="];
exports.EQUALITY_BINARY_OPERATORS = EQUALITY_BINARY_OPERATORS;
const COMPARISON_BINARY_OPERATORS = [...EQUALITY_BINARY_OPERATORS, "in", "instanceof"];
exports.COMPARISON_BINARY_OPERATORS = COMPARISON_BINARY_OPERATORS;
const BOOLEAN_BINARY_OPERATORS = [...COMPARISON_BINARY_OPERATORS, ...BOOLEAN_NUMBER_BINARY_OPERATORS];
exports.BOOLEAN_BINARY_OPERATORS = BOOLEAN_BINARY_OPERATORS;
const NUMBER_BINARY_OPERATORS = ["-", "/", "%", "*", "**", "&", "|", ">>", ">>>", "<<", "^"];
exports.NUMBER_BINARY_OPERATORS = NUMBER_BINARY_OPERATORS;
const BINARY_OPERATORS = ["+", ...NUMBER_BINARY_OPERATORS, ...BOOLEAN_BINARY_OPERATORS];
exports.BINARY_OPERATORS = BINARY_OPERATORS;
const ASSIGNMENT_OPERATORS = ["=", "+=", ...NUMBER_BINARY_OPERATORS.map(op => op + "="), ...LOGICAL_OPERATORS.map(op => op + "=")];
exports.ASSIGNMENT_OPERATORS = ASSIGNMENT_OPERATORS;
const BOOLEAN_UNARY_OPERATORS = ["delete", "!"];
exports.BOOLEAN_UNARY_OPERATORS = BOOLEAN_UNARY_OPERATORS;
const NUMBER_UNARY_OPERATORS = ["+", "-", "~"];
exports.NUMBER_UNARY_OPERATORS = NUMBER_UNARY_OPERATORS;
const STRING_UNARY_OPERATORS = ["typeof"];
exports.STRING_UNARY_OPERATORS = STRING_UNARY_OPERATORS;
const UNARY_OPERATORS = ["void", "throw", ...BOOLEAN_UNARY_OPERATORS, ...NUMBER_UNARY_OPERATORS, ...STRING_UNARY_OPERATORS];
exports.UNARY_OPERATORS = UNARY_OPERATORS;
const INHERIT_KEYS = {
  optional: ["typeAnnotation", "typeParameters", "returnType"],
  force: ["start", "loc", "end"]
};
exports.INHERIT_KEYS = INHERIT_KEYS;
const BLOCK_SCOPED_SYMBOL = Symbol.for("var used to be block scoped");
exports.BLOCK_SCOPED_SYMBOL = BLOCK_SCOPED_SYMBOL;
const NOT_LOCAL_BINDING = Symbol.for("should not be considered a local binding");
exports.NOT_LOCAL_BINDING = NOT_LOCAL_BINDING;

/***/ }),
/* 33 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.validate = validate;
exports.typeIs = typeIs;
exports.validateType = validateType;
exports.validateOptional = validateOptional;
exports.validateOptionalType = validateOptionalType;
exports.arrayOf = arrayOf;
exports.arrayOfType = arrayOfType;
exports.validateArrayOfType = validateArrayOfType;
exports.assertEach = assertEach;
exports.assertOneOf = assertOneOf;
exports.assertNodeType = assertNodeType;
exports.assertNodeOrValueType = assertNodeOrValueType;
exports.assertValueType = assertValueType;
exports.assertShape = assertShape;
exports.assertOptionalChainStart = assertOptionalChainStart;
exports.chain = chain;
exports.default = defineType;
exports.NODE_PARENT_VALIDATIONS = exports.DEPRECATED_KEYS = exports.BUILDER_KEYS = exports.NODE_FIELDS = exports.FLIPPED_ALIAS_KEYS = exports.ALIAS_KEYS = exports.VISITOR_KEYS = void 0;

var _is = __webpack_require__(25);

var _validate = __webpack_require__(34);

const VISITOR_KEYS = {};
exports.VISITOR_KEYS = VISITOR_KEYS;
const ALIAS_KEYS = {};
exports.ALIAS_KEYS = ALIAS_KEYS;
const FLIPPED_ALIAS_KEYS = {};
exports.FLIPPED_ALIAS_KEYS = FLIPPED_ALIAS_KEYS;
const NODE_FIELDS = {};
exports.NODE_FIELDS = NODE_FIELDS;
const BUILDER_KEYS = {};
exports.BUILDER_KEYS = BUILDER_KEYS;
const DEPRECATED_KEYS = {};
exports.DEPRECATED_KEYS = DEPRECATED_KEYS;
const NODE_PARENT_VALIDATIONS = {};
exports.NODE_PARENT_VALIDATIONS = NODE_PARENT_VALIDATIONS;

function getType(val) {
  if (Array.isArray(val)) {
    return "array";
  } else if (val === null) {
    return "null";
  } else {
    return typeof val;
  }
}

function validate(validate) {
  return {
    validate
  };
}

function typeIs(typeName) {
  return typeof typeName === "string" ? assertNodeType(typeName) : assertNodeType(...typeName);
}

function validateType(typeName) {
  return validate(typeIs(typeName));
}

function validateOptional(validate) {
  return {
    validate,
    optional: true
  };
}

function validateOptionalType(typeName) {
  return {
    validate: typeIs(typeName),
    optional: true
  };
}

function arrayOf(elementType) {
  return chain(assertValueType("array"), assertEach(elementType));
}

function arrayOfType(typeName) {
  return arrayOf(typeIs(typeName));
}

function validateArrayOfType(typeName) {
  return validate(arrayOfType(typeName));
}

function assertEach(callback) {
  function validator(node, key, val) {
    if (!Array.isArray(val)) return;

    for (let i = 0; i < val.length; i++) {
      const subkey = `${key}[${i}]`;
      const v = val[i];
      callback(node, subkey, v);
      if (process.env.BABEL_TYPES_8_BREAKING) (0, _validate.validateChild)(node, subkey, v);
    }
  }

  validator.each = callback;
  return validator;
}

function assertOneOf(...values) {
  function validate(node, key, val) {
    if (values.indexOf(val) < 0) {
      throw new TypeError(`Property ${key} expected value to be one of ${JSON.stringify(values)} but got ${JSON.stringify(val)}`);
    }
  }

  validate.oneOf = values;
  return validate;
}

function assertNodeType(...types) {
  function validate(node, key, val) {
    for (const type of types) {
      if ((0, _is.default)(type, val)) {
        (0, _validate.validateChild)(node, key, val);
        return;
      }
    }

    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);
  }

  validate.oneOfNodeTypes = types;
  return validate;
}

function assertNodeOrValueType(...types) {
  function validate(node, key, val) {
    for (const type of types) {
      if (getType(val) === type || (0, _is.default)(type, val)) {
        (0, _validate.validateChild)(node, key, val);
        return;
      }
    }

    throw new TypeError(`Property ${key} of ${node.type} expected node to be of a type ${JSON.stringify(types)} but instead got ${JSON.stringify(val == null ? void 0 : val.type)}`);
  }

  validate.oneOfNodeOrValueTypes = types;
  return validate;
}

function assertValueType(type) {
  function validate(node, key, val) {
    const valid = getType(val) === type;

    if (!valid) {
      throw new TypeError(`Property ${key} expected type of ${type} but got ${getType(val)}`);
    }
  }

  validate.type = type;
  return validate;
}

function assertShape(shape) {
  function validate(node, key, val) {
    const errors = [];

    for (const property of Object.keys(shape)) {
      try {
        (0, _validate.validateField)(node, property, val[property], shape[property]);
      } catch (error) {
        if (error instanceof TypeError) {
          errors.push(error.message);
          continue;
        }

        throw error;
      }
    }

    if (errors.length) {
      throw new TypeError(`Property ${key} of ${node.type} expected to have the following:\n${errors.join("\n")}`);
    }
  }

  validate.shapeOf = shape;
  return validate;
}

function assertOptionalChainStart() {
  function validate(node) {
    var _current;

    let current = node;

    while (node) {
      const {
        type
      } = current;

      if (type === "OptionalCallExpression") {
        if (current.optional) return;
        current = current.callee;
        continue;
      }

      if (type === "OptionalMemberExpression") {
        if (current.optional) return;
        current = current.object;
        continue;
      }

      break;
    }

    throw new TypeError(`Non-optional ${node.type} must chain from an optional OptionalMemberExpression or OptionalCallExpression. Found chain from ${(_current = current) == null ? void 0 : _current.type}`);
  }

  return validate;
}

function chain(...fns) {
  function validate(...args) {
    for (const fn of fns) {
      fn(...args);
    }
  }

  validate.chainOf = fns;

  if (fns.length >= 2 && "type" in fns[0] && fns[0].type === "array" && !("each" in fns[1])) {
    throw new Error(`An assertValueType("array") validator can only be followed by an assertEach(...) validator.`);
  }

  return validate;
}

const validTypeOpts = ["aliases", "builder", "deprecatedAlias", "fields", "inherits", "visitor", "validate"];
const validFieldKeys = ["default", "optional", "validate"];

function defineType(type, opts = {}) {
  const inherits = opts.inherits && store[opts.inherits] || {};
  let fields = opts.fields;

  if (!fields) {
    fields = {};

    if (inherits.fields) {
      const keys = Object.getOwnPropertyNames(inherits.fields);

      for (const key of keys) {
        const field = inherits.fields[key];
        const def = field.default;

        if (Array.isArray(def) ? def.length > 0 : def && typeof def === "object") {
          throw new Error("field defaults can only be primitives or empty arrays currently");
        }

        fields[key] = {
          default: Array.isArray(def) ? [] : def,
          optional: field.optional,
          validate: field.validate
        };
      }
    }
  }

  const visitor = opts.visitor || inherits.visitor || [];
  const aliases = opts.aliases || inherits.aliases || [];
  const builder = opts.builder || inherits.builder || opts.visitor || [];

  for (const k of Object.keys(opts)) {
    if (validTypeOpts.indexOf(k) === -1) {
      throw new Error(`Unknown type option "${k}" on ${type}`);
    }
  }

  if (opts.deprecatedAlias) {
    DEPRECATED_KEYS[opts.deprecatedAlias] = type;
  }

  for (const key of visitor.concat(builder)) {
    fields[key] = fields[key] || {};
  }

  for (const key of Object.keys(fields)) {
    const field = fields[key];

    if (field.default !== undefined && builder.indexOf(key) === -1) {
      field.optional = true;
    }

    if (field.default === undefined) {
      field.default = null;
    } else if (!field.validate && field.default != null) {
      field.validate = assertValueType(getType(field.default));
    }

    for (const k of Object.keys(field)) {
      if (validFieldKeys.indexOf(k) === -1) {
        throw new Error(`Unknown field key "${k}" on ${type}.${key}`);
      }
    }
  }

  VISITOR_KEYS[type] = opts.visitor = visitor;
  BUILDER_KEYS[type] = opts.builder = builder;
  NODE_FIELDS[type] = opts.fields = fields;
  ALIAS_KEYS[type] = opts.aliases = aliases;
  aliases.forEach(alias => {
    FLIPPED_ALIAS_KEYS[alias] = FLIPPED_ALIAS_KEYS[alias] || [];
    FLIPPED_ALIAS_KEYS[alias].push(type);
  });

  if (opts.validate) {
    NODE_PARENT_VALIDATIONS[type] = opts.validate;
  }

  store[type] = opts;
}

const store = {};

/***/ }),
/* 34 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = validate;
exports.validateField = validateField;
exports.validateChild = validateChild;

var _definitions = __webpack_require__(22);

function validate(node, key, val) {
  if (!node) return;
  const fields = _definitions.NODE_FIELDS[node.type];
  if (!fields) return;
  const field = fields[key];
  validateField(node, key, val, field);
  validateChild(node, key, val);
}

function validateField(node, key, val, field) {
  if (!(field != null && field.validate)) return;
  if (field.optional && val == null) return;
  field.validate(node, key, val);
}

function validateChild(node, key, val) {
  if (val == null) return;
  const validate = _definitions.NODE_PARENT_VALIDATIONS[val.type];
  if (!validate) return;
  validate(node, key, val);
}

/***/ }),
/* 35 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _utils = __webpack_require__(33);

const defineInterfaceishType = (name, typeParameterType = "TypeParameterDeclaration") => {
  (0, _utils.default)(name, {
    builder: ["id", "typeParameters", "extends", "body"],
    visitor: ["id", "typeParameters", "extends", "mixins", "implements", "body"],
    aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
    fields: {
      id: (0, _utils.validateType)("Identifier"),
      typeParameters: (0, _utils.validateOptionalType)(typeParameterType),
      extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)("InterfaceExtends")),
      mixins: (0, _utils.validateOptional)((0, _utils.arrayOfType)("InterfaceExtends")),
      implements: (0, _utils.validateOptional)((0, _utils.arrayOfType)("ClassImplements")),
      body: (0, _utils.validateType)("ObjectTypeAnnotation")
    }
  });
};

(0, _utils.default)("AnyTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("ArrayTypeAnnotation", {
  visitor: ["elementType"],
  aliases: ["Flow", "FlowType"],
  fields: {
    elementType: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("BooleanTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("BooleanLiteralTypeAnnotation", {
  builder: ["value"],
  aliases: ["Flow", "FlowType"],
  fields: {
    value: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("NullLiteralTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("ClassImplements", {
  visitor: ["id", "typeParameters"],
  aliases: ["Flow"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterInstantiation")
  }
});
defineInterfaceishType("DeclareClass");
(0, _utils.default)("DeclareFunction", {
  visitor: ["id"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    predicate: (0, _utils.validateOptionalType)("DeclaredPredicate")
  }
});
defineInterfaceishType("DeclareInterface");
(0, _utils.default)("DeclareModule", {
  builder: ["id", "body", "kind"],
  visitor: ["id", "body"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)(["Identifier", "StringLiteral"]),
    body: (0, _utils.validateType)("BlockStatement"),
    kind: (0, _utils.validateOptional)((0, _utils.assertOneOf)("CommonJS", "ES"))
  }
});
(0, _utils.default)("DeclareModuleExports", {
  visitor: ["typeAnnotation"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("TypeAnnotation")
  }
});
(0, _utils.default)("DeclareTypeAlias", {
  visitor: ["id", "typeParameters", "right"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterDeclaration"),
    right: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("DeclareOpaqueType", {
  visitor: ["id", "typeParameters", "supertype"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterDeclaration"),
    supertype: (0, _utils.validateOptionalType)("FlowType")
  }
});
(0, _utils.default)("DeclareVariable", {
  visitor: ["id"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)("Identifier")
  }
});
(0, _utils.default)("DeclareExportDeclaration", {
  visitor: ["declaration", "specifiers", "source"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    declaration: (0, _utils.validateOptionalType)("Flow"),
    specifiers: (0, _utils.validateOptional)((0, _utils.arrayOfType)(["ExportSpecifier", "ExportNamespaceSpecifier"])),
    source: (0, _utils.validateOptionalType)("StringLiteral"),
    default: (0, _utils.validateOptional)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("DeclareExportAllDeclaration", {
  visitor: ["source"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    source: (0, _utils.validateType)("StringLiteral"),
    exportKind: (0, _utils.validateOptional)((0, _utils.assertOneOf)("type", "value"))
  }
});
(0, _utils.default)("DeclaredPredicate", {
  visitor: ["value"],
  aliases: ["Flow", "FlowPredicate"],
  fields: {
    value: (0, _utils.validateType)("Flow")
  }
});
(0, _utils.default)("ExistsTypeAnnotation", {
  aliases: ["Flow", "FlowType"]
});
(0, _utils.default)("FunctionTypeAnnotation", {
  visitor: ["typeParameters", "params", "rest", "returnType"],
  aliases: ["Flow", "FlowType"],
  fields: {
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterDeclaration"),
    params: (0, _utils.validate)((0, _utils.arrayOfType)("FunctionTypeParam")),
    rest: (0, _utils.validateOptionalType)("FunctionTypeParam"),
    this: (0, _utils.validateOptionalType)("FunctionTypeParam"),
    returnType: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("FunctionTypeParam", {
  visitor: ["name", "typeAnnotation"],
  aliases: ["Flow"],
  fields: {
    name: (0, _utils.validateOptionalType)("Identifier"),
    typeAnnotation: (0, _utils.validateType)("FlowType"),
    optional: (0, _utils.validateOptional)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("GenericTypeAnnotation", {
  visitor: ["id", "typeParameters"],
  aliases: ["Flow", "FlowType"],
  fields: {
    id: (0, _utils.validateType)(["Identifier", "QualifiedTypeIdentifier"]),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterInstantiation")
  }
});
(0, _utils.default)("InferredPredicate", {
  aliases: ["Flow", "FlowPredicate"]
});
(0, _utils.default)("InterfaceExtends", {
  visitor: ["id", "typeParameters"],
  aliases: ["Flow"],
  fields: {
    id: (0, _utils.validateType)(["Identifier", "QualifiedTypeIdentifier"]),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterInstantiation")
  }
});
defineInterfaceishType("InterfaceDeclaration");
(0, _utils.default)("InterfaceTypeAnnotation", {
  visitor: ["extends", "body"],
  aliases: ["Flow", "FlowType"],
  fields: {
    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)("InterfaceExtends")),
    body: (0, _utils.validateType)("ObjectTypeAnnotation")
  }
});
(0, _utils.default)("IntersectionTypeAnnotation", {
  visitor: ["types"],
  aliases: ["Flow", "FlowType"],
  fields: {
    types: (0, _utils.validate)((0, _utils.arrayOfType)("FlowType"))
  }
});
(0, _utils.default)("MixedTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("EmptyTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("NullableTypeAnnotation", {
  visitor: ["typeAnnotation"],
  aliases: ["Flow", "FlowType"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("NumberLiteralTypeAnnotation", {
  builder: ["value"],
  aliases: ["Flow", "FlowType"],
  fields: {
    value: (0, _utils.validate)((0, _utils.assertValueType)("number"))
  }
});
(0, _utils.default)("NumberTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("ObjectTypeAnnotation", {
  visitor: ["properties", "indexers", "callProperties", "internalSlots"],
  aliases: ["Flow", "FlowType"],
  builder: ["properties", "indexers", "callProperties", "internalSlots", "exact"],
  fields: {
    properties: (0, _utils.validate)((0, _utils.arrayOfType)(["ObjectTypeProperty", "ObjectTypeSpreadProperty"])),
    indexers: (0, _utils.validateOptional)((0, _utils.arrayOfType)("ObjectTypeIndexer")),
    callProperties: (0, _utils.validateOptional)((0, _utils.arrayOfType)("ObjectTypeCallProperty")),
    internalSlots: (0, _utils.validateOptional)((0, _utils.arrayOfType)("ObjectTypeInternalSlot")),
    exact: {
      validate: (0, _utils.assertValueType)("boolean"),
      default: false
    },
    inexact: (0, _utils.validateOptional)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("ObjectTypeInternalSlot", {
  visitor: ["id", "value", "optional", "static", "method"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    value: (0, _utils.validateType)("FlowType"),
    optional: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    static: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    method: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("ObjectTypeCallProperty", {
  visitor: ["value"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {
    value: (0, _utils.validateType)("FlowType"),
    static: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("ObjectTypeIndexer", {
  visitor: ["id", "key", "value", "variance"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {
    id: (0, _utils.validateOptionalType)("Identifier"),
    key: (0, _utils.validateType)("FlowType"),
    value: (0, _utils.validateType)("FlowType"),
    static: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    variance: (0, _utils.validateOptionalType)("Variance")
  }
});
(0, _utils.default)("ObjectTypeProperty", {
  visitor: ["key", "value", "variance"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {
    key: (0, _utils.validateType)(["Identifier", "StringLiteral"]),
    value: (0, _utils.validateType)("FlowType"),
    kind: (0, _utils.validate)((0, _utils.assertOneOf)("init", "get", "set")),
    static: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    proto: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    optional: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    variance: (0, _utils.validateOptionalType)("Variance"),
    method: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("ObjectTypeSpreadProperty", {
  visitor: ["argument"],
  aliases: ["Flow", "UserWhitespacable"],
  fields: {
    argument: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("OpaqueType", {
  visitor: ["id", "typeParameters", "supertype", "impltype"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterDeclaration"),
    supertype: (0, _utils.validateOptionalType)("FlowType"),
    impltype: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("QualifiedTypeIdentifier", {
  visitor: ["id", "qualification"],
  aliases: ["Flow"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    qualification: (0, _utils.validateType)(["Identifier", "QualifiedTypeIdentifier"])
  }
});
(0, _utils.default)("StringLiteralTypeAnnotation", {
  builder: ["value"],
  aliases: ["Flow", "FlowType"],
  fields: {
    value: (0, _utils.validate)((0, _utils.assertValueType)("string"))
  }
});
(0, _utils.default)("StringTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("SymbolTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("ThisTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("TupleTypeAnnotation", {
  visitor: ["types"],
  aliases: ["Flow", "FlowType"],
  fields: {
    types: (0, _utils.validate)((0, _utils.arrayOfType)("FlowType"))
  }
});
(0, _utils.default)("TypeofTypeAnnotation", {
  visitor: ["argument"],
  aliases: ["Flow", "FlowType"],
  fields: {
    argument: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("TypeAlias", {
  visitor: ["id", "typeParameters", "right"],
  aliases: ["Flow", "FlowDeclaration", "Statement", "Declaration"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TypeParameterDeclaration"),
    right: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("TypeAnnotation", {
  aliases: ["Flow"],
  visitor: ["typeAnnotation"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("TypeCastExpression", {
  visitor: ["expression", "typeAnnotation"],
  aliases: ["Flow", "ExpressionWrapper", "Expression"],
  fields: {
    expression: (0, _utils.validateType)("Expression"),
    typeAnnotation: (0, _utils.validateType)("TypeAnnotation")
  }
});
(0, _utils.default)("TypeParameter", {
  aliases: ["Flow"],
  visitor: ["bound", "default", "variance"],
  fields: {
    name: (0, _utils.validate)((0, _utils.assertValueType)("string")),
    bound: (0, _utils.validateOptionalType)("TypeAnnotation"),
    default: (0, _utils.validateOptionalType)("FlowType"),
    variance: (0, _utils.validateOptionalType)("Variance")
  }
});
(0, _utils.default)("TypeParameterDeclaration", {
  aliases: ["Flow"],
  visitor: ["params"],
  fields: {
    params: (0, _utils.validate)((0, _utils.arrayOfType)("TypeParameter"))
  }
});
(0, _utils.default)("TypeParameterInstantiation", {
  aliases: ["Flow"],
  visitor: ["params"],
  fields: {
    params: (0, _utils.validate)((0, _utils.arrayOfType)("FlowType"))
  }
});
(0, _utils.default)("UnionTypeAnnotation", {
  visitor: ["types"],
  aliases: ["Flow", "FlowType"],
  fields: {
    types: (0, _utils.validate)((0, _utils.arrayOfType)("FlowType"))
  }
});
(0, _utils.default)("Variance", {
  aliases: ["Flow"],
  builder: ["kind"],
  fields: {
    kind: (0, _utils.validate)((0, _utils.assertOneOf)("minus", "plus"))
  }
});
(0, _utils.default)("VoidTypeAnnotation", {
  aliases: ["Flow", "FlowType", "FlowBaseAnnotation"]
});
(0, _utils.default)("EnumDeclaration", {
  aliases: ["Statement", "Declaration"],
  visitor: ["id", "body"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    body: (0, _utils.validateType)(["EnumBooleanBody", "EnumNumberBody", "EnumStringBody", "EnumSymbolBody"])
  }
});
(0, _utils.default)("EnumBooleanBody", {
  aliases: ["EnumBody"],
  visitor: ["members"],
  fields: {
    explicitType: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    members: (0, _utils.validateArrayOfType)("EnumBooleanMember"),
    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("EnumNumberBody", {
  aliases: ["EnumBody"],
  visitor: ["members"],
  fields: {
    explicitType: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    members: (0, _utils.validateArrayOfType)("EnumNumberMember"),
    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("EnumStringBody", {
  aliases: ["EnumBody"],
  visitor: ["members"],
  fields: {
    explicitType: (0, _utils.validate)((0, _utils.assertValueType)("boolean")),
    members: (0, _utils.validateArrayOfType)(["EnumStringMember", "EnumDefaultedMember"]),
    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("EnumSymbolBody", {
  aliases: ["EnumBody"],
  visitor: ["members"],
  fields: {
    members: (0, _utils.validateArrayOfType)("EnumDefaultedMember"),
    hasUnknownMembers: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});
(0, _utils.default)("EnumBooleanMember", {
  aliases: ["EnumMember"],
  visitor: ["id"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    init: (0, _utils.validateType)("BooleanLiteral")
  }
});
(0, _utils.default)("EnumNumberMember", {
  aliases: ["EnumMember"],
  visitor: ["id", "init"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    init: (0, _utils.validateType)("NumericLiteral")
  }
});
(0, _utils.default)("EnumStringMember", {
  aliases: ["EnumMember"],
  visitor: ["id", "init"],
  fields: {
    id: (0, _utils.validateType)("Identifier"),
    init: (0, _utils.validateType)("StringLiteral")
  }
});
(0, _utils.default)("EnumDefaultedMember", {
  aliases: ["EnumMember"],
  visitor: ["id"],
  fields: {
    id: (0, _utils.validateType)("Identifier")
  }
});
(0, _utils.default)("IndexedAccessType", {
  visitor: ["objectType", "indexType"],
  aliases: ["Flow", "FlowType"],
  fields: {
    objectType: (0, _utils.validateType)("FlowType"),
    indexType: (0, _utils.validateType)("FlowType")
  }
});
(0, _utils.default)("OptionalIndexedAccessType", {
  visitor: ["objectType", "indexType"],
  aliases: ["Flow", "FlowType"],
  fields: {
    objectType: (0, _utils.validateType)("FlowType"),
    indexType: (0, _utils.validateType)("FlowType"),
    optional: (0, _utils.validate)((0, _utils.assertValueType)("boolean"))
  }
});

/***/ }),
/* 36 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _utils = __webpack_require__(33);

(0, _utils.default)("JSXAttribute", {
  visitor: ["name", "value"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: (0, _utils.assertNodeType)("JSXIdentifier", "JSXNamespacedName")
    },
    value: {
      optional: true,
      validate: (0, _utils.assertNodeType)("JSXElement", "JSXFragment", "StringLiteral", "JSXExpressionContainer")
    }
  }
});
(0, _utils.default)("JSXClosingElement", {
  visitor: ["name"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: (0, _utils.assertNodeType)("JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName")
    }
  }
});
(0, _utils.default)("JSXElement", {
  builder: ["openingElement", "closingElement", "children", "selfClosing"],
  visitor: ["openingElement", "children", "closingElement"],
  aliases: ["JSX", "Immutable", "Expression"],
  fields: {
    openingElement: {
      validate: (0, _utils.assertNodeType)("JSXOpeningElement")
    },
    closingElement: {
      optional: true,
      validate: (0, _utils.assertNodeType)("JSXClosingElement")
    },
    children: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement", "JSXFragment")))
    },
    selfClosing: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    }
  }
});
(0, _utils.default)("JSXEmptyExpression", {
  aliases: ["JSX"]
});
(0, _utils.default)("JSXExpressionContainer", {
  visitor: ["expression"],
  aliases: ["JSX", "Immutable"],
  fields: {
    expression: {
      validate: (0, _utils.assertNodeType)("Expression", "JSXEmptyExpression")
    }
  }
});
(0, _utils.default)("JSXSpreadChild", {
  visitor: ["expression"],
  aliases: ["JSX", "Immutable"],
  fields: {
    expression: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("JSXIdentifier", {
  builder: ["name"],
  aliases: ["JSX"],
  fields: {
    name: {
      validate: (0, _utils.assertValueType)("string")
    }
  }
});
(0, _utils.default)("JSXMemberExpression", {
  visitor: ["object", "property"],
  aliases: ["JSX"],
  fields: {
    object: {
      validate: (0, _utils.assertNodeType)("JSXMemberExpression", "JSXIdentifier")
    },
    property: {
      validate: (0, _utils.assertNodeType)("JSXIdentifier")
    }
  }
});
(0, _utils.default)("JSXNamespacedName", {
  visitor: ["namespace", "name"],
  aliases: ["JSX"],
  fields: {
    namespace: {
      validate: (0, _utils.assertNodeType)("JSXIdentifier")
    },
    name: {
      validate: (0, _utils.assertNodeType)("JSXIdentifier")
    }
  }
});
(0, _utils.default)("JSXOpeningElement", {
  builder: ["name", "attributes", "selfClosing"],
  visitor: ["name", "attributes"],
  aliases: ["JSX", "Immutable"],
  fields: {
    name: {
      validate: (0, _utils.assertNodeType)("JSXIdentifier", "JSXMemberExpression", "JSXNamespacedName")
    },
    selfClosing: {
      default: false
    },
    attributes: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("JSXAttribute", "JSXSpreadAttribute")))
    },
    typeParameters: {
      validate: (0, _utils.assertNodeType)("TypeParameterInstantiation", "TSTypeParameterInstantiation"),
      optional: true
    }
  }
});
(0, _utils.default)("JSXSpreadAttribute", {
  visitor: ["argument"],
  aliases: ["JSX"],
  fields: {
    argument: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("JSXText", {
  aliases: ["JSX", "Immutable"],
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("string")
    }
  }
});
(0, _utils.default)("JSXFragment", {
  builder: ["openingFragment", "closingFragment", "children"],
  visitor: ["openingFragment", "children", "closingFragment"],
  aliases: ["JSX", "Immutable", "Expression"],
  fields: {
    openingFragment: {
      validate: (0, _utils.assertNodeType)("JSXOpeningFragment")
    },
    closingFragment: {
      validate: (0, _utils.assertNodeType)("JSXClosingFragment")
    },
    children: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("JSXText", "JSXExpressionContainer", "JSXSpreadChild", "JSXElement", "JSXFragment")))
    }
  }
});
(0, _utils.default)("JSXOpeningFragment", {
  aliases: ["JSX", "Immutable"]
});
(0, _utils.default)("JSXClosingFragment", {
  aliases: ["JSX", "Immutable"]
});

/***/ }),
/* 37 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _utils = __webpack_require__(33);

var _placeholders = __webpack_require__(38);

{
  (0, _utils.default)("Noop", {
    visitor: []
  });
}
(0, _utils.default)("Placeholder", {
  visitor: [],
  builder: ["expectedNode", "name"],
  fields: {
    name: {
      validate: (0, _utils.assertNodeType)("Identifier")
    },
    expectedNode: {
      validate: (0, _utils.assertOneOf)(..._placeholders.PLACEHOLDERS)
    }
  }
});
(0, _utils.default)("V8IntrinsicIdentifier", {
  builder: ["name"],
  fields: {
    name: {
      validate: (0, _utils.assertValueType)("string")
    }
  }
});

/***/ }),
/* 38 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.PLACEHOLDERS_FLIPPED_ALIAS = exports.PLACEHOLDERS_ALIAS = exports.PLACEHOLDERS = void 0;

var _utils = __webpack_require__(33);

const PLACEHOLDERS = ["Identifier", "StringLiteral", "Expression", "Statement", "Declaration", "BlockStatement", "ClassBody", "Pattern"];
exports.PLACEHOLDERS = PLACEHOLDERS;
const PLACEHOLDERS_ALIAS = {
  Declaration: ["Statement"],
  Pattern: ["PatternLike", "LVal"]
};
exports.PLACEHOLDERS_ALIAS = PLACEHOLDERS_ALIAS;

for (const type of PLACEHOLDERS) {
  const alias = _utils.ALIAS_KEYS[type];
  if (alias != null && alias.length) PLACEHOLDERS_ALIAS[type] = alias;
}

const PLACEHOLDERS_FLIPPED_ALIAS = {};
exports.PLACEHOLDERS_FLIPPED_ALIAS = PLACEHOLDERS_FLIPPED_ALIAS;
Object.keys(PLACEHOLDERS_ALIAS).forEach(type => {
  PLACEHOLDERS_ALIAS[type].forEach(alias => {
    if (!Object.hasOwnProperty.call(PLACEHOLDERS_FLIPPED_ALIAS, alias)) {
      PLACEHOLDERS_FLIPPED_ALIAS[alias] = [];
    }

    PLACEHOLDERS_FLIPPED_ALIAS[alias].push(type);
  });
});

/***/ }),
/* 39 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _utils = __webpack_require__(33);

var _core = __webpack_require__(24);

(0, _utils.default)("ArgumentPlaceholder", {});
(0, _utils.default)("BindExpression", {
  visitor: ["object", "callee"],
  aliases: ["Expression"],
  fields: !process.env.BABEL_TYPES_8_BREAKING ? {
    object: {
      validate: Object.assign(() => {}, {
        oneOfNodeTypes: ["Expression"]
      })
    },
    callee: {
      validate: Object.assign(() => {}, {
        oneOfNodeTypes: ["Expression"]
      })
    }
  } : {
    object: {
      validate: (0, _utils.assertNodeType)("Expression")
    },
    callee: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("ClassProperty", {
  visitor: ["key", "value", "typeAnnotation", "decorators"],
  builder: ["key", "value", "typeAnnotation", "decorators", "computed", "static"],
  aliases: ["Property"],
  fields: Object.assign({}, _core.classMethodOrPropertyCommon, {
    value: {
      validate: (0, _utils.assertNodeType)("Expression"),
      optional: true
    },
    definite: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    },
    typeAnnotation: {
      validate: (0, _utils.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
      optional: true
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    },
    readonly: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    },
    declare: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    }
  })
});
(0, _utils.default)("PipelineTopicExpression", {
  builder: ["expression"],
  visitor: ["expression"],
  fields: {
    expression: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("PipelineBareFunction", {
  builder: ["callee"],
  visitor: ["callee"],
  fields: {
    callee: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("PipelinePrimaryTopicReference", {
  aliases: ["Expression"]
});
(0, _utils.default)("ClassPrivateProperty", {
  visitor: ["key", "value", "decorators"],
  builder: ["key", "value", "decorators", "static"],
  aliases: ["Property", "Private"],
  fields: {
    key: {
      validate: (0, _utils.assertNodeType)("PrivateName")
    },
    value: {
      validate: (0, _utils.assertNodeType)("Expression"),
      optional: true
    },
    typeAnnotation: {
      validate: (0, _utils.assertNodeType)("TypeAnnotation", "TSTypeAnnotation", "Noop"),
      optional: true
    },
    decorators: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Decorator"))),
      optional: true
    }
  }
});
(0, _utils.default)("ClassPrivateMethod", {
  builder: ["kind", "key", "params", "body", "static"],
  visitor: ["key", "params", "body", "decorators", "returnType", "typeParameters"],
  aliases: ["Function", "Scopable", "BlockParent", "FunctionParent", "Method", "Private"],
  fields: Object.assign({}, _core.classMethodOrDeclareMethodCommon, _core.functionTypeAnnotationCommon, {
    key: {
      validate: (0, _utils.assertNodeType)("PrivateName")
    },
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    }
  })
});
(0, _utils.default)("ImportAttribute", {
  visitor: ["key", "value"],
  fields: {
    key: {
      validate: (0, _utils.assertNodeType)("Identifier", "StringLiteral")
    },
    value: {
      validate: (0, _utils.assertNodeType)("StringLiteral")
    }
  }
});
(0, _utils.default)("Decorator", {
  visitor: ["expression"],
  fields: {
    expression: {
      validate: (0, _utils.assertNodeType)("Expression")
    }
  }
});
(0, _utils.default)("DoExpression", {
  visitor: ["body"],
  builder: ["body", "async"],
  aliases: ["Expression"],
  fields: {
    body: {
      validate: (0, _utils.assertNodeType)("BlockStatement")
    },
    async: {
      validate: (0, _utils.assertValueType)("boolean"),
      default: false
    }
  }
});
(0, _utils.default)("ExportDefaultSpecifier", {
  visitor: ["exported"],
  aliases: ["ModuleSpecifier"],
  fields: {
    exported: {
      validate: (0, _utils.assertNodeType)("Identifier")
    }
  }
});
(0, _utils.default)("PrivateName", {
  visitor: ["id"],
  aliases: ["Private"],
  fields: {
    id: {
      validate: (0, _utils.assertNodeType)("Identifier")
    }
  }
});
(0, _utils.default)("RecordExpression", {
  visitor: ["properties"],
  aliases: ["Expression"],
  fields: {
    properties: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("ObjectProperty", "SpreadElement")))
    }
  }
});
(0, _utils.default)("TupleExpression", {
  fields: {
    elements: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Expression", "SpreadElement"))),
      default: []
    }
  },
  visitor: ["elements"],
  aliases: ["Expression"]
});
(0, _utils.default)("DecimalLiteral", {
  builder: ["value"],
  fields: {
    value: {
      validate: (0, _utils.assertValueType)("string")
    }
  },
  aliases: ["Expression", "Pureish", "Literal", "Immutable"]
});
(0, _utils.default)("StaticBlock", {
  visitor: ["body"],
  fields: {
    body: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("Statement")))
    }
  },
  aliases: ["Scopable", "BlockParent"]
});
(0, _utils.default)("ModuleExpression", {
  visitor: ["body"],
  fields: {
    body: {
      validate: (0, _utils.assertNodeType)("Program")
    }
  },
  aliases: ["Expression"]
});

/***/ }),
/* 40 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var _utils = __webpack_require__(33);

var _core = __webpack_require__(24);

const bool = (0, _utils.assertValueType)("boolean");
const tSFunctionTypeAnnotationCommon = {
  returnType: {
    validate: (0, _utils.assertNodeType)("TSTypeAnnotation", "Noop"),
    optional: true
  },
  typeParameters: {
    validate: (0, _utils.assertNodeType)("TSTypeParameterDeclaration", "Noop"),
    optional: true
  }
};
(0, _utils.default)("TSParameterProperty", {
  aliases: ["LVal"],
  visitor: ["parameter"],
  fields: {
    accessibility: {
      validate: (0, _utils.assertOneOf)("public", "private", "protected"),
      optional: true
    },
    readonly: {
      validate: (0, _utils.assertValueType)("boolean"),
      optional: true
    },
    parameter: {
      validate: (0, _utils.assertNodeType)("Identifier", "AssignmentPattern")
    }
  }
});
(0, _utils.default)("TSDeclareFunction", {
  aliases: ["Statement", "Declaration"],
  visitor: ["id", "typeParameters", "params", "returnType"],
  fields: Object.assign({}, _core.functionDeclarationCommon, tSFunctionTypeAnnotationCommon)
});
(0, _utils.default)("TSDeclareMethod", {
  visitor: ["decorators", "key", "typeParameters", "params", "returnType"],
  fields: Object.assign({}, _core.classMethodOrDeclareMethodCommon, tSFunctionTypeAnnotationCommon)
});
(0, _utils.default)("TSQualifiedName", {
  aliases: ["TSEntityName"],
  visitor: ["left", "right"],
  fields: {
    left: (0, _utils.validateType)("TSEntityName"),
    right: (0, _utils.validateType)("Identifier")
  }
});
const signatureDeclarationCommon = {
  typeParameters: (0, _utils.validateOptionalType)("TSTypeParameterDeclaration"),
  parameters: (0, _utils.validateArrayOfType)(["Identifier", "RestElement"]),
  typeAnnotation: (0, _utils.validateOptionalType)("TSTypeAnnotation")
};
const callConstructSignatureDeclaration = {
  aliases: ["TSTypeElement"],
  visitor: ["typeParameters", "parameters", "typeAnnotation"],
  fields: signatureDeclarationCommon
};
(0, _utils.default)("TSCallSignatureDeclaration", callConstructSignatureDeclaration);
(0, _utils.default)("TSConstructSignatureDeclaration", callConstructSignatureDeclaration);
const namedTypeElementCommon = {
  key: (0, _utils.validateType)("Expression"),
  computed: (0, _utils.validate)(bool),
  optional: (0, _utils.validateOptional)(bool)
};
(0, _utils.default)("TSPropertySignature", {
  aliases: ["TSTypeElement"],
  visitor: ["key", "typeAnnotation", "initializer"],
  fields: Object.assign({}, namedTypeElementCommon, {
    readonly: (0, _utils.validateOptional)(bool),
    typeAnnotation: (0, _utils.validateOptionalType)("TSTypeAnnotation"),
    initializer: (0, _utils.validateOptionalType)("Expression")
  })
});
(0, _utils.default)("TSMethodSignature", {
  aliases: ["TSTypeElement"],
  visitor: ["key", "typeParameters", "parameters", "typeAnnotation"],
  fields: Object.assign({}, signatureDeclarationCommon, namedTypeElementCommon, {
    kind: {
      validate: (0, _utils.assertOneOf)("method", "get", "set")
    }
  })
});
(0, _utils.default)("TSIndexSignature", {
  aliases: ["TSTypeElement"],
  visitor: ["parameters", "typeAnnotation"],
  fields: {
    readonly: (0, _utils.validateOptional)(bool),
    static: (0, _utils.validateOptional)(bool),
    parameters: (0, _utils.validateArrayOfType)("Identifier"),
    typeAnnotation: (0, _utils.validateOptionalType)("TSTypeAnnotation")
  }
});
const tsKeywordTypes = ["TSAnyKeyword", "TSBooleanKeyword", "TSBigIntKeyword", "TSIntrinsicKeyword", "TSNeverKeyword", "TSNullKeyword", "TSNumberKeyword", "TSObjectKeyword", "TSStringKeyword", "TSSymbolKeyword", "TSUndefinedKeyword", "TSUnknownKeyword", "TSVoidKeyword"];

for (const type of tsKeywordTypes) {
  (0, _utils.default)(type, {
    aliases: ["TSType", "TSBaseType"],
    visitor: [],
    fields: {}
  });
}

(0, _utils.default)("TSThisType", {
  aliases: ["TSType", "TSBaseType"],
  visitor: [],
  fields: {}
});
const fnOrCtrBase = {
  aliases: ["TSType"],
  visitor: ["typeParameters", "parameters", "typeAnnotation"]
};
(0, _utils.default)("TSFunctionType", Object.assign({}, fnOrCtrBase, {
  fields: signatureDeclarationCommon
}));
(0, _utils.default)("TSConstructorType", Object.assign({}, fnOrCtrBase, {
  fields: Object.assign({}, signatureDeclarationCommon, {
    abstract: (0, _utils.validateOptional)(bool)
  })
}));
(0, _utils.default)("TSTypeReference", {
  aliases: ["TSType"],
  visitor: ["typeName", "typeParameters"],
  fields: {
    typeName: (0, _utils.validateType)("TSEntityName"),
    typeParameters: (0, _utils.validateOptionalType)("TSTypeParameterInstantiation")
  }
});
(0, _utils.default)("TSTypePredicate", {
  aliases: ["TSType"],
  visitor: ["parameterName", "typeAnnotation"],
  builder: ["parameterName", "typeAnnotation", "asserts"],
  fields: {
    parameterName: (0, _utils.validateType)(["Identifier", "TSThisType"]),
    typeAnnotation: (0, _utils.validateOptionalType)("TSTypeAnnotation"),
    asserts: (0, _utils.validateOptional)(bool)
  }
});
(0, _utils.default)("TSTypeQuery", {
  aliases: ["TSType"],
  visitor: ["exprName"],
  fields: {
    exprName: (0, _utils.validateType)(["TSEntityName", "TSImportType"])
  }
});
(0, _utils.default)("TSTypeLiteral", {
  aliases: ["TSType"],
  visitor: ["members"],
  fields: {
    members: (0, _utils.validateArrayOfType)("TSTypeElement")
  }
});
(0, _utils.default)("TSArrayType", {
  aliases: ["TSType"],
  visitor: ["elementType"],
  fields: {
    elementType: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSTupleType", {
  aliases: ["TSType"],
  visitor: ["elementTypes"],
  fields: {
    elementTypes: (0, _utils.validateArrayOfType)(["TSType", "TSNamedTupleMember"])
  }
});
(0, _utils.default)("TSOptionalType", {
  aliases: ["TSType"],
  visitor: ["typeAnnotation"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSRestType", {
  aliases: ["TSType"],
  visitor: ["typeAnnotation"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSNamedTupleMember", {
  visitor: ["label", "elementType"],
  builder: ["label", "elementType", "optional"],
  fields: {
    label: (0, _utils.validateType)("Identifier"),
    optional: {
      validate: bool,
      default: false
    },
    elementType: (0, _utils.validateType)("TSType")
  }
});
const unionOrIntersection = {
  aliases: ["TSType"],
  visitor: ["types"],
  fields: {
    types: (0, _utils.validateArrayOfType)("TSType")
  }
};
(0, _utils.default)("TSUnionType", unionOrIntersection);
(0, _utils.default)("TSIntersectionType", unionOrIntersection);
(0, _utils.default)("TSConditionalType", {
  aliases: ["TSType"],
  visitor: ["checkType", "extendsType", "trueType", "falseType"],
  fields: {
    checkType: (0, _utils.validateType)("TSType"),
    extendsType: (0, _utils.validateType)("TSType"),
    trueType: (0, _utils.validateType)("TSType"),
    falseType: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSInferType", {
  aliases: ["TSType"],
  visitor: ["typeParameter"],
  fields: {
    typeParameter: (0, _utils.validateType)("TSTypeParameter")
  }
});
(0, _utils.default)("TSParenthesizedType", {
  aliases: ["TSType"],
  visitor: ["typeAnnotation"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSTypeOperator", {
  aliases: ["TSType"],
  visitor: ["typeAnnotation"],
  fields: {
    operator: (0, _utils.validate)((0, _utils.assertValueType)("string")),
    typeAnnotation: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSIndexedAccessType", {
  aliases: ["TSType"],
  visitor: ["objectType", "indexType"],
  fields: {
    objectType: (0, _utils.validateType)("TSType"),
    indexType: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSMappedType", {
  aliases: ["TSType"],
  visitor: ["typeParameter", "typeAnnotation", "nameType"],
  fields: {
    readonly: (0, _utils.validateOptional)(bool),
    typeParameter: (0, _utils.validateType)("TSTypeParameter"),
    optional: (0, _utils.validateOptional)(bool),
    typeAnnotation: (0, _utils.validateOptionalType)("TSType"),
    nameType: (0, _utils.validateOptionalType)("TSType")
  }
});
(0, _utils.default)("TSLiteralType", {
  aliases: ["TSType", "TSBaseType"],
  visitor: ["literal"],
  fields: {
    literal: (0, _utils.validateType)(["NumericLiteral", "StringLiteral", "BooleanLiteral", "BigIntLiteral"])
  }
});
(0, _utils.default)("TSExpressionWithTypeArguments", {
  aliases: ["TSType"],
  visitor: ["expression", "typeParameters"],
  fields: {
    expression: (0, _utils.validateType)("TSEntityName"),
    typeParameters: (0, _utils.validateOptionalType)("TSTypeParameterInstantiation")
  }
});
(0, _utils.default)("TSInterfaceDeclaration", {
  aliases: ["Statement", "Declaration"],
  visitor: ["id", "typeParameters", "extends", "body"],
  fields: {
    declare: (0, _utils.validateOptional)(bool),
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TSTypeParameterDeclaration"),
    extends: (0, _utils.validateOptional)((0, _utils.arrayOfType)("TSExpressionWithTypeArguments")),
    body: (0, _utils.validateType)("TSInterfaceBody")
  }
});
(0, _utils.default)("TSInterfaceBody", {
  visitor: ["body"],
  fields: {
    body: (0, _utils.validateArrayOfType)("TSTypeElement")
  }
});
(0, _utils.default)("TSTypeAliasDeclaration", {
  aliases: ["Statement", "Declaration"],
  visitor: ["id", "typeParameters", "typeAnnotation"],
  fields: {
    declare: (0, _utils.validateOptional)(bool),
    id: (0, _utils.validateType)("Identifier"),
    typeParameters: (0, _utils.validateOptionalType)("TSTypeParameterDeclaration"),
    typeAnnotation: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSAsExpression", {
  aliases: ["Expression"],
  visitor: ["expression", "typeAnnotation"],
  fields: {
    expression: (0, _utils.validateType)("Expression"),
    typeAnnotation: (0, _utils.validateType)("TSType")
  }
});
(0, _utils.default)("TSTypeAssertion", {
  aliases: ["Expression"],
  visitor: ["typeAnnotation", "expression"],
  fields: {
    typeAnnotation: (0, _utils.validateType)("TSType"),
    expression: (0, _utils.validateType)("Expression")
  }
});
(0, _utils.default)("TSEnumDeclaration", {
  aliases: ["Statement", "Declaration"],
  visitor: ["id", "members"],
  fields: {
    declare: (0, _utils.validateOptional)(bool),
    const: (0, _utils.validateOptional)(bool),
    id: (0, _utils.validateType)("Identifier"),
    members: (0, _utils.validateArrayOfType)("TSEnumMember"),
    initializer: (0, _utils.validateOptionalType)("Expression")
  }
});
(0, _utils.default)("TSEnumMember", {
  visitor: ["id", "initializer"],
  fields: {
    id: (0, _utils.validateType)(["Identifier", "StringLiteral"]),
    initializer: (0, _utils.validateOptionalType)("Expression")
  }
});
(0, _utils.default)("TSModuleDeclaration", {
  aliases: ["Statement", "Declaration"],
  visitor: ["id", "body"],
  fields: {
    declare: (0, _utils.validateOptional)(bool),
    global: (0, _utils.validateOptional)(bool),
    id: (0, _utils.validateType)(["Identifier", "StringLiteral"]),
    body: (0, _utils.validateType)(["TSModuleBlock", "TSModuleDeclaration"])
  }
});
(0, _utils.default)("TSModuleBlock", {
  aliases: ["Scopable", "Block", "BlockParent"],
  visitor: ["body"],
  fields: {
    body: (0, _utils.validateArrayOfType)("Statement")
  }
});
(0, _utils.default)("TSImportType", {
  aliases: ["TSType"],
  visitor: ["argument", "qualifier", "typeParameters"],
  fields: {
    argument: (0, _utils.validateType)("StringLiteral"),
    qualifier: (0, _utils.validateOptionalType)("TSEntityName"),
    typeParameters: (0, _utils.validateOptionalType)("TSTypeParameterInstantiation")
  }
});
(0, _utils.default)("TSImportEqualsDeclaration", {
  aliases: ["Statement"],
  visitor: ["id", "moduleReference"],
  fields: {
    isExport: (0, _utils.validate)(bool),
    id: (0, _utils.validateType)("Identifier"),
    moduleReference: (0, _utils.validateType)(["TSEntityName", "TSExternalModuleReference"])
  }
});
(0, _utils.default)("TSExternalModuleReference", {
  visitor: ["expression"],
  fields: {
    expression: (0, _utils.validateType)("StringLiteral")
  }
});
(0, _utils.default)("TSNonNullExpression", {
  aliases: ["Expression"],
  visitor: ["expression"],
  fields: {
    expression: (0, _utils.validateType)("Expression")
  }
});
(0, _utils.default)("TSExportAssignment", {
  aliases: ["Statement"],
  visitor: ["expression"],
  fields: {
    expression: (0, _utils.validateType)("Expression")
  }
});
(0, _utils.default)("TSNamespaceExportDeclaration", {
  aliases: ["Statement"],
  visitor: ["id"],
  fields: {
    id: (0, _utils.validateType)("Identifier")
  }
});
(0, _utils.default)("TSTypeAnnotation", {
  visitor: ["typeAnnotation"],
  fields: {
    typeAnnotation: {
      validate: (0, _utils.assertNodeType)("TSType")
    }
  }
});
(0, _utils.default)("TSTypeParameterInstantiation", {
  visitor: ["params"],
  fields: {
    params: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("TSType")))
    }
  }
});
(0, _utils.default)("TSTypeParameterDeclaration", {
  visitor: ["params"],
  fields: {
    params: {
      validate: (0, _utils.chain)((0, _utils.assertValueType)("array"), (0, _utils.assertEach)((0, _utils.assertNodeType)("TSTypeParameter")))
    }
  }
});
(0, _utils.default)("TSTypeParameter", {
  builder: ["constraint", "default", "name"],
  visitor: ["constraint", "default"],
  fields: {
    name: {
      validate: (0, _utils.assertValueType)("string")
    },
    constraint: {
      validate: (0, _utils.assertNodeType)("TSType"),
      optional: true
    },
    default: {
      validate: (0, _utils.assertNodeType)("TSType"),
      optional: true
    }
  }
});

/***/ }),
/* 41 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = assertNode;

var _isNode = __webpack_require__(42);

function assertNode(node) {
  if (!(0, _isNode.default)(node)) {
    var _node$type;

    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);
    throw new TypeError(`Not a valid node of type "${type}"`);
  }
}

/***/ }),
/* 42 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isNode;

var _definitions = __webpack_require__(22);

function isNode(node) {
  return !!(node && _definitions.VISITOR_KEYS[node.type]);
}

/***/ }),
/* 43 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.assertArrayExpression = assertArrayExpression;
exports.assertAssignmentExpression = assertAssignmentExpression;
exports.assertBinaryExpression = assertBinaryExpression;
exports.assertInterpreterDirective = assertInterpreterDirective;
exports.assertDirective = assertDirective;
exports.assertDirectiveLiteral = assertDirectiveLiteral;
exports.assertBlockStatement = assertBlockStatement;
exports.assertBreakStatement = assertBreakStatement;
exports.assertCallExpression = assertCallExpression;
exports.assertCatchClause = assertCatchClause;
exports.assertConditionalExpression = assertConditionalExpression;
exports.assertContinueStatement = assertContinueStatement;
exports.assertDebuggerStatement = assertDebuggerStatement;
exports.assertDoWhileStatement = assertDoWhileStatement;
exports.assertEmptyStatement = assertEmptyStatement;
exports.assertExpressionStatement = assertExpressionStatement;
exports.assertFile = assertFile;
exports.assertForInStatement = assertForInStatement;
exports.assertForStatement = assertForStatement;
exports.assertFunctionDeclaration = assertFunctionDeclaration;
exports.assertFunctionExpression = assertFunctionExpression;
exports.assertIdentifier = assertIdentifier;
exports.assertIfStatement = assertIfStatement;
exports.assertLabeledStatement = assertLabeledStatement;
exports.assertStringLiteral = assertStringLiteral;
exports.assertNumericLiteral = assertNumericLiteral;
exports.assertNullLiteral = assertNullLiteral;
exports.assertBooleanLiteral = assertBooleanLiteral;
exports.assertRegExpLiteral = assertRegExpLiteral;
exports.assertLogicalExpression = assertLogicalExpression;
exports.assertMemberExpression = assertMemberExpression;
exports.assertNewExpression = assertNewExpression;
exports.assertProgram = assertProgram;
exports.assertObjectExpression = assertObjectExpression;
exports.assertObjectMethod = assertObjectMethod;
exports.assertObjectProperty = assertObjectProperty;
exports.assertRestElement = assertRestElement;
exports.assertReturnStatement = assertReturnStatement;
exports.assertSequenceExpression = assertSequenceExpression;
exports.assertParenthesizedExpression = assertParenthesizedExpression;
exports.assertSwitchCase = assertSwitchCase;
exports.assertSwitchStatement = assertSwitchStatement;
exports.assertThisExpression = assertThisExpression;
exports.assertThrowStatement = assertThrowStatement;
exports.assertTryStatement = assertTryStatement;
exports.assertUnaryExpression = assertUnaryExpression;
exports.assertUpdateExpression = assertUpdateExpression;
exports.assertVariableDeclaration = assertVariableDeclaration;
exports.assertVariableDeclarator = assertVariableDeclarator;
exports.assertWhileStatement = assertWhileStatement;
exports.assertWithStatement = assertWithStatement;
exports.assertAssignmentPattern = assertAssignmentPattern;
exports.assertArrayPattern = assertArrayPattern;
exports.assertArrowFunctionExpression = assertArrowFunctionExpression;
exports.assertClassBody = assertClassBody;
exports.assertClassExpression = assertClassExpression;
exports.assertClassDeclaration = assertClassDeclaration;
exports.assertExportAllDeclaration = assertExportAllDeclaration;
exports.assertExportDefaultDeclaration = assertExportDefaultDeclaration;
exports.assertExportNamedDeclaration = assertExportNamedDeclaration;
exports.assertExportSpecifier = assertExportSpecifier;
exports.assertForOfStatement = assertForOfStatement;
exports.assertImportDeclaration = assertImportDeclaration;
exports.assertImportDefaultSpecifier = assertImportDefaultSpecifier;
exports.assertImportNamespaceSpecifier = assertImportNamespaceSpecifier;
exports.assertImportSpecifier = assertImportSpecifier;
exports.assertMetaProperty = assertMetaProperty;
exports.assertClassMethod = assertClassMethod;
exports.assertObjectPattern = assertObjectPattern;
exports.assertSpreadElement = assertSpreadElement;
exports.assertSuper = assertSuper;
exports.assertTaggedTemplateExpression = assertTaggedTemplateExpression;
exports.assertTemplateElement = assertTemplateElement;
exports.assertTemplateLiteral = assertTemplateLiteral;
exports.assertYieldExpression = assertYieldExpression;
exports.assertAwaitExpression = assertAwaitExpression;
exports.assertImport = assertImport;
exports.assertBigIntLiteral = assertBigIntLiteral;
exports.assertExportNamespaceSpecifier = assertExportNamespaceSpecifier;
exports.assertOptionalMemberExpression = assertOptionalMemberExpression;
exports.assertOptionalCallExpression = assertOptionalCallExpression;
exports.assertAnyTypeAnnotation = assertAnyTypeAnnotation;
exports.assertArrayTypeAnnotation = assertArrayTypeAnnotation;
exports.assertBooleanTypeAnnotation = assertBooleanTypeAnnotation;
exports.assertBooleanLiteralTypeAnnotation = assertBooleanLiteralTypeAnnotation;
exports.assertNullLiteralTypeAnnotation = assertNullLiteralTypeAnnotation;
exports.assertClassImplements = assertClassImplements;
exports.assertDeclareClass = assertDeclareClass;
exports.assertDeclareFunction = assertDeclareFunction;
exports.assertDeclareInterface = assertDeclareInterface;
exports.assertDeclareModule = assertDeclareModule;
exports.assertDeclareModuleExports = assertDeclareModuleExports;
exports.assertDeclareTypeAlias = assertDeclareTypeAlias;
exports.assertDeclareOpaqueType = assertDeclareOpaqueType;
exports.assertDeclareVariable = assertDeclareVariable;
exports.assertDeclareExportDeclaration = assertDeclareExportDeclaration;
exports.assertDeclareExportAllDeclaration = assertDeclareExportAllDeclaration;
exports.assertDeclaredPredicate = assertDeclaredPredicate;
exports.assertExistsTypeAnnotation = assertExistsTypeAnnotation;
exports.assertFunctionTypeAnnotation = assertFunctionTypeAnnotation;
exports.assertFunctionTypeParam = assertFunctionTypeParam;
exports.assertGenericTypeAnnotation = assertGenericTypeAnnotation;
exports.assertInferredPredicate = assertInferredPredicate;
exports.assertInterfaceExtends = assertInterfaceExtends;
exports.assertInterfaceDeclaration = assertInterfaceDeclaration;
exports.assertInterfaceTypeAnnotation = assertInterfaceTypeAnnotation;
exports.assertIntersectionTypeAnnotation = assertIntersectionTypeAnnotation;
exports.assertMixedTypeAnnotation = assertMixedTypeAnnotation;
exports.assertEmptyTypeAnnotation = assertEmptyTypeAnnotation;
exports.assertNullableTypeAnnotation = assertNullableTypeAnnotation;
exports.assertNumberLiteralTypeAnnotation = assertNumberLiteralTypeAnnotation;
exports.assertNumberTypeAnnotation = assertNumberTypeAnnotation;
exports.assertObjectTypeAnnotation = assertObjectTypeAnnotation;
exports.assertObjectTypeInternalSlot = assertObjectTypeInternalSlot;
exports.assertObjectTypeCallProperty = assertObjectTypeCallProperty;
exports.assertObjectTypeIndexer = assertObjectTypeIndexer;
exports.assertObjectTypeProperty = assertObjectTypeProperty;
exports.assertObjectTypeSpreadProperty = assertObjectTypeSpreadProperty;
exports.assertOpaqueType = assertOpaqueType;
exports.assertQualifiedTypeIdentifier = assertQualifiedTypeIdentifier;
exports.assertStringLiteralTypeAnnotation = assertStringLiteralTypeAnnotation;
exports.assertStringTypeAnnotation = assertStringTypeAnnotation;
exports.assertSymbolTypeAnnotation = assertSymbolTypeAnnotation;
exports.assertThisTypeAnnotation = assertThisTypeAnnotation;
exports.assertTupleTypeAnnotation = assertTupleTypeAnnotation;
exports.assertTypeofTypeAnnotation = assertTypeofTypeAnnotation;
exports.assertTypeAlias = assertTypeAlias;
exports.assertTypeAnnotation = assertTypeAnnotation;
exports.assertTypeCastExpression = assertTypeCastExpression;
exports.assertTypeParameter = assertTypeParameter;
exports.assertTypeParameterDeclaration = assertTypeParameterDeclaration;
exports.assertTypeParameterInstantiation = assertTypeParameterInstantiation;
exports.assertUnionTypeAnnotation = assertUnionTypeAnnotation;
exports.assertVariance = assertVariance;
exports.assertVoidTypeAnnotation = assertVoidTypeAnnotation;
exports.assertEnumDeclaration = assertEnumDeclaration;
exports.assertEnumBooleanBody = assertEnumBooleanBody;
exports.assertEnumNumberBody = assertEnumNumberBody;
exports.assertEnumStringBody = assertEnumStringBody;
exports.assertEnumSymbolBody = assertEnumSymbolBody;
exports.assertEnumBooleanMember = assertEnumBooleanMember;
exports.assertEnumNumberMember = assertEnumNumberMember;
exports.assertEnumStringMember = assertEnumStringMember;
exports.assertEnumDefaultedMember = assertEnumDefaultedMember;
exports.assertIndexedAccessType = assertIndexedAccessType;
exports.assertOptionalIndexedAccessType = assertOptionalIndexedAccessType;
exports.assertJSXAttribute = assertJSXAttribute;
exports.assertJSXClosingElement = assertJSXClosingElement;
exports.assertJSXElement = assertJSXElement;
exports.assertJSXEmptyExpression = assertJSXEmptyExpression;
exports.assertJSXExpressionContainer = assertJSXExpressionContainer;
exports.assertJSXSpreadChild = assertJSXSpreadChild;
exports.assertJSXIdentifier = assertJSXIdentifier;
exports.assertJSXMemberExpression = assertJSXMemberExpression;
exports.assertJSXNamespacedName = assertJSXNamespacedName;
exports.assertJSXOpeningElement = assertJSXOpeningElement;
exports.assertJSXSpreadAttribute = assertJSXSpreadAttribute;
exports.assertJSXText = assertJSXText;
exports.assertJSXFragment = assertJSXFragment;
exports.assertJSXOpeningFragment = assertJSXOpeningFragment;
exports.assertJSXClosingFragment = assertJSXClosingFragment;
exports.assertNoop = assertNoop;
exports.assertPlaceholder = assertPlaceholder;
exports.assertV8IntrinsicIdentifier = assertV8IntrinsicIdentifier;
exports.assertArgumentPlaceholder = assertArgumentPlaceholder;
exports.assertBindExpression = assertBindExpression;
exports.assertClassProperty = assertClassProperty;
exports.assertPipelineTopicExpression = assertPipelineTopicExpression;
exports.assertPipelineBareFunction = assertPipelineBareFunction;
exports.assertPipelinePrimaryTopicReference = assertPipelinePrimaryTopicReference;
exports.assertClassPrivateProperty = assertClassPrivateProperty;
exports.assertClassPrivateMethod = assertClassPrivateMethod;
exports.assertImportAttribute = assertImportAttribute;
exports.assertDecorator = assertDecorator;
exports.assertDoExpression = assertDoExpression;
exports.assertExportDefaultSpecifier = assertExportDefaultSpecifier;
exports.assertPrivateName = assertPrivateName;
exports.assertRecordExpression = assertRecordExpression;
exports.assertTupleExpression = assertTupleExpression;
exports.assertDecimalLiteral = assertDecimalLiteral;
exports.assertStaticBlock = assertStaticBlock;
exports.assertModuleExpression = assertModuleExpression;
exports.assertTSParameterProperty = assertTSParameterProperty;
exports.assertTSDeclareFunction = assertTSDeclareFunction;
exports.assertTSDeclareMethod = assertTSDeclareMethod;
exports.assertTSQualifiedName = assertTSQualifiedName;
exports.assertTSCallSignatureDeclaration = assertTSCallSignatureDeclaration;
exports.assertTSConstructSignatureDeclaration = assertTSConstructSignatureDeclaration;
exports.assertTSPropertySignature = assertTSPropertySignature;
exports.assertTSMethodSignature = assertTSMethodSignature;
exports.assertTSIndexSignature = assertTSIndexSignature;
exports.assertTSAnyKeyword = assertTSAnyKeyword;
exports.assertTSBooleanKeyword = assertTSBooleanKeyword;
exports.assertTSBigIntKeyword = assertTSBigIntKeyword;
exports.assertTSIntrinsicKeyword = assertTSIntrinsicKeyword;
exports.assertTSNeverKeyword = assertTSNeverKeyword;
exports.assertTSNullKeyword = assertTSNullKeyword;
exports.assertTSNumberKeyword = assertTSNumberKeyword;
exports.assertTSObjectKeyword = assertTSObjectKeyword;
exports.assertTSStringKeyword = assertTSStringKeyword;
exports.assertTSSymbolKeyword = assertTSSymbolKeyword;
exports.assertTSUndefinedKeyword = assertTSUndefinedKeyword;
exports.assertTSUnknownKeyword = assertTSUnknownKeyword;
exports.assertTSVoidKeyword = assertTSVoidKeyword;
exports.assertTSThisType = assertTSThisType;
exports.assertTSFunctionType = assertTSFunctionType;
exports.assertTSConstructorType = assertTSConstructorType;
exports.assertTSTypeReference = assertTSTypeReference;
exports.assertTSTypePredicate = assertTSTypePredicate;
exports.assertTSTypeQuery = assertTSTypeQuery;
exports.assertTSTypeLiteral = assertTSTypeLiteral;
exports.assertTSArrayType = assertTSArrayType;
exports.assertTSTupleType = assertTSTupleType;
exports.assertTSOptionalType = assertTSOptionalType;
exports.assertTSRestType = assertTSRestType;
exports.assertTSNamedTupleMember = assertTSNamedTupleMember;
exports.assertTSUnionType = assertTSUnionType;
exports.assertTSIntersectionType = assertTSIntersectionType;
exports.assertTSConditionalType = assertTSConditionalType;
exports.assertTSInferType = assertTSInferType;
exports.assertTSParenthesizedType = assertTSParenthesizedType;
exports.assertTSTypeOperator = assertTSTypeOperator;
exports.assertTSIndexedAccessType = assertTSIndexedAccessType;
exports.assertTSMappedType = assertTSMappedType;
exports.assertTSLiteralType = assertTSLiteralType;
exports.assertTSExpressionWithTypeArguments = assertTSExpressionWithTypeArguments;
exports.assertTSInterfaceDeclaration = assertTSInterfaceDeclaration;
exports.assertTSInterfaceBody = assertTSInterfaceBody;
exports.assertTSTypeAliasDeclaration = assertTSTypeAliasDeclaration;
exports.assertTSAsExpression = assertTSAsExpression;
exports.assertTSTypeAssertion = assertTSTypeAssertion;
exports.assertTSEnumDeclaration = assertTSEnumDeclaration;
exports.assertTSEnumMember = assertTSEnumMember;
exports.assertTSModuleDeclaration = assertTSModuleDeclaration;
exports.assertTSModuleBlock = assertTSModuleBlock;
exports.assertTSImportType = assertTSImportType;
exports.assertTSImportEqualsDeclaration = assertTSImportEqualsDeclaration;
exports.assertTSExternalModuleReference = assertTSExternalModuleReference;
exports.assertTSNonNullExpression = assertTSNonNullExpression;
exports.assertTSExportAssignment = assertTSExportAssignment;
exports.assertTSNamespaceExportDeclaration = assertTSNamespaceExportDeclaration;
exports.assertTSTypeAnnotation = assertTSTypeAnnotation;
exports.assertTSTypeParameterInstantiation = assertTSTypeParameterInstantiation;
exports.assertTSTypeParameterDeclaration = assertTSTypeParameterDeclaration;
exports.assertTSTypeParameter = assertTSTypeParameter;
exports.assertExpression = assertExpression;
exports.assertBinary = assertBinary;
exports.assertScopable = assertScopable;
exports.assertBlockParent = assertBlockParent;
exports.assertBlock = assertBlock;
exports.assertStatement = assertStatement;
exports.assertTerminatorless = assertTerminatorless;
exports.assertCompletionStatement = assertCompletionStatement;
exports.assertConditional = assertConditional;
exports.assertLoop = assertLoop;
exports.assertWhile = assertWhile;
exports.assertExpressionWrapper = assertExpressionWrapper;
exports.assertFor = assertFor;
exports.assertForXStatement = assertForXStatement;
exports.assertFunction = assertFunction;
exports.assertFunctionParent = assertFunctionParent;
exports.assertPureish = assertPureish;
exports.assertDeclaration = assertDeclaration;
exports.assertPatternLike = assertPatternLike;
exports.assertLVal = assertLVal;
exports.assertTSEntityName = assertTSEntityName;
exports.assertLiteral = assertLiteral;
exports.assertImmutable = assertImmutable;
exports.assertUserWhitespacable = assertUserWhitespacable;
exports.assertMethod = assertMethod;
exports.assertObjectMember = assertObjectMember;
exports.assertProperty = assertProperty;
exports.assertUnaryLike = assertUnaryLike;
exports.assertPattern = assertPattern;
exports.assertClass = assertClass;
exports.assertModuleDeclaration = assertModuleDeclaration;
exports.assertExportDeclaration = assertExportDeclaration;
exports.assertModuleSpecifier = assertModuleSpecifier;
exports.assertFlow = assertFlow;
exports.assertFlowType = assertFlowType;
exports.assertFlowBaseAnnotation = assertFlowBaseAnnotation;
exports.assertFlowDeclaration = assertFlowDeclaration;
exports.assertFlowPredicate = assertFlowPredicate;
exports.assertEnumBody = assertEnumBody;
exports.assertEnumMember = assertEnumMember;
exports.assertJSX = assertJSX;
exports.assertPrivate = assertPrivate;
exports.assertTSTypeElement = assertTSTypeElement;
exports.assertTSType = assertTSType;
exports.assertTSBaseType = assertTSBaseType;
exports.assertNumberLiteral = assertNumberLiteral;
exports.assertRegexLiteral = assertRegexLiteral;
exports.assertRestProperty = assertRestProperty;
exports.assertSpreadProperty = assertSpreadProperty;

var _is = __webpack_require__(25);

function assert(type, node, opts) {
  if (!(0, _is.default)(type, node, opts)) {
    throw new Error(`Expected type "${type}" with option ${JSON.stringify(opts)}, ` + `but instead got "${node.type}".`);
  }
}

function assertArrayExpression(node, opts) {
  assert("ArrayExpression", node, opts);
}

function assertAssignmentExpression(node, opts) {
  assert("AssignmentExpression", node, opts);
}

function assertBinaryExpression(node, opts) {
  assert("BinaryExpression", node, opts);
}

function assertInterpreterDirective(node, opts) {
  assert("InterpreterDirective", node, opts);
}

function assertDirective(node, opts) {
  assert("Directive", node, opts);
}

function assertDirectiveLiteral(node, opts) {
  assert("DirectiveLiteral", node, opts);
}

function assertBlockStatement(node, opts) {
  assert("BlockStatement", node, opts);
}

function assertBreakStatement(node, opts) {
  assert("BreakStatement", node, opts);
}

function assertCallExpression(node, opts) {
  assert("CallExpression", node, opts);
}

function assertCatchClause(node, opts) {
  assert("CatchClause", node, opts);
}

function assertConditionalExpression(node, opts) {
  assert("ConditionalExpression", node, opts);
}

function assertContinueStatement(node, opts) {
  assert("ContinueStatement", node, opts);
}

function assertDebuggerStatement(node, opts) {
  assert("DebuggerStatement", node, opts);
}

function assertDoWhileStatement(node, opts) {
  assert("DoWhileStatement", node, opts);
}

function assertEmptyStatement(node, opts) {
  assert("EmptyStatement", node, opts);
}

function assertExpressionStatement(node, opts) {
  assert("ExpressionStatement", node, opts);
}

function assertFile(node, opts) {
  assert("File", node, opts);
}

function assertForInStatement(node, opts) {
  assert("ForInStatement", node, opts);
}

function assertForStatement(node, opts) {
  assert("ForStatement", node, opts);
}

function assertFunctionDeclaration(node, opts) {
  assert("FunctionDeclaration", node, opts);
}

function assertFunctionExpression(node, opts) {
  assert("FunctionExpression", node, opts);
}

function assertIdentifier(node, opts) {
  assert("Identifier", node, opts);
}

function assertIfStatement(node, opts) {
  assert("IfStatement", node, opts);
}

function assertLabeledStatement(node, opts) {
  assert("LabeledStatement", node, opts);
}

function assertStringLiteral(node, opts) {
  assert("StringLiteral", node, opts);
}

function assertNumericLiteral(node, opts) {
  assert("NumericLiteral", node, opts);
}

function assertNullLiteral(node, opts) {
  assert("NullLiteral", node, opts);
}

function assertBooleanLiteral(node, opts) {
  assert("BooleanLiteral", node, opts);
}

function assertRegExpLiteral(node, opts) {
  assert("RegExpLiteral", node, opts);
}

function assertLogicalExpression(node, opts) {
  assert("LogicalExpression", node, opts);
}

function assertMemberExpression(node, opts) {
  assert("MemberExpression", node, opts);
}

function assertNewExpression(node, opts) {
  assert("NewExpression", node, opts);
}

function assertProgram(node, opts) {
  assert("Program", node, opts);
}

function assertObjectExpression(node, opts) {
  assert("ObjectExpression", node, opts);
}

function assertObjectMethod(node, opts) {
  assert("ObjectMethod", node, opts);
}

function assertObjectProperty(node, opts) {
  assert("ObjectProperty", node, opts);
}

function assertRestElement(node, opts) {
  assert("RestElement", node, opts);
}

function assertReturnStatement(node, opts) {
  assert("ReturnStatement", node, opts);
}

function assertSequenceExpression(node, opts) {
  assert("SequenceExpression", node, opts);
}

function assertParenthesizedExpression(node, opts) {
  assert("ParenthesizedExpression", node, opts);
}

function assertSwitchCase(node, opts) {
  assert("SwitchCase", node, opts);
}

function assertSwitchStatement(node, opts) {
  assert("SwitchStatement", node, opts);
}

function assertThisExpression(node, opts) {
  assert("ThisExpression", node, opts);
}

function assertThrowStatement(node, opts) {
  assert("ThrowStatement", node, opts);
}

function assertTryStatement(node, opts) {
  assert("TryStatement", node, opts);
}

function assertUnaryExpression(node, opts) {
  assert("UnaryExpression", node, opts);
}

function assertUpdateExpression(node, opts) {
  assert("UpdateExpression", node, opts);
}

function assertVariableDeclaration(node, opts) {
  assert("VariableDeclaration", node, opts);
}

function assertVariableDeclarator(node, opts) {
  assert("VariableDeclarator", node, opts);
}

function assertWhileStatement(node, opts) {
  assert("WhileStatement", node, opts);
}

function assertWithStatement(node, opts) {
  assert("WithStatement", node, opts);
}

function assertAssignmentPattern(node, opts) {
  assert("AssignmentPattern", node, opts);
}

function assertArrayPattern(node, opts) {
  assert("ArrayPattern", node, opts);
}

function assertArrowFunctionExpression(node, opts) {
  assert("ArrowFunctionExpression", node, opts);
}

function assertClassBody(node, opts) {
  assert("ClassBody", node, opts);
}

function assertClassExpression(node, opts) {
  assert("ClassExpression", node, opts);
}

function assertClassDeclaration(node, opts) {
  assert("ClassDeclaration", node, opts);
}

function assertExportAllDeclaration(node, opts) {
  assert("ExportAllDeclaration", node, opts);
}

function assertExportDefaultDeclaration(node, opts) {
  assert("ExportDefaultDeclaration", node, opts);
}

function assertExportNamedDeclaration(node, opts) {
  assert("ExportNamedDeclaration", node, opts);
}

function assertExportSpecifier(node, opts) {
  assert("ExportSpecifier", node, opts);
}

function assertForOfStatement(node, opts) {
  assert("ForOfStatement", node, opts);
}

function assertImportDeclaration(node, opts) {
  assert("ImportDeclaration", node, opts);
}

function assertImportDefaultSpecifier(node, opts) {
  assert("ImportDefaultSpecifier", node, opts);
}

function assertImportNamespaceSpecifier(node, opts) {
  assert("ImportNamespaceSpecifier", node, opts);
}

function assertImportSpecifier(node, opts) {
  assert("ImportSpecifier", node, opts);
}

function assertMetaProperty(node, opts) {
  assert("MetaProperty", node, opts);
}

function assertClassMethod(node, opts) {
  assert("ClassMethod", node, opts);
}

function assertObjectPattern(node, opts) {
  assert("ObjectPattern", node, opts);
}

function assertSpreadElement(node, opts) {
  assert("SpreadElement", node, opts);
}

function assertSuper(node, opts) {
  assert("Super", node, opts);
}

function assertTaggedTemplateExpression(node, opts) {
  assert("TaggedTemplateExpression", node, opts);
}

function assertTemplateElement(node, opts) {
  assert("TemplateElement", node, opts);
}

function assertTemplateLiteral(node, opts) {
  assert("TemplateLiteral", node, opts);
}

function assertYieldExpression(node, opts) {
  assert("YieldExpression", node, opts);
}

function assertAwaitExpression(node, opts) {
  assert("AwaitExpression", node, opts);
}

function assertImport(node, opts) {
  assert("Import", node, opts);
}

function assertBigIntLiteral(node, opts) {
  assert("BigIntLiteral", node, opts);
}

function assertExportNamespaceSpecifier(node, opts) {
  assert("ExportNamespaceSpecifier", node, opts);
}

function assertOptionalMemberExpression(node, opts) {
  assert("OptionalMemberExpression", node, opts);
}

function assertOptionalCallExpression(node, opts) {
  assert("OptionalCallExpression", node, opts);
}

function assertAnyTypeAnnotation(node, opts) {
  assert("AnyTypeAnnotation", node, opts);
}

function assertArrayTypeAnnotation(node, opts) {
  assert("ArrayTypeAnnotation", node, opts);
}

function assertBooleanTypeAnnotation(node, opts) {
  assert("BooleanTypeAnnotation", node, opts);
}

function assertBooleanLiteralTypeAnnotation(node, opts) {
  assert("BooleanLiteralTypeAnnotation", node, opts);
}

function assertNullLiteralTypeAnnotation(node, opts) {
  assert("NullLiteralTypeAnnotation", node, opts);
}

function assertClassImplements(node, opts) {
  assert("ClassImplements", node, opts);
}

function assertDeclareClass(node, opts) {
  assert("DeclareClass", node, opts);
}

function assertDeclareFunction(node, opts) {
  assert("DeclareFunction", node, opts);
}

function assertDeclareInterface(node, opts) {
  assert("DeclareInterface", node, opts);
}

function assertDeclareModule(node, opts) {
  assert("DeclareModule", node, opts);
}

function assertDeclareModuleExports(node, opts) {
  assert("DeclareModuleExports", node, opts);
}

function assertDeclareTypeAlias(node, opts) {
  assert("DeclareTypeAlias", node, opts);
}

function assertDeclareOpaqueType(node, opts) {
  assert("DeclareOpaqueType", node, opts);
}

function assertDeclareVariable(node, opts) {
  assert("DeclareVariable", node, opts);
}

function assertDeclareExportDeclaration(node, opts) {
  assert("DeclareExportDeclaration", node, opts);
}

function assertDeclareExportAllDeclaration(node, opts) {
  assert("DeclareExportAllDeclaration", node, opts);
}

function assertDeclaredPredicate(node, opts) {
  assert("DeclaredPredicate", node, opts);
}

function assertExistsTypeAnnotation(node, opts) {
  assert("ExistsTypeAnnotation", node, opts);
}

function assertFunctionTypeAnnotation(node, opts) {
  assert("FunctionTypeAnnotation", node, opts);
}

function assertFunctionTypeParam(node, opts) {
  assert("FunctionTypeParam", node, opts);
}

function assertGenericTypeAnnotation(node, opts) {
  assert("GenericTypeAnnotation", node, opts);
}

function assertInferredPredicate(node, opts) {
  assert("InferredPredicate", node, opts);
}

function assertInterfaceExtends(node, opts) {
  assert("InterfaceExtends", node, opts);
}

function assertInterfaceDeclaration(node, opts) {
  assert("InterfaceDeclaration", node, opts);
}

function assertInterfaceTypeAnnotation(node, opts) {
  assert("InterfaceTypeAnnotation", node, opts);
}

function assertIntersectionTypeAnnotation(node, opts) {
  assert("IntersectionTypeAnnotation", node, opts);
}

function assertMixedTypeAnnotation(node, opts) {
  assert("MixedTypeAnnotation", node, opts);
}

function assertEmptyTypeAnnotation(node, opts) {
  assert("EmptyTypeAnnotation", node, opts);
}

function assertNullableTypeAnnotation(node, opts) {
  assert("NullableTypeAnnotation", node, opts);
}

function assertNumberLiteralTypeAnnotation(node, opts) {
  assert("NumberLiteralTypeAnnotation", node, opts);
}

function assertNumberTypeAnnotation(node, opts) {
  assert("NumberTypeAnnotation", node, opts);
}

function assertObjectTypeAnnotation(node, opts) {
  assert("ObjectTypeAnnotation", node, opts);
}

function assertObjectTypeInternalSlot(node, opts) {
  assert("ObjectTypeInternalSlot", node, opts);
}

function assertObjectTypeCallProperty(node, opts) {
  assert("ObjectTypeCallProperty", node, opts);
}

function assertObjectTypeIndexer(node, opts) {
  assert("ObjectTypeIndexer", node, opts);
}

function assertObjectTypeProperty(node, opts) {
  assert("ObjectTypeProperty", node, opts);
}

function assertObjectTypeSpreadProperty(node, opts) {
  assert("ObjectTypeSpreadProperty", node, opts);
}

function assertOpaqueType(node, opts) {
  assert("OpaqueType", node, opts);
}

function assertQualifiedTypeIdentifier(node, opts) {
  assert("QualifiedTypeIdentifier", node, opts);
}

function assertStringLiteralTypeAnnotation(node, opts) {
  assert("StringLiteralTypeAnnotation", node, opts);
}

function assertStringTypeAnnotation(node, opts) {
  assert("StringTypeAnnotation", node, opts);
}

function assertSymbolTypeAnnotation(node, opts) {
  assert("SymbolTypeAnnotation", node, opts);
}

function assertThisTypeAnnotation(node, opts) {
  assert("ThisTypeAnnotation", node, opts);
}

function assertTupleTypeAnnotation(node, opts) {
  assert("TupleTypeAnnotation", node, opts);
}

function assertTypeofTypeAnnotation(node, opts) {
  assert("TypeofTypeAnnotation", node, opts);
}

function assertTypeAlias(node, opts) {
  assert("TypeAlias", node, opts);
}

function assertTypeAnnotation(node, opts) {
  assert("TypeAnnotation", node, opts);
}

function assertTypeCastExpression(node, opts) {
  assert("TypeCastExpression", node, opts);
}

function assertTypeParameter(node, opts) {
  assert("TypeParameter", node, opts);
}

function assertTypeParameterDeclaration(node, opts) {
  assert("TypeParameterDeclaration", node, opts);
}

function assertTypeParameterInstantiation(node, opts) {
  assert("TypeParameterInstantiation", node, opts);
}

function assertUnionTypeAnnotation(node, opts) {
  assert("UnionTypeAnnotation", node, opts);
}

function assertVariance(node, opts) {
  assert("Variance", node, opts);
}

function assertVoidTypeAnnotation(node, opts) {
  assert("VoidTypeAnnotation", node, opts);
}

function assertEnumDeclaration(node, opts) {
  assert("EnumDeclaration", node, opts);
}

function assertEnumBooleanBody(node, opts) {
  assert("EnumBooleanBody", node, opts);
}

function assertEnumNumberBody(node, opts) {
  assert("EnumNumberBody", node, opts);
}

function assertEnumStringBody(node, opts) {
  assert("EnumStringBody", node, opts);
}

function assertEnumSymbolBody(node, opts) {
  assert("EnumSymbolBody", node, opts);
}

function assertEnumBooleanMember(node, opts) {
  assert("EnumBooleanMember", node, opts);
}

function assertEnumNumberMember(node, opts) {
  assert("EnumNumberMember", node, opts);
}

function assertEnumStringMember(node, opts) {
  assert("EnumStringMember", node, opts);
}

function assertEnumDefaultedMember(node, opts) {
  assert("EnumDefaultedMember", node, opts);
}

function assertIndexedAccessType(node, opts) {
  assert("IndexedAccessType", node, opts);
}

function assertOptionalIndexedAccessType(node, opts) {
  assert("OptionalIndexedAccessType", node, opts);
}

function assertJSXAttribute(node, opts) {
  assert("JSXAttribute", node, opts);
}

function assertJSXClosingElement(node, opts) {
  assert("JSXClosingElement", node, opts);
}

function assertJSXElement(node, opts) {
  assert("JSXElement", node, opts);
}

function assertJSXEmptyExpression(node, opts) {
  assert("JSXEmptyExpression", node, opts);
}

function assertJSXExpressionContainer(node, opts) {
  assert("JSXExpressionContainer", node, opts);
}

function assertJSXSpreadChild(node, opts) {
  assert("JSXSpreadChild", node, opts);
}

function assertJSXIdentifier(node, opts) {
  assert("JSXIdentifier", node, opts);
}

function assertJSXMemberExpression(node, opts) {
  assert("JSXMemberExpression", node, opts);
}

function assertJSXNamespacedName(node, opts) {
  assert("JSXNamespacedName", node, opts);
}

function assertJSXOpeningElement(node, opts) {
  assert("JSXOpeningElement", node, opts);
}

function assertJSXSpreadAttribute(node, opts) {
  assert("JSXSpreadAttribute", node, opts);
}

function assertJSXText(node, opts) {
  assert("JSXText", node, opts);
}

function assertJSXFragment(node, opts) {
  assert("JSXFragment", node, opts);
}

function assertJSXOpeningFragment(node, opts) {
  assert("JSXOpeningFragment", node, opts);
}

function assertJSXClosingFragment(node, opts) {
  assert("JSXClosingFragment", node, opts);
}

function assertNoop(node, opts) {
  assert("Noop", node, opts);
}

function assertPlaceholder(node, opts) {
  assert("Placeholder", node, opts);
}

function assertV8IntrinsicIdentifier(node, opts) {
  assert("V8IntrinsicIdentifier", node, opts);
}

function assertArgumentPlaceholder(node, opts) {
  assert("ArgumentPlaceholder", node, opts);
}

function assertBindExpression(node, opts) {
  assert("BindExpression", node, opts);
}

function assertClassProperty(node, opts) {
  assert("ClassProperty", node, opts);
}

function assertPipelineTopicExpression(node, opts) {
  assert("PipelineTopicExpression", node, opts);
}

function assertPipelineBareFunction(node, opts) {
  assert("PipelineBareFunction", node, opts);
}

function assertPipelinePrimaryTopicReference(node, opts) {
  assert("PipelinePrimaryTopicReference", node, opts);
}

function assertClassPrivateProperty(node, opts) {
  assert("ClassPrivateProperty", node, opts);
}

function assertClassPrivateMethod(node, opts) {
  assert("ClassPrivateMethod", node, opts);
}

function assertImportAttribute(node, opts) {
  assert("ImportAttribute", node, opts);
}

function assertDecorator(node, opts) {
  assert("Decorator", node, opts);
}

function assertDoExpression(node, opts) {
  assert("DoExpression", node, opts);
}

function assertExportDefaultSpecifier(node, opts) {
  assert("ExportDefaultSpecifier", node, opts);
}

function assertPrivateName(node, opts) {
  assert("PrivateName", node, opts);
}

function assertRecordExpression(node, opts) {
  assert("RecordExpression", node, opts);
}

function assertTupleExpression(node, opts) {
  assert("TupleExpression", node, opts);
}

function assertDecimalLiteral(node, opts) {
  assert("DecimalLiteral", node, opts);
}

function assertStaticBlock(node, opts) {
  assert("StaticBlock", node, opts);
}

function assertModuleExpression(node, opts) {
  assert("ModuleExpression", node, opts);
}

function assertTSParameterProperty(node, opts) {
  assert("TSParameterProperty", node, opts);
}

function assertTSDeclareFunction(node, opts) {
  assert("TSDeclareFunction", node, opts);
}

function assertTSDeclareMethod(node, opts) {
  assert("TSDeclareMethod", node, opts);
}

function assertTSQualifiedName(node, opts) {
  assert("TSQualifiedName", node, opts);
}

function assertTSCallSignatureDeclaration(node, opts) {
  assert("TSCallSignatureDeclaration", node, opts);
}

function assertTSConstructSignatureDeclaration(node, opts) {
  assert("TSConstructSignatureDeclaration", node, opts);
}

function assertTSPropertySignature(node, opts) {
  assert("TSPropertySignature", node, opts);
}

function assertTSMethodSignature(node, opts) {
  assert("TSMethodSignature", node, opts);
}

function assertTSIndexSignature(node, opts) {
  assert("TSIndexSignature", node, opts);
}

function assertTSAnyKeyword(node, opts) {
  assert("TSAnyKeyword", node, opts);
}

function assertTSBooleanKeyword(node, opts) {
  assert("TSBooleanKeyword", node, opts);
}

function assertTSBigIntKeyword(node, opts) {
  assert("TSBigIntKeyword", node, opts);
}

function assertTSIntrinsicKeyword(node, opts) {
  assert("TSIntrinsicKeyword", node, opts);
}

function assertTSNeverKeyword(node, opts) {
  assert("TSNeverKeyword", node, opts);
}

function assertTSNullKeyword(node, opts) {
  assert("TSNullKeyword", node, opts);
}

function assertTSNumberKeyword(node, opts) {
  assert("TSNumberKeyword", node, opts);
}

function assertTSObjectKeyword(node, opts) {
  assert("TSObjectKeyword", node, opts);
}

function assertTSStringKeyword(node, opts) {
  assert("TSStringKeyword", node, opts);
}

function assertTSSymbolKeyword(node, opts) {
  assert("TSSymbolKeyword", node, opts);
}

function assertTSUndefinedKeyword(node, opts) {
  assert("TSUndefinedKeyword", node, opts);
}

function assertTSUnknownKeyword(node, opts) {
  assert("TSUnknownKeyword", node, opts);
}

function assertTSVoidKeyword(node, opts) {
  assert("TSVoidKeyword", node, opts);
}

function assertTSThisType(node, opts) {
  assert("TSThisType", node, opts);
}

function assertTSFunctionType(node, opts) {
  assert("TSFunctionType", node, opts);
}

function assertTSConstructorType(node, opts) {
  assert("TSConstructorType", node, opts);
}

function assertTSTypeReference(node, opts) {
  assert("TSTypeReference", node, opts);
}

function assertTSTypePredicate(node, opts) {
  assert("TSTypePredicate", node, opts);
}

function assertTSTypeQuery(node, opts) {
  assert("TSTypeQuery", node, opts);
}

function assertTSTypeLiteral(node, opts) {
  assert("TSTypeLiteral", node, opts);
}

function assertTSArrayType(node, opts) {
  assert("TSArrayType", node, opts);
}

function assertTSTupleType(node, opts) {
  assert("TSTupleType", node, opts);
}

function assertTSOptionalType(node, opts) {
  assert("TSOptionalType", node, opts);
}

function assertTSRestType(node, opts) {
  assert("TSRestType", node, opts);
}

function assertTSNamedTupleMember(node, opts) {
  assert("TSNamedTupleMember", node, opts);
}

function assertTSUnionType(node, opts) {
  assert("TSUnionType", node, opts);
}

function assertTSIntersectionType(node, opts) {
  assert("TSIntersectionType", node, opts);
}

function assertTSConditionalType(node, opts) {
  assert("TSConditionalType", node, opts);
}

function assertTSInferType(node, opts) {
  assert("TSInferType", node, opts);
}

function assertTSParenthesizedType(node, opts) {
  assert("TSParenthesizedType", node, opts);
}

function assertTSTypeOperator(node, opts) {
  assert("TSTypeOperator", node, opts);
}

function assertTSIndexedAccessType(node, opts) {
  assert("TSIndexedAccessType", node, opts);
}

function assertTSMappedType(node, opts) {
  assert("TSMappedType", node, opts);
}

function assertTSLiteralType(node, opts) {
  assert("TSLiteralType", node, opts);
}

function assertTSExpressionWithTypeArguments(node, opts) {
  assert("TSExpressionWithTypeArguments", node, opts);
}

function assertTSInterfaceDeclaration(node, opts) {
  assert("TSInterfaceDeclaration", node, opts);
}

function assertTSInterfaceBody(node, opts) {
  assert("TSInterfaceBody", node, opts);
}

function assertTSTypeAliasDeclaration(node, opts) {
  assert("TSTypeAliasDeclaration", node, opts);
}

function assertTSAsExpression(node, opts) {
  assert("TSAsExpression", node, opts);
}

function assertTSTypeAssertion(node, opts) {
  assert("TSTypeAssertion", node, opts);
}

function assertTSEnumDeclaration(node, opts) {
  assert("TSEnumDeclaration", node, opts);
}

function assertTSEnumMember(node, opts) {
  assert("TSEnumMember", node, opts);
}

function assertTSModuleDeclaration(node, opts) {
  assert("TSModuleDeclaration", node, opts);
}

function assertTSModuleBlock(node, opts) {
  assert("TSModuleBlock", node, opts);
}

function assertTSImportType(node, opts) {
  assert("TSImportType", node, opts);
}

function assertTSImportEqualsDeclaration(node, opts) {
  assert("TSImportEqualsDeclaration", node, opts);
}

function assertTSExternalModuleReference(node, opts) {
  assert("TSExternalModuleReference", node, opts);
}

function assertTSNonNullExpression(node, opts) {
  assert("TSNonNullExpression", node, opts);
}

function assertTSExportAssignment(node, opts) {
  assert("TSExportAssignment", node, opts);
}

function assertTSNamespaceExportDeclaration(node, opts) {
  assert("TSNamespaceExportDeclaration", node, opts);
}

function assertTSTypeAnnotation(node, opts) {
  assert("TSTypeAnnotation", node, opts);
}

function assertTSTypeParameterInstantiation(node, opts) {
  assert("TSTypeParameterInstantiation", node, opts);
}

function assertTSTypeParameterDeclaration(node, opts) {
  assert("TSTypeParameterDeclaration", node, opts);
}

function assertTSTypeParameter(node, opts) {
  assert("TSTypeParameter", node, opts);
}

function assertExpression(node, opts) {
  assert("Expression", node, opts);
}

function assertBinary(node, opts) {
  assert("Binary", node, opts);
}

function assertScopable(node, opts) {
  assert("Scopable", node, opts);
}

function assertBlockParent(node, opts) {
  assert("BlockParent", node, opts);
}

function assertBlock(node, opts) {
  assert("Block", node, opts);
}

function assertStatement(node, opts) {
  assert("Statement", node, opts);
}

function assertTerminatorless(node, opts) {
  assert("Terminatorless", node, opts);
}

function assertCompletionStatement(node, opts) {
  assert("CompletionStatement", node, opts);
}

function assertConditional(node, opts) {
  assert("Conditional", node, opts);
}

function assertLoop(node, opts) {
  assert("Loop", node, opts);
}

function assertWhile(node, opts) {
  assert("While", node, opts);
}

function assertExpressionWrapper(node, opts) {
  assert("ExpressionWrapper", node, opts);
}

function assertFor(node, opts) {
  assert("For", node, opts);
}

function assertForXStatement(node, opts) {
  assert("ForXStatement", node, opts);
}

function assertFunction(node, opts) {
  assert("Function", node, opts);
}

function assertFunctionParent(node, opts) {
  assert("FunctionParent", node, opts);
}

function assertPureish(node, opts) {
  assert("Pureish", node, opts);
}

function assertDeclaration(node, opts) {
  assert("Declaration", node, opts);
}

function assertPatternLike(node, opts) {
  assert("PatternLike", node, opts);
}

function assertLVal(node, opts) {
  assert("LVal", node, opts);
}

function assertTSEntityName(node, opts) {
  assert("TSEntityName", node, opts);
}

function assertLiteral(node, opts) {
  assert("Literal", node, opts);
}

function assertImmutable(node, opts) {
  assert("Immutable", node, opts);
}

function assertUserWhitespacable(node, opts) {
  assert("UserWhitespacable", node, opts);
}

function assertMethod(node, opts) {
  assert("Method", node, opts);
}

function assertObjectMember(node, opts) {
  assert("ObjectMember", node, opts);
}

function assertProperty(node, opts) {
  assert("Property", node, opts);
}

function assertUnaryLike(node, opts) {
  assert("UnaryLike", node, opts);
}

function assertPattern(node, opts) {
  assert("Pattern", node, opts);
}

function assertClass(node, opts) {
  assert("Class", node, opts);
}

function assertModuleDeclaration(node, opts) {
  assert("ModuleDeclaration", node, opts);
}

function assertExportDeclaration(node, opts) {
  assert("ExportDeclaration", node, opts);
}

function assertModuleSpecifier(node, opts) {
  assert("ModuleSpecifier", node, opts);
}

function assertFlow(node, opts) {
  assert("Flow", node, opts);
}

function assertFlowType(node, opts) {
  assert("FlowType", node, opts);
}

function assertFlowBaseAnnotation(node, opts) {
  assert("FlowBaseAnnotation", node, opts);
}

function assertFlowDeclaration(node, opts) {
  assert("FlowDeclaration", node, opts);
}

function assertFlowPredicate(node, opts) {
  assert("FlowPredicate", node, opts);
}

function assertEnumBody(node, opts) {
  assert("EnumBody", node, opts);
}

function assertEnumMember(node, opts) {
  assert("EnumMember", node, opts);
}

function assertJSX(node, opts) {
  assert("JSX", node, opts);
}

function assertPrivate(node, opts) {
  assert("Private", node, opts);
}

function assertTSTypeElement(node, opts) {
  assert("TSTypeElement", node, opts);
}

function assertTSType(node, opts) {
  assert("TSType", node, opts);
}

function assertTSBaseType(node, opts) {
  assert("TSBaseType", node, opts);
}

function assertNumberLiteral(node, opts) {
  console.trace("The node type NumberLiteral has been renamed to NumericLiteral");
  assert("NumberLiteral", node, opts);
}

function assertRegexLiteral(node, opts) {
  console.trace("The node type RegexLiteral has been renamed to RegExpLiteral");
  assert("RegexLiteral", node, opts);
}

function assertRestProperty(node, opts) {
  console.trace("The node type RestProperty has been renamed to RestElement");
  assert("RestProperty", node, opts);
}

function assertSpreadProperty(node, opts) {
  console.trace("The node type SpreadProperty has been renamed to SpreadElement");
  assert("SpreadProperty", node, opts);
}

/***/ }),
/* 44 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = createTypeAnnotationBasedOnTypeof;

var _generated = __webpack_require__(20);

function createTypeAnnotationBasedOnTypeof(type) {
  if (type === "string") {
    return (0, _generated.stringTypeAnnotation)();
  } else if (type === "number") {
    return (0, _generated.numberTypeAnnotation)();
  } else if (type === "undefined") {
    return (0, _generated.voidTypeAnnotation)();
  } else if (type === "boolean") {
    return (0, _generated.booleanTypeAnnotation)();
  } else if (type === "function") {
    return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)("Function"));
  } else if (type === "object") {
    return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)("Object"));
  } else if (type === "symbol") {
    return (0, _generated.genericTypeAnnotation)((0, _generated.identifier)("Symbol"));
  } else if (type === "bigint") {
    return (0, _generated.anyTypeAnnotation)();
  } else {
    throw new Error("Invalid typeof value: " + type);
  }
}

/***/ }),
/* 45 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = createFlowUnionType;

var _generated = __webpack_require__(20);

var _removeTypeDuplicates = __webpack_require__(46);

function createFlowUnionType(types) {
  const flattened = (0, _removeTypeDuplicates.default)(types);

  if (flattened.length === 1) {
    return flattened[0];
  } else {
    return (0, _generated.unionTypeAnnotation)(flattened);
  }
}

/***/ }),
/* 46 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = removeTypeDuplicates;

var _generated = __webpack_require__(15);

function getQualifiedName(node) {
  return (0, _generated.isIdentifier)(node) ? node.name : `${node.id.name}.${getQualifiedName(node.qualification)}`;
}

function removeTypeDuplicates(nodes) {
  const generics = {};
  const bases = {};
  const typeGroups = [];
  const types = [];

  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (!node) continue;

    if (types.indexOf(node) >= 0) {
      continue;
    }

    if ((0, _generated.isAnyTypeAnnotation)(node)) {
      return [node];
    }

    if ((0, _generated.isFlowBaseAnnotation)(node)) {
      bases[node.type] = node;
      continue;
    }

    if ((0, _generated.isUnionTypeAnnotation)(node)) {
      if (typeGroups.indexOf(node.types) < 0) {
        nodes = nodes.concat(node.types);
        typeGroups.push(node.types);
      }

      continue;
    }

    if ((0, _generated.isGenericTypeAnnotation)(node)) {
      const name = getQualifiedName(node.id);

      if (generics[name]) {
        let existing = generics[name];

        if (existing.typeParameters) {
          if (node.typeParameters) {
            existing.typeParameters.params = removeTypeDuplicates(existing.typeParameters.params.concat(node.typeParameters.params));
          }
        } else {
          existing = node.typeParameters;
        }
      } else {
        generics[name] = node;
      }

      continue;
    }

    types.push(node);
  }

  for (const type of Object.keys(bases)) {
    types.push(bases[type]);
  }

  for (const name of Object.keys(generics)) {
    types.push(generics[name]);
  }

  return types;
}

/***/ }),
/* 47 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = createTSUnionType;

var _generated = __webpack_require__(20);

var _removeTypeDuplicates = __webpack_require__(48);

function createTSUnionType(typeAnnotations) {
  const types = typeAnnotations.map(type => type.typeAnnotation);
  const flattened = (0, _removeTypeDuplicates.default)(types);

  if (flattened.length === 1) {
    return flattened[0];
  } else {
    return (0, _generated.tsUnionType)(flattened);
  }
}

/***/ }),
/* 48 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = removeTypeDuplicates;

var _generated = __webpack_require__(15);

function removeTypeDuplicates(nodes) {
  const generics = {};
  const bases = {};
  const typeGroups = [];
  const types = [];

  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    if (!node) continue;

    if (types.indexOf(node) >= 0) {
      continue;
    }

    if ((0, _generated.isTSAnyKeyword)(node)) {
      return [node];
    }

    if ((0, _generated.isTSBaseType)(node)) {
      bases[node.type] = node;
      continue;
    }

    if ((0, _generated.isTSUnionType)(node)) {
      if (typeGroups.indexOf(node.types) < 0) {
        nodes = nodes.concat(node.types);
        typeGroups.push(node.types);
      }

      continue;
    }

    types.push(node);
  }

  for (const type of Object.keys(bases)) {
    types.push(bases[type]);
  }

  for (const name of Object.keys(generics)) {
    types.push(generics[name]);
  }

  return types;
}

/***/ }),
/* 49 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "ArrayExpression", ({
  enumerable: true,
  get: function () {
    return _index.arrayExpression;
  }
}));
Object.defineProperty(exports, "AssignmentExpression", ({
  enumerable: true,
  get: function () {
    return _index.assignmentExpression;
  }
}));
Object.defineProperty(exports, "BinaryExpression", ({
  enumerable: true,
  get: function () {
    return _index.binaryExpression;
  }
}));
Object.defineProperty(exports, "InterpreterDirective", ({
  enumerable: true,
  get: function () {
    return _index.interpreterDirective;
  }
}));
Object.defineProperty(exports, "Directive", ({
  enumerable: true,
  get: function () {
    return _index.directive;
  }
}));
Object.defineProperty(exports, "DirectiveLiteral", ({
  enumerable: true,
  get: function () {
    return _index.directiveLiteral;
  }
}));
Object.defineProperty(exports, "BlockStatement", ({
  enumerable: true,
  get: function () {
    return _index.blockStatement;
  }
}));
Object.defineProperty(exports, "BreakStatement", ({
  enumerable: true,
  get: function () {
    return _index.breakStatement;
  }
}));
Object.defineProperty(exports, "CallExpression", ({
  enumerable: true,
  get: function () {
    return _index.callExpression;
  }
}));
Object.defineProperty(exports, "CatchClause", ({
  enumerable: true,
  get: function () {
    return _index.catchClause;
  }
}));
Object.defineProperty(exports, "ConditionalExpression", ({
  enumerable: true,
  get: function () {
    return _index.conditionalExpression;
  }
}));
Object.defineProperty(exports, "ContinueStatement", ({
  enumerable: true,
  get: function () {
    return _index.continueStatement;
  }
}));
Object.defineProperty(exports, "DebuggerStatement", ({
  enumerable: true,
  get: function () {
    return _index.debuggerStatement;
  }
}));
Object.defineProperty(exports, "DoWhileStatement", ({
  enumerable: true,
  get: function () {
    return _index.doWhileStatement;
  }
}));
Object.defineProperty(exports, "EmptyStatement", ({
  enumerable: true,
  get: function () {
    return _index.emptyStatement;
  }
}));
Object.defineProperty(exports, "ExpressionStatement", ({
  enumerable: true,
  get: function () {
    return _index.expressionStatement;
  }
}));
Object.defineProperty(exports, "File", ({
  enumerable: true,
  get: function () {
    return _index.file;
  }
}));
Object.defineProperty(exports, "ForInStatement", ({
  enumerable: true,
  get: function () {
    return _index.forInStatement;
  }
}));
Object.defineProperty(exports, "ForStatement", ({
  enumerable: true,
  get: function () {
    return _index.forStatement;
  }
}));
Object.defineProperty(exports, "FunctionDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.functionDeclaration;
  }
}));
Object.defineProperty(exports, "FunctionExpression", ({
  enumerable: true,
  get: function () {
    return _index.functionExpression;
  }
}));
Object.defineProperty(exports, "Identifier", ({
  enumerable: true,
  get: function () {
    return _index.identifier;
  }
}));
Object.defineProperty(exports, "IfStatement", ({
  enumerable: true,
  get: function () {
    return _index.ifStatement;
  }
}));
Object.defineProperty(exports, "LabeledStatement", ({
  enumerable: true,
  get: function () {
    return _index.labeledStatement;
  }
}));
Object.defineProperty(exports, "StringLiteral", ({
  enumerable: true,
  get: function () {
    return _index.stringLiteral;
  }
}));
Object.defineProperty(exports, "NumericLiteral", ({
  enumerable: true,
  get: function () {
    return _index.numericLiteral;
  }
}));
Object.defineProperty(exports, "NullLiteral", ({
  enumerable: true,
  get: function () {
    return _index.nullLiteral;
  }
}));
Object.defineProperty(exports, "BooleanLiteral", ({
  enumerable: true,
  get: function () {
    return _index.booleanLiteral;
  }
}));
Object.defineProperty(exports, "RegExpLiteral", ({
  enumerable: true,
  get: function () {
    return _index.regExpLiteral;
  }
}));
Object.defineProperty(exports, "LogicalExpression", ({
  enumerable: true,
  get: function () {
    return _index.logicalExpression;
  }
}));
Object.defineProperty(exports, "MemberExpression", ({
  enumerable: true,
  get: function () {
    return _index.memberExpression;
  }
}));
Object.defineProperty(exports, "NewExpression", ({
  enumerable: true,
  get: function () {
    return _index.newExpression;
  }
}));
Object.defineProperty(exports, "Program", ({
  enumerable: true,
  get: function () {
    return _index.program;
  }
}));
Object.defineProperty(exports, "ObjectExpression", ({
  enumerable: true,
  get: function () {
    return _index.objectExpression;
  }
}));
Object.defineProperty(exports, "ObjectMethod", ({
  enumerable: true,
  get: function () {
    return _index.objectMethod;
  }
}));
Object.defineProperty(exports, "ObjectProperty", ({
  enumerable: true,
  get: function () {
    return _index.objectProperty;
  }
}));
Object.defineProperty(exports, "RestElement", ({
  enumerable: true,
  get: function () {
    return _index.restElement;
  }
}));
Object.defineProperty(exports, "ReturnStatement", ({
  enumerable: true,
  get: function () {
    return _index.returnStatement;
  }
}));
Object.defineProperty(exports, "SequenceExpression", ({
  enumerable: true,
  get: function () {
    return _index.sequenceExpression;
  }
}));
Object.defineProperty(exports, "ParenthesizedExpression", ({
  enumerable: true,
  get: function () {
    return _index.parenthesizedExpression;
  }
}));
Object.defineProperty(exports, "SwitchCase", ({
  enumerable: true,
  get: function () {
    return _index.switchCase;
  }
}));
Object.defineProperty(exports, "SwitchStatement", ({
  enumerable: true,
  get: function () {
    return _index.switchStatement;
  }
}));
Object.defineProperty(exports, "ThisExpression", ({
  enumerable: true,
  get: function () {
    return _index.thisExpression;
  }
}));
Object.defineProperty(exports, "ThrowStatement", ({
  enumerable: true,
  get: function () {
    return _index.throwStatement;
  }
}));
Object.defineProperty(exports, "TryStatement", ({
  enumerable: true,
  get: function () {
    return _index.tryStatement;
  }
}));
Object.defineProperty(exports, "UnaryExpression", ({
  enumerable: true,
  get: function () {
    return _index.unaryExpression;
  }
}));
Object.defineProperty(exports, "UpdateExpression", ({
  enumerable: true,
  get: function () {
    return _index.updateExpression;
  }
}));
Object.defineProperty(exports, "VariableDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.variableDeclaration;
  }
}));
Object.defineProperty(exports, "VariableDeclarator", ({
  enumerable: true,
  get: function () {
    return _index.variableDeclarator;
  }
}));
Object.defineProperty(exports, "WhileStatement", ({
  enumerable: true,
  get: function () {
    return _index.whileStatement;
  }
}));
Object.defineProperty(exports, "WithStatement", ({
  enumerable: true,
  get: function () {
    return _index.withStatement;
  }
}));
Object.defineProperty(exports, "AssignmentPattern", ({
  enumerable: true,
  get: function () {
    return _index.assignmentPattern;
  }
}));
Object.defineProperty(exports, "ArrayPattern", ({
  enumerable: true,
  get: function () {
    return _index.arrayPattern;
  }
}));
Object.defineProperty(exports, "ArrowFunctionExpression", ({
  enumerable: true,
  get: function () {
    return _index.arrowFunctionExpression;
  }
}));
Object.defineProperty(exports, "ClassBody", ({
  enumerable: true,
  get: function () {
    return _index.classBody;
  }
}));
Object.defineProperty(exports, "ClassExpression", ({
  enumerable: true,
  get: function () {
    return _index.classExpression;
  }
}));
Object.defineProperty(exports, "ClassDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.classDeclaration;
  }
}));
Object.defineProperty(exports, "ExportAllDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.exportAllDeclaration;
  }
}));
Object.defineProperty(exports, "ExportDefaultDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.exportDefaultDeclaration;
  }
}));
Object.defineProperty(exports, "ExportNamedDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.exportNamedDeclaration;
  }
}));
Object.defineProperty(exports, "ExportSpecifier", ({
  enumerable: true,
  get: function () {
    return _index.exportSpecifier;
  }
}));
Object.defineProperty(exports, "ForOfStatement", ({
  enumerable: true,
  get: function () {
    return _index.forOfStatement;
  }
}));
Object.defineProperty(exports, "ImportDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.importDeclaration;
  }
}));
Object.defineProperty(exports, "ImportDefaultSpecifier", ({
  enumerable: true,
  get: function () {
    return _index.importDefaultSpecifier;
  }
}));
Object.defineProperty(exports, "ImportNamespaceSpecifier", ({
  enumerable: true,
  get: function () {
    return _index.importNamespaceSpecifier;
  }
}));
Object.defineProperty(exports, "ImportSpecifier", ({
  enumerable: true,
  get: function () {
    return _index.importSpecifier;
  }
}));
Object.defineProperty(exports, "MetaProperty", ({
  enumerable: true,
  get: function () {
    return _index.metaProperty;
  }
}));
Object.defineProperty(exports, "ClassMethod", ({
  enumerable: true,
  get: function () {
    return _index.classMethod;
  }
}));
Object.defineProperty(exports, "ObjectPattern", ({
  enumerable: true,
  get: function () {
    return _index.objectPattern;
  }
}));
Object.defineProperty(exports, "SpreadElement", ({
  enumerable: true,
  get: function () {
    return _index.spreadElement;
  }
}));
Object.defineProperty(exports, "Super", ({
  enumerable: true,
  get: function () {
    return _index.super;
  }
}));
Object.defineProperty(exports, "TaggedTemplateExpression", ({
  enumerable: true,
  get: function () {
    return _index.taggedTemplateExpression;
  }
}));
Object.defineProperty(exports, "TemplateElement", ({
  enumerable: true,
  get: function () {
    return _index.templateElement;
  }
}));
Object.defineProperty(exports, "TemplateLiteral", ({
  enumerable: true,
  get: function () {
    return _index.templateLiteral;
  }
}));
Object.defineProperty(exports, "YieldExpression", ({
  enumerable: true,
  get: function () {
    return _index.yieldExpression;
  }
}));
Object.defineProperty(exports, "AwaitExpression", ({
  enumerable: true,
  get: function () {
    return _index.awaitExpression;
  }
}));
Object.defineProperty(exports, "Import", ({
  enumerable: true,
  get: function () {
    return _index.import;
  }
}));
Object.defineProperty(exports, "BigIntLiteral", ({
  enumerable: true,
  get: function () {
    return _index.bigIntLiteral;
  }
}));
Object.defineProperty(exports, "ExportNamespaceSpecifier", ({
  enumerable: true,
  get: function () {
    return _index.exportNamespaceSpecifier;
  }
}));
Object.defineProperty(exports, "OptionalMemberExpression", ({
  enumerable: true,
  get: function () {
    return _index.optionalMemberExpression;
  }
}));
Object.defineProperty(exports, "OptionalCallExpression", ({
  enumerable: true,
  get: function () {
    return _index.optionalCallExpression;
  }
}));
Object.defineProperty(exports, "AnyTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.anyTypeAnnotation;
  }
}));
Object.defineProperty(exports, "ArrayTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.arrayTypeAnnotation;
  }
}));
Object.defineProperty(exports, "BooleanTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.booleanTypeAnnotation;
  }
}));
Object.defineProperty(exports, "BooleanLiteralTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.booleanLiteralTypeAnnotation;
  }
}));
Object.defineProperty(exports, "NullLiteralTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.nullLiteralTypeAnnotation;
  }
}));
Object.defineProperty(exports, "ClassImplements", ({
  enumerable: true,
  get: function () {
    return _index.classImplements;
  }
}));
Object.defineProperty(exports, "DeclareClass", ({
  enumerable: true,
  get: function () {
    return _index.declareClass;
  }
}));
Object.defineProperty(exports, "DeclareFunction", ({
  enumerable: true,
  get: function () {
    return _index.declareFunction;
  }
}));
Object.defineProperty(exports, "DeclareInterface", ({
  enumerable: true,
  get: function () {
    return _index.declareInterface;
  }
}));
Object.defineProperty(exports, "DeclareModule", ({
  enumerable: true,
  get: function () {
    return _index.declareModule;
  }
}));
Object.defineProperty(exports, "DeclareModuleExports", ({
  enumerable: true,
  get: function () {
    return _index.declareModuleExports;
  }
}));
Object.defineProperty(exports, "DeclareTypeAlias", ({
  enumerable: true,
  get: function () {
    return _index.declareTypeAlias;
  }
}));
Object.defineProperty(exports, "DeclareOpaqueType", ({
  enumerable: true,
  get: function () {
    return _index.declareOpaqueType;
  }
}));
Object.defineProperty(exports, "DeclareVariable", ({
  enumerable: true,
  get: function () {
    return _index.declareVariable;
  }
}));
Object.defineProperty(exports, "DeclareExportDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.declareExportDeclaration;
  }
}));
Object.defineProperty(exports, "DeclareExportAllDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.declareExportAllDeclaration;
  }
}));
Object.defineProperty(exports, "DeclaredPredicate", ({
  enumerable: true,
  get: function () {
    return _index.declaredPredicate;
  }
}));
Object.defineProperty(exports, "ExistsTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.existsTypeAnnotation;
  }
}));
Object.defineProperty(exports, "FunctionTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.functionTypeAnnotation;
  }
}));
Object.defineProperty(exports, "FunctionTypeParam", ({
  enumerable: true,
  get: function () {
    return _index.functionTypeParam;
  }
}));
Object.defineProperty(exports, "GenericTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.genericTypeAnnotation;
  }
}));
Object.defineProperty(exports, "InferredPredicate", ({
  enumerable: true,
  get: function () {
    return _index.inferredPredicate;
  }
}));
Object.defineProperty(exports, "InterfaceExtends", ({
  enumerable: true,
  get: function () {
    return _index.interfaceExtends;
  }
}));
Object.defineProperty(exports, "InterfaceDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.interfaceDeclaration;
  }
}));
Object.defineProperty(exports, "InterfaceTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.interfaceTypeAnnotation;
  }
}));
Object.defineProperty(exports, "IntersectionTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.intersectionTypeAnnotation;
  }
}));
Object.defineProperty(exports, "MixedTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.mixedTypeAnnotation;
  }
}));
Object.defineProperty(exports, "EmptyTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.emptyTypeAnnotation;
  }
}));
Object.defineProperty(exports, "NullableTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.nullableTypeAnnotation;
  }
}));
Object.defineProperty(exports, "NumberLiteralTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.numberLiteralTypeAnnotation;
  }
}));
Object.defineProperty(exports, "NumberTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.numberTypeAnnotation;
  }
}));
Object.defineProperty(exports, "ObjectTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.objectTypeAnnotation;
  }
}));
Object.defineProperty(exports, "ObjectTypeInternalSlot", ({
  enumerable: true,
  get: function () {
    return _index.objectTypeInternalSlot;
  }
}));
Object.defineProperty(exports, "ObjectTypeCallProperty", ({
  enumerable: true,
  get: function () {
    return _index.objectTypeCallProperty;
  }
}));
Object.defineProperty(exports, "ObjectTypeIndexer", ({
  enumerable: true,
  get: function () {
    return _index.objectTypeIndexer;
  }
}));
Object.defineProperty(exports, "ObjectTypeProperty", ({
  enumerable: true,
  get: function () {
    return _index.objectTypeProperty;
  }
}));
Object.defineProperty(exports, "ObjectTypeSpreadProperty", ({
  enumerable: true,
  get: function () {
    return _index.objectTypeSpreadProperty;
  }
}));
Object.defineProperty(exports, "OpaqueType", ({
  enumerable: true,
  get: function () {
    return _index.opaqueType;
  }
}));
Object.defineProperty(exports, "QualifiedTypeIdentifier", ({
  enumerable: true,
  get: function () {
    return _index.qualifiedTypeIdentifier;
  }
}));
Object.defineProperty(exports, "StringLiteralTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.stringLiteralTypeAnnotation;
  }
}));
Object.defineProperty(exports, "StringTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.stringTypeAnnotation;
  }
}));
Object.defineProperty(exports, "SymbolTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.symbolTypeAnnotation;
  }
}));
Object.defineProperty(exports, "ThisTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.thisTypeAnnotation;
  }
}));
Object.defineProperty(exports, "TupleTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.tupleTypeAnnotation;
  }
}));
Object.defineProperty(exports, "TypeofTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.typeofTypeAnnotation;
  }
}));
Object.defineProperty(exports, "TypeAlias", ({
  enumerable: true,
  get: function () {
    return _index.typeAlias;
  }
}));
Object.defineProperty(exports, "TypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.typeAnnotation;
  }
}));
Object.defineProperty(exports, "TypeCastExpression", ({
  enumerable: true,
  get: function () {
    return _index.typeCastExpression;
  }
}));
Object.defineProperty(exports, "TypeParameter", ({
  enumerable: true,
  get: function () {
    return _index.typeParameter;
  }
}));
Object.defineProperty(exports, "TypeParameterDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.typeParameterDeclaration;
  }
}));
Object.defineProperty(exports, "TypeParameterInstantiation", ({
  enumerable: true,
  get: function () {
    return _index.typeParameterInstantiation;
  }
}));
Object.defineProperty(exports, "UnionTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.unionTypeAnnotation;
  }
}));
Object.defineProperty(exports, "Variance", ({
  enumerable: true,
  get: function () {
    return _index.variance;
  }
}));
Object.defineProperty(exports, "VoidTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.voidTypeAnnotation;
  }
}));
Object.defineProperty(exports, "EnumDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.enumDeclaration;
  }
}));
Object.defineProperty(exports, "EnumBooleanBody", ({
  enumerable: true,
  get: function () {
    return _index.enumBooleanBody;
  }
}));
Object.defineProperty(exports, "EnumNumberBody", ({
  enumerable: true,
  get: function () {
    return _index.enumNumberBody;
  }
}));
Object.defineProperty(exports, "EnumStringBody", ({
  enumerable: true,
  get: function () {
    return _index.enumStringBody;
  }
}));
Object.defineProperty(exports, "EnumSymbolBody", ({
  enumerable: true,
  get: function () {
    return _index.enumSymbolBody;
  }
}));
Object.defineProperty(exports, "EnumBooleanMember", ({
  enumerable: true,
  get: function () {
    return _index.enumBooleanMember;
  }
}));
Object.defineProperty(exports, "EnumNumberMember", ({
  enumerable: true,
  get: function () {
    return _index.enumNumberMember;
  }
}));
Object.defineProperty(exports, "EnumStringMember", ({
  enumerable: true,
  get: function () {
    return _index.enumStringMember;
  }
}));
Object.defineProperty(exports, "EnumDefaultedMember", ({
  enumerable: true,
  get: function () {
    return _index.enumDefaultedMember;
  }
}));
Object.defineProperty(exports, "IndexedAccessType", ({
  enumerable: true,
  get: function () {
    return _index.indexedAccessType;
  }
}));
Object.defineProperty(exports, "OptionalIndexedAccessType", ({
  enumerable: true,
  get: function () {
    return _index.optionalIndexedAccessType;
  }
}));
Object.defineProperty(exports, "JSXAttribute", ({
  enumerable: true,
  get: function () {
    return _index.jsxAttribute;
  }
}));
Object.defineProperty(exports, "JSXClosingElement", ({
  enumerable: true,
  get: function () {
    return _index.jsxClosingElement;
  }
}));
Object.defineProperty(exports, "JSXElement", ({
  enumerable: true,
  get: function () {
    return _index.jsxElement;
  }
}));
Object.defineProperty(exports, "JSXEmptyExpression", ({
  enumerable: true,
  get: function () {
    return _index.jsxEmptyExpression;
  }
}));
Object.defineProperty(exports, "JSXExpressionContainer", ({
  enumerable: true,
  get: function () {
    return _index.jsxExpressionContainer;
  }
}));
Object.defineProperty(exports, "JSXSpreadChild", ({
  enumerable: true,
  get: function () {
    return _index.jsxSpreadChild;
  }
}));
Object.defineProperty(exports, "JSXIdentifier", ({
  enumerable: true,
  get: function () {
    return _index.jsxIdentifier;
  }
}));
Object.defineProperty(exports, "JSXMemberExpression", ({
  enumerable: true,
  get: function () {
    return _index.jsxMemberExpression;
  }
}));
Object.defineProperty(exports, "JSXNamespacedName", ({
  enumerable: true,
  get: function () {
    return _index.jsxNamespacedName;
  }
}));
Object.defineProperty(exports, "JSXOpeningElement", ({
  enumerable: true,
  get: function () {
    return _index.jsxOpeningElement;
  }
}));
Object.defineProperty(exports, "JSXSpreadAttribute", ({
  enumerable: true,
  get: function () {
    return _index.jsxSpreadAttribute;
  }
}));
Object.defineProperty(exports, "JSXText", ({
  enumerable: true,
  get: function () {
    return _index.jsxText;
  }
}));
Object.defineProperty(exports, "JSXFragment", ({
  enumerable: true,
  get: function () {
    return _index.jsxFragment;
  }
}));
Object.defineProperty(exports, "JSXOpeningFragment", ({
  enumerable: true,
  get: function () {
    return _index.jsxOpeningFragment;
  }
}));
Object.defineProperty(exports, "JSXClosingFragment", ({
  enumerable: true,
  get: function () {
    return _index.jsxClosingFragment;
  }
}));
Object.defineProperty(exports, "Noop", ({
  enumerable: true,
  get: function () {
    return _index.noop;
  }
}));
Object.defineProperty(exports, "Placeholder", ({
  enumerable: true,
  get: function () {
    return _index.placeholder;
  }
}));
Object.defineProperty(exports, "V8IntrinsicIdentifier", ({
  enumerable: true,
  get: function () {
    return _index.v8IntrinsicIdentifier;
  }
}));
Object.defineProperty(exports, "ArgumentPlaceholder", ({
  enumerable: true,
  get: function () {
    return _index.argumentPlaceholder;
  }
}));
Object.defineProperty(exports, "BindExpression", ({
  enumerable: true,
  get: function () {
    return _index.bindExpression;
  }
}));
Object.defineProperty(exports, "ClassProperty", ({
  enumerable: true,
  get: function () {
    return _index.classProperty;
  }
}));
Object.defineProperty(exports, "PipelineTopicExpression", ({
  enumerable: true,
  get: function () {
    return _index.pipelineTopicExpression;
  }
}));
Object.defineProperty(exports, "PipelineBareFunction", ({
  enumerable: true,
  get: function () {
    return _index.pipelineBareFunction;
  }
}));
Object.defineProperty(exports, "PipelinePrimaryTopicReference", ({
  enumerable: true,
  get: function () {
    return _index.pipelinePrimaryTopicReference;
  }
}));
Object.defineProperty(exports, "ClassPrivateProperty", ({
  enumerable: true,
  get: function () {
    return _index.classPrivateProperty;
  }
}));
Object.defineProperty(exports, "ClassPrivateMethod", ({
  enumerable: true,
  get: function () {
    return _index.classPrivateMethod;
  }
}));
Object.defineProperty(exports, "ImportAttribute", ({
  enumerable: true,
  get: function () {
    return _index.importAttribute;
  }
}));
Object.defineProperty(exports, "Decorator", ({
  enumerable: true,
  get: function () {
    return _index.decorator;
  }
}));
Object.defineProperty(exports, "DoExpression", ({
  enumerable: true,
  get: function () {
    return _index.doExpression;
  }
}));
Object.defineProperty(exports, "ExportDefaultSpecifier", ({
  enumerable: true,
  get: function () {
    return _index.exportDefaultSpecifier;
  }
}));
Object.defineProperty(exports, "PrivateName", ({
  enumerable: true,
  get: function () {
    return _index.privateName;
  }
}));
Object.defineProperty(exports, "RecordExpression", ({
  enumerable: true,
  get: function () {
    return _index.recordExpression;
  }
}));
Object.defineProperty(exports, "TupleExpression", ({
  enumerable: true,
  get: function () {
    return _index.tupleExpression;
  }
}));
Object.defineProperty(exports, "DecimalLiteral", ({
  enumerable: true,
  get: function () {
    return _index.decimalLiteral;
  }
}));
Object.defineProperty(exports, "StaticBlock", ({
  enumerable: true,
  get: function () {
    return _index.staticBlock;
  }
}));
Object.defineProperty(exports, "ModuleExpression", ({
  enumerable: true,
  get: function () {
    return _index.moduleExpression;
  }
}));
Object.defineProperty(exports, "TSParameterProperty", ({
  enumerable: true,
  get: function () {
    return _index.tsParameterProperty;
  }
}));
Object.defineProperty(exports, "TSDeclareFunction", ({
  enumerable: true,
  get: function () {
    return _index.tsDeclareFunction;
  }
}));
Object.defineProperty(exports, "TSDeclareMethod", ({
  enumerable: true,
  get: function () {
    return _index.tsDeclareMethod;
  }
}));
Object.defineProperty(exports, "TSQualifiedName", ({
  enumerable: true,
  get: function () {
    return _index.tsQualifiedName;
  }
}));
Object.defineProperty(exports, "TSCallSignatureDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsCallSignatureDeclaration;
  }
}));
Object.defineProperty(exports, "TSConstructSignatureDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsConstructSignatureDeclaration;
  }
}));
Object.defineProperty(exports, "TSPropertySignature", ({
  enumerable: true,
  get: function () {
    return _index.tsPropertySignature;
  }
}));
Object.defineProperty(exports, "TSMethodSignature", ({
  enumerable: true,
  get: function () {
    return _index.tsMethodSignature;
  }
}));
Object.defineProperty(exports, "TSIndexSignature", ({
  enumerable: true,
  get: function () {
    return _index.tsIndexSignature;
  }
}));
Object.defineProperty(exports, "TSAnyKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsAnyKeyword;
  }
}));
Object.defineProperty(exports, "TSBooleanKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsBooleanKeyword;
  }
}));
Object.defineProperty(exports, "TSBigIntKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsBigIntKeyword;
  }
}));
Object.defineProperty(exports, "TSIntrinsicKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsIntrinsicKeyword;
  }
}));
Object.defineProperty(exports, "TSNeverKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsNeverKeyword;
  }
}));
Object.defineProperty(exports, "TSNullKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsNullKeyword;
  }
}));
Object.defineProperty(exports, "TSNumberKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsNumberKeyword;
  }
}));
Object.defineProperty(exports, "TSObjectKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsObjectKeyword;
  }
}));
Object.defineProperty(exports, "TSStringKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsStringKeyword;
  }
}));
Object.defineProperty(exports, "TSSymbolKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsSymbolKeyword;
  }
}));
Object.defineProperty(exports, "TSUndefinedKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsUndefinedKeyword;
  }
}));
Object.defineProperty(exports, "TSUnknownKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsUnknownKeyword;
  }
}));
Object.defineProperty(exports, "TSVoidKeyword", ({
  enumerable: true,
  get: function () {
    return _index.tsVoidKeyword;
  }
}));
Object.defineProperty(exports, "TSThisType", ({
  enumerable: true,
  get: function () {
    return _index.tsThisType;
  }
}));
Object.defineProperty(exports, "TSFunctionType", ({
  enumerable: true,
  get: function () {
    return _index.tsFunctionType;
  }
}));
Object.defineProperty(exports, "TSConstructorType", ({
  enumerable: true,
  get: function () {
    return _index.tsConstructorType;
  }
}));
Object.defineProperty(exports, "TSTypeReference", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeReference;
  }
}));
Object.defineProperty(exports, "TSTypePredicate", ({
  enumerable: true,
  get: function () {
    return _index.tsTypePredicate;
  }
}));
Object.defineProperty(exports, "TSTypeQuery", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeQuery;
  }
}));
Object.defineProperty(exports, "TSTypeLiteral", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeLiteral;
  }
}));
Object.defineProperty(exports, "TSArrayType", ({
  enumerable: true,
  get: function () {
    return _index.tsArrayType;
  }
}));
Object.defineProperty(exports, "TSTupleType", ({
  enumerable: true,
  get: function () {
    return _index.tsTupleType;
  }
}));
Object.defineProperty(exports, "TSOptionalType", ({
  enumerable: true,
  get: function () {
    return _index.tsOptionalType;
  }
}));
Object.defineProperty(exports, "TSRestType", ({
  enumerable: true,
  get: function () {
    return _index.tsRestType;
  }
}));
Object.defineProperty(exports, "TSNamedTupleMember", ({
  enumerable: true,
  get: function () {
    return _index.tsNamedTupleMember;
  }
}));
Object.defineProperty(exports, "TSUnionType", ({
  enumerable: true,
  get: function () {
    return _index.tsUnionType;
  }
}));
Object.defineProperty(exports, "TSIntersectionType", ({
  enumerable: true,
  get: function () {
    return _index.tsIntersectionType;
  }
}));
Object.defineProperty(exports, "TSConditionalType", ({
  enumerable: true,
  get: function () {
    return _index.tsConditionalType;
  }
}));
Object.defineProperty(exports, "TSInferType", ({
  enumerable: true,
  get: function () {
    return _index.tsInferType;
  }
}));
Object.defineProperty(exports, "TSParenthesizedType", ({
  enumerable: true,
  get: function () {
    return _index.tsParenthesizedType;
  }
}));
Object.defineProperty(exports, "TSTypeOperator", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeOperator;
  }
}));
Object.defineProperty(exports, "TSIndexedAccessType", ({
  enumerable: true,
  get: function () {
    return _index.tsIndexedAccessType;
  }
}));
Object.defineProperty(exports, "TSMappedType", ({
  enumerable: true,
  get: function () {
    return _index.tsMappedType;
  }
}));
Object.defineProperty(exports, "TSLiteralType", ({
  enumerable: true,
  get: function () {
    return _index.tsLiteralType;
  }
}));
Object.defineProperty(exports, "TSExpressionWithTypeArguments", ({
  enumerable: true,
  get: function () {
    return _index.tsExpressionWithTypeArguments;
  }
}));
Object.defineProperty(exports, "TSInterfaceDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsInterfaceDeclaration;
  }
}));
Object.defineProperty(exports, "TSInterfaceBody", ({
  enumerable: true,
  get: function () {
    return _index.tsInterfaceBody;
  }
}));
Object.defineProperty(exports, "TSTypeAliasDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeAliasDeclaration;
  }
}));
Object.defineProperty(exports, "TSAsExpression", ({
  enumerable: true,
  get: function () {
    return _index.tsAsExpression;
  }
}));
Object.defineProperty(exports, "TSTypeAssertion", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeAssertion;
  }
}));
Object.defineProperty(exports, "TSEnumDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsEnumDeclaration;
  }
}));
Object.defineProperty(exports, "TSEnumMember", ({
  enumerable: true,
  get: function () {
    return _index.tsEnumMember;
  }
}));
Object.defineProperty(exports, "TSModuleDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsModuleDeclaration;
  }
}));
Object.defineProperty(exports, "TSModuleBlock", ({
  enumerable: true,
  get: function () {
    return _index.tsModuleBlock;
  }
}));
Object.defineProperty(exports, "TSImportType", ({
  enumerable: true,
  get: function () {
    return _index.tsImportType;
  }
}));
Object.defineProperty(exports, "TSImportEqualsDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsImportEqualsDeclaration;
  }
}));
Object.defineProperty(exports, "TSExternalModuleReference", ({
  enumerable: true,
  get: function () {
    return _index.tsExternalModuleReference;
  }
}));
Object.defineProperty(exports, "TSNonNullExpression", ({
  enumerable: true,
  get: function () {
    return _index.tsNonNullExpression;
  }
}));
Object.defineProperty(exports, "TSExportAssignment", ({
  enumerable: true,
  get: function () {
    return _index.tsExportAssignment;
  }
}));
Object.defineProperty(exports, "TSNamespaceExportDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsNamespaceExportDeclaration;
  }
}));
Object.defineProperty(exports, "TSTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeAnnotation;
  }
}));
Object.defineProperty(exports, "TSTypeParameterInstantiation", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeParameterInstantiation;
  }
}));
Object.defineProperty(exports, "TSTypeParameterDeclaration", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeParameterDeclaration;
  }
}));
Object.defineProperty(exports, "TSTypeParameter", ({
  enumerable: true,
  get: function () {
    return _index.tsTypeParameter;
  }
}));
Object.defineProperty(exports, "NumberLiteral", ({
  enumerable: true,
  get: function () {
    return _index.numberLiteral;
  }
}));
Object.defineProperty(exports, "RegexLiteral", ({
  enumerable: true,
  get: function () {
    return _index.regexLiteral;
  }
}));
Object.defineProperty(exports, "RestProperty", ({
  enumerable: true,
  get: function () {
    return _index.restProperty;
  }
}));
Object.defineProperty(exports, "SpreadProperty", ({
  enumerable: true,
  get: function () {
    return _index.spreadProperty;
  }
}));

var _index = __webpack_require__(20);

/***/ }),
/* 50 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = cloneNode;

var _definitions = __webpack_require__(22);

var _generated = __webpack_require__(15);

const has = Function.call.bind(Object.prototype.hasOwnProperty);

function cloneIfNode(obj, deep, withoutLoc) {
  if (obj && typeof obj.type === "string") {
    return cloneNode(obj, deep, withoutLoc);
  }

  return obj;
}

function cloneIfNodeOrArray(obj, deep, withoutLoc) {
  if (Array.isArray(obj)) {
    return obj.map(node => cloneIfNode(node, deep, withoutLoc));
  }

  return cloneIfNode(obj, deep, withoutLoc);
}

function cloneNode(node, deep = true, withoutLoc = false) {
  if (!node) return node;
  const {
    type
  } = node;
  const newNode = {
    type: node.type
  };

  if ((0, _generated.isIdentifier)(node)) {
    newNode.name = node.name;

    if (has(node, "optional") && typeof node.optional === "boolean") {
      newNode.optional = node.optional;
    }

    if (has(node, "typeAnnotation")) {
      newNode.typeAnnotation = deep ? cloneIfNodeOrArray(node.typeAnnotation, true, withoutLoc) : node.typeAnnotation;
    }
  } else if (!has(_definitions.NODE_FIELDS, type)) {
    throw new Error(`Unknown node type: "${type}"`);
  } else {
    for (const field of Object.keys(_definitions.NODE_FIELDS[type])) {
      if (has(node, field)) {
        if (deep) {
          newNode[field] = (0, _generated.isFile)(node) && field === "comments" ? maybeCloneComments(node.comments, deep, withoutLoc) : cloneIfNodeOrArray(node[field], true, withoutLoc);
        } else {
          newNode[field] = node[field];
        }
      }
    }
  }

  if (has(node, "loc")) {
    if (withoutLoc) {
      newNode.loc = null;
    } else {
      newNode.loc = node.loc;
    }
  }

  if (has(node, "leadingComments")) {
    newNode.leadingComments = maybeCloneComments(node.leadingComments, deep, withoutLoc);
  }

  if (has(node, "innerComments")) {
    newNode.innerComments = maybeCloneComments(node.innerComments, deep, withoutLoc);
  }

  if (has(node, "trailingComments")) {
    newNode.trailingComments = maybeCloneComments(node.trailingComments, deep, withoutLoc);
  }

  if (has(node, "extra")) {
    newNode.extra = Object.assign({}, node.extra);
  }

  return newNode;
}

function maybeCloneComments(comments, deep, withoutLoc) {
  if (!comments || !deep) {
    return comments;
  }

  return comments.map(({
    type,
    value,
    loc
  }) => {
    if (withoutLoc) {
      return {
        type,
        value,
        loc: null
      };
    }

    return {
      type,
      value,
      loc
    };
  });
}

/***/ }),
/* 51 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = clone;

var _cloneNode = __webpack_require__(50);

function clone(node) {
  return (0, _cloneNode.default)(node, false);
}

/***/ }),
/* 52 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = cloneDeep;

var _cloneNode = __webpack_require__(50);

function cloneDeep(node) {
  return (0, _cloneNode.default)(node);
}

/***/ }),
/* 53 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = cloneDeepWithoutLoc;

var _cloneNode = __webpack_require__(50);

function cloneDeepWithoutLoc(node) {
  return (0, _cloneNode.default)(node, true, true);
}

/***/ }),
/* 54 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = cloneWithoutLoc;

var _cloneNode = __webpack_require__(50);

function cloneWithoutLoc(node) {
  return (0, _cloneNode.default)(node, false, true);
}

/***/ }),
/* 55 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = addComment;

var _addComments = __webpack_require__(56);

function addComment(node, type, content, line) {
  return (0, _addComments.default)(node, type, [{
    type: line ? "CommentLine" : "CommentBlock",
    value: content
  }]);
}

/***/ }),
/* 56 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = addComments;

function addComments(node, type, comments) {
  if (!comments || !node) return node;
  const key = `${type}Comments`;

  if (node[key]) {
    if (type === "leading") {
      node[key] = comments.concat(node[key]);
    } else {
      node[key] = node[key].concat(comments);
    }
  } else {
    node[key] = comments;
  }

  return node;
}

/***/ }),
/* 57 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = inheritInnerComments;

var _inherit = __webpack_require__(58);

function inheritInnerComments(child, parent) {
  (0, _inherit.default)("innerComments", child, parent);
}

/***/ }),
/* 58 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = inherit;

function inherit(key, child, parent) {
  if (child && parent) {
    child[key] = Array.from(new Set([].concat(child[key], parent[key]).filter(Boolean)));
  }
}

/***/ }),
/* 59 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = inheritLeadingComments;

var _inherit = __webpack_require__(58);

function inheritLeadingComments(child, parent) {
  (0, _inherit.default)("leadingComments", child, parent);
}

/***/ }),
/* 60 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = inheritsComments;

var _inheritTrailingComments = __webpack_require__(61);

var _inheritLeadingComments = __webpack_require__(59);

var _inheritInnerComments = __webpack_require__(57);

function inheritsComments(child, parent) {
  (0, _inheritTrailingComments.default)(child, parent);
  (0, _inheritLeadingComments.default)(child, parent);
  (0, _inheritInnerComments.default)(child, parent);
  return child;
}

/***/ }),
/* 61 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = inheritTrailingComments;

var _inherit = __webpack_require__(58);

function inheritTrailingComments(child, parent) {
  (0, _inherit.default)("trailingComments", child, parent);
}

/***/ }),
/* 62 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = removeComments;

var _constants = __webpack_require__(32);

function removeComments(node) {
  _constants.COMMENT_KEYS.forEach(key => {
    node[key] = null;
  });

  return node;
}

/***/ }),
/* 63 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TSBASETYPE_TYPES = exports.TSTYPE_TYPES = exports.TSTYPEELEMENT_TYPES = exports.PRIVATE_TYPES = exports.JSX_TYPES = exports.ENUMMEMBER_TYPES = exports.ENUMBODY_TYPES = exports.FLOWPREDICATE_TYPES = exports.FLOWDECLARATION_TYPES = exports.FLOWBASEANNOTATION_TYPES = exports.FLOWTYPE_TYPES = exports.FLOW_TYPES = exports.MODULESPECIFIER_TYPES = exports.EXPORTDECLARATION_TYPES = exports.MODULEDECLARATION_TYPES = exports.CLASS_TYPES = exports.PATTERN_TYPES = exports.UNARYLIKE_TYPES = exports.PROPERTY_TYPES = exports.OBJECTMEMBER_TYPES = exports.METHOD_TYPES = exports.USERWHITESPACABLE_TYPES = exports.IMMUTABLE_TYPES = exports.LITERAL_TYPES = exports.TSENTITYNAME_TYPES = exports.LVAL_TYPES = exports.PATTERNLIKE_TYPES = exports.DECLARATION_TYPES = exports.PUREISH_TYPES = exports.FUNCTIONPARENT_TYPES = exports.FUNCTION_TYPES = exports.FORXSTATEMENT_TYPES = exports.FOR_TYPES = exports.EXPRESSIONWRAPPER_TYPES = exports.WHILE_TYPES = exports.LOOP_TYPES = exports.CONDITIONAL_TYPES = exports.COMPLETIONSTATEMENT_TYPES = exports.TERMINATORLESS_TYPES = exports.STATEMENT_TYPES = exports.BLOCK_TYPES = exports.BLOCKPARENT_TYPES = exports.SCOPABLE_TYPES = exports.BINARY_TYPES = exports.EXPRESSION_TYPES = void 0;

var _definitions = __webpack_require__(22);

const EXPRESSION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Expression"];
exports.EXPRESSION_TYPES = EXPRESSION_TYPES;
const BINARY_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Binary"];
exports.BINARY_TYPES = BINARY_TYPES;
const SCOPABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Scopable"];
exports.SCOPABLE_TYPES = SCOPABLE_TYPES;
const BLOCKPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS["BlockParent"];
exports.BLOCKPARENT_TYPES = BLOCKPARENT_TYPES;
const BLOCK_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Block"];
exports.BLOCK_TYPES = BLOCK_TYPES;
const STATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Statement"];
exports.STATEMENT_TYPES = STATEMENT_TYPES;
const TERMINATORLESS_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Terminatorless"];
exports.TERMINATORLESS_TYPES = TERMINATORLESS_TYPES;
const COMPLETIONSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS["CompletionStatement"];
exports.COMPLETIONSTATEMENT_TYPES = COMPLETIONSTATEMENT_TYPES;
const CONDITIONAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Conditional"];
exports.CONDITIONAL_TYPES = CONDITIONAL_TYPES;
const LOOP_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Loop"];
exports.LOOP_TYPES = LOOP_TYPES;
const WHILE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["While"];
exports.WHILE_TYPES = WHILE_TYPES;
const EXPRESSIONWRAPPER_TYPES = _definitions.FLIPPED_ALIAS_KEYS["ExpressionWrapper"];
exports.EXPRESSIONWRAPPER_TYPES = EXPRESSIONWRAPPER_TYPES;
const FOR_TYPES = _definitions.FLIPPED_ALIAS_KEYS["For"];
exports.FOR_TYPES = FOR_TYPES;
const FORXSTATEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS["ForXStatement"];
exports.FORXSTATEMENT_TYPES = FORXSTATEMENT_TYPES;
const FUNCTION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Function"];
exports.FUNCTION_TYPES = FUNCTION_TYPES;
const FUNCTIONPARENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS["FunctionParent"];
exports.FUNCTIONPARENT_TYPES = FUNCTIONPARENT_TYPES;
const PUREISH_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Pureish"];
exports.PUREISH_TYPES = PUREISH_TYPES;
const DECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Declaration"];
exports.DECLARATION_TYPES = DECLARATION_TYPES;
const PATTERNLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["PatternLike"];
exports.PATTERNLIKE_TYPES = PATTERNLIKE_TYPES;
const LVAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS["LVal"];
exports.LVAL_TYPES = LVAL_TYPES;
const TSENTITYNAME_TYPES = _definitions.FLIPPED_ALIAS_KEYS["TSEntityName"];
exports.TSENTITYNAME_TYPES = TSENTITYNAME_TYPES;
const LITERAL_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Literal"];
exports.LITERAL_TYPES = LITERAL_TYPES;
const IMMUTABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Immutable"];
exports.IMMUTABLE_TYPES = IMMUTABLE_TYPES;
const USERWHITESPACABLE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["UserWhitespacable"];
exports.USERWHITESPACABLE_TYPES = USERWHITESPACABLE_TYPES;
const METHOD_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Method"];
exports.METHOD_TYPES = METHOD_TYPES;
const OBJECTMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS["ObjectMember"];
exports.OBJECTMEMBER_TYPES = OBJECTMEMBER_TYPES;
const PROPERTY_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Property"];
exports.PROPERTY_TYPES = PROPERTY_TYPES;
const UNARYLIKE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["UnaryLike"];
exports.UNARYLIKE_TYPES = UNARYLIKE_TYPES;
const PATTERN_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Pattern"];
exports.PATTERN_TYPES = PATTERN_TYPES;
const CLASS_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Class"];
exports.CLASS_TYPES = CLASS_TYPES;
const MODULEDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["ModuleDeclaration"];
exports.MODULEDECLARATION_TYPES = MODULEDECLARATION_TYPES;
const EXPORTDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["ExportDeclaration"];
exports.EXPORTDECLARATION_TYPES = EXPORTDECLARATION_TYPES;
const MODULESPECIFIER_TYPES = _definitions.FLIPPED_ALIAS_KEYS["ModuleSpecifier"];
exports.MODULESPECIFIER_TYPES = MODULESPECIFIER_TYPES;
const FLOW_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Flow"];
exports.FLOW_TYPES = FLOW_TYPES;
const FLOWTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["FlowType"];
exports.FLOWTYPE_TYPES = FLOWTYPE_TYPES;
const FLOWBASEANNOTATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["FlowBaseAnnotation"];
exports.FLOWBASEANNOTATION_TYPES = FLOWBASEANNOTATION_TYPES;
const FLOWDECLARATION_TYPES = _definitions.FLIPPED_ALIAS_KEYS["FlowDeclaration"];
exports.FLOWDECLARATION_TYPES = FLOWDECLARATION_TYPES;
const FLOWPREDICATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["FlowPredicate"];
exports.FLOWPREDICATE_TYPES = FLOWPREDICATE_TYPES;
const ENUMBODY_TYPES = _definitions.FLIPPED_ALIAS_KEYS["EnumBody"];
exports.ENUMBODY_TYPES = ENUMBODY_TYPES;
const ENUMMEMBER_TYPES = _definitions.FLIPPED_ALIAS_KEYS["EnumMember"];
exports.ENUMMEMBER_TYPES = ENUMMEMBER_TYPES;
const JSX_TYPES = _definitions.FLIPPED_ALIAS_KEYS["JSX"];
exports.JSX_TYPES = JSX_TYPES;
const PRIVATE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["Private"];
exports.PRIVATE_TYPES = PRIVATE_TYPES;
const TSTYPEELEMENT_TYPES = _definitions.FLIPPED_ALIAS_KEYS["TSTypeElement"];
exports.TSTYPEELEMENT_TYPES = TSTYPEELEMENT_TYPES;
const TSTYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["TSType"];
exports.TSTYPE_TYPES = TSTYPE_TYPES;
const TSBASETYPE_TYPES = _definitions.FLIPPED_ALIAS_KEYS["TSBaseType"];
exports.TSBASETYPE_TYPES = TSBASETYPE_TYPES;

/***/ }),
/* 64 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = ensureBlock;

var _toBlock = __webpack_require__(65);

function ensureBlock(node, key = "body") {
  return node[key] = (0, _toBlock.default)(node[key], node);
}

/***/ }),
/* 65 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = toBlock;

var _generated = __webpack_require__(15);

var _generated2 = __webpack_require__(20);

function toBlock(node, parent) {
  if ((0, _generated.isBlockStatement)(node)) {
    return node;
  }

  let blockNodes = [];

  if ((0, _generated.isEmptyStatement)(node)) {
    blockNodes = [];
  } else {
    if (!(0, _generated.isStatement)(node)) {
      if ((0, _generated.isFunction)(parent)) {
        node = (0, _generated2.returnStatement)(node);
      } else {
        node = (0, _generated2.expressionStatement)(node);
      }
    }

    blockNodes = [node];
  }

  return (0, _generated2.blockStatement)(blockNodes);
}

/***/ }),
/* 66 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = toBindingIdentifierName;

var _toIdentifier = __webpack_require__(67);

function toBindingIdentifierName(name) {
  name = (0, _toIdentifier.default)(name);
  if (name === "eval" || name === "arguments") name = "_" + name;
  return name;
}

/***/ }),
/* 67 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = toIdentifier;

var _isValidIdentifier = __webpack_require__(28);

var _helperValidatorIdentifier = __webpack_require__(29);

function toIdentifier(input) {
  input = input + "";
  let name = "";

  for (const c of input) {
    name += (0, _helperValidatorIdentifier.isIdentifierChar)(c.codePointAt(0)) ? c : "-";
  }

  name = name.replace(/^[-0-9]+/, "");
  name = name.replace(/[-\s]+(.)?/g, function (match, c) {
    return c ? c.toUpperCase() : "";
  });

  if (!(0, _isValidIdentifier.default)(name)) {
    name = `_${name}`;
  }

  return name || "_";
}

/***/ }),
/* 68 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = toComputedKey;

var _generated = __webpack_require__(15);

var _generated2 = __webpack_require__(20);

function toComputedKey(node, key = node.key || node.property) {
  if (!node.computed && (0, _generated.isIdentifier)(key)) key = (0, _generated2.stringLiteral)(key.name);
  return key;
}

/***/ }),
/* 69 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _generated = __webpack_require__(15);

var _default = toExpression;
exports.default = _default;

function toExpression(node) {
  if ((0, _generated.isExpressionStatement)(node)) {
    node = node.expression;
  }

  if ((0, _generated.isExpression)(node)) {
    return node;
  }

  if ((0, _generated.isClass)(node)) {
    node.type = "ClassExpression";
  } else if ((0, _generated.isFunction)(node)) {
    node.type = "FunctionExpression";
  }

  if (!(0, _generated.isExpression)(node)) {
    throw new Error(`cannot turn ${node.type} to an expression`);
  }

  return node;
}

/***/ }),
/* 70 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = toKeyAlias;

var _generated = __webpack_require__(15);

var _cloneNode = __webpack_require__(50);

var _removePropertiesDeep = __webpack_require__(71);

function toKeyAlias(node, key = node.key) {
  let alias;

  if (node.kind === "method") {
    return toKeyAlias.increment() + "";
  } else if ((0, _generated.isIdentifier)(key)) {
    alias = key.name;
  } else if ((0, _generated.isStringLiteral)(key)) {
    alias = JSON.stringify(key.value);
  } else {
    alias = JSON.stringify((0, _removePropertiesDeep.default)((0, _cloneNode.default)(key)));
  }

  if (node.computed) {
    alias = `[${alias}]`;
  }

  if (node.static) {
    alias = `static:${alias}`;
  }

  return alias;
}

toKeyAlias.uid = 0;

toKeyAlias.increment = function () {
  if (toKeyAlias.uid >= Number.MAX_SAFE_INTEGER) {
    return toKeyAlias.uid = 0;
  } else {
    return toKeyAlias.uid++;
  }
};

/***/ }),
/* 71 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = removePropertiesDeep;

var _traverseFast = __webpack_require__(72);

var _removeProperties = __webpack_require__(73);

function removePropertiesDeep(tree, opts) {
  (0, _traverseFast.default)(tree, _removeProperties.default, opts);
  return tree;
}

/***/ }),
/* 72 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = traverseFast;

var _definitions = __webpack_require__(22);

function traverseFast(node, enter, opts) {
  if (!node) return;
  const keys = _definitions.VISITOR_KEYS[node.type];
  if (!keys) return;
  opts = opts || {};
  enter(node, opts);

  for (const key of keys) {
    const subNode = node[key];

    if (Array.isArray(subNode)) {
      for (const node of subNode) {
        traverseFast(node, enter, opts);
      }
    } else {
      traverseFast(subNode, enter, opts);
    }
  }
}

/***/ }),
/* 73 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = removeProperties;

var _constants = __webpack_require__(32);

const CLEAR_KEYS = ["tokens", "start", "end", "loc", "raw", "rawValue"];

const CLEAR_KEYS_PLUS_COMMENTS = _constants.COMMENT_KEYS.concat(["comments"]).concat(CLEAR_KEYS);

function removeProperties(node, opts = {}) {
  const map = opts.preserveComments ? CLEAR_KEYS : CLEAR_KEYS_PLUS_COMMENTS;

  for (const key of map) {
    if (node[key] != null) node[key] = undefined;
  }

  for (const key of Object.keys(node)) {
    if (key[0] === "_" && node[key] != null) node[key] = undefined;
  }

  const symbols = Object.getOwnPropertySymbols(node);

  for (const sym of symbols) {
    node[sym] = null;
  }
}

/***/ }),
/* 74 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = toSequenceExpression;

var _gatherSequenceExpressions = __webpack_require__(75);

function toSequenceExpression(nodes, scope) {
  if (!(nodes != null && nodes.length)) return;
  const declars = [];
  const result = (0, _gatherSequenceExpressions.default)(nodes, scope, declars);
  if (!result) return;

  for (const declar of declars) {
    scope.push(declar);
  }

  return result;
}

/***/ }),
/* 75 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = gatherSequenceExpressions;

var _getBindingIdentifiers = __webpack_require__(76);

var _generated = __webpack_require__(15);

var _generated2 = __webpack_require__(20);

var _cloneNode = __webpack_require__(50);

function gatherSequenceExpressions(nodes, scope, declars) {
  const exprs = [];
  let ensureLastUndefined = true;

  for (const node of nodes) {
    if (!(0, _generated.isEmptyStatement)(node)) {
      ensureLastUndefined = false;
    }

    if ((0, _generated.isExpression)(node)) {
      exprs.push(node);
    } else if ((0, _generated.isExpressionStatement)(node)) {
      exprs.push(node.expression);
    } else if ((0, _generated.isVariableDeclaration)(node)) {
      if (node.kind !== "var") return;

      for (const declar of node.declarations) {
        const bindings = (0, _getBindingIdentifiers.default)(declar);

        for (const key of Object.keys(bindings)) {
          declars.push({
            kind: node.kind,
            id: (0, _cloneNode.default)(bindings[key])
          });
        }

        if (declar.init) {
          exprs.push((0, _generated2.assignmentExpression)("=", declar.id, declar.init));
        }
      }

      ensureLastUndefined = true;
    } else if ((0, _generated.isIfStatement)(node)) {
      const consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();
      const alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();
      if (!consequent || !alternate) return;
      exprs.push((0, _generated2.conditionalExpression)(node.test, consequent, alternate));
    } else if ((0, _generated.isBlockStatement)(node)) {
      const body = gatherSequenceExpressions(node.body, scope, declars);
      if (!body) return;
      exprs.push(body);
    } else if ((0, _generated.isEmptyStatement)(node)) {
      if (nodes.indexOf(node) === 0) {
        ensureLastUndefined = true;
      }
    } else {
      return;
    }
  }

  if (ensureLastUndefined) {
    exprs.push(scope.buildUndefinedNode());
  }

  if (exprs.length === 1) {
    return exprs[0];
  } else {
    return (0, _generated2.sequenceExpression)(exprs);
  }
}

/***/ }),
/* 76 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = getBindingIdentifiers;

var _generated = __webpack_require__(15);

function getBindingIdentifiers(node, duplicates, outerOnly) {
  let search = [].concat(node);
  const ids = Object.create(null);

  while (search.length) {
    const id = search.shift();
    if (!id) continue;
    const keys = getBindingIdentifiers.keys[id.type];

    if ((0, _generated.isIdentifier)(id)) {
      if (duplicates) {
        const _ids = ids[id.name] = ids[id.name] || [];

        _ids.push(id);
      } else {
        ids[id.name] = id;
      }

      continue;
    }

    if ((0, _generated.isExportDeclaration)(id) && !(0, _generated.isExportAllDeclaration)(id)) {
      if ((0, _generated.isDeclaration)(id.declaration)) {
        search.push(id.declaration);
      }

      continue;
    }

    if (outerOnly) {
      if ((0, _generated.isFunctionDeclaration)(id)) {
        search.push(id.id);
        continue;
      }

      if ((0, _generated.isFunctionExpression)(id)) {
        continue;
      }
    }

    if (keys) {
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i];

        if (id[key]) {
          search = search.concat(id[key]);
        }
      }
    }
  }

  return ids;
}

getBindingIdentifiers.keys = {
  DeclareClass: ["id"],
  DeclareFunction: ["id"],
  DeclareModule: ["id"],
  DeclareVariable: ["id"],
  DeclareInterface: ["id"],
  DeclareTypeAlias: ["id"],
  DeclareOpaqueType: ["id"],
  InterfaceDeclaration: ["id"],
  TypeAlias: ["id"],
  OpaqueType: ["id"],
  CatchClause: ["param"],
  LabeledStatement: ["label"],
  UnaryExpression: ["argument"],
  AssignmentExpression: ["left"],
  ImportSpecifier: ["local"],
  ImportNamespaceSpecifier: ["local"],
  ImportDefaultSpecifier: ["local"],
  ImportDeclaration: ["specifiers"],
  ExportSpecifier: ["exported"],
  ExportNamespaceSpecifier: ["exported"],
  ExportDefaultSpecifier: ["exported"],
  FunctionDeclaration: ["id", "params"],
  FunctionExpression: ["id", "params"],
  ArrowFunctionExpression: ["params"],
  ObjectMethod: ["params"],
  ClassMethod: ["params"],
  ForInStatement: ["left"],
  ForOfStatement: ["left"],
  ClassDeclaration: ["id"],
  ClassExpression: ["id"],
  RestElement: ["argument"],
  UpdateExpression: ["argument"],
  ObjectProperty: ["value"],
  AssignmentPattern: ["left"],
  ArrayPattern: ["elements"],
  ObjectPattern: ["properties"],
  VariableDeclaration: ["declarations"],
  VariableDeclarator: ["id"]
};

/***/ }),
/* 77 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _generated = __webpack_require__(15);

var _generated2 = __webpack_require__(20);

var _default = toStatement;
exports.default = _default;

function toStatement(node, ignore) {
  if ((0, _generated.isStatement)(node)) {
    return node;
  }

  let mustHaveId = false;
  let newType;

  if ((0, _generated.isClass)(node)) {
    mustHaveId = true;
    newType = "ClassDeclaration";
  } else if ((0, _generated.isFunction)(node)) {
    mustHaveId = true;
    newType = "FunctionDeclaration";
  } else if ((0, _generated.isAssignmentExpression)(node)) {
    return (0, _generated2.expressionStatement)(node);
  }

  if (mustHaveId && !node.id) {
    newType = false;
  }

  if (!newType) {
    if (ignore) {
      return false;
    } else {
      throw new Error(`cannot turn ${node.type} to a statement`);
    }
  }

  node.type = newType;
  return node;
}

/***/ }),
/* 78 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _isValidIdentifier = __webpack_require__(28);

var _generated = __webpack_require__(20);

var _default = valueToNode;
exports.default = _default;
const objectToString = Function.call.bind(Object.prototype.toString);

function isRegExp(value) {
  return objectToString(value) === "[object RegExp]";
}

function isPlainObject(value) {
  if (typeof value !== "object" || value === null || Object.prototype.toString.call(value) !== "[object Object]") {
    return false;
  }

  const proto = Object.getPrototypeOf(value);
  return proto === null || Object.getPrototypeOf(proto) === null;
}

function valueToNode(value) {
  if (value === undefined) {
    return (0, _generated.identifier)("undefined");
  }

  if (value === true || value === false) {
    return (0, _generated.booleanLiteral)(value);
  }

  if (value === null) {
    return (0, _generated.nullLiteral)();
  }

  if (typeof value === "string") {
    return (0, _generated.stringLiteral)(value);
  }

  if (typeof value === "number") {
    let result;

    if (Number.isFinite(value)) {
      result = (0, _generated.numericLiteral)(Math.abs(value));
    } else {
      let numerator;

      if (Number.isNaN(value)) {
        numerator = (0, _generated.numericLiteral)(0);
      } else {
        numerator = (0, _generated.numericLiteral)(1);
      }

      result = (0, _generated.binaryExpression)("/", numerator, (0, _generated.numericLiteral)(0));
    }

    if (value < 0 || Object.is(value, -0)) {
      result = (0, _generated.unaryExpression)("-", result);
    }

    return result;
  }

  if (isRegExp(value)) {
    const pattern = value.source;
    const flags = value.toString().match(/\/([a-z]+|)$/)[1];
    return (0, _generated.regExpLiteral)(pattern, flags);
  }

  if (Array.isArray(value)) {
    return (0, _generated.arrayExpression)(value.map(valueToNode));
  }

  if (isPlainObject(value)) {
    const props = [];

    for (const key of Object.keys(value)) {
      let nodeKey;

      if ((0, _isValidIdentifier.default)(key)) {
        nodeKey = (0, _generated.identifier)(key);
      } else {
        nodeKey = (0, _generated.stringLiteral)(key);
      }

      props.push((0, _generated.objectProperty)(nodeKey, valueToNode(value[key])));
    }

    return (0, _generated.objectExpression)(props);
  }

  throw new Error("don't know how to turn this value into a node");
}

/***/ }),
/* 79 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = appendToMemberExpression;

var _generated = __webpack_require__(20);

function appendToMemberExpression(member, append, computed = false) {
  member.object = (0, _generated.memberExpression)(member.object, member.property, member.computed);
  member.property = append;
  member.computed = !!computed;
  return member;
}

/***/ }),
/* 80 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = inherits;

var _constants = __webpack_require__(32);

var _inheritsComments = __webpack_require__(60);

function inherits(child, parent) {
  if (!child || !parent) return child;

  for (const key of _constants.INHERIT_KEYS.optional) {
    if (child[key] == null) {
      child[key] = parent[key];
    }
  }

  for (const key of Object.keys(parent)) {
    if (key[0] === "_" && key !== "__clone") child[key] = parent[key];
  }

  for (const key of _constants.INHERIT_KEYS.force) {
    child[key] = parent[key];
  }

  (0, _inheritsComments.default)(child, parent);
  return child;
}

/***/ }),
/* 81 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = prependToMemberExpression;

var _generated = __webpack_require__(20);

function prependToMemberExpression(member, prepend) {
  member.object = (0, _generated.memberExpression)(prepend, member.object);
  return member;
}

/***/ }),
/* 82 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _getBindingIdentifiers = __webpack_require__(76);

var _default = getOuterBindingIdentifiers;
exports.default = _default;

function getOuterBindingIdentifiers(node, duplicates) {
  return (0, _getBindingIdentifiers.default)(node, duplicates, true);
}

/***/ }),
/* 83 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = traverse;

var _definitions = __webpack_require__(22);

function traverse(node, handlers, state) {
  if (typeof handlers === "function") {
    handlers = {
      enter: handlers
    };
  }

  const {
    enter,
    exit
  } = handlers;
  traverseSimpleImpl(node, enter, exit, state, []);
}

function traverseSimpleImpl(node, enter, exit, state, ancestors) {
  const keys = _definitions.VISITOR_KEYS[node.type];
  if (!keys) return;
  if (enter) enter(node, ancestors, state);

  for (const key of keys) {
    const subNode = node[key];

    if (Array.isArray(subNode)) {
      for (let i = 0; i < subNode.length; i++) {
        const child = subNode[i];
        if (!child) continue;
        ancestors.push({
          node,
          key,
          index: i
        });
        traverseSimpleImpl(child, enter, exit, state, ancestors);
        ancestors.pop();
      }
    } else if (subNode) {
      ancestors.push({
        node,
        key
      });
      traverseSimpleImpl(subNode, enter, exit, state, ancestors);
      ancestors.pop();
    }
  }

  if (exit) exit(node, ancestors, state);
}

/***/ }),
/* 84 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isBinding;

var _getBindingIdentifiers = __webpack_require__(76);

function isBinding(node, parent, grandparent) {
  if (grandparent && node.type === "Identifier" && parent.type === "ObjectProperty" && grandparent.type === "ObjectExpression") {
    return false;
  }

  const keys = _getBindingIdentifiers.default.keys[parent.type];

  if (keys) {
    for (let i = 0; i < keys.length; i++) {
      const key = keys[i];
      const val = parent[key];

      if (Array.isArray(val)) {
        if (val.indexOf(node) >= 0) return true;
      } else {
        if (val === node) return true;
      }
    }
  }

  return false;
}

/***/ }),
/* 85 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isBlockScoped;

var _generated = __webpack_require__(15);

var _isLet = __webpack_require__(86);

function isBlockScoped(node) {
  return (0, _generated.isFunctionDeclaration)(node) || (0, _generated.isClassDeclaration)(node) || (0, _isLet.default)(node);
}

/***/ }),
/* 86 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isLet;

var _generated = __webpack_require__(15);

var _constants = __webpack_require__(32);

function isLet(node) {
  return (0, _generated.isVariableDeclaration)(node) && (node.kind !== "var" || node[_constants.BLOCK_SCOPED_SYMBOL]);
}

/***/ }),
/* 87 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isImmutable;

var _isType = __webpack_require__(26);

var _generated = __webpack_require__(15);

function isImmutable(node) {
  if ((0, _isType.default)(node.type, "Immutable")) return true;

  if ((0, _generated.isIdentifier)(node)) {
    if (node.name === "undefined") {
      return true;
    } else {
      return false;
    }
  }

  return false;
}

/***/ }),
/* 88 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isNodesEquivalent;

var _definitions = __webpack_require__(22);

function isNodesEquivalent(a, b) {
  if (typeof a !== "object" || typeof b !== "object" || a == null || b == null) {
    return a === b;
  }

  if (a.type !== b.type) {
    return false;
  }

  const fields = Object.keys(_definitions.NODE_FIELDS[a.type] || a.type);
  const visitorKeys = _definitions.VISITOR_KEYS[a.type];

  for (const field of fields) {
    if (typeof a[field] !== typeof b[field]) {
      return false;
    }

    if (a[field] == null && b[field] == null) {
      continue;
    } else if (a[field] == null || b[field] == null) {
      return false;
    }

    if (Array.isArray(a[field])) {
      if (!Array.isArray(b[field])) {
        return false;
      }

      if (a[field].length !== b[field].length) {
        return false;
      }

      for (let i = 0; i < a[field].length; i++) {
        if (!isNodesEquivalent(a[field][i], b[field][i])) {
          return false;
        }
      }

      continue;
    }

    if (typeof a[field] === "object" && !(visitorKeys != null && visitorKeys.includes(field))) {
      for (const key of Object.keys(a[field])) {
        if (a[field][key] !== b[field][key]) {
          return false;
        }
      }

      continue;
    }

    if (!isNodesEquivalent(a[field], b[field])) {
      return false;
    }
  }

  return true;
}

/***/ }),
/* 89 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isReferenced;

function isReferenced(node, parent, grandparent) {
  switch (parent.type) {
    case "MemberExpression":
    case "JSXMemberExpression":
    case "OptionalMemberExpression":
      if (parent.property === node) {
        return !!parent.computed;
      }

      return parent.object === node;

    case "VariableDeclarator":
      return parent.init === node;

    case "ArrowFunctionExpression":
      return parent.body === node;

    case "PrivateName":
      return false;

    case "ClassMethod":
    case "ClassPrivateMethod":
    case "ObjectMethod":
      if (parent.params.includes(node)) {
        return false;
      }

    case "ObjectProperty":
    case "ClassProperty":
    case "ClassPrivateProperty":
      if (parent.key === node) {
        return !!parent.computed;
      }

      if (parent.value === node) {
        return !grandparent || grandparent.type !== "ObjectPattern";
      }

      return true;

    case "ClassDeclaration":
    case "ClassExpression":
      return parent.superClass === node;

    case "AssignmentExpression":
      return parent.right === node;

    case "AssignmentPattern":
      return parent.right === node;

    case "LabeledStatement":
      return false;

    case "CatchClause":
      return false;

    case "RestElement":
      return false;

    case "BreakStatement":
    case "ContinueStatement":
      return false;

    case "FunctionDeclaration":
    case "FunctionExpression":
      return false;

    case "ExportNamespaceSpecifier":
    case "ExportDefaultSpecifier":
      return false;

    case "ExportSpecifier":
      if (grandparent != null && grandparent.source) {
        return false;
      }

      return parent.local === node;

    case "ImportDefaultSpecifier":
    case "ImportNamespaceSpecifier":
    case "ImportSpecifier":
      return false;

    case "JSXAttribute":
      return false;

    case "ObjectPattern":
    case "ArrayPattern":
      return false;

    case "MetaProperty":
      return false;

    case "ObjectTypeProperty":
      return parent.key !== node;

    case "TSEnumMember":
      return parent.id !== node;

    case "TSPropertySignature":
      if (parent.key === node) {
        return !!parent.computed;
      }

      return true;
  }

  return true;
}

/***/ }),
/* 90 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isScope;

var _generated = __webpack_require__(15);

function isScope(node, parent) {
  if ((0, _generated.isBlockStatement)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {
    return false;
  }

  if ((0, _generated.isPattern)(node) && ((0, _generated.isFunction)(parent) || (0, _generated.isCatchClause)(parent))) {
    return true;
  }

  return (0, _generated.isScopable)(node);
}

/***/ }),
/* 91 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isSpecifierDefault;

var _generated = __webpack_require__(15);

function isSpecifierDefault(specifier) {
  return (0, _generated.isImportDefaultSpecifier)(specifier) || (0, _generated.isIdentifier)(specifier.imported || specifier.exported, {
    name: "default"
  });
}

/***/ }),
/* 92 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isValidES3Identifier;

var _isValidIdentifier = __webpack_require__(28);

const RESERVED_WORDS_ES3_ONLY = new Set(["abstract", "boolean", "byte", "char", "double", "enum", "final", "float", "goto", "implements", "int", "interface", "long", "native", "package", "private", "protected", "public", "short", "static", "synchronized", "throws", "transient", "volatile"]);

function isValidES3Identifier(name) {
  return (0, _isValidIdentifier.default)(name) && !RESERVED_WORDS_ES3_ONLY.has(name);
}

/***/ }),
/* 93 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isVar;

var _generated = __webpack_require__(15);

var _constants = __webpack_require__(32);

function isVar(node) {
  return (0, _generated.isVariableDeclaration)(node, {
    kind: "var"
  }) && !node[_constants.BLOCK_SCOPED_SYMBOL];
}

/***/ }),
/* 94 */
/***/ (() => {



/***/ }),
/* 95 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = __webpack_require__(96);
} else {
	module.exports = __webpack_require__(99);
}


/***/ }),
/* 96 */
/***/ ((module, exports, __webpack_require__) => {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __webpack_require__(97)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),
/* 97 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __webpack_require__(98);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),
/* 98 */
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),
/* 99 */
/***/ ((module, exports, __webpack_require__) => {

/**
 * Module dependencies.
 */

const tty = __webpack_require__(100);
const util = __webpack_require__(101);

/**
 * This is the Node.js implementation of `debug()`.
 */

exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(
	() => {},
	'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
);

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
	// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
	// eslint-disable-next-line import/no-extraneous-dependencies
	const supportsColor = __webpack_require__(102);

	if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
		exports.colors = [
			20,
			21,
			26,
			27,
			32,
			33,
			38,
			39,
			40,
			41,
			42,
			43,
			44,
			45,
			56,
			57,
			62,
			63,
			68,
			69,
			74,
			75,
			76,
			77,
			78,
			79,
			80,
			81,
			92,
			93,
			98,
			99,
			112,
			113,
			128,
			129,
			134,
			135,
			148,
			149,
			160,
			161,
			162,
			163,
			164,
			165,
			166,
			167,
			168,
			169,
			170,
			171,
			172,
			173,
			178,
			179,
			184,
			185,
			196,
			197,
			198,
			199,
			200,
			201,
			202,
			203,
			204,
			205,
			206,
			207,
			208,
			209,
			214,
			215,
			220,
			221
		];
	}
} catch (error) {
	// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(key => {
	return /^debug_/i.test(key);
}).reduce((obj, key) => {
	// Camel-case
	const prop = key
		.substring(6)
		.toLowerCase()
		.replace(/_([a-z])/g, (_, k) => {
			return k.toUpperCase();
		});

	// Coerce string value into JS value
	let val = process.env[key];
	if (/^(yes|on|true|enabled)$/i.test(val)) {
		val = true;
	} else if (/^(no|off|false|disabled)$/i.test(val)) {
		val = false;
	} else if (val === 'null') {
		val = null;
	} else {
		val = Number(val);
	}

	obj[prop] = val;
	return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
	return 'colors' in exports.inspectOpts ?
		Boolean(exports.inspectOpts.colors) :
		tty.isatty(process.stderr.fd);
}

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	const {namespace: name, useColors} = this;

	if (useColors) {
		const c = this.color;
		const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
		const prefix = `  ${colorCode};1m${name} \u001B[0m`;

		args[0] = prefix + args[0].split('\n').join('\n' + prefix);
		args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
	} else {
		args[0] = getDate() + name + ' ' + args[0];
	}
}

function getDate() {
	if (exports.inspectOpts.hideDate) {
		return '';
	}
	return new Date().toISOString() + ' ';
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log(...args) {
	return process.stderr.write(util.format(...args) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	if (namespaces) {
		process.env.DEBUG = namespaces;
	} else {
		// If you set a process.env field to null or undefined, it gets cast to the
		// string 'null' or 'undefined'. Just delete instead.
		delete process.env.DEBUG;
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
	return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init(debug) {
	debug.inspectOpts = {};

	const keys = Object.keys(exports.inspectOpts);
	for (let i = 0; i < keys.length; i++) {
		debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	}
}

module.exports = __webpack_require__(97)(exports);

const {formatters} = module.exports;

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts)
		.split('\n')
		.map(str => str.trim())
		.join(' ');
};

/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */

formatters.O = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts);
};


/***/ }),
/* 100 */
/***/ ((module) => {

"use strict";
module.exports = require("tty");;

/***/ }),
/* 101 */
/***/ ((module) => {

"use strict";
module.exports = require("util");;

/***/ }),
/* 102 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const os = __webpack_require__(103);
const tty = __webpack_require__(100);
const hasFlag = __webpack_require__(104);

const {env} = process;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false') ||
	hasFlag('color=never')) {
	forceColor = 0;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = 1;
}

if ('FORCE_COLOR' in env) {
	if (env.FORCE_COLOR === 'true') {
		forceColor = 1;
	} else if (env.FORCE_COLOR === 'false') {
		forceColor = 0;
	} else {
		forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
	}
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(haveStream, streamIsTTY) {
	if (forceColor === 0) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (haveStream && !streamIsTTY && forceColor === undefined) {
		return 0;
	}

	const min = forceColor || 0;

	if (env.TERM === 'dumb') {
		return min;
	}

	if (process.platform === 'win32') {
		// Windows 10 build 10586 is the first Windows release that supports 256 colors.
		// Windows 10 build 14931 is the first release that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if ('GITHUB_ACTIONS' in env) {
		return 1;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream, stream && stream.isTTY);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: translateLevel(supportsColor(true, tty.isatty(1))),
	stderr: translateLevel(supportsColor(true, tty.isatty(2)))
};


/***/ }),
/* 103 */
/***/ ((module) => {

"use strict";
module.exports = require("os");;

/***/ }),
/* 104 */
/***/ ((module) => {

"use strict";


module.exports = (flag, argv = process.argv) => {
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const position = argv.indexOf(prefix + flag);
	const terminatorPosition = argv.indexOf('--');
	return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
};


/***/ }),
/* 105 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _renamer = __webpack_require__(106);

var _index = __webpack_require__(7);

var _binding = __webpack_require__(107);

var _globals = __webpack_require__(109);

var t = __webpack_require__(11);

var _cache = __webpack_require__(111);

function gatherNodeParts(node, parts) {
  switch (node == null ? void 0 : node.type) {
    default:
      if (t.isModuleDeclaration(node)) {
        if ((t.isExportAllDeclaration(node) || t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.source) {
          gatherNodeParts(node.source, parts);
        } else if ((t.isExportNamedDeclaration(node) || t.isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {
          for (const e of node.specifiers) gatherNodeParts(e, parts);
        } else if ((t.isExportDefaultDeclaration(node) || t.isExportNamedDeclaration(node)) && node.declaration) {
          gatherNodeParts(node.declaration, parts);
        }
      } else if (t.isModuleSpecifier(node)) {
        gatherNodeParts(node.local, parts);
      } else if (t.isLiteral(node)) {
        parts.push(node.value);
      }

      break;

    case "MemberExpression":
    case "OptionalMemberExpression":
    case "JSXMemberExpression":
      gatherNodeParts(node.object, parts);
      gatherNodeParts(node.property, parts);
      break;

    case "Identifier":
    case "JSXIdentifier":
      parts.push(node.name);
      break;

    case "CallExpression":
    case "OptionalCallExpression":
    case "NewExpression":
      gatherNodeParts(node.callee, parts);
      break;

    case "ObjectExpression":
    case "ObjectPattern":
      for (const e of node.properties) {
        gatherNodeParts(e, parts);
      }

      break;

    case "SpreadElement":
    case "RestElement":
      gatherNodeParts(node.argument, parts);
      break;

    case "ObjectProperty":
    case "ObjectMethod":
    case "ClassProperty":
    case "ClassMethod":
    case "ClassPrivateProperty":
    case "ClassPrivateMethod":
      gatherNodeParts(node.key, parts);
      break;

    case "ThisExpression":
      parts.push("this");
      break;

    case "Super":
      parts.push("super");
      break;

    case "Import":
      parts.push("import");
      break;

    case "DoExpression":
      parts.push("do");
      break;

    case "YieldExpression":
      parts.push("yield");
      gatherNodeParts(node.argument, parts);
      break;

    case "AwaitExpression":
      parts.push("await");
      gatherNodeParts(node.argument, parts);
      break;

    case "AssignmentExpression":
      gatherNodeParts(node.left, parts);
      break;

    case "VariableDeclarator":
      gatherNodeParts(node.id, parts);
      break;

    case "FunctionExpression":
    case "FunctionDeclaration":
    case "ClassExpression":
    case "ClassDeclaration":
      gatherNodeParts(node.id, parts);
      break;

    case "PrivateName":
      gatherNodeParts(node.id, parts);
      break;

    case "ParenthesizedExpression":
      gatherNodeParts(node.expression, parts);
      break;

    case "UnaryExpression":
    case "UpdateExpression":
      gatherNodeParts(node.argument, parts);
      break;

    case "MetaProperty":
      gatherNodeParts(node.meta, parts);
      gatherNodeParts(node.property, parts);
      break;

    case "JSXElement":
      gatherNodeParts(node.openingElement, parts);
      break;

    case "JSXOpeningElement":
      parts.push(node.name);
      break;

    case "JSXFragment":
      gatherNodeParts(node.openingFragment, parts);
      break;

    case "JSXOpeningFragment":
      parts.push("Fragment");
      break;

    case "JSXNamespacedName":
      gatherNodeParts(node.namespace, parts);
      gatherNodeParts(node.name, parts);
      break;
  }
}

const collectorVisitor = {
  For(path) {
    for (const key of t.FOR_INIT_KEYS) {
      const declar = path.get(key);

      if (declar.isVar()) {
        const parentScope = path.scope.getFunctionParent() || path.scope.getProgramParent();
        parentScope.registerBinding("var", declar);
      }
    }
  },

  Declaration(path) {
    if (path.isBlockScoped()) return;
    if (path.isExportDeclaration()) return;
    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();
    parent.registerDeclaration(path);
  },

  ReferencedIdentifier(path, state) {
    state.references.push(path);
  },

  ForXStatement(path, state) {
    const left = path.get("left");

    if (left.isPattern() || left.isIdentifier()) {
      state.constantViolations.push(path);
    }
  },

  ExportDeclaration: {
    exit(path) {
      const {
        node,
        scope
      } = path;
      if (t.isExportAllDeclaration(node)) return;
      const declar = node.declaration;

      if (t.isClassDeclaration(declar) || t.isFunctionDeclaration(declar)) {
        const id = declar.id;
        if (!id) return;
        const binding = scope.getBinding(id.name);
        if (binding) binding.reference(path);
      } else if (t.isVariableDeclaration(declar)) {
        for (const decl of declar.declarations) {
          for (const name of Object.keys(t.getBindingIdentifiers(decl))) {
            const binding = scope.getBinding(name);
            if (binding) binding.reference(path);
          }
        }
      }
    }

  },

  LabeledStatement(path) {
    path.scope.getBlockParent().registerDeclaration(path);
  },

  AssignmentExpression(path, state) {
    state.assignments.push(path);
  },

  UpdateExpression(path, state) {
    state.constantViolations.push(path);
  },

  UnaryExpression(path, state) {
    if (path.node.operator === "delete") {
      state.constantViolations.push(path);
    }
  },

  BlockScoped(path) {
    let scope = path.scope;
    if (scope.path === path) scope = scope.parent;
    const parent = scope.getBlockParent();
    parent.registerDeclaration(path);

    if (path.isClassDeclaration() && path.node.id) {
      const id = path.node.id;
      const name = id.name;
      path.scope.bindings[name] = path.scope.parent.getBinding(name);
    }
  },

  CatchClause(path) {
    path.scope.registerBinding("let", path);
  },

  Function(path) {
    if (path.isFunctionExpression() && path.has("id") && !path.get("id").node[t.NOT_LOCAL_BINDING]) {
      path.scope.registerBinding("local", path.get("id"), path);
    }

    const params = path.get("params");

    for (const param of params) {
      path.scope.registerBinding("param", param);
    }
  },

  ClassExpression(path) {
    if (path.has("id") && !path.get("id").node[t.NOT_LOCAL_BINDING]) {
      path.scope.registerBinding("local", path);
    }
  }

};
let uid = 0;

class Scope {
  constructor(path) {
    this.uid = void 0;
    this.path = void 0;
    this.block = void 0;
    this.labels = void 0;
    this.inited = void 0;
    this.bindings = void 0;
    this.references = void 0;
    this.globals = void 0;
    this.uids = void 0;
    this.data = void 0;
    this.crawling = void 0;
    const {
      node
    } = path;

    const cached = _cache.scope.get(node);

    if ((cached == null ? void 0 : cached.path) === path) {
      return cached;
    }

    _cache.scope.set(node, this);

    this.uid = uid++;
    this.block = node;
    this.path = path;
    this.labels = new Map();
    this.inited = false;
  }

  get parent() {
    var _parent;

    let parent,
        path = this.path;

    do {
      const isKey = path.key === "key";
      path = path.parentPath;
      if (isKey && path.isMethod()) path = path.parentPath;
      if (path && path.isScope()) parent = path;
    } while (path && !parent);

    return (_parent = parent) == null ? void 0 : _parent.scope;
  }

  get parentBlock() {
    return this.path.parent;
  }

  get hub() {
    return this.path.hub;
  }

  traverse(node, opts, state) {
    (0, _index.default)(node, opts, this, state, this.path);
  }

  generateDeclaredUidIdentifier(name) {
    const id = this.generateUidIdentifier(name);
    this.push({
      id
    });
    return t.cloneNode(id);
  }

  generateUidIdentifier(name) {
    return t.identifier(this.generateUid(name));
  }

  generateUid(name = "temp") {
    name = t.toIdentifier(name).replace(/^_+/, "").replace(/[0-9]+$/g, "");
    let uid;
    let i = 1;

    do {
      uid = this._generateUid(name, i);
      i++;
    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));

    const program = this.getProgramParent();
    program.references[uid] = true;
    program.uids[uid] = true;
    return uid;
  }

  _generateUid(name, i) {
    let id = name;
    if (i > 1) id += i;
    return `_${id}`;
  }

  generateUidBasedOnNode(node, defaultName) {
    const parts = [];
    gatherNodeParts(node, parts);
    let id = parts.join("$");
    id = id.replace(/^_/, "") || defaultName || "ref";
    return this.generateUid(id.slice(0, 20));
  }

  generateUidIdentifierBasedOnNode(node, defaultName) {
    return t.identifier(this.generateUidBasedOnNode(node, defaultName));
  }

  isStatic(node) {
    if (t.isThisExpression(node) || t.isSuper(node)) {
      return true;
    }

    if (t.isIdentifier(node)) {
      const binding = this.getBinding(node.name);

      if (binding) {
        return binding.constant;
      } else {
        return this.hasBinding(node.name);
      }
    }

    return false;
  }

  maybeGenerateMemoised(node, dontPush) {
    if (this.isStatic(node)) {
      return null;
    } else {
      const id = this.generateUidIdentifierBasedOnNode(node);

      if (!dontPush) {
        this.push({
          id
        });
        return t.cloneNode(id);
      }

      return id;
    }
  }

  checkBlockScopedCollisions(local, kind, name, id) {
    if (kind === "param") return;
    if (local.kind === "local") return;
    const duplicate = kind === "let" || local.kind === "let" || local.kind === "const" || local.kind === "module" || local.kind === "param" && (kind === "let" || kind === "const");

    if (duplicate) {
      throw this.hub.buildError(id, `Duplicate declaration "${name}"`, TypeError);
    }
  }

  rename(oldName, newName, block) {
    const binding = this.getBinding(oldName);

    if (binding) {
      newName = newName || this.generateUidIdentifier(oldName).name;
      return new _renamer.default(binding, oldName, newName).rename(block);
    }
  }

  _renameFromMap(map, oldName, newName, value) {
    if (map[oldName]) {
      map[newName] = value;
      map[oldName] = null;
    }
  }

  dump() {
    const sep = "-".repeat(60);
    console.log(sep);
    let scope = this;

    do {
      console.log("#", scope.block.type);

      for (const name of Object.keys(scope.bindings)) {
        const binding = scope.bindings[name];
        console.log(" -", name, {
          constant: binding.constant,
          references: binding.references,
          violations: binding.constantViolations.length,
          kind: binding.kind
        });
      }
    } while (scope = scope.parent);

    console.log(sep);
  }

  toArray(node, i, arrayLikeIsIterable) {
    if (t.isIdentifier(node)) {
      const binding = this.getBinding(node.name);

      if (binding != null && binding.constant && binding.path.isGenericType("Array")) {
        return node;
      }
    }

    if (t.isArrayExpression(node)) {
      return node;
    }

    if (t.isIdentifier(node, {
      name: "arguments"
    })) {
      return t.callExpression(t.memberExpression(t.memberExpression(t.memberExpression(t.identifier("Array"), t.identifier("prototype")), t.identifier("slice")), t.identifier("call")), [node]);
    }

    let helperName;
    const args = [node];

    if (i === true) {
      helperName = "toConsumableArray";
    } else if (i) {
      args.push(t.numericLiteral(i));
      helperName = "slicedToArray";
    } else {
      helperName = "toArray";
    }

    if (arrayLikeIsIterable) {
      args.unshift(this.hub.addHelper(helperName));
      helperName = "maybeArrayLike";
    }

    return t.callExpression(this.hub.addHelper(helperName), args);
  }

  hasLabel(name) {
    return !!this.getLabel(name);
  }

  getLabel(name) {
    return this.labels.get(name);
  }

  registerLabel(path) {
    this.labels.set(path.node.label.name, path);
  }

  registerDeclaration(path) {
    if (path.isLabeledStatement()) {
      this.registerLabel(path);
    } else if (path.isFunctionDeclaration()) {
      this.registerBinding("hoisted", path.get("id"), path);
    } else if (path.isVariableDeclaration()) {
      const declarations = path.get("declarations");

      for (const declar of declarations) {
        this.registerBinding(path.node.kind, declar);
      }
    } else if (path.isClassDeclaration()) {
      this.registerBinding("let", path);
    } else if (path.isImportDeclaration()) {
      const specifiers = path.get("specifiers");

      for (const specifier of specifiers) {
        this.registerBinding("module", specifier);
      }
    } else if (path.isExportDeclaration()) {
      const declar = path.get("declaration");

      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {
        this.registerDeclaration(declar);
      }
    } else {
      this.registerBinding("unknown", path);
    }
  }

  buildUndefinedNode() {
    return t.unaryExpression("void", t.numericLiteral(0), true);
  }

  registerConstantViolation(path) {
    const ids = path.getBindingIdentifiers();

    for (const name of Object.keys(ids)) {
      const binding = this.getBinding(name);
      if (binding) binding.reassign(path);
    }
  }

  registerBinding(kind, path, bindingPath = path) {
    if (!kind) throw new ReferenceError("no `kind`");

    if (path.isVariableDeclaration()) {
      const declarators = path.get("declarations");

      for (const declar of declarators) {
        this.registerBinding(kind, declar);
      }

      return;
    }

    const parent = this.getProgramParent();
    const ids = path.getOuterBindingIdentifiers(true);

    for (const name of Object.keys(ids)) {
      parent.references[name] = true;

      for (const id of ids[name]) {
        const local = this.getOwnBinding(name);

        if (local) {
          if (local.identifier === id) continue;
          this.checkBlockScopedCollisions(local, kind, name, id);
        }

        if (local) {
          this.registerConstantViolation(bindingPath);
        } else {
          this.bindings[name] = new _binding.default({
            identifier: id,
            scope: this,
            path: bindingPath,
            kind: kind
          });
        }
      }
    }
  }

  addGlobal(node) {
    this.globals[node.name] = node;
  }

  hasUid(name) {
    let scope = this;

    do {
      if (scope.uids[name]) return true;
    } while (scope = scope.parent);

    return false;
  }

  hasGlobal(name) {
    let scope = this;

    do {
      if (scope.globals[name]) return true;
    } while (scope = scope.parent);

    return false;
  }

  hasReference(name) {
    return !!this.getProgramParent().references[name];
  }

  isPure(node, constantsOnly) {
    if (t.isIdentifier(node)) {
      const binding = this.getBinding(node.name);
      if (!binding) return false;
      if (constantsOnly) return binding.constant;
      return true;
    } else if (t.isClass(node)) {
      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {
        return false;
      }

      return this.isPure(node.body, constantsOnly);
    } else if (t.isClassBody(node)) {
      for (const method of node.body) {
        if (!this.isPure(method, constantsOnly)) return false;
      }

      return true;
    } else if (t.isBinary(node)) {
      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);
    } else if (t.isArrayExpression(node)) {
      for (const elem of node.elements) {
        if (!this.isPure(elem, constantsOnly)) return false;
      }

      return true;
    } else if (t.isObjectExpression(node)) {
      for (const prop of node.properties) {
        if (!this.isPure(prop, constantsOnly)) return false;
      }

      return true;
    } else if (t.isMethod(node)) {
      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;
      if (node.kind === "get" || node.kind === "set") return false;
      return true;
    } else if (t.isProperty(node)) {
      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;
      return this.isPure(node.value, constantsOnly);
    } else if (t.isUnaryExpression(node)) {
      return this.isPure(node.argument, constantsOnly);
    } else if (t.isTaggedTemplateExpression(node)) {
      return t.matchesPattern(node.tag, "String.raw") && !this.hasBinding("String", true) && this.isPure(node.quasi, constantsOnly);
    } else if (t.isTemplateLiteral(node)) {
      for (const expression of node.expressions) {
        if (!this.isPure(expression, constantsOnly)) return false;
      }

      return true;
    } else {
      return t.isPureish(node);
    }
  }

  setData(key, val) {
    return this.data[key] = val;
  }

  getData(key) {
    let scope = this;

    do {
      const data = scope.data[key];
      if (data != null) return data;
    } while (scope = scope.parent);
  }

  removeData(key) {
    let scope = this;

    do {
      const data = scope.data[key];
      if (data != null) scope.data[key] = null;
    } while (scope = scope.parent);
  }

  init() {
    if (!this.inited) {
      this.inited = true;
      this.crawl();
    }
  }

  crawl() {
    const path = this.path;
    this.references = Object.create(null);
    this.bindings = Object.create(null);
    this.globals = Object.create(null);
    this.uids = Object.create(null);
    this.data = Object.create(null);
    const programParent = this.getProgramParent();
    if (programParent.crawling) return;
    const state = {
      references: [],
      constantViolations: [],
      assignments: []
    };
    this.crawling = true;

    if (path.type !== "Program" && collectorVisitor._exploded) {
      for (const visit of collectorVisitor.enter) {
        visit(path, state);
      }

      const typeVisitors = collectorVisitor[path.type];

      if (typeVisitors) {
        for (const visit of typeVisitors.enter) {
          visit(path, state);
        }
      }
    }

    path.traverse(collectorVisitor, state);
    this.crawling = false;

    for (const path of state.assignments) {
      const ids = path.getBindingIdentifiers();

      for (const name of Object.keys(ids)) {
        if (path.scope.getBinding(name)) continue;
        programParent.addGlobal(ids[name]);
      }

      path.scope.registerConstantViolation(path);
    }

    for (const ref of state.references) {
      const binding = ref.scope.getBinding(ref.node.name);

      if (binding) {
        binding.reference(ref);
      } else {
        programParent.addGlobal(ref.node);
      }
    }

    for (const path of state.constantViolations) {
      path.scope.registerConstantViolation(path);
    }
  }

  push(opts) {
    let path = this.path;

    if (!path.isBlockStatement() && !path.isProgram()) {
      path = this.getBlockParent().path;
    }

    if (path.isSwitchStatement()) {
      path = (this.getFunctionParent() || this.getProgramParent()).path;
    }

    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {
      path.ensureBlock();
      path = path.get("body");
    }

    const unique = opts.unique;
    const kind = opts.kind || "var";
    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;
    const dataKey = `declaration:${kind}:${blockHoist}`;
    let declarPath = !unique && path.getData(dataKey);

    if (!declarPath) {
      const declar = t.variableDeclaration(kind, []);
      declar._blockHoist = blockHoist;
      [declarPath] = path.unshiftContainer("body", [declar]);
      if (!unique) path.setData(dataKey, declarPath);
    }

    const declarator = t.variableDeclarator(opts.id, opts.init);
    declarPath.node.declarations.push(declarator);
    this.registerBinding(kind, declarPath.get("declarations").pop());
  }

  getProgramParent() {
    let scope = this;

    do {
      if (scope.path.isProgram()) {
        return scope;
      }
    } while (scope = scope.parent);

    throw new Error("Couldn't find a Program");
  }

  getFunctionParent() {
    let scope = this;

    do {
      if (scope.path.isFunctionParent()) {
        return scope;
      }
    } while (scope = scope.parent);

    return null;
  }

  getBlockParent() {
    let scope = this;

    do {
      if (scope.path.isBlockParent()) {
        return scope;
      }
    } while (scope = scope.parent);

    throw new Error("We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...");
  }

  getAllBindings() {
    const ids = Object.create(null);
    let scope = this;

    do {
      for (const key of Object.keys(scope.bindings)) {
        if (key in ids === false) {
          ids[key] = scope.bindings[key];
        }
      }

      scope = scope.parent;
    } while (scope);

    return ids;
  }

  getAllBindingsOfKind(...kinds) {
    const ids = Object.create(null);

    for (const kind of kinds) {
      let scope = this;

      do {
        for (const name of Object.keys(scope.bindings)) {
          const binding = scope.bindings[name];
          if (binding.kind === kind) ids[name] = binding;
        }

        scope = scope.parent;
      } while (scope);
    }

    return ids;
  }

  bindingIdentifierEquals(name, node) {
    return this.getBindingIdentifier(name) === node;
  }

  getBinding(name) {
    let scope = this;
    let previousPath;

    do {
      const binding = scope.getOwnBinding(name);

      if (binding) {
        var _previousPath;

        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== "param") {} else {
          return binding;
        }
      }

      previousPath = scope.path;
    } while (scope = scope.parent);
  }

  getOwnBinding(name) {
    return this.bindings[name];
  }

  getBindingIdentifier(name) {
    var _this$getBinding;

    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;
  }

  getOwnBindingIdentifier(name) {
    const binding = this.bindings[name];
    return binding == null ? void 0 : binding.identifier;
  }

  hasOwnBinding(name) {
    return !!this.getOwnBinding(name);
  }

  hasBinding(name, noGlobals) {
    if (!name) return false;
    if (this.hasOwnBinding(name)) return true;
    if (this.parentHasBinding(name, noGlobals)) return true;
    if (this.hasUid(name)) return true;
    if (!noGlobals && Scope.globals.includes(name)) return true;
    if (!noGlobals && Scope.contextVariables.includes(name)) return true;
    return false;
  }

  parentHasBinding(name, noGlobals) {
    var _this$parent;

    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);
  }

  moveBindingTo(name, scope) {
    const info = this.getBinding(name);

    if (info) {
      info.scope.removeOwnBinding(name);
      info.scope = scope;
      scope.bindings[name] = info;
    }
  }

  removeOwnBinding(name) {
    delete this.bindings[name];
  }

  removeBinding(name) {
    var _this$getBinding2;

    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);
    let scope = this;

    do {
      if (scope.uids[name]) {
        scope.uids[name] = false;
      }
    } while (scope = scope.parent);
  }

}

exports.default = Scope;
Scope.globals = Object.keys(_globals.builtin);
Scope.contextVariables = ["arguments", "undefined", "Infinity", "NaN"];

/***/ }),
/* 106 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _binding = __webpack_require__(107);

var _helperSplitExportDeclaration = __webpack_require__(108);

var t = __webpack_require__(11);

const renameVisitor = {
  ReferencedIdentifier({
    node
  }, state) {
    if (node.name === state.oldName) {
      node.name = state.newName;
    }
  },

  Scope(path, state) {
    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {
      skipAllButComputedMethodKey(path);
    }
  },

  "AssignmentExpression|Declaration|VariableDeclarator"(path, state) {
    if (path.isVariableDeclaration()) return;
    const ids = path.getOuterBindingIdentifiers();

    for (const name in ids) {
      if (name === state.oldName) ids[name].name = state.newName;
    }
  }

};

class Renamer {
  constructor(binding, oldName, newName) {
    this.newName = newName;
    this.oldName = oldName;
    this.binding = binding;
  }

  maybeConvertFromExportDeclaration(parentDeclar) {
    const maybeExportDeclar = parentDeclar.parentPath;

    if (!maybeExportDeclar.isExportDeclaration()) {
      return;
    }

    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get("declaration").node.id) {
      return;
    }

    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);
  }

  maybeConvertFromClassFunctionDeclaration(path) {
    return;
    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;
    if (this.binding.kind !== "hoisted") return;
    path.node.id = t.identifier(this.oldName);
    path.node._blockHoist = 3;
    path.replaceWith(t.variableDeclaration("let", [t.variableDeclarator(t.identifier(this.newName), t.toExpression(path.node))]));
  }

  maybeConvertFromClassFunctionExpression(path) {
    return;
    if (!path.isFunctionExpression() && !path.isClassExpression()) return;
    if (this.binding.kind !== "local") return;
    path.node.id = t.identifier(this.oldName);
    this.binding.scope.parent.push({
      id: t.identifier(this.newName)
    });
    path.replaceWith(t.assignmentExpression("=", t.identifier(this.newName), path.node));
  }

  rename(block) {
    const {
      binding,
      oldName,
      newName
    } = this;
    const {
      scope,
      path
    } = binding;
    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());

    if (parentDeclar) {
      const bindingIds = parentDeclar.getOuterBindingIdentifiers();

      if (bindingIds[oldName] === binding.identifier) {
        this.maybeConvertFromExportDeclaration(parentDeclar);
      }
    }

    const blockToTraverse = block || scope.block;

    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === "SwitchStatement") {
      blockToTraverse.cases.forEach(c => {
        scope.traverse(c, renameVisitor, this);
      });
    } else {
      scope.traverse(blockToTraverse, renameVisitor, this);
    }

    if (!block) {
      scope.removeOwnBinding(oldName);
      scope.bindings[newName] = binding;
      this.binding.identifier.name = newName;
    }

    if (parentDeclar) {
      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);
      this.maybeConvertFromClassFunctionExpression(parentDeclar);
    }
  }

}

exports.default = Renamer;

function skipAllButComputedMethodKey(path) {
  if (!path.isMethod() || !path.node.computed) {
    path.skip();
    return;
  }

  const keys = t.VISITOR_KEYS[path.type];

  for (const key of keys) {
    if (key !== "key") path.skipKey(key);
  }
}

/***/ }),
/* 107 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

class Binding {
  constructor({
    identifier,
    scope,
    path,
    kind
  }) {
    this.identifier = void 0;
    this.scope = void 0;
    this.path = void 0;
    this.kind = void 0;
    this.constantViolations = [];
    this.constant = true;
    this.referencePaths = [];
    this.referenced = false;
    this.references = 0;
    this.identifier = identifier;
    this.scope = scope;
    this.path = path;
    this.kind = kind;
    this.clearValue();
  }

  deoptValue() {
    this.clearValue();
    this.hasDeoptedValue = true;
  }

  setValue(value) {
    if (this.hasDeoptedValue) return;
    this.hasValue = true;
    this.value = value;
  }

  clearValue() {
    this.hasDeoptedValue = false;
    this.hasValue = false;
    this.value = null;
  }

  reassign(path) {
    this.constant = false;

    if (this.constantViolations.indexOf(path) !== -1) {
      return;
    }

    this.constantViolations.push(path);
  }

  reference(path) {
    if (this.referencePaths.indexOf(path) !== -1) {
      return;
    }

    this.referenced = true;
    this.references++;
    this.referencePaths.push(path);
  }

  dereference() {
    this.references--;
    this.referenced = !!this.references;
  }

}

exports.default = Binding;

/***/ }),
/* 108 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = splitExportDeclaration;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function splitExportDeclaration(exportDeclaration) {
  if (!exportDeclaration.isExportDeclaration()) {
    throw new Error("Only export declarations can be split.");
  }

  const isDefault = exportDeclaration.isExportDefaultDeclaration();
  const declaration = exportDeclaration.get("declaration");
  const isClassDeclaration = declaration.isClassDeclaration();

  if (isDefault) {
    const standaloneDeclaration = declaration.isFunctionDeclaration() || isClassDeclaration;
    const scope = declaration.isScope() ? declaration.scope.parent : declaration.scope;
    let id = declaration.node.id;
    let needBindingRegistration = false;

    if (!id) {
      needBindingRegistration = true;
      id = scope.generateUidIdentifier("default");

      if (standaloneDeclaration || declaration.isFunctionExpression() || declaration.isClassExpression()) {
        declaration.node.id = t.cloneNode(id);
      }
    }

    const updatedDeclaration = standaloneDeclaration ? declaration : t.variableDeclaration("var", [t.variableDeclarator(t.cloneNode(id), declaration.node)]);
    const updatedExportDeclaration = t.exportNamedDeclaration(null, [t.exportSpecifier(t.cloneNode(id), t.identifier("default"))]);
    exportDeclaration.insertAfter(updatedExportDeclaration);
    exportDeclaration.replaceWith(updatedDeclaration);

    if (needBindingRegistration) {
      scope.registerDeclaration(exportDeclaration);
    }

    return exportDeclaration;
  }

  if (exportDeclaration.get("specifiers").length > 0) {
    throw new Error("It doesn't make sense to split exported specifiers.");
  }

  const bindingIdentifiers = declaration.getOuterBindingIdentifiers();
  const specifiers = Object.keys(bindingIdentifiers).map(name => {
    return t.exportSpecifier(t.identifier(name), t.identifier(name));
  });
  const aliasDeclar = t.exportNamedDeclaration(null, specifiers);
  exportDeclaration.insertAfter(aliasDeclar);
  exportDeclaration.replaceWith(declaration.node);
  return exportDeclaration;
}

/***/ }),
/* 109 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

module.exports = __webpack_require__(110);


/***/ }),
/* 110 */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"builtin":{"Array":false,"ArrayBuffer":false,"Atomics":false,"BigInt":false,"BigInt64Array":false,"BigUint64Array":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"globalThis":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"SharedArrayBuffer":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"es5":{"Array":false,"Boolean":false,"constructor":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"propertyIsEnumerable":false,"RangeError":false,"ReferenceError":false,"RegExp":false,"String":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false},"es2015":{"Array":false,"ArrayBuffer":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"es2017":{"Array":false,"ArrayBuffer":false,"Atomics":false,"Boolean":false,"constructor":false,"DataView":false,"Date":false,"decodeURI":false,"decodeURIComponent":false,"encodeURI":false,"encodeURIComponent":false,"Error":false,"escape":false,"eval":false,"EvalError":false,"Float32Array":false,"Float64Array":false,"Function":false,"hasOwnProperty":false,"Infinity":false,"Int16Array":false,"Int32Array":false,"Int8Array":false,"isFinite":false,"isNaN":false,"isPrototypeOf":false,"JSON":false,"Map":false,"Math":false,"NaN":false,"Number":false,"Object":false,"parseFloat":false,"parseInt":false,"Promise":false,"propertyIsEnumerable":false,"Proxy":false,"RangeError":false,"ReferenceError":false,"Reflect":false,"RegExp":false,"Set":false,"SharedArrayBuffer":false,"String":false,"Symbol":false,"SyntaxError":false,"toLocaleString":false,"toString":false,"TypeError":false,"Uint16Array":false,"Uint32Array":false,"Uint8Array":false,"Uint8ClampedArray":false,"undefined":false,"unescape":false,"URIError":false,"valueOf":false,"WeakMap":false,"WeakSet":false},"browser":{"AbortController":false,"AbortSignal":false,"addEventListener":false,"alert":false,"AnalyserNode":false,"Animation":false,"AnimationEffectReadOnly":false,"AnimationEffectTiming":false,"AnimationEffectTimingReadOnly":false,"AnimationEvent":false,"AnimationPlaybackEvent":false,"AnimationTimeline":false,"applicationCache":false,"ApplicationCache":false,"ApplicationCacheErrorEvent":false,"atob":false,"Attr":false,"Audio":false,"AudioBuffer":false,"AudioBufferSourceNode":false,"AudioContext":false,"AudioDestinationNode":false,"AudioListener":false,"AudioNode":false,"AudioParam":false,"AudioProcessingEvent":false,"AudioScheduledSourceNode":false,"AudioWorkletGlobalScope ":false,"AudioWorkletNode":false,"AudioWorkletProcessor":false,"BarProp":false,"BaseAudioContext":false,"BatteryManager":false,"BeforeUnloadEvent":false,"BiquadFilterNode":false,"Blob":false,"BlobEvent":false,"blur":false,"BroadcastChannel":false,"btoa":false,"BudgetService":false,"ByteLengthQueuingStrategy":false,"Cache":false,"caches":false,"CacheStorage":false,"cancelAnimationFrame":false,"cancelIdleCallback":false,"CanvasCaptureMediaStreamTrack":false,"CanvasGradient":false,"CanvasPattern":false,"CanvasRenderingContext2D":false,"ChannelMergerNode":false,"ChannelSplitterNode":false,"CharacterData":false,"clearInterval":false,"clearTimeout":false,"clientInformation":false,"ClipboardEvent":false,"close":false,"closed":false,"CloseEvent":false,"Comment":false,"CompositionEvent":false,"confirm":false,"console":false,"ConstantSourceNode":false,"ConvolverNode":false,"CountQueuingStrategy":false,"createImageBitmap":false,"Credential":false,"CredentialsContainer":false,"crypto":false,"Crypto":false,"CryptoKey":false,"CSS":false,"CSSConditionRule":false,"CSSFontFaceRule":false,"CSSGroupingRule":false,"CSSImportRule":false,"CSSKeyframeRule":false,"CSSKeyframesRule":false,"CSSMediaRule":false,"CSSNamespaceRule":false,"CSSPageRule":false,"CSSRule":false,"CSSRuleList":false,"CSSStyleDeclaration":false,"CSSStyleRule":false,"CSSStyleSheet":false,"CSSSupportsRule":false,"CustomElementRegistry":false,"customElements":false,"CustomEvent":false,"DataTransfer":false,"DataTransferItem":false,"DataTransferItemList":false,"defaultstatus":false,"defaultStatus":false,"DelayNode":false,"DeviceMotionEvent":false,"DeviceOrientationEvent":false,"devicePixelRatio":false,"dispatchEvent":false,"document":false,"Document":false,"DocumentFragment":false,"DocumentType":false,"DOMError":false,"DOMException":false,"DOMImplementation":false,"DOMMatrix":false,"DOMMatrixReadOnly":false,"DOMParser":false,"DOMPoint":false,"DOMPointReadOnly":false,"DOMQuad":false,"DOMRect":false,"DOMRectReadOnly":false,"DOMStringList":false,"DOMStringMap":false,"DOMTokenList":false,"DragEvent":false,"DynamicsCompressorNode":false,"Element":false,"ErrorEvent":false,"event":false,"Event":false,"EventSource":false,"EventTarget":false,"external":false,"fetch":false,"File":false,"FileList":false,"FileReader":false,"find":false,"focus":false,"FocusEvent":false,"FontFace":false,"FontFaceSetLoadEvent":false,"FormData":false,"frameElement":false,"frames":false,"GainNode":false,"Gamepad":false,"GamepadButton":false,"GamepadEvent":false,"getComputedStyle":false,"getSelection":false,"HashChangeEvent":false,"Headers":false,"history":false,"History":false,"HTMLAllCollection":false,"HTMLAnchorElement":false,"HTMLAreaElement":false,"HTMLAudioElement":false,"HTMLBaseElement":false,"HTMLBodyElement":false,"HTMLBRElement":false,"HTMLButtonElement":false,"HTMLCanvasElement":false,"HTMLCollection":false,"HTMLContentElement":false,"HTMLDataElement":false,"HTMLDataListElement":false,"HTMLDetailsElement":false,"HTMLDialogElement":false,"HTMLDirectoryElement":false,"HTMLDivElement":false,"HTMLDListElement":false,"HTMLDocument":false,"HTMLElement":false,"HTMLEmbedElement":false,"HTMLFieldSetElement":false,"HTMLFontElement":false,"HTMLFormControlsCollection":false,"HTMLFormElement":false,"HTMLFrameElement":false,"HTMLFrameSetElement":false,"HTMLHeadElement":false,"HTMLHeadingElement":false,"HTMLHRElement":false,"HTMLHtmlElement":false,"HTMLIFrameElement":false,"HTMLImageElement":false,"HTMLInputElement":false,"HTMLLabelElement":false,"HTMLLegendElement":false,"HTMLLIElement":false,"HTMLLinkElement":false,"HTMLMapElement":false,"HTMLMarqueeElement":false,"HTMLMediaElement":false,"HTMLMenuElement":false,"HTMLMetaElement":false,"HTMLMeterElement":false,"HTMLModElement":false,"HTMLObjectElement":false,"HTMLOListElement":false,"HTMLOptGroupElement":false,"HTMLOptionElement":false,"HTMLOptionsCollection":false,"HTMLOutputElement":false,"HTMLParagraphElement":false,"HTMLParamElement":false,"HTMLPictureElement":false,"HTMLPreElement":false,"HTMLProgressElement":false,"HTMLQuoteElement":false,"HTMLScriptElement":false,"HTMLSelectElement":false,"HTMLShadowElement":false,"HTMLSlotElement":false,"HTMLSourceElement":false,"HTMLSpanElement":false,"HTMLStyleElement":false,"HTMLTableCaptionElement":false,"HTMLTableCellElement":false,"HTMLTableColElement":false,"HTMLTableElement":false,"HTMLTableRowElement":false,"HTMLTableSectionElement":false,"HTMLTemplateElement":false,"HTMLTextAreaElement":false,"HTMLTimeElement":false,"HTMLTitleElement":false,"HTMLTrackElement":false,"HTMLUListElement":false,"HTMLUnknownElement":false,"HTMLVideoElement":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"IdleDeadline":false,"IIRFilterNode":false,"Image":false,"ImageBitmap":false,"ImageBitmapRenderingContext":false,"ImageCapture":false,"ImageData":false,"indexedDB":false,"innerHeight":false,"innerWidth":false,"InputEvent":false,"IntersectionObserver":false,"IntersectionObserverEntry":false,"Intl":false,"isSecureContext":false,"KeyboardEvent":false,"KeyframeEffect":false,"KeyframeEffectReadOnly":false,"length":false,"localStorage":false,"location":true,"Location":false,"locationbar":false,"matchMedia":false,"MediaDeviceInfo":false,"MediaDevices":false,"MediaElementAudioSourceNode":false,"MediaEncryptedEvent":false,"MediaError":false,"MediaKeyMessageEvent":false,"MediaKeySession":false,"MediaKeyStatusMap":false,"MediaKeySystemAccess":false,"MediaList":false,"MediaQueryList":false,"MediaQueryListEvent":false,"MediaRecorder":false,"MediaSettingsRange":false,"MediaSource":false,"MediaStream":false,"MediaStreamAudioDestinationNode":false,"MediaStreamAudioSourceNode":false,"MediaStreamEvent":false,"MediaStreamTrack":false,"MediaStreamTrackEvent":false,"menubar":false,"MessageChannel":false,"MessageEvent":false,"MessagePort":false,"MIDIAccess":false,"MIDIConnectionEvent":false,"MIDIInput":false,"MIDIInputMap":false,"MIDIMessageEvent":false,"MIDIOutput":false,"MIDIOutputMap":false,"MIDIPort":false,"MimeType":false,"MimeTypeArray":false,"MouseEvent":false,"moveBy":false,"moveTo":false,"MutationEvent":false,"MutationObserver":false,"MutationRecord":false,"name":false,"NamedNodeMap":false,"NavigationPreloadManager":false,"navigator":false,"Navigator":false,"NetworkInformation":false,"Node":false,"NodeFilter":false,"NodeIterator":false,"NodeList":false,"Notification":false,"OfflineAudioCompletionEvent":false,"OfflineAudioContext":false,"offscreenBuffering":false,"OffscreenCanvas":true,"onabort":true,"onafterprint":true,"onanimationend":true,"onanimationiteration":true,"onanimationstart":true,"onappinstalled":true,"onauxclick":true,"onbeforeinstallprompt":true,"onbeforeprint":true,"onbeforeunload":true,"onblur":true,"oncancel":true,"oncanplay":true,"oncanplaythrough":true,"onchange":true,"onclick":true,"onclose":true,"oncontextmenu":true,"oncuechange":true,"ondblclick":true,"ondevicemotion":true,"ondeviceorientation":true,"ondeviceorientationabsolute":true,"ondrag":true,"ondragend":true,"ondragenter":true,"ondragleave":true,"ondragover":true,"ondragstart":true,"ondrop":true,"ondurationchange":true,"onemptied":true,"onended":true,"onerror":true,"onfocus":true,"ongotpointercapture":true,"onhashchange":true,"oninput":true,"oninvalid":true,"onkeydown":true,"onkeypress":true,"onkeyup":true,"onlanguagechange":true,"onload":true,"onloadeddata":true,"onloadedmetadata":true,"onloadstart":true,"onlostpointercapture":true,"onmessage":true,"onmessageerror":true,"onmousedown":true,"onmouseenter":true,"onmouseleave":true,"onmousemove":true,"onmouseout":true,"onmouseover":true,"onmouseup":true,"onmousewheel":true,"onoffline":true,"ononline":true,"onpagehide":true,"onpageshow":true,"onpause":true,"onplay":true,"onplaying":true,"onpointercancel":true,"onpointerdown":true,"onpointerenter":true,"onpointerleave":true,"onpointermove":true,"onpointerout":true,"onpointerover":true,"onpointerup":true,"onpopstate":true,"onprogress":true,"onratechange":true,"onrejectionhandled":true,"onreset":true,"onresize":true,"onscroll":true,"onsearch":true,"onseeked":true,"onseeking":true,"onselect":true,"onstalled":true,"onstorage":true,"onsubmit":true,"onsuspend":true,"ontimeupdate":true,"ontoggle":true,"ontransitionend":true,"onunhandledrejection":true,"onunload":true,"onvolumechange":true,"onwaiting":true,"onwheel":true,"open":false,"openDatabase":false,"opener":false,"Option":false,"origin":false,"OscillatorNode":false,"outerHeight":false,"outerWidth":false,"PageTransitionEvent":false,"pageXOffset":false,"pageYOffset":false,"PannerNode":false,"parent":false,"Path2D":false,"PaymentAddress":false,"PaymentRequest":false,"PaymentRequestUpdateEvent":false,"PaymentResponse":false,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceLongTaskTiming":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceNavigationTiming":false,"PerformanceObserver":false,"PerformanceObserverEntryList":false,"PerformancePaintTiming":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"PeriodicWave":false,"Permissions":false,"PermissionStatus":false,"personalbar":false,"PhotoCapabilities":false,"Plugin":false,"PluginArray":false,"PointerEvent":false,"PopStateEvent":false,"postMessage":false,"Presentation":false,"PresentationAvailability":false,"PresentationConnection":false,"PresentationConnectionAvailableEvent":false,"PresentationConnectionCloseEvent":false,"PresentationConnectionList":false,"PresentationReceiver":false,"PresentationRequest":false,"print":false,"ProcessingInstruction":false,"ProgressEvent":false,"PromiseRejectionEvent":false,"prompt":false,"PushManager":false,"PushSubscription":false,"PushSubscriptionOptions":false,"queueMicrotask":false,"RadioNodeList":false,"Range":false,"ReadableStream":false,"registerProcessor":false,"RemotePlayback":false,"removeEventListener":false,"Request":false,"requestAnimationFrame":false,"requestIdleCallback":false,"resizeBy":false,"ResizeObserver":false,"ResizeObserverEntry":false,"resizeTo":false,"Response":false,"RTCCertificate":false,"RTCDataChannel":false,"RTCDataChannelEvent":false,"RTCDtlsTransport":false,"RTCIceCandidate":false,"RTCIceGatherer":false,"RTCIceTransport":false,"RTCPeerConnection":false,"RTCPeerConnectionIceEvent":false,"RTCRtpContributingSource":false,"RTCRtpReceiver":false,"RTCRtpSender":false,"RTCSctpTransport":false,"RTCSessionDescription":false,"RTCStatsReport":false,"RTCTrackEvent":false,"screen":false,"Screen":false,"screenLeft":false,"ScreenOrientation":false,"screenTop":false,"screenX":false,"screenY":false,"ScriptProcessorNode":false,"scroll":false,"scrollbars":false,"scrollBy":false,"scrollTo":false,"scrollX":false,"scrollY":false,"SecurityPolicyViolationEvent":false,"Selection":false,"self":false,"ServiceWorker":false,"ServiceWorkerContainer":false,"ServiceWorkerRegistration":false,"sessionStorage":false,"setInterval":false,"setTimeout":false,"ShadowRoot":false,"SharedWorker":false,"SourceBuffer":false,"SourceBufferList":false,"speechSynthesis":false,"SpeechSynthesisEvent":false,"SpeechSynthesisUtterance":false,"StaticRange":false,"status":false,"statusbar":false,"StereoPannerNode":false,"stop":false,"Storage":false,"StorageEvent":false,"StorageManager":false,"styleMedia":false,"StyleSheet":false,"StyleSheetList":false,"SubtleCrypto":false,"SVGAElement":false,"SVGAngle":false,"SVGAnimatedAngle":false,"SVGAnimatedBoolean":false,"SVGAnimatedEnumeration":false,"SVGAnimatedInteger":false,"SVGAnimatedLength":false,"SVGAnimatedLengthList":false,"SVGAnimatedNumber":false,"SVGAnimatedNumberList":false,"SVGAnimatedPreserveAspectRatio":false,"SVGAnimatedRect":false,"SVGAnimatedString":false,"SVGAnimatedTransformList":false,"SVGAnimateElement":false,"SVGAnimateMotionElement":false,"SVGAnimateTransformElement":false,"SVGAnimationElement":false,"SVGCircleElement":false,"SVGClipPathElement":false,"SVGComponentTransferFunctionElement":false,"SVGDefsElement":false,"SVGDescElement":false,"SVGDiscardElement":false,"SVGElement":false,"SVGEllipseElement":false,"SVGFEBlendElement":false,"SVGFEColorMatrixElement":false,"SVGFEComponentTransferElement":false,"SVGFECompositeElement":false,"SVGFEConvolveMatrixElement":false,"SVGFEDiffuseLightingElement":false,"SVGFEDisplacementMapElement":false,"SVGFEDistantLightElement":false,"SVGFEDropShadowElement":false,"SVGFEFloodElement":false,"SVGFEFuncAElement":false,"SVGFEFuncBElement":false,"SVGFEFuncGElement":false,"SVGFEFuncRElement":false,"SVGFEGaussianBlurElement":false,"SVGFEImageElement":false,"SVGFEMergeElement":false,"SVGFEMergeNodeElement":false,"SVGFEMorphologyElement":false,"SVGFEOffsetElement":false,"SVGFEPointLightElement":false,"SVGFESpecularLightingElement":false,"SVGFESpotLightElement":false,"SVGFETileElement":false,"SVGFETurbulenceElement":false,"SVGFilterElement":false,"SVGForeignObjectElement":false,"SVGGElement":false,"SVGGeometryElement":false,"SVGGradientElement":false,"SVGGraphicsElement":false,"SVGImageElement":false,"SVGLength":false,"SVGLengthList":false,"SVGLinearGradientElement":false,"SVGLineElement":false,"SVGMarkerElement":false,"SVGMaskElement":false,"SVGMatrix":false,"SVGMetadataElement":false,"SVGMPathElement":false,"SVGNumber":false,"SVGNumberList":false,"SVGPathElement":false,"SVGPatternElement":false,"SVGPoint":false,"SVGPointList":false,"SVGPolygonElement":false,"SVGPolylineElement":false,"SVGPreserveAspectRatio":false,"SVGRadialGradientElement":false,"SVGRect":false,"SVGRectElement":false,"SVGScriptElement":false,"SVGSetElement":false,"SVGStopElement":false,"SVGStringList":false,"SVGStyleElement":false,"SVGSVGElement":false,"SVGSwitchElement":false,"SVGSymbolElement":false,"SVGTextContentElement":false,"SVGTextElement":false,"SVGTextPathElement":false,"SVGTextPositioningElement":false,"SVGTitleElement":false,"SVGTransform":false,"SVGTransformList":false,"SVGTSpanElement":false,"SVGUnitTypes":false,"SVGUseElement":false,"SVGViewElement":false,"TaskAttributionTiming":false,"Text":false,"TextDecoder":false,"TextEncoder":false,"TextEvent":false,"TextMetrics":false,"TextTrack":false,"TextTrackCue":false,"TextTrackCueList":false,"TextTrackList":false,"TimeRanges":false,"toolbar":false,"top":false,"Touch":false,"TouchEvent":false,"TouchList":false,"TrackEvent":false,"TransitionEvent":false,"TreeWalker":false,"UIEvent":false,"URL":false,"URLSearchParams":false,"ValidityState":false,"visualViewport":false,"VisualViewport":false,"VTTCue":false,"WaveShaperNode":false,"WebAssembly":false,"WebGL2RenderingContext":false,"WebGLActiveInfo":false,"WebGLBuffer":false,"WebGLContextEvent":false,"WebGLFramebuffer":false,"WebGLProgram":false,"WebGLQuery":false,"WebGLRenderbuffer":false,"WebGLRenderingContext":false,"WebGLSampler":false,"WebGLShader":false,"WebGLShaderPrecisionFormat":false,"WebGLSync":false,"WebGLTexture":false,"WebGLTransformFeedback":false,"WebGLUniformLocation":false,"WebGLVertexArrayObject":false,"WebSocket":false,"WheelEvent":false,"window":false,"Window":false,"Worker":false,"WritableStream":false,"XMLDocument":false,"XMLHttpRequest":false,"XMLHttpRequestEventTarget":false,"XMLHttpRequestUpload":false,"XMLSerializer":false,"XPathEvaluator":false,"XPathExpression":false,"XPathResult":false,"XSLTProcessor":false},"worker":{"addEventListener":false,"applicationCache":false,"atob":false,"Blob":false,"BroadcastChannel":false,"btoa":false,"Cache":false,"caches":false,"clearInterval":false,"clearTimeout":false,"close":true,"console":false,"fetch":false,"FileReaderSync":false,"FormData":false,"Headers":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"ImageData":false,"importScripts":true,"indexedDB":false,"location":false,"MessageChannel":false,"MessagePort":false,"name":false,"navigator":false,"Notification":false,"onclose":true,"onconnect":true,"onerror":true,"onlanguagechange":true,"onmessage":true,"onoffline":true,"ononline":true,"onrejectionhandled":true,"onunhandledrejection":true,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"postMessage":true,"Promise":false,"queueMicrotask":false,"removeEventListener":false,"Request":false,"Response":false,"self":true,"ServiceWorkerRegistration":false,"setInterval":false,"setTimeout":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false,"WebSocket":false,"Worker":false,"WorkerGlobalScope":false,"XMLHttpRequest":false},"node":{"__dirname":false,"__filename":false,"Buffer":false,"clearImmediate":false,"clearInterval":false,"clearTimeout":false,"console":false,"exports":true,"global":false,"Intl":false,"module":false,"process":false,"queueMicrotask":false,"require":false,"setImmediate":false,"setInterval":false,"setTimeout":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false},"commonjs":{"exports":true,"global":false,"module":false,"require":false},"amd":{"define":false,"require":false},"mocha":{"after":false,"afterEach":false,"before":false,"beforeEach":false,"context":false,"describe":false,"it":false,"mocha":false,"run":false,"setup":false,"specify":false,"suite":false,"suiteSetup":false,"suiteTeardown":false,"teardown":false,"test":false,"xcontext":false,"xdescribe":false,"xit":false,"xspecify":false},"jasmine":{"afterAll":false,"afterEach":false,"beforeAll":false,"beforeEach":false,"describe":false,"expect":false,"fail":false,"fdescribe":false,"fit":false,"it":false,"jasmine":false,"pending":false,"runs":false,"spyOn":false,"spyOnProperty":false,"waits":false,"waitsFor":false,"xdescribe":false,"xit":false},"jest":{"afterAll":false,"afterEach":false,"beforeAll":false,"beforeEach":false,"describe":false,"expect":false,"fdescribe":false,"fit":false,"it":false,"jest":false,"pit":false,"require":false,"test":false,"xdescribe":false,"xit":false,"xtest":false},"qunit":{"asyncTest":false,"deepEqual":false,"equal":false,"expect":false,"module":false,"notDeepEqual":false,"notEqual":false,"notOk":false,"notPropEqual":false,"notStrictEqual":false,"ok":false,"propEqual":false,"QUnit":false,"raises":false,"start":false,"stop":false,"strictEqual":false,"test":false,"throws":false},"phantomjs":{"console":true,"exports":true,"phantom":true,"require":true,"WebPage":true},"couch":{"emit":false,"exports":false,"getRow":false,"log":false,"module":false,"provides":false,"require":false,"respond":false,"send":false,"start":false,"sum":false},"rhino":{"defineClass":false,"deserialize":false,"gc":false,"help":false,"importClass":false,"importPackage":false,"java":false,"load":false,"loadClass":false,"Packages":false,"print":false,"quit":false,"readFile":false,"readUrl":false,"runCommand":false,"seal":false,"serialize":false,"spawn":false,"sync":false,"toint32":false,"version":false},"nashorn":{"__DIR__":false,"__FILE__":false,"__LINE__":false,"com":false,"edu":false,"exit":false,"java":false,"Java":false,"javafx":false,"JavaImporter":false,"javax":false,"JSAdapter":false,"load":false,"loadWithNewGlobal":false,"org":false,"Packages":false,"print":false,"quit":false},"wsh":{"ActiveXObject":true,"Enumerator":true,"GetObject":true,"ScriptEngine":true,"ScriptEngineBuildVersion":true,"ScriptEngineMajorVersion":true,"ScriptEngineMinorVersion":true,"VBArray":true,"WScript":true,"WSH":true,"XDomainRequest":true},"jquery":{"$":false,"jQuery":false},"yui":{"YAHOO":false,"YAHOO_config":false,"YUI":false,"YUI_config":false},"shelljs":{"cat":false,"cd":false,"chmod":false,"config":false,"cp":false,"dirs":false,"echo":false,"env":false,"error":false,"exec":false,"exit":false,"find":false,"grep":false,"ln":false,"ls":false,"mkdir":false,"mv":false,"popd":false,"pushd":false,"pwd":false,"rm":false,"sed":false,"set":false,"target":false,"tempdir":false,"test":false,"touch":false,"which":false},"prototypejs":{"$":false,"$$":false,"$A":false,"$break":false,"$continue":false,"$F":false,"$H":false,"$R":false,"$w":false,"Abstract":false,"Ajax":false,"Autocompleter":false,"Builder":false,"Class":false,"Control":false,"Draggable":false,"Draggables":false,"Droppables":false,"Effect":false,"Element":false,"Enumerable":false,"Event":false,"Field":false,"Form":false,"Hash":false,"Insertion":false,"ObjectRange":false,"PeriodicalExecuter":false,"Position":false,"Prototype":false,"Scriptaculous":false,"Selector":false,"Sortable":false,"SortableObserver":false,"Sound":false,"Template":false,"Toggle":false,"Try":false},"meteor":{"_":false,"$":false,"Accounts":false,"AccountsClient":false,"AccountsCommon":false,"AccountsServer":false,"App":false,"Assets":false,"Blaze":false,"check":false,"Cordova":false,"DDP":false,"DDPRateLimiter":false,"DDPServer":false,"Deps":false,"EJSON":false,"Email":false,"HTTP":false,"Log":false,"Match":false,"Meteor":false,"Mongo":false,"MongoInternals":false,"Npm":false,"Package":false,"Plugin":false,"process":false,"Random":false,"ReactiveDict":false,"ReactiveVar":false,"Router":false,"ServiceConfiguration":false,"Session":false,"share":false,"Spacebars":false,"Template":false,"Tinytest":false,"Tracker":false,"UI":false,"Utils":false,"WebApp":false,"WebAppInternals":false},"mongo":{"_isWindows":false,"_rand":false,"BulkWriteResult":false,"cat":false,"cd":false,"connect":false,"db":false,"getHostName":false,"getMemInfo":false,"hostname":false,"ISODate":false,"listFiles":false,"load":false,"ls":false,"md5sumFile":false,"mkdir":false,"Mongo":false,"NumberInt":false,"NumberLong":false,"ObjectId":false,"PlanCache":false,"print":false,"printjson":false,"pwd":false,"quit":false,"removeFile":false,"rs":false,"sh":false,"UUID":false,"version":false,"WriteResult":false},"applescript":{"$":false,"Application":false,"Automation":false,"console":false,"delay":false,"Library":false,"ObjC":false,"ObjectSpecifier":false,"Path":false,"Progress":false,"Ref":false},"serviceworker":{"addEventListener":false,"applicationCache":false,"atob":false,"Blob":false,"BroadcastChannel":false,"btoa":false,"Cache":false,"caches":false,"CacheStorage":false,"clearInterval":false,"clearTimeout":false,"Client":false,"clients":false,"Clients":false,"close":true,"console":false,"ExtendableEvent":false,"ExtendableMessageEvent":false,"fetch":false,"FetchEvent":false,"FileReaderSync":false,"FormData":false,"Headers":false,"IDBCursor":false,"IDBCursorWithValue":false,"IDBDatabase":false,"IDBFactory":false,"IDBIndex":false,"IDBKeyRange":false,"IDBObjectStore":false,"IDBOpenDBRequest":false,"IDBRequest":false,"IDBTransaction":false,"IDBVersionChangeEvent":false,"ImageData":false,"importScripts":false,"indexedDB":false,"location":false,"MessageChannel":false,"MessagePort":false,"name":false,"navigator":false,"Notification":false,"onclose":true,"onconnect":true,"onerror":true,"onfetch":true,"oninstall":true,"onlanguagechange":true,"onmessage":true,"onmessageerror":true,"onnotificationclick":true,"onnotificationclose":true,"onoffline":true,"ononline":true,"onpush":true,"onpushsubscriptionchange":true,"onrejectionhandled":true,"onsync":true,"onunhandledrejection":true,"performance":false,"Performance":false,"PerformanceEntry":false,"PerformanceMark":false,"PerformanceMeasure":false,"PerformanceNavigation":false,"PerformanceResourceTiming":false,"PerformanceTiming":false,"postMessage":true,"Promise":false,"queueMicrotask":false,"registration":false,"removeEventListener":false,"Request":false,"Response":false,"self":false,"ServiceWorker":false,"ServiceWorkerContainer":false,"ServiceWorkerGlobalScope":false,"ServiceWorkerMessageEvent":false,"ServiceWorkerRegistration":false,"setInterval":false,"setTimeout":false,"skipWaiting":false,"TextDecoder":false,"TextEncoder":false,"URL":false,"URLSearchParams":false,"WebSocket":false,"WindowClient":false,"Worker":false,"WorkerGlobalScope":false,"XMLHttpRequest":false},"atomtest":{"advanceClock":false,"fakeClearInterval":false,"fakeClearTimeout":false,"fakeSetInterval":false,"fakeSetTimeout":false,"resetTimeouts":false,"waitsForPromise":false},"embertest":{"andThen":false,"click":false,"currentPath":false,"currentRouteName":false,"currentURL":false,"fillIn":false,"find":false,"findAll":false,"findWithAssert":false,"keyEvent":false,"pauseTest":false,"resumeTest":false,"triggerEvent":false,"visit":false,"wait":false},"protractor":{"$":false,"$$":false,"browser":false,"by":false,"By":false,"DartObject":false,"element":false,"protractor":false},"shared-node-browser":{"clearInterval":false,"clearTimeout":false,"console":false,"setInterval":false,"setTimeout":false,"URL":false,"URLSearchParams":false},"webextensions":{"browser":false,"chrome":false,"opr":false},"greasemonkey":{"cloneInto":false,"createObjectIn":false,"exportFunction":false,"GM":false,"GM_addStyle":false,"GM_deleteValue":false,"GM_getResourceText":false,"GM_getResourceURL":false,"GM_getValue":false,"GM_info":false,"GM_listValues":false,"GM_log":false,"GM_openInTab":false,"GM_registerMenuCommand":false,"GM_setClipboard":false,"GM_setValue":false,"GM_xmlhttpRequest":false,"unsafeWindow":false},"devtools":{"$":false,"$_":false,"$$":false,"$0":false,"$1":false,"$2":false,"$3":false,"$4":false,"$x":false,"chrome":false,"clear":false,"copy":false,"debug":false,"dir":false,"dirxml":false,"getEventListeners":false,"inspect":false,"keys":false,"monitor":false,"monitorEvents":false,"profile":false,"profileEnd":false,"queryObjects":false,"table":false,"undebug":false,"unmonitor":false,"unmonitorEvents":false,"values":false}}');

/***/ }),
/* 111 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.clear = clear;
exports.clearPath = clearPath;
exports.clearScope = clearScope;
exports.scope = exports.path = void 0;
let path = new WeakMap();
exports.path = path;
let scope = new WeakMap();
exports.scope = scope;

function clear() {
  clearPath();
  clearScope();
}

function clearPath() {
  exports.path = path = new WeakMap();
}

function clearScope() {
  exports.scope = scope = new WeakMap();
}

/***/ }),
/* 112 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = generate;
exports.CodeGenerator = void 0;

var _sourceMap = __webpack_require__(113);

var _printer = __webpack_require__(125);

class Generator extends _printer.default {
  constructor(ast, opts = {}, code) {
    const format = normalizeOptions(code, opts);
    const map = opts.sourceMaps ? new _sourceMap.default(opts, code) : null;
    super(format, map);
    this.ast = void 0;
    this.ast = ast;
  }

  generate() {
    return super.generate(this.ast);
  }

}

function normalizeOptions(code, opts) {
  const format = {
    auxiliaryCommentBefore: opts.auxiliaryCommentBefore,
    auxiliaryCommentAfter: opts.auxiliaryCommentAfter,
    shouldPrintComment: opts.shouldPrintComment,
    retainLines: opts.retainLines,
    retainFunctionParens: opts.retainFunctionParens,
    comments: opts.comments == null || opts.comments,
    compact: opts.compact,
    minified: opts.minified,
    concise: opts.concise,
    indent: {
      adjustMultilineComment: true,
      style: "  ",
      base: 0
    },
    decoratorsBeforeExport: !!opts.decoratorsBeforeExport,
    jsescOption: Object.assign({
      quotes: "double",
      wrap: true,
      minimal: false
    }, opts.jsescOption),
    recordAndTupleSyntaxType: opts.recordAndTupleSyntaxType
  };
  {
    format.jsonCompatibleStrings = opts.jsonCompatibleStrings;
  }

  if (format.minified) {
    format.compact = true;

    format.shouldPrintComment = format.shouldPrintComment || (() => format.comments);
  } else {
    format.shouldPrintComment = format.shouldPrintComment || (value => format.comments || value.indexOf("@license") >= 0 || value.indexOf("@preserve") >= 0);
  }

  if (format.compact === "auto") {
    format.compact = code.length > 500000;

    if (format.compact) {
      console.error("[BABEL] Note: The code generator has deoptimised the styling of " + `${opts.filename} as it exceeds the max of ${"500KB"}.`);
    }
  }

  if (format.compact) {
    format.indent.adjustMultilineComment = false;
  }

  return format;
}

class CodeGenerator {
  constructor(ast, opts, code) {
    this._generator = void 0;
    this._generator = new Generator(ast, opts, code);
  }

  generate() {
    return this._generator.generate();
  }

}

exports.CodeGenerator = CodeGenerator;

function generate(ast, opts, code) {
  const gen = new Generator(ast, opts, code);
  return gen.generate();
}

/***/ }),
/* 113 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _sourceMap = __webpack_require__(114);

class SourceMap {
  constructor(opts, code) {
    this._cachedMap = void 0;
    this._code = void 0;
    this._opts = void 0;
    this._rawMappings = void 0;
    this._lastGenLine = void 0;
    this._lastSourceLine = void 0;
    this._lastSourceColumn = void 0;
    this._cachedMap = null;
    this._code = code;
    this._opts = opts;
    this._rawMappings = [];
  }

  get() {
    if (!this._cachedMap) {
      const map = this._cachedMap = new _sourceMap.SourceMapGenerator({
        sourceRoot: this._opts.sourceRoot
      });
      const code = this._code;

      if (typeof code === "string") {
        map.setSourceContent(this._opts.sourceFileName.replace(/\\/g, "/"), code);
      } else if (typeof code === "object") {
        Object.keys(code).forEach(sourceFileName => {
          map.setSourceContent(sourceFileName.replace(/\\/g, "/"), code[sourceFileName]);
        });
      }

      this._rawMappings.forEach(mapping => map.addMapping(mapping), map);
    }

    return this._cachedMap.toJSON();
  }

  getRawMappings() {
    return this._rawMappings.slice();
  }

  mark(generatedLine, generatedColumn, line, column, identifierName, filename, force) {
    if (this._lastGenLine !== generatedLine && line === null) return;

    if (!force && this._lastGenLine === generatedLine && this._lastSourceLine === line && this._lastSourceColumn === column) {
      return;
    }

    this._cachedMap = null;
    this._lastGenLine = generatedLine;
    this._lastSourceLine = line;
    this._lastSourceColumn = column;

    this._rawMappings.push({
      name: identifierName || undefined,
      generated: {
        line: generatedLine,
        column: generatedColumn
      },
      source: line == null ? undefined : (filename || this._opts.sourceFileName).replace(/\\/g, "/"),
      original: line == null ? undefined : {
        line: line,
        column: column
      }
    });
  }

}

exports.default = SourceMap;

/***/ }),
/* 114 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = __webpack_require__(115).SourceMapGenerator;
exports.SourceMapConsumer = __webpack_require__(121).SourceMapConsumer;
exports.SourceNode = __webpack_require__(124).SourceNode;


/***/ }),
/* 115 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = __webpack_require__(116);
var util = __webpack_require__(118);
var ArraySet = __webpack_require__(119).ArraySet;
var MappingList = __webpack_require__(120).MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;


/***/ }),
/* 116 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = __webpack_require__(117);

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};


/***/ }),
/* 117 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};


/***/ }),
/* 118 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;


/***/ }),
/* 119 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(118);
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;


/***/ }),
/* 120 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(118);

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;


/***/ }),
/* 121 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(118);
var binarySearch = __webpack_require__(122);
var ArraySet = __webpack_require__(119).ArraySet;
var base64VLQ = __webpack_require__(116);
var quickSort = __webpack_require__(123).quickSort;

function SourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap)
    : new BasicSourceMapConsumer(sourceMap);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      if (source != null && sourceRoot != null) {
        source = util.join(sourceRoot, source);
      }
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: Optional. the column number in the original source.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    if (this.sourceRoot != null) {
      needle.source = util.relative(this.sourceRoot, needle.source);
    }
    if (!this._sources.has(needle.source)) {
      return [];
    }
    needle.source = this._sources.indexOf(needle.source);

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The only parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._sources.toArray().map(function (s) {
      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;
    }, this);
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          if (this.sourceRoot != null) {
            source = util.join(this.sourceRoot, source);
          }
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    if (this.sourceRoot != null) {
      aSource = util.relative(this.sourceRoot, aSource);
    }

    if (this._sources.has(aSource)) {
      return this.sourcesContent[this._sources.indexOf(aSource)];
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + aSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + aSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    if (this.sourceRoot != null) {
      source = util.relative(this.sourceRoot, source);
    }
    if (!this._sources.has(source)) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }
    source = this._sources.indexOf(source);

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The only parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'))
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        if (section.consumer.sourceRoot !== null) {
          source = util.join(section.consumer.sourceRoot, source);
        }
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = section.consumer._names.at(mapping.name);
        this._names.add(name);
        name = this._names.indexOf(name);

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ }),
/* 122 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};


/***/ }),
/* 123 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};


/***/ }),
/* 124 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = __webpack_require__(115).SourceMapGenerator;
var util = __webpack_require__(118);

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex];
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex];
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;


/***/ }),
/* 125 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _buffer = __webpack_require__(126);

var n = __webpack_require__(127);

var t = __webpack_require__(11);

var generatorFunctions = __webpack_require__(130);

const SCIENTIFIC_NOTATION = /e/i;
const ZERO_DECIMAL_INTEGER = /\.0+$/;
const NON_DECIMAL_LITERAL = /^0[box]/;
const PURE_ANNOTATION_RE = /^\s*[@#]__PURE__\s*$/;

class Printer {
  constructor(format, map) {
    this.inForStatementInitCounter = 0;
    this._printStack = [];
    this._indent = 0;
    this._insideAux = false;
    this._parenPushNewlineState = null;
    this._noLineTerminator = false;
    this._printAuxAfterOnNextUserNode = false;
    this._printedComments = new WeakSet();
    this._endsWithInteger = false;
    this._endsWithWord = false;
    this.format = format;
    this._buf = new _buffer.default(map);
  }

  generate(ast) {
    this.print(ast);

    this._maybeAddAuxComment();

    return this._buf.get();
  }

  indent() {
    if (this.format.compact || this.format.concise) return;
    this._indent++;
  }

  dedent() {
    if (this.format.compact || this.format.concise) return;
    this._indent--;
  }

  semicolon(force = false) {
    this._maybeAddAuxComment();

    this._append(";", !force);
  }

  rightBrace() {
    if (this.format.minified) {
      this._buf.removeLastSemicolon();
    }

    this.token("}");
  }

  space(force = false) {
    if (this.format.compact) return;

    if (this._buf.hasContent() && !this.endsWith(" ") && !this.endsWith("\n") || force) {
      this._space();
    }
  }

  word(str) {
    if (this._endsWithWord || this.endsWith("/") && str.indexOf("/") === 0) {
      this._space();
    }

    this._maybeAddAuxComment();

    this._append(str);

    this._endsWithWord = true;
  }

  number(str) {
    this.word(str);
    this._endsWithInteger = Number.isInteger(+str) && !NON_DECIMAL_LITERAL.test(str) && !SCIENTIFIC_NOTATION.test(str) && !ZERO_DECIMAL_INTEGER.test(str) && str[str.length - 1] !== ".";
  }

  token(str) {
    if (str === "--" && this.endsWith("!") || str[0] === "+" && this.endsWith("+") || str[0] === "-" && this.endsWith("-") || str[0] === "." && this._endsWithInteger) {
      this._space();
    }

    this._maybeAddAuxComment();

    this._append(str);
  }

  newline(i) {
    if (this.format.retainLines || this.format.compact) return;

    if (this.format.concise) {
      this.space();
      return;
    }

    if (this.endsWith("\n\n")) return;
    if (typeof i !== "number") i = 1;
    i = Math.min(2, i);
    if (this.endsWith("{\n") || this.endsWith(":\n")) i--;
    if (i <= 0) return;

    for (let j = 0; j < i; j++) {
      this._newline();
    }
  }

  endsWith(str) {
    return this._buf.endsWith(str);
  }

  removeTrailingNewline() {
    this._buf.removeTrailingNewline();
  }

  exactSource(loc, cb) {
    this._catchUp("start", loc);

    this._buf.exactSource(loc, cb);
  }

  source(prop, loc) {
    this._catchUp(prop, loc);

    this._buf.source(prop, loc);
  }

  withSource(prop, loc, cb) {
    this._catchUp(prop, loc);

    this._buf.withSource(prop, loc, cb);
  }

  _space() {
    this._append(" ", true);
  }

  _newline() {
    this._append("\n", true);
  }

  _append(str, queue = false) {
    this._maybeAddParen(str);

    this._maybeIndent(str);

    if (queue) this._buf.queue(str);else this._buf.append(str);
    this._endsWithWord = false;
    this._endsWithInteger = false;
  }

  _maybeIndent(str) {
    if (this._indent && this.endsWith("\n") && str[0] !== "\n") {
      this._buf.queue(this._getIndent());
    }
  }

  _maybeAddParen(str) {
    const parenPushNewlineState = this._parenPushNewlineState;
    if (!parenPushNewlineState) return;
    let i;

    for (i = 0; i < str.length && str[i] === " "; i++) continue;

    if (i === str.length) {
      return;
    }

    const cha = str[i];

    if (cha !== "\n") {
      if (cha !== "/" || i + 1 === str.length) {
        this._parenPushNewlineState = null;
        return;
      }

      const chaPost = str[i + 1];

      if (chaPost === "*") {
        if (PURE_ANNOTATION_RE.test(str.slice(i + 2, str.length - 2))) {
          return;
        }
      } else if (chaPost !== "/") {
        this._parenPushNewlineState = null;
        return;
      }
    }

    this.token("(");
    this.indent();
    parenPushNewlineState.printed = true;
  }

  _catchUp(prop, loc) {
    if (!this.format.retainLines) return;
    const pos = loc ? loc[prop] : null;

    if ((pos == null ? void 0 : pos.line) != null) {
      const count = pos.line - this._buf.getCurrentLine();

      for (let i = 0; i < count; i++) {
        this._newline();
      }
    }
  }

  _getIndent() {
    return this.format.indent.style.repeat(this._indent);
  }

  startTerminatorless(isLabel = false) {
    if (isLabel) {
      this._noLineTerminator = true;
      return null;
    } else {
      return this._parenPushNewlineState = {
        printed: false
      };
    }
  }

  endTerminatorless(state) {
    this._noLineTerminator = false;

    if (state != null && state.printed) {
      this.dedent();
      this.newline();
      this.token(")");
    }
  }

  print(node, parent) {
    if (!node) return;
    const oldConcise = this.format.concise;

    if (node._compact) {
      this.format.concise = true;
    }

    const printMethod = this[node.type];

    if (!printMethod) {
      throw new ReferenceError(`unknown node of type ${JSON.stringify(node.type)} with constructor ${JSON.stringify(node == null ? void 0 : node.constructor.name)}`);
    }

    this._printStack.push(node);

    const oldInAux = this._insideAux;
    this._insideAux = !node.loc;

    this._maybeAddAuxComment(this._insideAux && !oldInAux);

    let needsParens = n.needsParens(node, parent, this._printStack);

    if (this.format.retainFunctionParens && node.type === "FunctionExpression" && node.extra && node.extra.parenthesized) {
      needsParens = true;
    }

    if (needsParens) this.token("(");

    this._printLeadingComments(node);

    const loc = t.isProgram(node) || t.isFile(node) ? null : node.loc;
    this.withSource("start", loc, () => {
      printMethod.call(this, node, parent);
    });

    this._printTrailingComments(node);

    if (needsParens) this.token(")");

    this._printStack.pop();

    this.format.concise = oldConcise;
    this._insideAux = oldInAux;
  }

  _maybeAddAuxComment(enteredPositionlessNode) {
    if (enteredPositionlessNode) this._printAuxBeforeComment();
    if (!this._insideAux) this._printAuxAfterComment();
  }

  _printAuxBeforeComment() {
    if (this._printAuxAfterOnNextUserNode) return;
    this._printAuxAfterOnNextUserNode = true;
    const comment = this.format.auxiliaryCommentBefore;

    if (comment) {
      this._printComment({
        type: "CommentBlock",
        value: comment
      });
    }
  }

  _printAuxAfterComment() {
    if (!this._printAuxAfterOnNextUserNode) return;
    this._printAuxAfterOnNextUserNode = false;
    const comment = this.format.auxiliaryCommentAfter;

    if (comment) {
      this._printComment({
        type: "CommentBlock",
        value: comment
      });
    }
  }

  getPossibleRaw(node) {
    const extra = node.extra;

    if (extra && extra.raw != null && extra.rawValue != null && node.value === extra.rawValue) {
      return extra.raw;
    }
  }

  printJoin(nodes, parent, opts = {}) {
    if (!(nodes != null && nodes.length)) return;
    if (opts.indent) this.indent();
    const newlineOpts = {
      addNewlines: opts.addNewlines
    };

    for (let i = 0; i < nodes.length; i++) {
      const node = nodes[i];
      if (!node) continue;
      if (opts.statement) this._printNewline(true, node, parent, newlineOpts);
      this.print(node, parent);

      if (opts.iterator) {
        opts.iterator(node, i);
      }

      if (opts.separator && i < nodes.length - 1) {
        opts.separator.call(this);
      }

      if (opts.statement) this._printNewline(false, node, parent, newlineOpts);
    }

    if (opts.indent) this.dedent();
  }

  printAndIndentOnComments(node, parent) {
    const indent = node.leadingComments && node.leadingComments.length > 0;
    if (indent) this.indent();
    this.print(node, parent);
    if (indent) this.dedent();
  }

  printBlock(parent) {
    const node = parent.body;

    if (!t.isEmptyStatement(node)) {
      this.space();
    }

    this.print(node, parent);
  }

  _printTrailingComments(node) {
    this._printComments(this._getComments(false, node));
  }

  _printLeadingComments(node) {
    this._printComments(this._getComments(true, node), true);
  }

  printInnerComments(node, indent = true) {
    var _node$innerComments;

    if (!((_node$innerComments = node.innerComments) != null && _node$innerComments.length)) return;
    if (indent) this.indent();

    this._printComments(node.innerComments);

    if (indent) this.dedent();
  }

  printSequence(nodes, parent, opts = {}) {
    opts.statement = true;
    return this.printJoin(nodes, parent, opts);
  }

  printList(items, parent, opts = {}) {
    if (opts.separator == null) {
      opts.separator = commaSeparator;
    }

    return this.printJoin(items, parent, opts);
  }

  _printNewline(leading, node, parent, opts) {
    if (this.format.retainLines || this.format.compact) return;

    if (this.format.concise) {
      this.space();
      return;
    }

    let lines = 0;

    if (this._buf.hasContent()) {
      if (!leading) lines++;
      if (opts.addNewlines) lines += opts.addNewlines(leading, node) || 0;
      const needs = leading ? n.needsWhitespaceBefore : n.needsWhitespaceAfter;
      if (needs(node, parent)) lines++;
    }

    this.newline(lines);
  }

  _getComments(leading, node) {
    return node && (leading ? node.leadingComments : node.trailingComments) || [];
  }

  _printComment(comment, skipNewLines) {
    if (!this.format.shouldPrintComment(comment.value)) return;
    if (comment.ignore) return;
    if (this._printedComments.has(comment)) return;

    this._printedComments.add(comment);

    const isBlockComment = comment.type === "CommentBlock";
    const printNewLines = isBlockComment && !skipNewLines && !this._noLineTerminator;
    if (printNewLines && this._buf.hasContent()) this.newline(1);
    if (!this.endsWith("[") && !this.endsWith("{")) this.space();
    let val = !isBlockComment && !this._noLineTerminator ? `//${comment.value}\n` : `/*${comment.value}*/`;

    if (isBlockComment && this.format.indent.adjustMultilineComment) {
      var _comment$loc;

      const offset = (_comment$loc = comment.loc) == null ? void 0 : _comment$loc.start.column;

      if (offset) {
        const newlineRegex = new RegExp("\\n\\s{1," + offset + "}", "g");
        val = val.replace(newlineRegex, "\n");
      }

      const indentSize = Math.max(this._getIndent().length, this.format.retainLines ? 0 : this._buf.getCurrentColumn());
      val = val.replace(/\n(?!$)/g, `\n${" ".repeat(indentSize)}`);
    }

    if (this.endsWith("/")) this._space();
    this.withSource("start", comment.loc, () => {
      this._append(val);
    });
    if (printNewLines) this.newline(1);
  }

  _printComments(comments, inlinePureAnnotation) {
    if (!(comments != null && comments.length)) return;

    if (inlinePureAnnotation && comments.length === 1 && PURE_ANNOTATION_RE.test(comments[0].value)) {
      this._printComment(comments[0], this._buf.hasContent() && !this.endsWith("\n"));
    } else {
      for (const comment of comments) {
        this._printComment(comment);
      }
    }
  }

  printAssertions(node) {
    var _node$assertions;

    if ((_node$assertions = node.assertions) != null && _node$assertions.length) {
      this.space();
      this.word("assert");
      this.space();
      this.token("{");
      this.space();
      this.printList(node.assertions, node);
      this.space();
      this.token("}");
    }
  }

}

Object.assign(Printer.prototype, generatorFunctions);
{
  Printer.prototype.Noop = function Noop() {};
}
var _default = Printer;
exports.default = _default;

function commaSeparator() {
  this.token(",");
  this.space();
}

/***/ }),
/* 126 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;
const SPACES_RE = /^[ \t]+$/;

class Buffer {
  constructor(map) {
    this._map = null;
    this._buf = [];
    this._last = "";
    this._queue = [];
    this._position = {
      line: 1,
      column: 0
    };
    this._sourcePosition = {
      identifierName: null,
      line: null,
      column: null,
      filename: null
    };
    this._disallowedPop = null;
    this._map = map;
  }

  get() {
    this._flush();

    const map = this._map;
    const result = {
      code: this._buf.join("").trimRight(),
      map: null,
      rawMappings: map == null ? void 0 : map.getRawMappings()
    };

    if (map) {
      Object.defineProperty(result, "map", {
        configurable: true,
        enumerable: true,

        get() {
          return this.map = map.get();
        },

        set(value) {
          Object.defineProperty(this, "map", {
            value,
            writable: true
          });
        }

      });
    }

    return result;
  }

  append(str) {
    this._flush();

    const {
      line,
      column,
      filename,
      identifierName,
      force
    } = this._sourcePosition;

    this._append(str, line, column, identifierName, filename, force);
  }

  queue(str) {
    if (str === "\n") {
      while (this._queue.length > 0 && SPACES_RE.test(this._queue[0][0])) {
        this._queue.shift();
      }
    }

    const {
      line,
      column,
      filename,
      identifierName,
      force
    } = this._sourcePosition;

    this._queue.unshift([str, line, column, identifierName, filename, force]);
  }

  _flush() {
    let item;

    while (item = this._queue.pop()) {
      this._append(...item);
    }
  }

  _append(str, line, column, identifierName, filename, force) {
    this._buf.push(str);

    this._last = str[str.length - 1];
    let i = str.indexOf("\n");
    let last = 0;

    if (i !== 0) {
      this._mark(line, column, identifierName, filename, force);
    }

    while (i !== -1) {
      this._position.line++;
      this._position.column = 0;
      last = i + 1;

      if (last < str.length) {
        this._mark(++line, 0, identifierName, filename, force);
      }

      i = str.indexOf("\n", last);
    }

    this._position.column += str.length - last;
  }

  _mark(line, column, identifierName, filename, force) {
    var _this$_map;

    (_this$_map = this._map) == null ? void 0 : _this$_map.mark(this._position.line, this._position.column, line, column, identifierName, filename, force);
  }

  removeTrailingNewline() {
    if (this._queue.length > 0 && this._queue[0][0] === "\n") {
      this._queue.shift();
    }
  }

  removeLastSemicolon() {
    if (this._queue.length > 0 && this._queue[0][0] === ";") {
      this._queue.shift();
    }
  }

  endsWith(suffix) {
    if (suffix.length === 1) {
      let last;

      if (this._queue.length > 0) {
        const str = this._queue[0][0];
        last = str[str.length - 1];
      } else {
        last = this._last;
      }

      return last === suffix;
    }

    const end = this._last + this._queue.reduce((acc, item) => item[0] + acc, "");

    if (suffix.length <= end.length) {
      return end.slice(-suffix.length) === suffix;
    }

    return false;
  }

  hasContent() {
    return this._queue.length > 0 || !!this._last;
  }

  exactSource(loc, cb) {
    this.source("start", loc, true);
    cb();
    this.source("end", loc);

    this._disallowPop("start", loc);
  }

  source(prop, loc, force) {
    if (prop && !loc) return;

    this._normalizePosition(prop, loc, this._sourcePosition, force);
  }

  withSource(prop, loc, cb) {
    if (!this._map) return cb();
    const originalLine = this._sourcePosition.line;
    const originalColumn = this._sourcePosition.column;
    const originalFilename = this._sourcePosition.filename;
    const originalIdentifierName = this._sourcePosition.identifierName;
    this.source(prop, loc);
    cb();

    if ((!this._sourcePosition.force || this._sourcePosition.line !== originalLine || this._sourcePosition.column !== originalColumn || this._sourcePosition.filename !== originalFilename) && (!this._disallowedPop || this._disallowedPop.line !== originalLine || this._disallowedPop.column !== originalColumn || this._disallowedPop.filename !== originalFilename)) {
      this._sourcePosition.line = originalLine;
      this._sourcePosition.column = originalColumn;
      this._sourcePosition.filename = originalFilename;
      this._sourcePosition.identifierName = originalIdentifierName;
      this._sourcePosition.force = false;
      this._disallowedPop = null;
    }
  }

  _disallowPop(prop, loc) {
    if (prop && !loc) return;
    this._disallowedPop = this._normalizePosition(prop, loc);
  }

  _normalizePosition(prop, loc, targetObj, force) {
    const pos = loc ? loc[prop] : null;

    if (targetObj === undefined) {
      targetObj = {
        identifierName: null,
        line: null,
        column: null,
        filename: null,
        force: false
      };
    }

    const origLine = targetObj.line;
    const origColumn = targetObj.column;
    const origFilename = targetObj.filename;
    targetObj.identifierName = prop === "start" && (loc == null ? void 0 : loc.identifierName) || null;
    targetObj.line = pos == null ? void 0 : pos.line;
    targetObj.column = pos == null ? void 0 : pos.column;
    targetObj.filename = loc == null ? void 0 : loc.filename;

    if (force || targetObj.line !== origLine || targetObj.column !== origColumn || targetObj.filename !== origFilename) {
      targetObj.force = force;
    }

    return targetObj;
  }

  getCurrentColumn() {
    const extra = this._queue.reduce((acc, item) => item[0] + acc, "");

    const lastIndex = extra.lastIndexOf("\n");
    return lastIndex === -1 ? this._position.column + extra.length : extra.length - 1 - lastIndex;
  }

  getCurrentLine() {
    const extra = this._queue.reduce((acc, item) => item[0] + acc, "");

    let count = 0;

    for (let i = 0; i < extra.length; i++) {
      if (extra[i] === "\n") count++;
    }

    return this._position.line + count;
  }

}

exports.default = Buffer;

/***/ }),
/* 127 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.needsWhitespace = needsWhitespace;
exports.needsWhitespaceBefore = needsWhitespaceBefore;
exports.needsWhitespaceAfter = needsWhitespaceAfter;
exports.needsParens = needsParens;

var whitespace = __webpack_require__(128);

var parens = __webpack_require__(129);

var t = __webpack_require__(11);

function expandAliases(obj) {
  const newObj = {};

  function add(type, func) {
    const fn = newObj[type];
    newObj[type] = fn ? function (node, parent, stack) {
      const result = fn(node, parent, stack);
      return result == null ? func(node, parent, stack) : result;
    } : func;
  }

  for (const type of Object.keys(obj)) {
    const aliases = t.FLIPPED_ALIAS_KEYS[type];

    if (aliases) {
      for (const alias of aliases) {
        add(alias, obj[type]);
      }
    } else {
      add(type, obj[type]);
    }
  }

  return newObj;
}

const expandedParens = expandAliases(parens);
const expandedWhitespaceNodes = expandAliases(whitespace.nodes);
const expandedWhitespaceList = expandAliases(whitespace.list);

function find(obj, node, parent, printStack) {
  const fn = obj[node.type];
  return fn ? fn(node, parent, printStack) : null;
}

function isOrHasCallExpression(node) {
  if (t.isCallExpression(node)) {
    return true;
  }

  return t.isMemberExpression(node) && isOrHasCallExpression(node.object);
}

function needsWhitespace(node, parent, type) {
  if (!node) return 0;

  if (t.isExpressionStatement(node)) {
    node = node.expression;
  }

  let linesInfo = find(expandedWhitespaceNodes, node, parent);

  if (!linesInfo) {
    const items = find(expandedWhitespaceList, node, parent);

    if (items) {
      for (let i = 0; i < items.length; i++) {
        linesInfo = needsWhitespace(items[i], node, type);
        if (linesInfo) break;
      }
    }
  }

  if (typeof linesInfo === "object" && linesInfo !== null) {
    return linesInfo[type] || 0;
  }

  return 0;
}

function needsWhitespaceBefore(node, parent) {
  return needsWhitespace(node, parent, "before");
}

function needsWhitespaceAfter(node, parent) {
  return needsWhitespace(node, parent, "after");
}

function needsParens(node, parent, printStack) {
  if (!parent) return false;

  if (t.isNewExpression(parent) && parent.callee === node) {
    if (isOrHasCallExpression(node)) return true;
  }

  return find(expandedParens, node, parent, printStack);
}

/***/ }),
/* 128 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.list = exports.nodes = void 0;

var t = __webpack_require__(11);

function crawl(node, state = {}) {
  if (t.isMemberExpression(node) || t.isOptionalMemberExpression(node)) {
    crawl(node.object, state);
    if (node.computed) crawl(node.property, state);
  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {
    crawl(node.left, state);
    crawl(node.right, state);
  } else if (t.isCallExpression(node) || t.isOptionalCallExpression(node)) {
    state.hasCall = true;
    crawl(node.callee, state);
  } else if (t.isFunction(node)) {
    state.hasFunction = true;
  } else if (t.isIdentifier(node)) {
    state.hasHelper = state.hasHelper || isHelper(node.callee);
  }

  return state;
}

function isHelper(node) {
  if (t.isMemberExpression(node)) {
    return isHelper(node.object) || isHelper(node.property);
  } else if (t.isIdentifier(node)) {
    return node.name === "require" || node.name[0] === "_";
  } else if (t.isCallExpression(node)) {
    return isHelper(node.callee);
  } else if (t.isBinary(node) || t.isAssignmentExpression(node)) {
    return t.isIdentifier(node.left) && isHelper(node.left) || isHelper(node.right);
  } else {
    return false;
  }
}

function isType(node) {
  return t.isLiteral(node) || t.isObjectExpression(node) || t.isArrayExpression(node) || t.isIdentifier(node) || t.isMemberExpression(node);
}

const nodes = {
  AssignmentExpression(node) {
    const state = crawl(node.right);

    if (state.hasCall && state.hasHelper || state.hasFunction) {
      return {
        before: state.hasFunction,
        after: true
      };
    }
  },

  SwitchCase(node, parent) {
    return {
      before: !!node.consequent.length || parent.cases[0] === node,
      after: !node.consequent.length && parent.cases[parent.cases.length - 1] === node
    };
  },

  LogicalExpression(node) {
    if (t.isFunction(node.left) || t.isFunction(node.right)) {
      return {
        after: true
      };
    }
  },

  Literal(node) {
    if (t.isStringLiteral(node) && node.value === "use strict") {
      return {
        after: true
      };
    }
  },

  CallExpression(node) {
    if (t.isFunction(node.callee) || isHelper(node)) {
      return {
        before: true,
        after: true
      };
    }
  },

  OptionalCallExpression(node) {
    if (t.isFunction(node.callee)) {
      return {
        before: true,
        after: true
      };
    }
  },

  VariableDeclaration(node) {
    for (let i = 0; i < node.declarations.length; i++) {
      const declar = node.declarations[i];
      let enabled = isHelper(declar.id) && !isType(declar.init);

      if (!enabled) {
        const state = crawl(declar.init);
        enabled = isHelper(declar.init) && state.hasCall || state.hasFunction;
      }

      if (enabled) {
        return {
          before: true,
          after: true
        };
      }
    }
  },

  IfStatement(node) {
    if (t.isBlockStatement(node.consequent)) {
      return {
        before: true,
        after: true
      };
    }
  }

};
exports.nodes = nodes;

nodes.ObjectProperty = nodes.ObjectTypeProperty = nodes.ObjectMethod = function (node, parent) {
  if (parent.properties[0] === node) {
    return {
      before: true
    };
  }
};

nodes.ObjectTypeCallProperty = function (node, parent) {
  var _parent$properties;

  if (parent.callProperties[0] === node && !((_parent$properties = parent.properties) != null && _parent$properties.length)) {
    return {
      before: true
    };
  }
};

nodes.ObjectTypeIndexer = function (node, parent) {
  var _parent$properties2, _parent$callPropertie;

  if (parent.indexers[0] === node && !((_parent$properties2 = parent.properties) != null && _parent$properties2.length) && !((_parent$callPropertie = parent.callProperties) != null && _parent$callPropertie.length)) {
    return {
      before: true
    };
  }
};

nodes.ObjectTypeInternalSlot = function (node, parent) {
  var _parent$properties3, _parent$callPropertie2, _parent$indexers;

  if (parent.internalSlots[0] === node && !((_parent$properties3 = parent.properties) != null && _parent$properties3.length) && !((_parent$callPropertie2 = parent.callProperties) != null && _parent$callPropertie2.length) && !((_parent$indexers = parent.indexers) != null && _parent$indexers.length)) {
    return {
      before: true
    };
  }
};

const list = {
  VariableDeclaration(node) {
    return node.declarations.map(decl => decl.init);
  },

  ArrayExpression(node) {
    return node.elements;
  },

  ObjectExpression(node) {
    return node.properties;
  }

};
exports.list = list;
[["Function", true], ["Class", true], ["Loop", true], ["LabeledStatement", true], ["SwitchStatement", true], ["TryStatement", true]].forEach(function ([type, amounts]) {
  if (typeof amounts === "boolean") {
    amounts = {
      after: amounts,
      before: amounts
    };
  }

  [type].concat(t.FLIPPED_ALIAS_KEYS[type] || []).forEach(function (type) {
    nodes[type] = function () {
      return amounts;
    };
  });
});

/***/ }),
/* 129 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.NullableTypeAnnotation = NullableTypeAnnotation;
exports.FunctionTypeAnnotation = FunctionTypeAnnotation;
exports.UpdateExpression = UpdateExpression;
exports.ObjectExpression = ObjectExpression;
exports.DoExpression = DoExpression;
exports.Binary = Binary;
exports.IntersectionTypeAnnotation = exports.UnionTypeAnnotation = UnionTypeAnnotation;
exports.OptionalIndexedAccessType = OptionalIndexedAccessType;
exports.TSAsExpression = TSAsExpression;
exports.TSTypeAssertion = TSTypeAssertion;
exports.TSIntersectionType = exports.TSUnionType = TSUnionType;
exports.TSInferType = TSInferType;
exports.BinaryExpression = BinaryExpression;
exports.SequenceExpression = SequenceExpression;
exports.AwaitExpression = exports.YieldExpression = YieldExpression;
exports.ClassExpression = ClassExpression;
exports.UnaryLike = UnaryLike;
exports.FunctionExpression = FunctionExpression;
exports.ArrowFunctionExpression = ArrowFunctionExpression;
exports.ConditionalExpression = ConditionalExpression;
exports.OptionalCallExpression = exports.OptionalMemberExpression = OptionalMemberExpression;
exports.AssignmentExpression = AssignmentExpression;
exports.LogicalExpression = LogicalExpression;
exports.Identifier = Identifier;

var t = __webpack_require__(11);

const PRECEDENCE = {
  "||": 0,
  "??": 0,
  "&&": 1,
  "|": 2,
  "^": 3,
  "&": 4,
  "==": 5,
  "===": 5,
  "!=": 5,
  "!==": 5,
  "<": 6,
  ">": 6,
  "<=": 6,
  ">=": 6,
  in: 6,
  instanceof: 6,
  ">>": 7,
  "<<": 7,
  ">>>": 7,
  "+": 8,
  "-": 8,
  "*": 9,
  "/": 9,
  "%": 9,
  "**": 10
};

const isClassExtendsClause = (node, parent) => (t.isClassDeclaration(parent) || t.isClassExpression(parent)) && parent.superClass === node;

const hasPostfixPart = (node, parent) => (t.isMemberExpression(parent) || t.isOptionalMemberExpression(parent)) && parent.object === node || (t.isCallExpression(parent) || t.isOptionalCallExpression(parent) || t.isNewExpression(parent)) && parent.callee === node || t.isTaggedTemplateExpression(parent) && parent.tag === node || t.isTSNonNullExpression(parent);

function NullableTypeAnnotation(node, parent) {
  return t.isArrayTypeAnnotation(parent);
}

function FunctionTypeAnnotation(node, parent, printStack) {
  return t.isUnionTypeAnnotation(parent) || t.isIntersectionTypeAnnotation(parent) || t.isArrayTypeAnnotation(parent) || t.isTypeAnnotation(parent) && t.isArrowFunctionExpression(printStack[printStack.length - 3]);
}

function UpdateExpression(node, parent) {
  return hasPostfixPart(node, parent) || isClassExtendsClause(node, parent);
}

function ObjectExpression(node, parent, printStack) {
  return isFirstInContext(printStack, {
    expressionStatement: true,
    arrowBody: true
  });
}

function DoExpression(node, parent, printStack) {
  return !node.async && isFirstInContext(printStack, {
    expressionStatement: true
  });
}

function Binary(node, parent) {
  if (node.operator === "**" && t.isBinaryExpression(parent, {
    operator: "**"
  })) {
    return parent.left === node;
  }

  if (isClassExtendsClause(node, parent)) {
    return true;
  }

  if (hasPostfixPart(node, parent) || t.isUnaryLike(parent) || t.isAwaitExpression(parent)) {
    return true;
  }

  if (t.isBinary(parent)) {
    const parentOp = parent.operator;
    const parentPos = PRECEDENCE[parentOp];
    const nodeOp = node.operator;
    const nodePos = PRECEDENCE[nodeOp];

    if (parentPos === nodePos && parent.right === node && !t.isLogicalExpression(parent) || parentPos > nodePos) {
      return true;
    }
  }
}

function UnionTypeAnnotation(node, parent) {
  return t.isArrayTypeAnnotation(parent) || t.isNullableTypeAnnotation(parent) || t.isIntersectionTypeAnnotation(parent) || t.isUnionTypeAnnotation(parent);
}

function OptionalIndexedAccessType(node, parent) {
  return t.isIndexedAccessType(parent, {
    objectType: node
  });
}

function TSAsExpression() {
  return true;
}

function TSTypeAssertion() {
  return true;
}

function TSUnionType(node, parent) {
  return t.isTSArrayType(parent) || t.isTSOptionalType(parent) || t.isTSIntersectionType(parent) || t.isTSUnionType(parent) || t.isTSRestType(parent);
}

function TSInferType(node, parent) {
  return t.isTSArrayType(parent) || t.isTSOptionalType(parent);
}

function BinaryExpression(node, parent) {
  return node.operator === "in" && (t.isVariableDeclarator(parent) || t.isFor(parent));
}

function SequenceExpression(node, parent) {
  if (t.isForStatement(parent) || t.isThrowStatement(parent) || t.isReturnStatement(parent) || t.isIfStatement(parent) && parent.test === node || t.isWhileStatement(parent) && parent.test === node || t.isForInStatement(parent) && parent.right === node || t.isSwitchStatement(parent) && parent.discriminant === node || t.isExpressionStatement(parent) && parent.expression === node) {
    return false;
  }

  return true;
}

function YieldExpression(node, parent) {
  return t.isBinary(parent) || t.isUnaryLike(parent) || hasPostfixPart(node, parent) || t.isAwaitExpression(parent) && t.isYieldExpression(node) || t.isConditionalExpression(parent) && node === parent.test || isClassExtendsClause(node, parent);
}

function ClassExpression(node, parent, printStack) {
  return isFirstInContext(printStack, {
    expressionStatement: true,
    exportDefault: true
  });
}

function UnaryLike(node, parent) {
  return hasPostfixPart(node, parent) || t.isBinaryExpression(parent, {
    operator: "**",
    left: node
  }) || isClassExtendsClause(node, parent);
}

function FunctionExpression(node, parent, printStack) {
  return isFirstInContext(printStack, {
    expressionStatement: true,
    exportDefault: true
  });
}

function ArrowFunctionExpression(node, parent) {
  return t.isExportDeclaration(parent) || ConditionalExpression(node, parent);
}

function ConditionalExpression(node, parent) {
  if (t.isUnaryLike(parent) || t.isBinary(parent) || t.isConditionalExpression(parent, {
    test: node
  }) || t.isAwaitExpression(parent) || t.isTSTypeAssertion(parent) || t.isTSAsExpression(parent)) {
    return true;
  }

  return UnaryLike(node, parent);
}

function OptionalMemberExpression(node, parent) {
  return t.isCallExpression(parent, {
    callee: node
  }) || t.isMemberExpression(parent, {
    object: node
  });
}

function AssignmentExpression(node, parent) {
  if (t.isObjectPattern(node.left)) {
    return true;
  } else {
    return ConditionalExpression(node, parent);
  }
}

function LogicalExpression(node, parent) {
  switch (node.operator) {
    case "||":
      if (!t.isLogicalExpression(parent)) return false;
      return parent.operator === "??" || parent.operator === "&&";

    case "&&":
      return t.isLogicalExpression(parent, {
        operator: "??"
      });

    case "??":
      return t.isLogicalExpression(parent) && parent.operator !== "??";
  }
}

function Identifier(node, parent, printStack) {
  if (node.name === "let") {
    const isFollowedByBracket = t.isMemberExpression(parent, {
      object: node,
      computed: true
    }) || t.isOptionalMemberExpression(parent, {
      object: node,
      computed: true,
      optional: false
    });
    return isFirstInContext(printStack, {
      expressionStatement: isFollowedByBracket,
      forHead: isFollowedByBracket,
      forInHead: isFollowedByBracket,
      forOfHead: true
    });
  }

  return node.name === "async" && t.isForOfStatement(parent) && node === parent.left;
}

function isFirstInContext(printStack, {
  expressionStatement = false,
  arrowBody = false,
  exportDefault = false,
  forHead = false,
  forInHead = false,
  forOfHead = false
}) {
  let i = printStack.length - 1;
  let node = printStack[i];
  i--;
  let parent = printStack[i];

  while (i >= 0) {
    if (expressionStatement && t.isExpressionStatement(parent, {
      expression: node
    }) || exportDefault && t.isExportDefaultDeclaration(parent, {
      declaration: node
    }) || arrowBody && t.isArrowFunctionExpression(parent, {
      body: node
    }) || forHead && t.isForStatement(parent, {
      init: node
    }) || forInHead && t.isForInStatement(parent, {
      left: node
    }) || forOfHead && t.isForOfStatement(parent, {
      left: node
    })) {
      return true;
    }

    if (hasPostfixPart(node, parent) && !t.isNewExpression(parent) || t.isSequenceExpression(parent) && parent.expressions[0] === node || t.isConditional(parent, {
      test: node
    }) || t.isBinary(parent, {
      left: node
    }) || t.isAssignmentExpression(parent, {
      left: node
    })) {
      node = parent;
      i--;
      parent = printStack[i];
    } else {
      return false;
    }
  }

  return false;
}

/***/ }),
/* 130 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var _templateLiterals = __webpack_require__(131);

Object.keys(_templateLiterals).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _templateLiterals[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _templateLiterals[key];
    }
  });
});

var _expressions = __webpack_require__(132);

Object.keys(_expressions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _expressions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _expressions[key];
    }
  });
});

var _statements = __webpack_require__(133);

Object.keys(_statements).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _statements[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _statements[key];
    }
  });
});

var _classes = __webpack_require__(134);

Object.keys(_classes).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _classes[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _classes[key];
    }
  });
});

var _methods = __webpack_require__(135);

Object.keys(_methods).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _methods[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _methods[key];
    }
  });
});

var _modules = __webpack_require__(136);

Object.keys(_modules).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _modules[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _modules[key];
    }
  });
});

var _types = __webpack_require__(137);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});

var _flow = __webpack_require__(139);

Object.keys(_flow).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _flow[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _flow[key];
    }
  });
});

var _base = __webpack_require__(140);

Object.keys(_base).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _base[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _base[key];
    }
  });
});

var _jsx = __webpack_require__(141);

Object.keys(_jsx).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _jsx[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _jsx[key];
    }
  });
});

var _typescript = __webpack_require__(142);

Object.keys(_typescript).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _typescript[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _typescript[key];
    }
  });
});

/***/ }),
/* 131 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TaggedTemplateExpression = TaggedTemplateExpression;
exports.TemplateElement = TemplateElement;
exports.TemplateLiteral = TemplateLiteral;

var t = __webpack_require__(11);

function TaggedTemplateExpression(node) {
  this.print(node.tag, node);
  this.print(node.typeParameters, node);
  this.print(node.quasi, node);
}

function TemplateElement(node, parent) {
  const isFirst = parent.quasis[0] === node;
  const isLast = parent.quasis[parent.quasis.length - 1] === node;
  const value = (isFirst ? "`" : "}") + node.value.raw + (isLast ? "`" : "${");
  this.token(value);
}

function TemplateLiteral(node) {
  const quasis = node.quasis;

  for (let i = 0; i < quasis.length; i++) {
    this.print(quasis[i], node);

    if (i + 1 < quasis.length) {
      this.print(node.expressions[i], node);
    }
  }
}

/***/ }),
/* 132 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.UnaryExpression = UnaryExpression;
exports.DoExpression = DoExpression;
exports.ParenthesizedExpression = ParenthesizedExpression;
exports.UpdateExpression = UpdateExpression;
exports.ConditionalExpression = ConditionalExpression;
exports.NewExpression = NewExpression;
exports.SequenceExpression = SequenceExpression;
exports.ThisExpression = ThisExpression;
exports.Super = Super;
exports.Decorator = Decorator;
exports.OptionalMemberExpression = OptionalMemberExpression;
exports.OptionalCallExpression = OptionalCallExpression;
exports.CallExpression = CallExpression;
exports.Import = Import;
exports.EmptyStatement = EmptyStatement;
exports.ExpressionStatement = ExpressionStatement;
exports.AssignmentPattern = AssignmentPattern;
exports.LogicalExpression = exports.BinaryExpression = exports.AssignmentExpression = AssignmentExpression;
exports.BindExpression = BindExpression;
exports.MemberExpression = MemberExpression;
exports.MetaProperty = MetaProperty;
exports.PrivateName = PrivateName;
exports.V8IntrinsicIdentifier = V8IntrinsicIdentifier;
exports.ModuleExpression = ModuleExpression;
exports.AwaitExpression = exports.YieldExpression = void 0;

var t = __webpack_require__(11);

var n = __webpack_require__(127);

function UnaryExpression(node) {
  if (node.operator === "void" || node.operator === "delete" || node.operator === "typeof" || node.operator === "throw") {
    this.word(node.operator);
    this.space();
  } else {
    this.token(node.operator);
  }

  this.print(node.argument, node);
}

function DoExpression(node) {
  if (node.async) {
    this.word("async");
    this.space();
  }

  this.word("do");
  this.space();
  this.print(node.body, node);
}

function ParenthesizedExpression(node) {
  this.token("(");
  this.print(node.expression, node);
  this.token(")");
}

function UpdateExpression(node) {
  if (node.prefix) {
    this.token(node.operator);
    this.print(node.argument, node);
  } else {
    this.startTerminatorless(true);
    this.print(node.argument, node);
    this.endTerminatorless();
    this.token(node.operator);
  }
}

function ConditionalExpression(node) {
  this.print(node.test, node);
  this.space();
  this.token("?");
  this.space();
  this.print(node.consequent, node);
  this.space();
  this.token(":");
  this.space();
  this.print(node.alternate, node);
}

function NewExpression(node, parent) {
  this.word("new");
  this.space();
  this.print(node.callee, node);

  if (this.format.minified && node.arguments.length === 0 && !node.optional && !t.isCallExpression(parent, {
    callee: node
  }) && !t.isMemberExpression(parent) && !t.isNewExpression(parent)) {
    return;
  }

  this.print(node.typeArguments, node);
  this.print(node.typeParameters, node);

  if (node.optional) {
    this.token("?.");
  }

  this.token("(");
  this.printList(node.arguments, node);
  this.token(")");
}

function SequenceExpression(node) {
  this.printList(node.expressions, node);
}

function ThisExpression() {
  this.word("this");
}

function Super() {
  this.word("super");
}

function Decorator(node) {
  this.token("@");
  this.print(node.expression, node);
  this.newline();
}

function OptionalMemberExpression(node) {
  this.print(node.object, node);

  if (!node.computed && t.isMemberExpression(node.property)) {
    throw new TypeError("Got a MemberExpression for MemberExpression property");
  }

  let computed = node.computed;

  if (t.isLiteral(node.property) && typeof node.property.value === "number") {
    computed = true;
  }

  if (node.optional) {
    this.token("?.");
  }

  if (computed) {
    this.token("[");
    this.print(node.property, node);
    this.token("]");
  } else {
    if (!node.optional) {
      this.token(".");
    }

    this.print(node.property, node);
  }
}

function OptionalCallExpression(node) {
  this.print(node.callee, node);
  this.print(node.typeArguments, node);
  this.print(node.typeParameters, node);

  if (node.optional) {
    this.token("?.");
  }

  this.token("(");
  this.printList(node.arguments, node);
  this.token(")");
}

function CallExpression(node) {
  this.print(node.callee, node);
  this.print(node.typeArguments, node);
  this.print(node.typeParameters, node);
  this.token("(");
  this.printList(node.arguments, node);
  this.token(")");
}

function Import() {
  this.word("import");
}

function buildYieldAwait(keyword) {
  return function (node) {
    this.word(keyword);

    if (node.delegate) {
      this.token("*");
    }

    if (node.argument) {
      this.space();
      const terminatorState = this.startTerminatorless();
      this.print(node.argument, node);
      this.endTerminatorless(terminatorState);
    }
  };
}

const YieldExpression = buildYieldAwait("yield");
exports.YieldExpression = YieldExpression;
const AwaitExpression = buildYieldAwait("await");
exports.AwaitExpression = AwaitExpression;

function EmptyStatement() {
  this.semicolon(true);
}

function ExpressionStatement(node) {
  this.print(node.expression, node);
  this.semicolon();
}

function AssignmentPattern(node) {
  this.print(node.left, node);
  if (node.left.optional) this.token("?");
  this.print(node.left.typeAnnotation, node);
  this.space();
  this.token("=");
  this.space();
  this.print(node.right, node);
}

function AssignmentExpression(node, parent) {
  const parens = this.inForStatementInitCounter && node.operator === "in" && !n.needsParens(node, parent);

  if (parens) {
    this.token("(");
  }

  this.print(node.left, node);
  this.space();

  if (node.operator === "in" || node.operator === "instanceof") {
    this.word(node.operator);
  } else {
    this.token(node.operator);
  }

  this.space();
  this.print(node.right, node);

  if (parens) {
    this.token(")");
  }
}

function BindExpression(node) {
  this.print(node.object, node);
  this.token("::");
  this.print(node.callee, node);
}

function MemberExpression(node) {
  this.print(node.object, node);

  if (!node.computed && t.isMemberExpression(node.property)) {
    throw new TypeError("Got a MemberExpression for MemberExpression property");
  }

  let computed = node.computed;

  if (t.isLiteral(node.property) && typeof node.property.value === "number") {
    computed = true;
  }

  if (computed) {
    this.token("[");
    this.print(node.property, node);
    this.token("]");
  } else {
    this.token(".");
    this.print(node.property, node);
  }
}

function MetaProperty(node) {
  this.print(node.meta, node);
  this.token(".");
  this.print(node.property, node);
}

function PrivateName(node) {
  this.token("#");
  this.print(node.id, node);
}

function V8IntrinsicIdentifier(node) {
  this.token("%");
  this.word(node.name);
}

function ModuleExpression(node) {
  this.word("module");
  this.space();
  this.token("{");

  if (node.body.body.length === 0) {
    this.token("}");
  } else {
    this.newline();
    this.printSequence(node.body.body, node, {
      indent: true
    });
    this.rightBrace();
  }
}

/***/ }),
/* 133 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.WithStatement = WithStatement;
exports.IfStatement = IfStatement;
exports.ForStatement = ForStatement;
exports.WhileStatement = WhileStatement;
exports.DoWhileStatement = DoWhileStatement;
exports.LabeledStatement = LabeledStatement;
exports.TryStatement = TryStatement;
exports.CatchClause = CatchClause;
exports.SwitchStatement = SwitchStatement;
exports.SwitchCase = SwitchCase;
exports.DebuggerStatement = DebuggerStatement;
exports.VariableDeclaration = VariableDeclaration;
exports.VariableDeclarator = VariableDeclarator;
exports.ThrowStatement = exports.BreakStatement = exports.ReturnStatement = exports.ContinueStatement = exports.ForOfStatement = exports.ForInStatement = void 0;

var t = __webpack_require__(11);

function WithStatement(node) {
  this.word("with");
  this.space();
  this.token("(");
  this.print(node.object, node);
  this.token(")");
  this.printBlock(node);
}

function IfStatement(node) {
  this.word("if");
  this.space();
  this.token("(");
  this.print(node.test, node);
  this.token(")");
  this.space();
  const needsBlock = node.alternate && t.isIfStatement(getLastStatement(node.consequent));

  if (needsBlock) {
    this.token("{");
    this.newline();
    this.indent();
  }

  this.printAndIndentOnComments(node.consequent, node);

  if (needsBlock) {
    this.dedent();
    this.newline();
    this.token("}");
  }

  if (node.alternate) {
    if (this.endsWith("}")) this.space();
    this.word("else");
    this.space();
    this.printAndIndentOnComments(node.alternate, node);
  }
}

function getLastStatement(statement) {
  if (!t.isStatement(statement.body)) return statement;
  return getLastStatement(statement.body);
}

function ForStatement(node) {
  this.word("for");
  this.space();
  this.token("(");
  this.inForStatementInitCounter++;
  this.print(node.init, node);
  this.inForStatementInitCounter--;
  this.token(";");

  if (node.test) {
    this.space();
    this.print(node.test, node);
  }

  this.token(";");

  if (node.update) {
    this.space();
    this.print(node.update, node);
  }

  this.token(")");
  this.printBlock(node);
}

function WhileStatement(node) {
  this.word("while");
  this.space();
  this.token("(");
  this.print(node.test, node);
  this.token(")");
  this.printBlock(node);
}

const buildForXStatement = function (op) {
  return function (node) {
    this.word("for");
    this.space();

    if (op === "of" && node.await) {
      this.word("await");
      this.space();
    }

    this.token("(");
    this.print(node.left, node);
    this.space();
    this.word(op);
    this.space();
    this.print(node.right, node);
    this.token(")");
    this.printBlock(node);
  };
};

const ForInStatement = buildForXStatement("in");
exports.ForInStatement = ForInStatement;
const ForOfStatement = buildForXStatement("of");
exports.ForOfStatement = ForOfStatement;

function DoWhileStatement(node) {
  this.word("do");
  this.space();
  this.print(node.body, node);
  this.space();
  this.word("while");
  this.space();
  this.token("(");
  this.print(node.test, node);
  this.token(")");
  this.semicolon();
}

function buildLabelStatement(prefix, key = "label") {
  return function (node) {
    this.word(prefix);
    const label = node[key];

    if (label) {
      this.space();
      const isLabel = key == "label";
      const terminatorState = this.startTerminatorless(isLabel);
      this.print(label, node);
      this.endTerminatorless(terminatorState);
    }

    this.semicolon();
  };
}

const ContinueStatement = buildLabelStatement("continue");
exports.ContinueStatement = ContinueStatement;
const ReturnStatement = buildLabelStatement("return", "argument");
exports.ReturnStatement = ReturnStatement;
const BreakStatement = buildLabelStatement("break");
exports.BreakStatement = BreakStatement;
const ThrowStatement = buildLabelStatement("throw", "argument");
exports.ThrowStatement = ThrowStatement;

function LabeledStatement(node) {
  this.print(node.label, node);
  this.token(":");
  this.space();
  this.print(node.body, node);
}

function TryStatement(node) {
  this.word("try");
  this.space();
  this.print(node.block, node);
  this.space();

  if (node.handlers) {
    this.print(node.handlers[0], node);
  } else {
    this.print(node.handler, node);
  }

  if (node.finalizer) {
    this.space();
    this.word("finally");
    this.space();
    this.print(node.finalizer, node);
  }
}

function CatchClause(node) {
  this.word("catch");
  this.space();

  if (node.param) {
    this.token("(");
    this.print(node.param, node);
    this.print(node.param.typeAnnotation, node);
    this.token(")");
    this.space();
  }

  this.print(node.body, node);
}

function SwitchStatement(node) {
  this.word("switch");
  this.space();
  this.token("(");
  this.print(node.discriminant, node);
  this.token(")");
  this.space();
  this.token("{");
  this.printSequence(node.cases, node, {
    indent: true,

    addNewlines(leading, cas) {
      if (!leading && node.cases[node.cases.length - 1] === cas) return -1;
    }

  });
  this.token("}");
}

function SwitchCase(node) {
  if (node.test) {
    this.word("case");
    this.space();
    this.print(node.test, node);
    this.token(":");
  } else {
    this.word("default");
    this.token(":");
  }

  if (node.consequent.length) {
    this.newline();
    this.printSequence(node.consequent, node, {
      indent: true
    });
  }
}

function DebuggerStatement() {
  this.word("debugger");
  this.semicolon();
}

function variableDeclarationIndent() {
  this.token(",");
  this.newline();
  if (this.endsWith("\n")) for (let i = 0; i < 4; i++) this.space(true);
}

function constDeclarationIndent() {
  this.token(",");
  this.newline();
  if (this.endsWith("\n")) for (let i = 0; i < 6; i++) this.space(true);
}

function VariableDeclaration(node, parent) {
  if (node.declare) {
    this.word("declare");
    this.space();
  }

  this.word(node.kind);
  this.space();
  let hasInits = false;

  if (!t.isFor(parent)) {
    for (const declar of node.declarations) {
      if (declar.init) {
        hasInits = true;
      }
    }
  }

  let separator;

  if (hasInits) {
    separator = node.kind === "const" ? constDeclarationIndent : variableDeclarationIndent;
  }

  this.printList(node.declarations, node, {
    separator
  });

  if (t.isFor(parent)) {
    if (t.isForStatement(parent)) {
      if (parent.init === node) return;
    } else {
      if (parent.left === node) return;
    }
  }

  this.semicolon();
}

function VariableDeclarator(node) {
  this.print(node.id, node);
  if (node.definite) this.token("!");
  this.print(node.id.typeAnnotation, node);

  if (node.init) {
    this.space();
    this.token("=");
    this.space();
    this.print(node.init, node);
  }
}

/***/ }),
/* 134 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ClassExpression = exports.ClassDeclaration = ClassDeclaration;
exports.ClassBody = ClassBody;
exports.ClassProperty = ClassProperty;
exports.ClassPrivateProperty = ClassPrivateProperty;
exports.ClassMethod = ClassMethod;
exports.ClassPrivateMethod = ClassPrivateMethod;
exports._classMethodHead = _classMethodHead;
exports.StaticBlock = StaticBlock;

var t = __webpack_require__(11);

function ClassDeclaration(node, parent) {
  if (!this.format.decoratorsBeforeExport || !t.isExportDefaultDeclaration(parent) && !t.isExportNamedDeclaration(parent)) {
    this.printJoin(node.decorators, node);
  }

  if (node.declare) {
    this.word("declare");
    this.space();
  }

  if (node.abstract) {
    this.word("abstract");
    this.space();
  }

  this.word("class");

  if (node.id) {
    this.space();
    this.print(node.id, node);
  }

  this.print(node.typeParameters, node);

  if (node.superClass) {
    this.space();
    this.word("extends");
    this.space();
    this.print(node.superClass, node);
    this.print(node.superTypeParameters, node);
  }

  if (node.implements) {
    this.space();
    this.word("implements");
    this.space();
    this.printList(node.implements, node);
  }

  this.space();
  this.print(node.body, node);
}

function ClassBody(node) {
  this.token("{");
  this.printInnerComments(node);

  if (node.body.length === 0) {
    this.token("}");
  } else {
    this.newline();
    this.indent();
    this.printSequence(node.body, node);
    this.dedent();
    if (!this.endsWith("\n")) this.newline();
    this.rightBrace();
  }
}

function ClassProperty(node) {
  this.printJoin(node.decorators, node);
  this.source("end", node.key.loc);
  this.tsPrintClassMemberModifiers(node, true);

  if (node.computed) {
    this.token("[");
    this.print(node.key, node);
    this.token("]");
  } else {
    this._variance(node);

    this.print(node.key, node);
  }

  if (node.optional) {
    this.token("?");
  }

  if (node.definite) {
    this.token("!");
  }

  this.print(node.typeAnnotation, node);

  if (node.value) {
    this.space();
    this.token("=");
    this.space();
    this.print(node.value, node);
  }

  this.semicolon();
}

function ClassPrivateProperty(node) {
  this.printJoin(node.decorators, node);

  if (node.static) {
    this.word("static");
    this.space();
  }

  this.print(node.key, node);
  this.print(node.typeAnnotation, node);

  if (node.value) {
    this.space();
    this.token("=");
    this.space();
    this.print(node.value, node);
  }

  this.semicolon();
}

function ClassMethod(node) {
  this._classMethodHead(node);

  this.space();
  this.print(node.body, node);
}

function ClassPrivateMethod(node) {
  this._classMethodHead(node);

  this.space();
  this.print(node.body, node);
}

function _classMethodHead(node) {
  this.printJoin(node.decorators, node);
  this.source("end", node.key.loc);
  this.tsPrintClassMemberModifiers(node, false);

  this._methodHead(node);
}

function StaticBlock(node) {
  this.word("static");
  this.space();
  this.token("{");

  if (node.body.length === 0) {
    this.token("}");
  } else {
    this.newline();
    this.printSequence(node.body, node, {
      indent: true
    });
    this.rightBrace();
  }
}

/***/ }),
/* 135 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports._params = _params;
exports._parameters = _parameters;
exports._param = _param;
exports._methodHead = _methodHead;
exports._predicate = _predicate;
exports._functionHead = _functionHead;
exports.FunctionDeclaration = exports.FunctionExpression = FunctionExpression;
exports.ArrowFunctionExpression = ArrowFunctionExpression;

var t = __webpack_require__(11);

function _params(node) {
  this.print(node.typeParameters, node);
  this.token("(");

  this._parameters(node.params, node);

  this.token(")");
  this.print(node.returnType, node);
}

function _parameters(parameters, parent) {
  for (let i = 0; i < parameters.length; i++) {
    this._param(parameters[i], parent);

    if (i < parameters.length - 1) {
      this.token(",");
      this.space();
    }
  }
}

function _param(parameter, parent) {
  this.printJoin(parameter.decorators, parameter);
  this.print(parameter, parent);
  if (parameter.optional) this.token("?");
  this.print(parameter.typeAnnotation, parameter);
}

function _methodHead(node) {
  const kind = node.kind;
  const key = node.key;

  if (kind === "get" || kind === "set") {
    this.word(kind);
    this.space();
  }

  if (node.async) {
    this._catchUp("start", key.loc);

    this.word("async");
    this.space();
  }

  if (kind === "method" || kind === "init") {
    if (node.generator) {
      this.token("*");
    }
  }

  if (node.computed) {
    this.token("[");
    this.print(key, node);
    this.token("]");
  } else {
    this.print(key, node);
  }

  if (node.optional) {
    this.token("?");
  }

  this._params(node);
}

function _predicate(node) {
  if (node.predicate) {
    if (!node.returnType) {
      this.token(":");
    }

    this.space();
    this.print(node.predicate, node);
  }
}

function _functionHead(node) {
  if (node.async) {
    this.word("async");
    this.space();
  }

  this.word("function");
  if (node.generator) this.token("*");
  this.space();

  if (node.id) {
    this.print(node.id, node);
  }

  this._params(node);

  this._predicate(node);
}

function FunctionExpression(node) {
  this._functionHead(node);

  this.space();
  this.print(node.body, node);
}

function ArrowFunctionExpression(node) {
  if (node.async) {
    this.word("async");
    this.space();
  }

  const firstParam = node.params[0];

  if (!this.format.retainLines && !this.format.auxiliaryCommentBefore && !this.format.auxiliaryCommentAfter && node.params.length === 1 && t.isIdentifier(firstParam) && !hasTypesOrComments(node, firstParam)) {
    this.print(firstParam, node);
  } else {
    this._params(node);
  }

  this._predicate(node);

  this.space();
  this.token("=>");
  this.space();
  this.print(node.body, node);
}

function hasTypesOrComments(node, param) {
  var _param$leadingComment, _param$trailingCommen;

  return !!(node.typeParameters || node.returnType || node.predicate || param.typeAnnotation || param.optional || (_param$leadingComment = param.leadingComments) != null && _param$leadingComment.length || (_param$trailingCommen = param.trailingComments) != null && _param$trailingCommen.length);
}

/***/ }),
/* 136 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ImportSpecifier = ImportSpecifier;
exports.ImportDefaultSpecifier = ImportDefaultSpecifier;
exports.ExportDefaultSpecifier = ExportDefaultSpecifier;
exports.ExportSpecifier = ExportSpecifier;
exports.ExportNamespaceSpecifier = ExportNamespaceSpecifier;
exports.ExportAllDeclaration = ExportAllDeclaration;
exports.ExportNamedDeclaration = ExportNamedDeclaration;
exports.ExportDefaultDeclaration = ExportDefaultDeclaration;
exports.ImportDeclaration = ImportDeclaration;
exports.ImportAttribute = ImportAttribute;
exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;

var t = __webpack_require__(11);

function ImportSpecifier(node) {
  if (node.importKind === "type" || node.importKind === "typeof") {
    this.word(node.importKind);
    this.space();
  }

  this.print(node.imported, node);

  if (node.local && node.local.name !== node.imported.name) {
    this.space();
    this.word("as");
    this.space();
    this.print(node.local, node);
  }
}

function ImportDefaultSpecifier(node) {
  this.print(node.local, node);
}

function ExportDefaultSpecifier(node) {
  this.print(node.exported, node);
}

function ExportSpecifier(node) {
  this.print(node.local, node);

  if (node.exported && node.local.name !== node.exported.name) {
    this.space();
    this.word("as");
    this.space();
    this.print(node.exported, node);
  }
}

function ExportNamespaceSpecifier(node) {
  this.token("*");
  this.space();
  this.word("as");
  this.space();
  this.print(node.exported, node);
}

function ExportAllDeclaration(node) {
  this.word("export");
  this.space();

  if (node.exportKind === "type") {
    this.word("type");
    this.space();
  }

  this.token("*");
  this.space();
  this.word("from");
  this.space();
  this.print(node.source, node);
  this.printAssertions(node);
  this.semicolon();
}

function ExportNamedDeclaration(node) {
  if (this.format.decoratorsBeforeExport && t.isClassDeclaration(node.declaration)) {
    this.printJoin(node.declaration.decorators, node);
  }

  this.word("export");
  this.space();
  ExportDeclaration.apply(this, arguments);
}

function ExportDefaultDeclaration(node) {
  if (this.format.decoratorsBeforeExport && t.isClassDeclaration(node.declaration)) {
    this.printJoin(node.declaration.decorators, node);
  }

  this.word("export");
  this.space();
  this.word("default");
  this.space();
  ExportDeclaration.apply(this, arguments);
}

function ExportDeclaration(node) {
  if (node.declaration) {
    const declar = node.declaration;
    this.print(declar, node);
    if (!t.isStatement(declar)) this.semicolon();
  } else {
    if (node.exportKind === "type") {
      this.word("type");
      this.space();
    }

    const specifiers = node.specifiers.slice(0);
    let hasSpecial = false;

    for (;;) {
      const first = specifiers[0];

      if (t.isExportDefaultSpecifier(first) || t.isExportNamespaceSpecifier(first)) {
        hasSpecial = true;
        this.print(specifiers.shift(), node);

        if (specifiers.length) {
          this.token(",");
          this.space();
        }
      } else {
        break;
      }
    }

    if (specifiers.length || !specifiers.length && !hasSpecial) {
      this.token("{");

      if (specifiers.length) {
        this.space();
        this.printList(specifiers, node);
        this.space();
      }

      this.token("}");
    }

    if (node.source) {
      this.space();
      this.word("from");
      this.space();
      this.print(node.source, node);
      this.printAssertions(node);
    }

    this.semicolon();
  }
}

function ImportDeclaration(node) {
  this.word("import");
  this.space();

  if (node.importKind === "type" || node.importKind === "typeof") {
    this.word(node.importKind);
    this.space();
  }

  const specifiers = node.specifiers.slice(0);

  if (specifiers != null && specifiers.length) {
    for (;;) {
      const first = specifiers[0];

      if (t.isImportDefaultSpecifier(first) || t.isImportNamespaceSpecifier(first)) {
        this.print(specifiers.shift(), node);

        if (specifiers.length) {
          this.token(",");
          this.space();
        }
      } else {
        break;
      }
    }

    if (specifiers.length) {
      this.token("{");
      this.space();
      this.printList(specifiers, node);
      this.space();
      this.token("}");
    }

    this.space();
    this.word("from");
    this.space();
  }

  this.print(node.source, node);
  this.printAssertions(node);
  {
    var _node$attributes;

    if ((_node$attributes = node.attributes) != null && _node$attributes.length) {
      this.space();
      this.word("with");
      this.space();
      this.printList(node.attributes, node);
    }
  }
  this.semicolon();
}

function ImportAttribute(node) {
  this.print(node.key);
  this.token(":");
  this.space();
  this.print(node.value);
}

function ImportNamespaceSpecifier(node) {
  this.token("*");
  this.space();
  this.word("as");
  this.space();
  this.print(node.local, node);
}

/***/ }),
/* 137 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Identifier = Identifier;
exports.ArgumentPlaceholder = ArgumentPlaceholder;
exports.SpreadElement = exports.RestElement = RestElement;
exports.ObjectPattern = exports.ObjectExpression = ObjectExpression;
exports.ObjectMethod = ObjectMethod;
exports.ObjectProperty = ObjectProperty;
exports.ArrayPattern = exports.ArrayExpression = ArrayExpression;
exports.RecordExpression = RecordExpression;
exports.TupleExpression = TupleExpression;
exports.RegExpLiteral = RegExpLiteral;
exports.BooleanLiteral = BooleanLiteral;
exports.NullLiteral = NullLiteral;
exports.NumericLiteral = NumericLiteral;
exports.StringLiteral = StringLiteral;
exports.BigIntLiteral = BigIntLiteral;
exports.DecimalLiteral = DecimalLiteral;
exports.PipelineTopicExpression = PipelineTopicExpression;
exports.PipelineBareFunction = PipelineBareFunction;
exports.PipelinePrimaryTopicReference = PipelinePrimaryTopicReference;

var t = __webpack_require__(11);

var _jsesc = __webpack_require__(138);

function Identifier(node) {
  this.exactSource(node.loc, () => {
    this.word(node.name);
  });
}

function ArgumentPlaceholder() {
  this.token("?");
}

function RestElement(node) {
  this.token("...");
  this.print(node.argument, node);
}

function ObjectExpression(node) {
  const props = node.properties;
  this.token("{");
  this.printInnerComments(node);

  if (props.length) {
    this.space();
    this.printList(props, node, {
      indent: true,
      statement: true
    });
    this.space();
  }

  this.token("}");
}

function ObjectMethod(node) {
  this.printJoin(node.decorators, node);

  this._methodHead(node);

  this.space();
  this.print(node.body, node);
}

function ObjectProperty(node) {
  this.printJoin(node.decorators, node);

  if (node.computed) {
    this.token("[");
    this.print(node.key, node);
    this.token("]");
  } else {
    if (t.isAssignmentPattern(node.value) && t.isIdentifier(node.key) && node.key.name === node.value.left.name) {
      this.print(node.value, node);
      return;
    }

    this.print(node.key, node);

    if (node.shorthand && t.isIdentifier(node.key) && t.isIdentifier(node.value) && node.key.name === node.value.name) {
      return;
    }
  }

  this.token(":");
  this.space();
  this.print(node.value, node);
}

function ArrayExpression(node) {
  const elems = node.elements;
  const len = elems.length;
  this.token("[");
  this.printInnerComments(node);

  for (let i = 0; i < elems.length; i++) {
    const elem = elems[i];

    if (elem) {
      if (i > 0) this.space();
      this.print(elem, node);
      if (i < len - 1) this.token(",");
    } else {
      this.token(",");
    }
  }

  this.token("]");
}

function RecordExpression(node) {
  const props = node.properties;
  let startToken;
  let endToken;

  if (this.format.recordAndTupleSyntaxType === "bar") {
    startToken = "{|";
    endToken = "|}";
  } else if (this.format.recordAndTupleSyntaxType === "hash") {
    startToken = "#{";
    endToken = "}";
  } else {
    throw new Error(`The "recordAndTupleSyntaxType" generator option must be "bar" or "hash" (${JSON.stringify(this.format.recordAndTupleSyntaxType)} received).`);
  }

  this.token(startToken);
  this.printInnerComments(node);

  if (props.length) {
    this.space();
    this.printList(props, node, {
      indent: true,
      statement: true
    });
    this.space();
  }

  this.token(endToken);
}

function TupleExpression(node) {
  const elems = node.elements;
  const len = elems.length;
  let startToken;
  let endToken;

  if (this.format.recordAndTupleSyntaxType === "bar") {
    startToken = "[|";
    endToken = "|]";
  } else if (this.format.recordAndTupleSyntaxType === "hash") {
    startToken = "#[";
    endToken = "]";
  } else {
    throw new Error(`${this.format.recordAndTupleSyntaxType} is not a valid recordAndTuple syntax type`);
  }

  this.token(startToken);
  this.printInnerComments(node);

  for (let i = 0; i < elems.length; i++) {
    const elem = elems[i];

    if (elem) {
      if (i > 0) this.space();
      this.print(elem, node);
      if (i < len - 1) this.token(",");
    }
  }

  this.token(endToken);
}

function RegExpLiteral(node) {
  this.word(`/${node.pattern}/${node.flags}`);
}

function BooleanLiteral(node) {
  this.word(node.value ? "true" : "false");
}

function NullLiteral() {
  this.word("null");
}

function NumericLiteral(node) {
  const raw = this.getPossibleRaw(node);
  const opts = this.format.jsescOption;
  const value = node.value + "";

  if (opts.numbers) {
    this.number(_jsesc(node.value, opts));
  } else if (raw == null) {
    this.number(value);
  } else if (this.format.minified) {
    this.number(raw.length < value.length ? raw : value);
  } else {
    this.number(raw);
  }
}

function StringLiteral(node) {
  const raw = this.getPossibleRaw(node);

  if (!this.format.minified && raw != null) {
    this.token(raw);
    return;
  }

  const val = _jsesc(node.value, Object.assign(this.format.jsescOption, this.format.jsonCompatibleStrings && {
    json: true
  }));

  return this.token(val);
}

function BigIntLiteral(node) {
  const raw = this.getPossibleRaw(node);

  if (!this.format.minified && raw != null) {
    this.word(raw);
    return;
  }

  this.word(node.value + "n");
}

function DecimalLiteral(node) {
  const raw = this.getPossibleRaw(node);

  if (!this.format.minified && raw != null) {
    this.word(raw);
    return;
  }

  this.word(node.value + "m");
}

function PipelineTopicExpression(node) {
  this.print(node.expression, node);
}

function PipelineBareFunction(node) {
  this.print(node.callee, node);
}

function PipelinePrimaryTopicReference() {
  this.token("#");
}

/***/ }),
/* 138 */
/***/ ((module) => {

"use strict";


const object = {};
const hasOwnProperty = object.hasOwnProperty;
const forOwn = (object, callback) => {
	for (const key in object) {
		if (hasOwnProperty.call(object, key)) {
			callback(key, object[key]);
		}
	}
};

const extend = (destination, source) => {
	if (!source) {
		return destination;
	}
	forOwn(source, (key, value) => {
		destination[key] = value;
	});
	return destination;
};

const forEach = (array, callback) => {
	const length = array.length;
	let index = -1;
	while (++index < length) {
		callback(array[index]);
	}
};

const toString = object.toString;
const isArray = Array.isArray;
const isBuffer = Buffer.isBuffer;
const isObject = (value) => {
	// This is a very simple check, but it’s good enough for what we need.
	return toString.call(value) == '[object Object]';
};
const isString = (value) => {
	return typeof value == 'string' ||
		toString.call(value) == '[object String]';
};
const isNumber = (value) => {
	return typeof value == 'number' ||
		toString.call(value) == '[object Number]';
};
const isFunction = (value) => {
	return typeof value == 'function';
};
const isMap = (value) => {
	return toString.call(value) == '[object Map]';
};
const isSet = (value) => {
	return toString.call(value) == '[object Set]';
};

/*--------------------------------------------------------------------------*/

// https://mathiasbynens.be/notes/javascript-escapes#single
const singleEscapes = {
	'"': '\\"',
	'\'': '\\\'',
	'\\': '\\\\',
	'\b': '\\b',
	'\f': '\\f',
	'\n': '\\n',
	'\r': '\\r',
	'\t': '\\t'
	// `\v` is omitted intentionally, because in IE < 9, '\v' == 'v'.
	// '\v': '\\x0B'
};
const regexSingleEscape = /["'\\\b\f\n\r\t]/;

const regexDigit = /[0-9]/;
const regexWhitelist = /[ !#-&\(-\[\]-_a-~]/;

const jsesc = (argument, options) => {
	const increaseIndentation = () => {
		oldIndent = indent;
		++options.indentLevel;
		indent = options.indent.repeat(options.indentLevel)
	};
	// Handle options
	const defaults = {
		'escapeEverything': false,
		'minimal': false,
		'isScriptContext': false,
		'quotes': 'single',
		'wrap': false,
		'es6': false,
		'json': false,
		'compact': true,
		'lowercaseHex': false,
		'numbers': 'decimal',
		'indent': '\t',
		'indentLevel': 0,
		'__inline1__': false,
		'__inline2__': false
	};
	const json = options && options.json;
	if (json) {
		defaults.quotes = 'double';
		defaults.wrap = true;
	}
	options = extend(defaults, options);
	if (
		options.quotes != 'single' &&
		options.quotes != 'double' &&
		options.quotes != 'backtick'
	) {
		options.quotes = 'single';
	}
	const quote = options.quotes == 'double' ?
		'"' :
		(options.quotes == 'backtick' ?
			'`' :
			'\''
		);
	const compact = options.compact;
	const lowercaseHex = options.lowercaseHex;
	let indent = options.indent.repeat(options.indentLevel);
	let oldIndent = '';
	const inline1 = options.__inline1__;
	const inline2 = options.__inline2__;
	const newLine = compact ? '' : '\n';
	let result;
	let isEmpty = true;
	const useBinNumbers = options.numbers == 'binary';
	const useOctNumbers = options.numbers == 'octal';
	const useDecNumbers = options.numbers == 'decimal';
	const useHexNumbers = options.numbers == 'hexadecimal';

	if (json && argument && isFunction(argument.toJSON)) {
		argument = argument.toJSON();
	}

	if (!isString(argument)) {
		if (isMap(argument)) {
			if (argument.size == 0) {
				return 'new Map()';
			}
			if (!compact) {
				options.__inline1__ = true;
				options.__inline2__ = false;
			}
			return 'new Map(' + jsesc(Array.from(argument), options) + ')';
		}
		if (isSet(argument)) {
			if (argument.size == 0) {
				return 'new Set()';
			}
			return 'new Set(' + jsesc(Array.from(argument), options) + ')';
		}
		if (isBuffer(argument)) {
			if (argument.length == 0) {
				return 'Buffer.from([])';
			}
			return 'Buffer.from(' + jsesc(Array.from(argument), options) + ')';
		}
		if (isArray(argument)) {
			result = [];
			options.wrap = true;
			if (inline1) {
				options.__inline1__ = false;
				options.__inline2__ = true;
			}
			if (!inline2) {
				increaseIndentation();
			}
			forEach(argument, (value) => {
				isEmpty = false;
				if (inline2) {
					options.__inline2__ = false;
				}
				result.push(
					(compact || inline2 ? '' : indent) +
					jsesc(value, options)
				);
			});
			if (isEmpty) {
				return '[]';
			}
			if (inline2) {
				return '[' + result.join(', ') + ']';
			}
			return '[' + newLine + result.join(',' + newLine) + newLine +
				(compact ? '' : oldIndent) + ']';
		} else if (isNumber(argument)) {
			if (json) {
				// Some number values (e.g. `Infinity`) cannot be represented in JSON.
				return JSON.stringify(argument);
			}
			if (useDecNumbers) {
				return String(argument);
			}
			if (useHexNumbers) {
				let hexadecimal = argument.toString(16);
				if (!lowercaseHex) {
					hexadecimal = hexadecimal.toUpperCase();
				}
				return '0x' + hexadecimal;
			}
			if (useBinNumbers) {
				return '0b' + argument.toString(2);
			}
			if (useOctNumbers) {
				return '0o' + argument.toString(8);
			}
		} else if (!isObject(argument)) {
			if (json) {
				// For some values (e.g. `undefined`, `function` objects),
				// `JSON.stringify(value)` returns `undefined` (which isn’t valid
				// JSON) instead of `'null'`.
				return JSON.stringify(argument) || 'null';
			}
			return String(argument);
		} else { // it’s an object
			result = [];
			options.wrap = true;
			increaseIndentation();
			forOwn(argument, (key, value) => {
				isEmpty = false;
				result.push(
					(compact ? '' : indent) +
					jsesc(key, options) + ':' +
					(compact ? '' : ' ') +
					jsesc(value, options)
				);
			});
			if (isEmpty) {
				return '{}';
			}
			return '{' + newLine + result.join(',' + newLine) + newLine +
				(compact ? '' : oldIndent) + '}';
		}
	}

	const string = argument;
	// Loop over each code unit in the string and escape it
	let index = -1;
	const length = string.length;
	result = '';
	while (++index < length) {
		const character = string.charAt(index);
		if (options.es6) {
			const first = string.charCodeAt(index);
			if ( // check if it’s the start of a surrogate pair
				first >= 0xD800 && first <= 0xDBFF && // high surrogate
				length > index + 1 // there is a next code unit
			) {
				const second = string.charCodeAt(index + 1);
				if (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate
					// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
					const codePoint = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
					let hexadecimal = codePoint.toString(16);
					if (!lowercaseHex) {
						hexadecimal = hexadecimal.toUpperCase();
					}
					result += '\\u{' + hexadecimal + '}';
					++index;
					continue;
				}
			}
		}
		if (!options.escapeEverything) {
			if (regexWhitelist.test(character)) {
				// It’s a printable ASCII character that is not `"`, `'` or `\`,
				// so don’t escape it.
				result += character;
				continue;
			}
			if (character == '"') {
				result += quote == character ? '\\"' : character;
				continue;
			}
			if (character == '`') {
				result += quote == character ? '\\`' : character;
				continue;
			}
			if (character == '\'') {
				result += quote == character ? '\\\'' : character;
				continue;
			}
		}
		if (
			character == '\0' &&
			!json &&
			!regexDigit.test(string.charAt(index + 1))
		) {
			result += '\\0';
			continue;
		}
		if (regexSingleEscape.test(character)) {
			// no need for a `hasOwnProperty` check here
			result += singleEscapes[character];
			continue;
		}
		const charCode = character.charCodeAt(0);
		if (options.minimal && charCode != 0x2028 && charCode != 0x2029) {
			result += character;
			continue;
		}
		let hexadecimal = charCode.toString(16);
		if (!lowercaseHex) {
			hexadecimal = hexadecimal.toUpperCase();
		}
		const longhand = hexadecimal.length > 2 || json;
		const escaped = '\\' + (longhand ? 'u' : 'x') +
			('0000' + hexadecimal).slice(longhand ? -4 : -2);
		result += escaped;
		continue;
	}
	if (options.wrap) {
		result = quote + result + quote;
	}
	if (quote == '`') {
		result = result.replace(/\$\{/g, '\\\$\{');
	}
	if (options.isScriptContext) {
		// https://mathiasbynens.be/notes/etago
		return result
			.replace(/<\/(script|style)/gi, '<\\/$1')
			.replace(/<!--/g, json ? '\\u003C!--' : '\\x3C!--');
	}
	return result;
};

jsesc.version = '2.5.2';

module.exports = jsesc;


/***/ }),
/* 139 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.AnyTypeAnnotation = AnyTypeAnnotation;
exports.ArrayTypeAnnotation = ArrayTypeAnnotation;
exports.BooleanTypeAnnotation = BooleanTypeAnnotation;
exports.BooleanLiteralTypeAnnotation = BooleanLiteralTypeAnnotation;
exports.NullLiteralTypeAnnotation = NullLiteralTypeAnnotation;
exports.DeclareClass = DeclareClass;
exports.DeclareFunction = DeclareFunction;
exports.InferredPredicate = InferredPredicate;
exports.DeclaredPredicate = DeclaredPredicate;
exports.DeclareInterface = DeclareInterface;
exports.DeclareModule = DeclareModule;
exports.DeclareModuleExports = DeclareModuleExports;
exports.DeclareTypeAlias = DeclareTypeAlias;
exports.DeclareOpaqueType = DeclareOpaqueType;
exports.DeclareVariable = DeclareVariable;
exports.DeclareExportDeclaration = DeclareExportDeclaration;
exports.DeclareExportAllDeclaration = DeclareExportAllDeclaration;
exports.EnumDeclaration = EnumDeclaration;
exports.EnumBooleanBody = EnumBooleanBody;
exports.EnumNumberBody = EnumNumberBody;
exports.EnumStringBody = EnumStringBody;
exports.EnumSymbolBody = EnumSymbolBody;
exports.EnumDefaultedMember = EnumDefaultedMember;
exports.EnumBooleanMember = EnumBooleanMember;
exports.EnumNumberMember = EnumNumberMember;
exports.EnumStringMember = EnumStringMember;
exports.ExistsTypeAnnotation = ExistsTypeAnnotation;
exports.FunctionTypeAnnotation = FunctionTypeAnnotation;
exports.FunctionTypeParam = FunctionTypeParam;
exports.GenericTypeAnnotation = exports.ClassImplements = exports.InterfaceExtends = InterfaceExtends;
exports._interfaceish = _interfaceish;
exports._variance = _variance;
exports.InterfaceDeclaration = InterfaceDeclaration;
exports.InterfaceTypeAnnotation = InterfaceTypeAnnotation;
exports.IntersectionTypeAnnotation = IntersectionTypeAnnotation;
exports.MixedTypeAnnotation = MixedTypeAnnotation;
exports.EmptyTypeAnnotation = EmptyTypeAnnotation;
exports.NullableTypeAnnotation = NullableTypeAnnotation;
exports.NumberTypeAnnotation = NumberTypeAnnotation;
exports.StringTypeAnnotation = StringTypeAnnotation;
exports.ThisTypeAnnotation = ThisTypeAnnotation;
exports.TupleTypeAnnotation = TupleTypeAnnotation;
exports.TypeofTypeAnnotation = TypeofTypeAnnotation;
exports.TypeAlias = TypeAlias;
exports.TypeAnnotation = TypeAnnotation;
exports.TypeParameterDeclaration = exports.TypeParameterInstantiation = TypeParameterInstantiation;
exports.TypeParameter = TypeParameter;
exports.OpaqueType = OpaqueType;
exports.ObjectTypeAnnotation = ObjectTypeAnnotation;
exports.ObjectTypeInternalSlot = ObjectTypeInternalSlot;
exports.ObjectTypeCallProperty = ObjectTypeCallProperty;
exports.ObjectTypeIndexer = ObjectTypeIndexer;
exports.ObjectTypeProperty = ObjectTypeProperty;
exports.ObjectTypeSpreadProperty = ObjectTypeSpreadProperty;
exports.QualifiedTypeIdentifier = QualifiedTypeIdentifier;
exports.SymbolTypeAnnotation = SymbolTypeAnnotation;
exports.UnionTypeAnnotation = UnionTypeAnnotation;
exports.TypeCastExpression = TypeCastExpression;
exports.Variance = Variance;
exports.VoidTypeAnnotation = VoidTypeAnnotation;
exports.IndexedAccessType = IndexedAccessType;
exports.OptionalIndexedAccessType = OptionalIndexedAccessType;
Object.defineProperty(exports, "NumberLiteralTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _types2.NumericLiteral;
  }
}));
Object.defineProperty(exports, "StringLiteralTypeAnnotation", ({
  enumerable: true,
  get: function () {
    return _types2.StringLiteral;
  }
}));

var t = __webpack_require__(11);

var _modules = __webpack_require__(136);

var _types2 = __webpack_require__(137);

function AnyTypeAnnotation() {
  this.word("any");
}

function ArrayTypeAnnotation(node) {
  this.print(node.elementType, node);
  this.token("[");
  this.token("]");
}

function BooleanTypeAnnotation() {
  this.word("boolean");
}

function BooleanLiteralTypeAnnotation(node) {
  this.word(node.value ? "true" : "false");
}

function NullLiteralTypeAnnotation() {
  this.word("null");
}

function DeclareClass(node, parent) {
  if (!t.isDeclareExportDeclaration(parent)) {
    this.word("declare");
    this.space();
  }

  this.word("class");
  this.space();

  this._interfaceish(node);
}

function DeclareFunction(node, parent) {
  if (!t.isDeclareExportDeclaration(parent)) {
    this.word("declare");
    this.space();
  }

  this.word("function");
  this.space();
  this.print(node.id, node);
  this.print(node.id.typeAnnotation.typeAnnotation, node);

  if (node.predicate) {
    this.space();
    this.print(node.predicate, node);
  }

  this.semicolon();
}

function InferredPredicate() {
  this.token("%");
  this.word("checks");
}

function DeclaredPredicate(node) {
  this.token("%");
  this.word("checks");
  this.token("(");
  this.print(node.value, node);
  this.token(")");
}

function DeclareInterface(node) {
  this.word("declare");
  this.space();
  this.InterfaceDeclaration(node);
}

function DeclareModule(node) {
  this.word("declare");
  this.space();
  this.word("module");
  this.space();
  this.print(node.id, node);
  this.space();
  this.print(node.body, node);
}

function DeclareModuleExports(node) {
  this.word("declare");
  this.space();
  this.word("module");
  this.token(".");
  this.word("exports");
  this.print(node.typeAnnotation, node);
}

function DeclareTypeAlias(node) {
  this.word("declare");
  this.space();
  this.TypeAlias(node);
}

function DeclareOpaqueType(node, parent) {
  if (!t.isDeclareExportDeclaration(parent)) {
    this.word("declare");
    this.space();
  }

  this.OpaqueType(node);
}

function DeclareVariable(node, parent) {
  if (!t.isDeclareExportDeclaration(parent)) {
    this.word("declare");
    this.space();
  }

  this.word("var");
  this.space();
  this.print(node.id, node);
  this.print(node.id.typeAnnotation, node);
  this.semicolon();
}

function DeclareExportDeclaration(node) {
  this.word("declare");
  this.space();
  this.word("export");
  this.space();

  if (node.default) {
    this.word("default");
    this.space();
  }

  FlowExportDeclaration.apply(this, arguments);
}

function DeclareExportAllDeclaration() {
  this.word("declare");
  this.space();

  _modules.ExportAllDeclaration.apply(this, arguments);
}

function EnumDeclaration(node) {
  const {
    id,
    body
  } = node;
  this.word("enum");
  this.space();
  this.print(id, node);
  this.print(body, node);
}

function enumExplicitType(context, name, hasExplicitType) {
  if (hasExplicitType) {
    context.space();
    context.word("of");
    context.space();
    context.word(name);
  }

  context.space();
}

function enumBody(context, node) {
  const {
    members
  } = node;
  context.token("{");
  context.indent();
  context.newline();

  for (const member of members) {
    context.print(member, node);
    context.newline();
  }

  if (node.hasUnknownMembers) {
    context.token("...");
    context.newline();
  }

  context.dedent();
  context.token("}");
}

function EnumBooleanBody(node) {
  const {
    explicitType
  } = node;
  enumExplicitType(this, "boolean", explicitType);
  enumBody(this, node);
}

function EnumNumberBody(node) {
  const {
    explicitType
  } = node;
  enumExplicitType(this, "number", explicitType);
  enumBody(this, node);
}

function EnumStringBody(node) {
  const {
    explicitType
  } = node;
  enumExplicitType(this, "string", explicitType);
  enumBody(this, node);
}

function EnumSymbolBody(node) {
  enumExplicitType(this, "symbol", true);
  enumBody(this, node);
}

function EnumDefaultedMember(node) {
  const {
    id
  } = node;
  this.print(id, node);
  this.token(",");
}

function enumInitializedMember(context, node) {
  const {
    id,
    init
  } = node;
  context.print(id, node);
  context.space();
  context.token("=");
  context.space();
  context.print(init, node);
  context.token(",");
}

function EnumBooleanMember(node) {
  enumInitializedMember(this, node);
}

function EnumNumberMember(node) {
  enumInitializedMember(this, node);
}

function EnumStringMember(node) {
  enumInitializedMember(this, node);
}

function FlowExportDeclaration(node) {
  if (node.declaration) {
    const declar = node.declaration;
    this.print(declar, node);
    if (!t.isStatement(declar)) this.semicolon();
  } else {
    this.token("{");

    if (node.specifiers.length) {
      this.space();
      this.printList(node.specifiers, node);
      this.space();
    }

    this.token("}");

    if (node.source) {
      this.space();
      this.word("from");
      this.space();
      this.print(node.source, node);
    }

    this.semicolon();
  }
}

function ExistsTypeAnnotation() {
  this.token("*");
}

function FunctionTypeAnnotation(node, parent) {
  this.print(node.typeParameters, node);
  this.token("(");

  if (node.this) {
    this.word("this");
    this.token(":");
    this.space();
    this.print(node.this.typeAnnotation, node);

    if (node.params.length || node.rest) {
      this.token(",");
      this.space();
    }
  }

  this.printList(node.params, node);

  if (node.rest) {
    if (node.params.length) {
      this.token(",");
      this.space();
    }

    this.token("...");
    this.print(node.rest, node);
  }

  this.token(")");

  if (parent.type === "ObjectTypeCallProperty" || parent.type === "DeclareFunction" || parent.type === "ObjectTypeProperty" && parent.method) {
    this.token(":");
  } else {
    this.space();
    this.token("=>");
  }

  this.space();
  this.print(node.returnType, node);
}

function FunctionTypeParam(node) {
  this.print(node.name, node);
  if (node.optional) this.token("?");

  if (node.name) {
    this.token(":");
    this.space();
  }

  this.print(node.typeAnnotation, node);
}

function InterfaceExtends(node) {
  this.print(node.id, node);
  this.print(node.typeParameters, node);
}

function _interfaceish(node) {
  var _node$extends;

  this.print(node.id, node);
  this.print(node.typeParameters, node);

  if ((_node$extends = node.extends) != null && _node$extends.length) {
    this.space();
    this.word("extends");
    this.space();
    this.printList(node.extends, node);
  }

  if (node.mixins && node.mixins.length) {
    this.space();
    this.word("mixins");
    this.space();
    this.printList(node.mixins, node);
  }

  if (node.implements && node.implements.length) {
    this.space();
    this.word("implements");
    this.space();
    this.printList(node.implements, node);
  }

  this.space();
  this.print(node.body, node);
}

function _variance(node) {
  if (node.variance) {
    if (node.variance.kind === "plus") {
      this.token("+");
    } else if (node.variance.kind === "minus") {
      this.token("-");
    }
  }
}

function InterfaceDeclaration(node) {
  this.word("interface");
  this.space();

  this._interfaceish(node);
}

function andSeparator() {
  this.space();
  this.token("&");
  this.space();
}

function InterfaceTypeAnnotation(node) {
  this.word("interface");

  if (node.extends && node.extends.length) {
    this.space();
    this.word("extends");
    this.space();
    this.printList(node.extends, node);
  }

  this.space();
  this.print(node.body, node);
}

function IntersectionTypeAnnotation(node) {
  this.printJoin(node.types, node, {
    separator: andSeparator
  });
}

function MixedTypeAnnotation() {
  this.word("mixed");
}

function EmptyTypeAnnotation() {
  this.word("empty");
}

function NullableTypeAnnotation(node) {
  this.token("?");
  this.print(node.typeAnnotation, node);
}

function NumberTypeAnnotation() {
  this.word("number");
}

function StringTypeAnnotation() {
  this.word("string");
}

function ThisTypeAnnotation() {
  this.word("this");
}

function TupleTypeAnnotation(node) {
  this.token("[");
  this.printList(node.types, node);
  this.token("]");
}

function TypeofTypeAnnotation(node) {
  this.word("typeof");
  this.space();
  this.print(node.argument, node);
}

function TypeAlias(node) {
  this.word("type");
  this.space();
  this.print(node.id, node);
  this.print(node.typeParameters, node);
  this.space();
  this.token("=");
  this.space();
  this.print(node.right, node);
  this.semicolon();
}

function TypeAnnotation(node) {
  this.token(":");
  this.space();
  if (node.optional) this.token("?");
  this.print(node.typeAnnotation, node);
}

function TypeParameterInstantiation(node) {
  this.token("<");
  this.printList(node.params, node, {});
  this.token(">");
}

function TypeParameter(node) {
  this._variance(node);

  this.word(node.name);

  if (node.bound) {
    this.print(node.bound, node);
  }

  if (node.default) {
    this.space();
    this.token("=");
    this.space();
    this.print(node.default, node);
  }
}

function OpaqueType(node) {
  this.word("opaque");
  this.space();
  this.word("type");
  this.space();
  this.print(node.id, node);
  this.print(node.typeParameters, node);

  if (node.supertype) {
    this.token(":");
    this.space();
    this.print(node.supertype, node);
  }

  if (node.impltype) {
    this.space();
    this.token("=");
    this.space();
    this.print(node.impltype, node);
  }

  this.semicolon();
}

function ObjectTypeAnnotation(node) {
  if (node.exact) {
    this.token("{|");
  } else {
    this.token("{");
  }

  const props = [...node.properties, ...(node.callProperties || []), ...(node.indexers || []), ...(node.internalSlots || [])];

  if (props.length) {
    this.space();
    this.printJoin(props, node, {
      addNewlines(leading) {
        if (leading && !props[0]) return 1;
      },

      indent: true,
      statement: true,
      iterator: () => {
        if (props.length !== 1 || node.inexact) {
          this.token(",");
          this.space();
        }
      }
    });
    this.space();
  }

  if (node.inexact) {
    this.indent();
    this.token("...");

    if (props.length) {
      this.newline();
    }

    this.dedent();
  }

  if (node.exact) {
    this.token("|}");
  } else {
    this.token("}");
  }
}

function ObjectTypeInternalSlot(node) {
  if (node.static) {
    this.word("static");
    this.space();
  }

  this.token("[");
  this.token("[");
  this.print(node.id, node);
  this.token("]");
  this.token("]");
  if (node.optional) this.token("?");

  if (!node.method) {
    this.token(":");
    this.space();
  }

  this.print(node.value, node);
}

function ObjectTypeCallProperty(node) {
  if (node.static) {
    this.word("static");
    this.space();
  }

  this.print(node.value, node);
}

function ObjectTypeIndexer(node) {
  if (node.static) {
    this.word("static");
    this.space();
  }

  this._variance(node);

  this.token("[");

  if (node.id) {
    this.print(node.id, node);
    this.token(":");
    this.space();
  }

  this.print(node.key, node);
  this.token("]");
  this.token(":");
  this.space();
  this.print(node.value, node);
}

function ObjectTypeProperty(node) {
  if (node.proto) {
    this.word("proto");
    this.space();
  }

  if (node.static) {
    this.word("static");
    this.space();
  }

  if (node.kind === "get" || node.kind === "set") {
    this.word(node.kind);
    this.space();
  }

  this._variance(node);

  this.print(node.key, node);
  if (node.optional) this.token("?");

  if (!node.method) {
    this.token(":");
    this.space();
  }

  this.print(node.value, node);
}

function ObjectTypeSpreadProperty(node) {
  this.token("...");
  this.print(node.argument, node);
}

function QualifiedTypeIdentifier(node) {
  this.print(node.qualification, node);
  this.token(".");
  this.print(node.id, node);
}

function SymbolTypeAnnotation() {
  this.word("symbol");
}

function orSeparator() {
  this.space();
  this.token("|");
  this.space();
}

function UnionTypeAnnotation(node) {
  this.printJoin(node.types, node, {
    separator: orSeparator
  });
}

function TypeCastExpression(node) {
  this.token("(");
  this.print(node.expression, node);
  this.print(node.typeAnnotation, node);
  this.token(")");
}

function Variance(node) {
  if (node.kind === "plus") {
    this.token("+");
  } else {
    this.token("-");
  }
}

function VoidTypeAnnotation() {
  this.word("void");
}

function IndexedAccessType(node) {
  this.print(node.objectType, node);
  this.token("[");
  this.print(node.indexType, node);
  this.token("]");
}

function OptionalIndexedAccessType(node) {
  this.print(node.objectType, node);

  if (node.optional) {
    this.token("?.");
  }

  this.token("[");
  this.print(node.indexType, node);
  this.token("]");
}

/***/ }),
/* 140 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.File = File;
exports.Program = Program;
exports.BlockStatement = BlockStatement;
exports.Directive = Directive;
exports.DirectiveLiteral = DirectiveLiteral;
exports.InterpreterDirective = InterpreterDirective;
exports.Placeholder = Placeholder;

var t = __webpack_require__(11);

function File(node) {
  if (node.program) {
    this.print(node.program.interpreter, node);
  }

  this.print(node.program, node);
}

function Program(node) {
  this.printInnerComments(node, false);
  this.printSequence(node.directives, node);
  if (node.directives && node.directives.length) this.newline();
  this.printSequence(node.body, node);
}

function BlockStatement(node) {
  var _node$directives;

  this.token("{");
  this.printInnerComments(node);
  const hasDirectives = (_node$directives = node.directives) == null ? void 0 : _node$directives.length;

  if (node.body.length || hasDirectives) {
    this.newline();
    this.printSequence(node.directives, node, {
      indent: true
    });
    if (hasDirectives) this.newline();
    this.printSequence(node.body, node, {
      indent: true
    });
    this.removeTrailingNewline();
    this.source("end", node.loc);
    if (!this.endsWith("\n")) this.newline();
    this.rightBrace();
  } else {
    this.source("end", node.loc);
    this.token("}");
  }
}

function Directive(node) {
  this.print(node.value, node);
  this.semicolon();
}

const unescapedSingleQuoteRE = /(?:^|[^\\])(?:\\\\)*'/;
const unescapedDoubleQuoteRE = /(?:^|[^\\])(?:\\\\)*"/;

function DirectiveLiteral(node) {
  const raw = this.getPossibleRaw(node);

  if (raw != null) {
    this.token(raw);
    return;
  }

  const {
    value
  } = node;

  if (!unescapedDoubleQuoteRE.test(value)) {
    this.token(`"${value}"`);
  } else if (!unescapedSingleQuoteRE.test(value)) {
    this.token(`'${value}'`);
  } else {
    throw new Error("Malformed AST: it is not possible to print a directive containing" + " both unescaped single and double quotes.");
  }
}

function InterpreterDirective(node) {
  this.token(`#!${node.value}\n`);
}

function Placeholder(node) {
  this.token("%%");
  this.print(node.name);
  this.token("%%");

  if (node.expectedNode === "Statement") {
    this.semicolon();
  }
}

/***/ }),
/* 141 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.JSXAttribute = JSXAttribute;
exports.JSXIdentifier = JSXIdentifier;
exports.JSXNamespacedName = JSXNamespacedName;
exports.JSXMemberExpression = JSXMemberExpression;
exports.JSXSpreadAttribute = JSXSpreadAttribute;
exports.JSXExpressionContainer = JSXExpressionContainer;
exports.JSXSpreadChild = JSXSpreadChild;
exports.JSXText = JSXText;
exports.JSXElement = JSXElement;
exports.JSXOpeningElement = JSXOpeningElement;
exports.JSXClosingElement = JSXClosingElement;
exports.JSXEmptyExpression = JSXEmptyExpression;
exports.JSXFragment = JSXFragment;
exports.JSXOpeningFragment = JSXOpeningFragment;
exports.JSXClosingFragment = JSXClosingFragment;

var t = __webpack_require__(11);

function JSXAttribute(node) {
  this.print(node.name, node);

  if (node.value) {
    this.token("=");
    this.print(node.value, node);
  }
}

function JSXIdentifier(node) {
  this.word(node.name);
}

function JSXNamespacedName(node) {
  this.print(node.namespace, node);
  this.token(":");
  this.print(node.name, node);
}

function JSXMemberExpression(node) {
  this.print(node.object, node);
  this.token(".");
  this.print(node.property, node);
}

function JSXSpreadAttribute(node) {
  this.token("{");
  this.token("...");
  this.print(node.argument, node);
  this.token("}");
}

function JSXExpressionContainer(node) {
  this.token("{");
  this.print(node.expression, node);
  this.token("}");
}

function JSXSpreadChild(node) {
  this.token("{");
  this.token("...");
  this.print(node.expression, node);
  this.token("}");
}

function JSXText(node) {
  const raw = this.getPossibleRaw(node);

  if (raw != null) {
    this.token(raw);
  } else {
    this.token(node.value);
  }
}

function JSXElement(node) {
  const open = node.openingElement;
  this.print(open, node);
  if (open.selfClosing) return;
  this.indent();

  for (const child of node.children) {
    this.print(child, node);
  }

  this.dedent();
  this.print(node.closingElement, node);
}

function spaceSeparator() {
  this.space();
}

function JSXOpeningElement(node) {
  this.token("<");
  this.print(node.name, node);
  this.print(node.typeParameters, node);

  if (node.attributes.length > 0) {
    this.space();
    this.printJoin(node.attributes, node, {
      separator: spaceSeparator
    });
  }

  if (node.selfClosing) {
    this.space();
    this.token("/>");
  } else {
    this.token(">");
  }
}

function JSXClosingElement(node) {
  this.token("</");
  this.print(node.name, node);
  this.token(">");
}

function JSXEmptyExpression(node) {
  this.printInnerComments(node);
}

function JSXFragment(node) {
  this.print(node.openingFragment, node);
  this.indent();

  for (const child of node.children) {
    this.print(child, node);
  }

  this.dedent();
  this.print(node.closingFragment, node);
}

function JSXOpeningFragment() {
  this.token("<");
  this.token(">");
}

function JSXClosingFragment() {
  this.token("</");
  this.token(">");
}

/***/ }),
/* 142 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TSTypeAnnotation = TSTypeAnnotation;
exports.TSTypeParameterDeclaration = exports.TSTypeParameterInstantiation = TSTypeParameterInstantiation;
exports.TSTypeParameter = TSTypeParameter;
exports.TSParameterProperty = TSParameterProperty;
exports.TSDeclareFunction = TSDeclareFunction;
exports.TSDeclareMethod = TSDeclareMethod;
exports.TSQualifiedName = TSQualifiedName;
exports.TSCallSignatureDeclaration = TSCallSignatureDeclaration;
exports.TSConstructSignatureDeclaration = TSConstructSignatureDeclaration;
exports.TSPropertySignature = TSPropertySignature;
exports.tsPrintPropertyOrMethodName = tsPrintPropertyOrMethodName;
exports.TSMethodSignature = TSMethodSignature;
exports.TSIndexSignature = TSIndexSignature;
exports.TSAnyKeyword = TSAnyKeyword;
exports.TSBigIntKeyword = TSBigIntKeyword;
exports.TSUnknownKeyword = TSUnknownKeyword;
exports.TSNumberKeyword = TSNumberKeyword;
exports.TSObjectKeyword = TSObjectKeyword;
exports.TSBooleanKeyword = TSBooleanKeyword;
exports.TSStringKeyword = TSStringKeyword;
exports.TSSymbolKeyword = TSSymbolKeyword;
exports.TSVoidKeyword = TSVoidKeyword;
exports.TSUndefinedKeyword = TSUndefinedKeyword;
exports.TSNullKeyword = TSNullKeyword;
exports.TSNeverKeyword = TSNeverKeyword;
exports.TSIntrinsicKeyword = TSIntrinsicKeyword;
exports.TSThisType = TSThisType;
exports.TSFunctionType = TSFunctionType;
exports.TSConstructorType = TSConstructorType;
exports.tsPrintFunctionOrConstructorType = tsPrintFunctionOrConstructorType;
exports.TSTypeReference = TSTypeReference;
exports.TSTypePredicate = TSTypePredicate;
exports.TSTypeQuery = TSTypeQuery;
exports.TSTypeLiteral = TSTypeLiteral;
exports.tsPrintTypeLiteralOrInterfaceBody = tsPrintTypeLiteralOrInterfaceBody;
exports.tsPrintBraced = tsPrintBraced;
exports.TSArrayType = TSArrayType;
exports.TSTupleType = TSTupleType;
exports.TSOptionalType = TSOptionalType;
exports.TSRestType = TSRestType;
exports.TSNamedTupleMember = TSNamedTupleMember;
exports.TSUnionType = TSUnionType;
exports.TSIntersectionType = TSIntersectionType;
exports.tsPrintUnionOrIntersectionType = tsPrintUnionOrIntersectionType;
exports.TSConditionalType = TSConditionalType;
exports.TSInferType = TSInferType;
exports.TSParenthesizedType = TSParenthesizedType;
exports.TSTypeOperator = TSTypeOperator;
exports.TSIndexedAccessType = TSIndexedAccessType;
exports.TSMappedType = TSMappedType;
exports.TSLiteralType = TSLiteralType;
exports.TSExpressionWithTypeArguments = TSExpressionWithTypeArguments;
exports.TSInterfaceDeclaration = TSInterfaceDeclaration;
exports.TSInterfaceBody = TSInterfaceBody;
exports.TSTypeAliasDeclaration = TSTypeAliasDeclaration;
exports.TSAsExpression = TSAsExpression;
exports.TSTypeAssertion = TSTypeAssertion;
exports.TSEnumDeclaration = TSEnumDeclaration;
exports.TSEnumMember = TSEnumMember;
exports.TSModuleDeclaration = TSModuleDeclaration;
exports.TSModuleBlock = TSModuleBlock;
exports.TSImportType = TSImportType;
exports.TSImportEqualsDeclaration = TSImportEqualsDeclaration;
exports.TSExternalModuleReference = TSExternalModuleReference;
exports.TSNonNullExpression = TSNonNullExpression;
exports.TSExportAssignment = TSExportAssignment;
exports.TSNamespaceExportDeclaration = TSNamespaceExportDeclaration;
exports.tsPrintSignatureDeclarationBase = tsPrintSignatureDeclarationBase;
exports.tsPrintClassMemberModifiers = tsPrintClassMemberModifiers;

var t = __webpack_require__(11);

function TSTypeAnnotation(node) {
  this.token(":");
  this.space();
  if (node.optional) this.token("?");
  this.print(node.typeAnnotation, node);
}

function TSTypeParameterInstantiation(node) {
  this.token("<");
  this.printList(node.params, node, {});
  this.token(">");
}

function TSTypeParameter(node) {
  this.word(node.name);

  if (node.constraint) {
    this.space();
    this.word("extends");
    this.space();
    this.print(node.constraint, node);
  }

  if (node.default) {
    this.space();
    this.token("=");
    this.space();
    this.print(node.default, node);
  }
}

function TSParameterProperty(node) {
  if (node.accessibility) {
    this.word(node.accessibility);
    this.space();
  }

  if (node.readonly) {
    this.word("readonly");
    this.space();
  }

  this._param(node.parameter);
}

function TSDeclareFunction(node) {
  if (node.declare) {
    this.word("declare");
    this.space();
  }

  this._functionHead(node);

  this.token(";");
}

function TSDeclareMethod(node) {
  this._classMethodHead(node);

  this.token(";");
}

function TSQualifiedName(node) {
  this.print(node.left, node);
  this.token(".");
  this.print(node.right, node);
}

function TSCallSignatureDeclaration(node) {
  this.tsPrintSignatureDeclarationBase(node);
  this.token(";");
}

function TSConstructSignatureDeclaration(node) {
  this.word("new");
  this.space();
  this.tsPrintSignatureDeclarationBase(node);
  this.token(";");
}

function TSPropertySignature(node) {
  const {
    readonly,
    initializer
  } = node;

  if (readonly) {
    this.word("readonly");
    this.space();
  }

  this.tsPrintPropertyOrMethodName(node);
  this.print(node.typeAnnotation, node);

  if (initializer) {
    this.space();
    this.token("=");
    this.space();
    this.print(initializer, node);
  }

  this.token(";");
}

function tsPrintPropertyOrMethodName(node) {
  if (node.computed) {
    this.token("[");
  }

  this.print(node.key, node);

  if (node.computed) {
    this.token("]");
  }

  if (node.optional) {
    this.token("?");
  }
}

function TSMethodSignature(node) {
  const {
    kind
  } = node;

  if (kind === "set" || kind === "get") {
    this.word(kind);
    this.space();
  }

  this.tsPrintPropertyOrMethodName(node);
  this.tsPrintSignatureDeclarationBase(node);
  this.token(";");
}

function TSIndexSignature(node) {
  const {
    readonly,
    static: isStatic
  } = node;

  if (isStatic) {
    this.word("static");
    this.space();
  }

  if (readonly) {
    this.word("readonly");
    this.space();
  }

  this.token("[");

  this._parameters(node.parameters, node);

  this.token("]");
  this.print(node.typeAnnotation, node);
  this.token(";");
}

function TSAnyKeyword() {
  this.word("any");
}

function TSBigIntKeyword() {
  this.word("bigint");
}

function TSUnknownKeyword() {
  this.word("unknown");
}

function TSNumberKeyword() {
  this.word("number");
}

function TSObjectKeyword() {
  this.word("object");
}

function TSBooleanKeyword() {
  this.word("boolean");
}

function TSStringKeyword() {
  this.word("string");
}

function TSSymbolKeyword() {
  this.word("symbol");
}

function TSVoidKeyword() {
  this.word("void");
}

function TSUndefinedKeyword() {
  this.word("undefined");
}

function TSNullKeyword() {
  this.word("null");
}

function TSNeverKeyword() {
  this.word("never");
}

function TSIntrinsicKeyword() {
  this.word("intrinsic");
}

function TSThisType() {
  this.word("this");
}

function TSFunctionType(node) {
  this.tsPrintFunctionOrConstructorType(node);
}

function TSConstructorType(node) {
  if (node.abstract) {
    this.word("abstract");
    this.space();
  }

  this.word("new");
  this.space();
  this.tsPrintFunctionOrConstructorType(node);
}

function tsPrintFunctionOrConstructorType(node) {
  const {
    typeParameters,
    parameters
  } = node;
  this.print(typeParameters, node);
  this.token("(");

  this._parameters(parameters, node);

  this.token(")");
  this.space();
  this.token("=>");
  this.space();
  this.print(node.typeAnnotation.typeAnnotation, node);
}

function TSTypeReference(node) {
  this.print(node.typeName, node);
  this.print(node.typeParameters, node);
}

function TSTypePredicate(node) {
  if (node.asserts) {
    this.word("asserts");
    this.space();
  }

  this.print(node.parameterName);

  if (node.typeAnnotation) {
    this.space();
    this.word("is");
    this.space();
    this.print(node.typeAnnotation.typeAnnotation);
  }
}

function TSTypeQuery(node) {
  this.word("typeof");
  this.space();
  this.print(node.exprName);
}

function TSTypeLiteral(node) {
  this.tsPrintTypeLiteralOrInterfaceBody(node.members, node);
}

function tsPrintTypeLiteralOrInterfaceBody(members, node) {
  this.tsPrintBraced(members, node);
}

function tsPrintBraced(members, node) {
  this.token("{");

  if (members.length) {
    this.indent();
    this.newline();

    for (const member of members) {
      this.print(member, node);
      this.newline();
    }

    this.dedent();
    this.rightBrace();
  } else {
    this.token("}");
  }
}

function TSArrayType(node) {
  this.print(node.elementType, node);
  this.token("[]");
}

function TSTupleType(node) {
  this.token("[");
  this.printList(node.elementTypes, node);
  this.token("]");
}

function TSOptionalType(node) {
  this.print(node.typeAnnotation, node);
  this.token("?");
}

function TSRestType(node) {
  this.token("...");
  this.print(node.typeAnnotation, node);
}

function TSNamedTupleMember(node) {
  this.print(node.label, node);
  if (node.optional) this.token("?");
  this.token(":");
  this.space();
  this.print(node.elementType, node);
}

function TSUnionType(node) {
  this.tsPrintUnionOrIntersectionType(node, "|");
}

function TSIntersectionType(node) {
  this.tsPrintUnionOrIntersectionType(node, "&");
}

function tsPrintUnionOrIntersectionType(node, sep) {
  this.printJoin(node.types, node, {
    separator() {
      this.space();
      this.token(sep);
      this.space();
    }

  });
}

function TSConditionalType(node) {
  this.print(node.checkType);
  this.space();
  this.word("extends");
  this.space();
  this.print(node.extendsType);
  this.space();
  this.token("?");
  this.space();
  this.print(node.trueType);
  this.space();
  this.token(":");
  this.space();
  this.print(node.falseType);
}

function TSInferType(node) {
  this.token("infer");
  this.space();
  this.print(node.typeParameter);
}

function TSParenthesizedType(node) {
  this.token("(");
  this.print(node.typeAnnotation, node);
  this.token(")");
}

function TSTypeOperator(node) {
  this.word(node.operator);
  this.space();
  this.print(node.typeAnnotation, node);
}

function TSIndexedAccessType(node) {
  this.print(node.objectType, node);
  this.token("[");
  this.print(node.indexType, node);
  this.token("]");
}

function TSMappedType(node) {
  const {
    nameType,
    optional,
    readonly,
    typeParameter
  } = node;
  this.token("{");
  this.space();

  if (readonly) {
    tokenIfPlusMinus(this, readonly);
    this.word("readonly");
    this.space();
  }

  this.token("[");
  this.word(typeParameter.name);
  this.space();
  this.word("in");
  this.space();
  this.print(typeParameter.constraint, typeParameter);

  if (nameType) {
    this.space();
    this.word("as");
    this.space();
    this.print(nameType, node);
  }

  this.token("]");

  if (optional) {
    tokenIfPlusMinus(this, optional);
    this.token("?");
  }

  this.token(":");
  this.space();
  this.print(node.typeAnnotation, node);
  this.space();
  this.token("}");
}

function tokenIfPlusMinus(self, tok) {
  if (tok !== true) {
    self.token(tok);
  }
}

function TSLiteralType(node) {
  this.print(node.literal, node);
}

function TSExpressionWithTypeArguments(node) {
  this.print(node.expression, node);
  this.print(node.typeParameters, node);
}

function TSInterfaceDeclaration(node) {
  const {
    declare,
    id,
    typeParameters,
    extends: extendz,
    body
  } = node;

  if (declare) {
    this.word("declare");
    this.space();
  }

  this.word("interface");
  this.space();
  this.print(id, node);
  this.print(typeParameters, node);

  if (extendz != null && extendz.length) {
    this.space();
    this.word("extends");
    this.space();
    this.printList(extendz, node);
  }

  this.space();
  this.print(body, node);
}

function TSInterfaceBody(node) {
  this.tsPrintTypeLiteralOrInterfaceBody(node.body, node);
}

function TSTypeAliasDeclaration(node) {
  const {
    declare,
    id,
    typeParameters,
    typeAnnotation
  } = node;

  if (declare) {
    this.word("declare");
    this.space();
  }

  this.word("type");
  this.space();
  this.print(id, node);
  this.print(typeParameters, node);
  this.space();
  this.token("=");
  this.space();
  this.print(typeAnnotation, node);
  this.token(";");
}

function TSAsExpression(node) {
  const {
    expression,
    typeAnnotation
  } = node;
  this.print(expression, node);
  this.space();
  this.word("as");
  this.space();
  this.print(typeAnnotation, node);
}

function TSTypeAssertion(node) {
  const {
    typeAnnotation,
    expression
  } = node;
  this.token("<");
  this.print(typeAnnotation, node);
  this.token(">");
  this.space();
  this.print(expression, node);
}

function TSEnumDeclaration(node) {
  const {
    declare,
    const: isConst,
    id,
    members
  } = node;

  if (declare) {
    this.word("declare");
    this.space();
  }

  if (isConst) {
    this.word("const");
    this.space();
  }

  this.word("enum");
  this.space();
  this.print(id, node);
  this.space();
  this.tsPrintBraced(members, node);
}

function TSEnumMember(node) {
  const {
    id,
    initializer
  } = node;
  this.print(id, node);

  if (initializer) {
    this.space();
    this.token("=");
    this.space();
    this.print(initializer, node);
  }

  this.token(",");
}

function TSModuleDeclaration(node) {
  const {
    declare,
    id
  } = node;

  if (declare) {
    this.word("declare");
    this.space();
  }

  if (!node.global) {
    this.word(id.type === "Identifier" ? "namespace" : "module");
    this.space();
  }

  this.print(id, node);

  if (!node.body) {
    this.token(";");
    return;
  }

  let body = node.body;

  while (body.type === "TSModuleDeclaration") {
    this.token(".");
    this.print(body.id, body);
    body = body.body;
  }

  this.space();
  this.print(body, node);
}

function TSModuleBlock(node) {
  this.tsPrintBraced(node.body, node);
}

function TSImportType(node) {
  const {
    argument,
    qualifier,
    typeParameters
  } = node;
  this.word("import");
  this.token("(");
  this.print(argument, node);
  this.token(")");

  if (qualifier) {
    this.token(".");
    this.print(qualifier, node);
  }

  if (typeParameters) {
    this.print(typeParameters, node);
  }
}

function TSImportEqualsDeclaration(node) {
  const {
    isExport,
    id,
    moduleReference
  } = node;

  if (isExport) {
    this.word("export");
    this.space();
  }

  this.word("import");
  this.space();
  this.print(id, node);
  this.space();
  this.token("=");
  this.space();
  this.print(moduleReference, node);
  this.token(";");
}

function TSExternalModuleReference(node) {
  this.token("require(");
  this.print(node.expression, node);
  this.token(")");
}

function TSNonNullExpression(node) {
  this.print(node.expression, node);
  this.token("!");
}

function TSExportAssignment(node) {
  this.word("export");
  this.space();
  this.token("=");
  this.space();
  this.print(node.expression, node);
  this.token(";");
}

function TSNamespaceExportDeclaration(node) {
  this.word("export");
  this.space();
  this.word("as");
  this.space();
  this.word("namespace");
  this.space();
  this.print(node.id, node);
}

function tsPrintSignatureDeclarationBase(node) {
  const {
    typeParameters,
    parameters
  } = node;
  this.print(typeParameters, node);
  this.token("(");

  this._parameters(parameters, node);

  this.token(")");
  this.print(node.typeAnnotation, node);
}

function tsPrintClassMemberModifiers(node, isField) {
  if (isField && node.declare) {
    this.word("declare");
    this.space();
  }

  if (node.accessibility) {
    this.word(node.accessibility);
    this.space();
  }

  if (node.static) {
    this.word("static");
    this.space();
  }

  if (node.override) {
    this.word("override");
    this.space();
  }

  if (node.abstract) {
    this.word("abstract");
    this.space();
  }

  if (isField && node.readonly) {
    this.word("readonly");
    this.space();
  }
}

/***/ }),
/* 143 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.findParent = findParent;
exports.find = find;
exports.getFunctionParent = getFunctionParent;
exports.getStatementParent = getStatementParent;
exports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;
exports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;
exports.getAncestry = getAncestry;
exports.isAncestor = isAncestor;
exports.isDescendant = isDescendant;
exports.inType = inType;

var t = __webpack_require__(11);

var _index = __webpack_require__(9);

function findParent(callback) {
  let path = this;

  while (path = path.parentPath) {
    if (callback(path)) return path;
  }

  return null;
}

function find(callback) {
  let path = this;

  do {
    if (callback(path)) return path;
  } while (path = path.parentPath);

  return null;
}

function getFunctionParent() {
  return this.findParent(p => p.isFunction());
}

function getStatementParent() {
  let path = this;

  do {
    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {
      break;
    } else {
      path = path.parentPath;
    }
  } while (path);

  if (path && (path.isProgram() || path.isFile())) {
    throw new Error("File/Program node, we can't possibly find a statement parent to this");
  }

  return path;
}

function getEarliestCommonAncestorFrom(paths) {
  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {
    let earliest;
    const keys = t.VISITOR_KEYS[deepest.type];

    for (const ancestry of ancestries) {
      const path = ancestry[i + 1];

      if (!earliest) {
        earliest = path;
        continue;
      }

      if (path.listKey && earliest.listKey === path.listKey) {
        if (path.key < earliest.key) {
          earliest = path;
          continue;
        }
      }

      const earliestKeyIndex = keys.indexOf(earliest.parentKey);
      const currentKeyIndex = keys.indexOf(path.parentKey);

      if (earliestKeyIndex > currentKeyIndex) {
        earliest = path;
      }
    }

    return earliest;
  });
}

function getDeepestCommonAncestorFrom(paths, filter) {
  if (!paths.length) {
    return this;
  }

  if (paths.length === 1) {
    return paths[0];
  }

  let minDepth = Infinity;
  let lastCommonIndex, lastCommon;
  const ancestries = paths.map(path => {
    const ancestry = [];

    do {
      ancestry.unshift(path);
    } while ((path = path.parentPath) && path !== this);

    if (ancestry.length < minDepth) {
      minDepth = ancestry.length;
    }

    return ancestry;
  });
  const first = ancestries[0];

  depthLoop: for (let i = 0; i < minDepth; i++) {
    const shouldMatch = first[i];

    for (const ancestry of ancestries) {
      if (ancestry[i] !== shouldMatch) {
        break depthLoop;
      }
    }

    lastCommonIndex = i;
    lastCommon = shouldMatch;
  }

  if (lastCommon) {
    if (filter) {
      return filter(lastCommon, lastCommonIndex, ancestries);
    } else {
      return lastCommon;
    }
  } else {
    throw new Error("Couldn't find intersection");
  }
}

function getAncestry() {
  let path = this;
  const paths = [];

  do {
    paths.push(path);
  } while (path = path.parentPath);

  return paths;
}

function isAncestor(maybeDescendant) {
  return maybeDescendant.isDescendant(this);
}

function isDescendant(maybeAncestor) {
  return !!this.findParent(parent => parent === maybeAncestor);
}

function inType(...candidateTypes) {
  let path = this;

  while (path) {
    for (const type of candidateTypes) {
      if (path.node.type === type) return true;
    }

    path = path.parentPath;
  }

  return false;
}

/***/ }),
/* 144 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getTypeAnnotation = getTypeAnnotation;
exports._getTypeAnnotation = _getTypeAnnotation;
exports.isBaseType = isBaseType;
exports.couldBeBaseType = couldBeBaseType;
exports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;
exports.isGenericType = isGenericType;

var inferers = __webpack_require__(145);

var t = __webpack_require__(11);

function getTypeAnnotation() {
  if (this.typeAnnotation) return this.typeAnnotation;
  let type = this._getTypeAnnotation() || t.anyTypeAnnotation();
  if (t.isTypeAnnotation(type)) type = type.typeAnnotation;
  return this.typeAnnotation = type;
}

const typeAnnotationInferringNodes = new WeakSet();

function _getTypeAnnotation() {
  const node = this.node;

  if (!node) {
    if (this.key === "init" && this.parentPath.isVariableDeclarator()) {
      const declar = this.parentPath.parentPath;
      const declarParent = declar.parentPath;

      if (declar.key === "left" && declarParent.isForInStatement()) {
        return t.stringTypeAnnotation();
      }

      if (declar.key === "left" && declarParent.isForOfStatement()) {
        return t.anyTypeAnnotation();
      }

      return t.voidTypeAnnotation();
    } else {
      return;
    }
  }

  if (node.typeAnnotation) {
    return node.typeAnnotation;
  }

  if (typeAnnotationInferringNodes.has(node)) {
    return;
  }

  typeAnnotationInferringNodes.add(node);

  try {
    var _inferer;

    let inferer = inferers[node.type];

    if (inferer) {
      return inferer.call(this, node);
    }

    inferer = inferers[this.parentPath.type];

    if ((_inferer = inferer) != null && _inferer.validParent) {
      return this.parentPath.getTypeAnnotation();
    }
  } finally {
    typeAnnotationInferringNodes.delete(node);
  }
}

function isBaseType(baseName, soft) {
  return _isBaseType(baseName, this.getTypeAnnotation(), soft);
}

function _isBaseType(baseName, type, soft) {
  if (baseName === "string") {
    return t.isStringTypeAnnotation(type);
  } else if (baseName === "number") {
    return t.isNumberTypeAnnotation(type);
  } else if (baseName === "boolean") {
    return t.isBooleanTypeAnnotation(type);
  } else if (baseName === "any") {
    return t.isAnyTypeAnnotation(type);
  } else if (baseName === "mixed") {
    return t.isMixedTypeAnnotation(type);
  } else if (baseName === "empty") {
    return t.isEmptyTypeAnnotation(type);
  } else if (baseName === "void") {
    return t.isVoidTypeAnnotation(type);
  } else {
    if (soft) {
      return false;
    } else {
      throw new Error(`Unknown base type ${baseName}`);
    }
  }
}

function couldBeBaseType(name) {
  const type = this.getTypeAnnotation();
  if (t.isAnyTypeAnnotation(type)) return true;

  if (t.isUnionTypeAnnotation(type)) {
    for (const type2 of type.types) {
      if (t.isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {
        return true;
      }
    }

    return false;
  } else {
    return _isBaseType(name, type, true);
  }
}

function baseTypeStrictlyMatches(rightArg) {
  const left = this.getTypeAnnotation();
  const right = rightArg.getTypeAnnotation();

  if (!t.isAnyTypeAnnotation(left) && t.isFlowBaseAnnotation(left)) {
    return right.type === left.type;
  }

  return false;
}

function isGenericType(genericName) {
  const type = this.getTypeAnnotation();
  return t.isGenericTypeAnnotation(type) && t.isIdentifier(type.id, {
    name: genericName
  });
}

/***/ }),
/* 145 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.VariableDeclarator = VariableDeclarator;
exports.TypeCastExpression = TypeCastExpression;
exports.NewExpression = NewExpression;
exports.TemplateLiteral = TemplateLiteral;
exports.UnaryExpression = UnaryExpression;
exports.BinaryExpression = BinaryExpression;
exports.LogicalExpression = LogicalExpression;
exports.ConditionalExpression = ConditionalExpression;
exports.SequenceExpression = SequenceExpression;
exports.ParenthesizedExpression = ParenthesizedExpression;
exports.AssignmentExpression = AssignmentExpression;
exports.UpdateExpression = UpdateExpression;
exports.StringLiteral = StringLiteral;
exports.NumericLiteral = NumericLiteral;
exports.BooleanLiteral = BooleanLiteral;
exports.NullLiteral = NullLiteral;
exports.RegExpLiteral = RegExpLiteral;
exports.ObjectExpression = ObjectExpression;
exports.ArrayExpression = ArrayExpression;
exports.RestElement = RestElement;
exports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;
exports.CallExpression = CallExpression;
exports.TaggedTemplateExpression = TaggedTemplateExpression;
Object.defineProperty(exports, "Identifier", ({
  enumerable: true,
  get: function () {
    return _infererReference.default;
  }
}));

var t = __webpack_require__(11);

var _infererReference = __webpack_require__(146);

function VariableDeclarator() {
  var _type;

  const id = this.get("id");
  if (!id.isIdentifier()) return;
  const init = this.get("init");
  let type = init.getTypeAnnotation();

  if (((_type = type) == null ? void 0 : _type.type) === "AnyTypeAnnotation") {
    if (init.isCallExpression() && init.get("callee").isIdentifier({
      name: "Array"
    }) && !init.scope.hasBinding("Array", true)) {
      type = ArrayExpression();
    }
  }

  return type;
}

function TypeCastExpression(node) {
  return node.typeAnnotation;
}

TypeCastExpression.validParent = true;

function NewExpression(node) {
  if (this.get("callee").isIdentifier()) {
    return t.genericTypeAnnotation(node.callee);
  }
}

function TemplateLiteral() {
  return t.stringTypeAnnotation();
}

function UnaryExpression(node) {
  const operator = node.operator;

  if (operator === "void") {
    return t.voidTypeAnnotation();
  } else if (t.NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {
    return t.numberTypeAnnotation();
  } else if (t.STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {
    return t.stringTypeAnnotation();
  } else if (t.BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {
    return t.booleanTypeAnnotation();
  }
}

function BinaryExpression(node) {
  const operator = node.operator;

  if (t.NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {
    return t.numberTypeAnnotation();
  } else if (t.BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {
    return t.booleanTypeAnnotation();
  } else if (operator === "+") {
    const right = this.get("right");
    const left = this.get("left");

    if (left.isBaseType("number") && right.isBaseType("number")) {
      return t.numberTypeAnnotation();
    } else if (left.isBaseType("string") || right.isBaseType("string")) {
      return t.stringTypeAnnotation();
    }

    return t.unionTypeAnnotation([t.stringTypeAnnotation(), t.numberTypeAnnotation()]);
  }
}

function LogicalExpression() {
  const argumentTypes = [this.get("left").getTypeAnnotation(), this.get("right").getTypeAnnotation()];

  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {
    return t.createTSUnionType(argumentTypes);
  }

  if (t.createFlowUnionType) {
    return t.createFlowUnionType(argumentTypes);
  }

  return t.createUnionTypeAnnotation(argumentTypes);
}

function ConditionalExpression() {
  const argumentTypes = [this.get("consequent").getTypeAnnotation(), this.get("alternate").getTypeAnnotation()];

  if (t.isTSTypeAnnotation(argumentTypes[0]) && t.createTSUnionType) {
    return t.createTSUnionType(argumentTypes);
  }

  if (t.createFlowUnionType) {
    return t.createFlowUnionType(argumentTypes);
  }

  return t.createUnionTypeAnnotation(argumentTypes);
}

function SequenceExpression() {
  return this.get("expressions").pop().getTypeAnnotation();
}

function ParenthesizedExpression() {
  return this.get("expression").getTypeAnnotation();
}

function AssignmentExpression() {
  return this.get("right").getTypeAnnotation();
}

function UpdateExpression(node) {
  const operator = node.operator;

  if (operator === "++" || operator === "--") {
    return t.numberTypeAnnotation();
  }
}

function StringLiteral() {
  return t.stringTypeAnnotation();
}

function NumericLiteral() {
  return t.numberTypeAnnotation();
}

function BooleanLiteral() {
  return t.booleanTypeAnnotation();
}

function NullLiteral() {
  return t.nullLiteralTypeAnnotation();
}

function RegExpLiteral() {
  return t.genericTypeAnnotation(t.identifier("RegExp"));
}

function ObjectExpression() {
  return t.genericTypeAnnotation(t.identifier("Object"));
}

function ArrayExpression() {
  return t.genericTypeAnnotation(t.identifier("Array"));
}

function RestElement() {
  return ArrayExpression();
}

RestElement.validParent = true;

function Func() {
  return t.genericTypeAnnotation(t.identifier("Function"));
}

const isArrayFrom = t.buildMatchMemberExpression("Array.from");
const isObjectKeys = t.buildMatchMemberExpression("Object.keys");
const isObjectValues = t.buildMatchMemberExpression("Object.values");
const isObjectEntries = t.buildMatchMemberExpression("Object.entries");

function CallExpression() {
  const {
    callee
  } = this.node;

  if (isObjectKeys(callee)) {
    return t.arrayTypeAnnotation(t.stringTypeAnnotation());
  } else if (isArrayFrom(callee) || isObjectValues(callee)) {
    return t.arrayTypeAnnotation(t.anyTypeAnnotation());
  } else if (isObjectEntries(callee)) {
    return t.arrayTypeAnnotation(t.tupleTypeAnnotation([t.stringTypeAnnotation(), t.anyTypeAnnotation()]));
  }

  return resolveCall(this.get("callee"));
}

function TaggedTemplateExpression() {
  return resolveCall(this.get("tag"));
}

function resolveCall(callee) {
  callee = callee.resolve();

  if (callee.isFunction()) {
    if (callee.is("async")) {
      if (callee.is("generator")) {
        return t.genericTypeAnnotation(t.identifier("AsyncIterator"));
      } else {
        return t.genericTypeAnnotation(t.identifier("Promise"));
      }
    } else {
      if (callee.node.returnType) {
        return callee.node.returnType;
      } else {}
    }
  }
}

/***/ }),
/* 146 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;

var t = __webpack_require__(11);

function _default(node) {
  if (!this.isReferenced()) return;
  const binding = this.scope.getBinding(node.name);

  if (binding) {
    if (binding.identifier.typeAnnotation) {
      return binding.identifier.typeAnnotation;
    } else {
      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);
    }
  }

  if (node.name === "undefined") {
    return t.voidTypeAnnotation();
  } else if (node.name === "NaN" || node.name === "Infinity") {
    return t.numberTypeAnnotation();
  } else if (node.name === "arguments") {}
}

function getTypeAnnotationBindingConstantViolations(binding, path, name) {
  const types = [];
  const functionConstantViolations = [];
  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);
  const testType = getConditionalAnnotation(binding, path, name);

  if (testType) {
    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);
    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);
    types.push(testType.typeAnnotation);
  }

  if (constantViolations.length) {
    constantViolations = constantViolations.concat(functionConstantViolations);

    for (const violation of constantViolations) {
      types.push(violation.getTypeAnnotation());
    }
  }

  if (!types.length) {
    return;
  }

  if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {
    return t.createTSUnionType(types);
  }

  if (t.createFlowUnionType) {
    return t.createFlowUnionType(types);
  }

  return t.createUnionTypeAnnotation(types);
}

function getConstantViolationsBefore(binding, path, functions) {
  const violations = binding.constantViolations.slice();
  violations.unshift(binding.path);
  return violations.filter(violation => {
    violation = violation.resolve();

    const status = violation._guessExecutionStatusRelativeTo(path);

    if (functions && status === "unknown") functions.push(violation);
    return status === "before";
  });
}

function inferAnnotationFromBinaryExpression(name, path) {
  const operator = path.node.operator;
  const right = path.get("right").resolve();
  const left = path.get("left").resolve();
  let target;

  if (left.isIdentifier({
    name
  })) {
    target = right;
  } else if (right.isIdentifier({
    name
  })) {
    target = left;
  }

  if (target) {
    if (operator === "===") {
      return target.getTypeAnnotation();
    }

    if (t.BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {
      return t.numberTypeAnnotation();
    }

    return;
  }

  if (operator !== "===" && operator !== "==") return;
  let typeofPath;
  let typePath;

  if (left.isUnaryExpression({
    operator: "typeof"
  })) {
    typeofPath = left;
    typePath = right;
  } else if (right.isUnaryExpression({
    operator: "typeof"
  })) {
    typeofPath = right;
    typePath = left;
  }

  if (!typeofPath) return;
  if (!typeofPath.get("argument").isIdentifier({
    name
  })) return;
  typePath = typePath.resolve();
  if (!typePath.isLiteral()) return;
  const typeValue = typePath.node.value;
  if (typeof typeValue !== "string") return;
  return t.createTypeAnnotationBasedOnTypeof(typeValue);
}

function getParentConditionalPath(binding, path, name) {
  let parentPath;

  while (parentPath = path.parentPath) {
    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {
      if (path.key === "test") {
        return;
      }

      return parentPath;
    }

    if (parentPath.isFunction()) {
      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;
    }

    path = parentPath;
  }
}

function getConditionalAnnotation(binding, path, name) {
  const ifStatement = getParentConditionalPath(binding, path, name);
  if (!ifStatement) return;
  const test = ifStatement.get("test");
  const paths = [test];
  const types = [];

  for (let i = 0; i < paths.length; i++) {
    const path = paths[i];

    if (path.isLogicalExpression()) {
      if (path.node.operator === "&&") {
        paths.push(path.get("left"));
        paths.push(path.get("right"));
      }
    } else if (path.isBinaryExpression()) {
      const type = inferAnnotationFromBinaryExpression(name, path);
      if (type) types.push(type);
    }
  }

  if (types.length) {
    if (t.isTSTypeAnnotation(types[0]) && t.createTSUnionType) {
      return {
        typeAnnotation: t.createTSUnionType(types),
        ifStatement
      };
    }

    if (t.createFlowUnionType) {
      return {
        typeAnnotation: t.createFlowUnionType(types),
        ifStatement
      };
    }

    return {
      typeAnnotation: t.createUnionTypeAnnotation(types),
      ifStatement
    };
  }

  return getConditionalAnnotation(ifStatement, name);
}

/***/ }),
/* 147 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.replaceWithMultiple = replaceWithMultiple;
exports.replaceWithSourceString = replaceWithSourceString;
exports.replaceWith = replaceWith;
exports._replaceWith = _replaceWith;
exports.replaceExpressionWithStatements = replaceExpressionWithStatements;
exports.replaceInline = replaceInline;

var _codeFrame = __webpack_require__(148);

var _index = __webpack_require__(7);

var _index2 = __webpack_require__(9);

var _cache = __webpack_require__(111);

var _parser = __webpack_require__(3);

var t = __webpack_require__(11);

const hoistVariablesVisitor = {
  Function(path) {
    path.skip();
  },

  VariableDeclaration(path) {
    if (path.node.kind !== "var") return;
    const bindings = path.getBindingIdentifiers();

    for (const key of Object.keys(bindings)) {
      path.scope.push({
        id: bindings[key]
      });
    }

    const exprs = [];

    for (const declar of path.node.declarations) {
      if (declar.init) {
        exprs.push(t.expressionStatement(t.assignmentExpression("=", declar.id, declar.init)));
      }
    }

    path.replaceWithMultiple(exprs);
  }

};

function replaceWithMultiple(nodes) {
  var _pathCache$get;

  this.resync();
  nodes = this._verifyNodeList(nodes);
  t.inheritLeadingComments(nodes[0], this.node);
  t.inheritTrailingComments(nodes[nodes.length - 1], this.node);
  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);
  this.node = this.container[this.key] = null;
  const paths = this.insertAfter(nodes);

  if (this.node) {
    this.requeue();
  } else {
    this.remove();
  }

  return paths;
}

function replaceWithSourceString(replacement) {
  this.resync();

  try {
    replacement = `(${replacement})`;
    replacement = (0, _parser.parse)(replacement);
  } catch (err) {
    const loc = err.loc;

    if (loc) {
      err.message += " - make sure this is an expression.\n" + (0, _codeFrame.codeFrameColumns)(replacement, {
        start: {
          line: loc.line,
          column: loc.column + 1
        }
      });
      err.code = "BABEL_REPLACE_SOURCE_ERROR";
    }

    throw err;
  }

  replacement = replacement.program.body[0].expression;

  _index.default.removeProperties(replacement);

  return this.replaceWith(replacement);
}

function replaceWith(replacement) {
  this.resync();

  if (this.removed) {
    throw new Error("You can't replace this node, we've already removed it");
  }

  if (replacement instanceof _index2.default) {
    replacement = replacement.node;
  }

  if (!replacement) {
    throw new Error("You passed `path.replaceWith()` a falsy node, use `path.remove()` instead");
  }

  if (this.node === replacement) {
    return [this];
  }

  if (this.isProgram() && !t.isProgram(replacement)) {
    throw new Error("You can only replace a Program root node with another Program node");
  }

  if (Array.isArray(replacement)) {
    throw new Error("Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`");
  }

  if (typeof replacement === "string") {
    throw new Error("Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`");
  }

  let nodePath = "";

  if (this.isNodeType("Statement") && t.isExpression(replacement)) {
    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {
      replacement = t.expressionStatement(replacement);
      nodePath = "expression";
    }
  }

  if (this.isNodeType("Expression") && t.isStatement(replacement)) {
    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {
      return this.replaceExpressionWithStatements([replacement]);
    }
  }

  const oldNode = this.node;

  if (oldNode) {
    t.inheritsComments(replacement, oldNode);
    t.removeComments(oldNode);
  }

  this._replaceWith(replacement);

  this.type = replacement.type;
  this.setScope();
  this.requeue();
  return [nodePath ? this.get(nodePath) : this];
}

function _replaceWith(node) {
  var _pathCache$get2;

  if (!this.container) {
    throw new ReferenceError("Container is falsy");
  }

  if (this.inList) {
    t.validate(this.parent, this.key, [node]);
  } else {
    t.validate(this.parent, this.key, node);
  }

  this.debug(`Replace with ${node == null ? void 0 : node.type}`);
  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);
  this.node = this.container[this.key] = node;
}

function replaceExpressionWithStatements(nodes) {
  this.resync();
  const toSequenceExpression = t.toSequenceExpression(nodes, this.scope);

  if (toSequenceExpression) {
    return this.replaceWith(toSequenceExpression)[0].get("expressions");
  }

  const functionParent = this.getFunctionParent();
  const isParentAsync = functionParent == null ? void 0 : functionParent.is("async");
  const isParentGenerator = functionParent == null ? void 0 : functionParent.is("generator");
  const container = t.arrowFunctionExpression([], t.blockStatement(nodes));
  this.replaceWith(t.callExpression(container, []));
  this.traverse(hoistVariablesVisitor);
  const completionRecords = this.get("callee").getCompletionRecords();

  for (const path of completionRecords) {
    if (!path.isExpressionStatement()) continue;
    const loop = path.findParent(path => path.isLoop());

    if (loop) {
      let uid = loop.getData("expressionReplacementReturnUid");

      if (!uid) {
        const callee = this.get("callee");
        uid = callee.scope.generateDeclaredUidIdentifier("ret");
        callee.get("body").pushContainer("body", t.returnStatement(t.cloneNode(uid)));
        loop.setData("expressionReplacementReturnUid", uid);
      } else {
        uid = t.identifier(uid.name);
      }

      path.get("expression").replaceWith(t.assignmentExpression("=", t.cloneNode(uid), path.node.expression));
    } else {
      path.replaceWith(t.returnStatement(path.node.expression));
    }
  }

  const callee = this.get("callee");
  callee.arrowFunctionToExpression();

  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get("callee.body").node, "AwaitExpression", t.FUNCTION_TYPES);

  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get("callee.body").node, "YieldExpression", t.FUNCTION_TYPES);

  if (needToAwaitFunction) {
    callee.set("async", true);

    if (!needToYieldFunction) {
      this.replaceWith(t.awaitExpression(this.node));
    }
  }

  if (needToYieldFunction) {
    callee.set("generator", true);
    this.replaceWith(t.yieldExpression(this.node, true));
  }

  return callee.get("body.body");
}

function replaceInline(nodes) {
  this.resync();

  if (Array.isArray(nodes)) {
    if (Array.isArray(this.container)) {
      nodes = this._verifyNodeList(nodes);

      const paths = this._containerInsertAfter(nodes);

      this.remove();
      return paths;
    } else {
      return this.replaceWithMultiple(nodes);
    }
  } else {
    return this.replaceWith(nodes);
  }
}

/***/ }),
/* 148 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.codeFrameColumns = codeFrameColumns;
exports.default = _default;

var _highlight = _interopRequireWildcard(__webpack_require__(149));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

let deprecationWarningShown = false;

function getDefs(chalk) {
  return {
    gutter: chalk.grey,
    marker: chalk.red.bold,
    message: chalk.red.bold
  };
}

const NEWLINE = /\r\n|[\n\r\u2028\u2029]/;

function getMarkerLines(loc, source, opts) {
  const startLoc = Object.assign({
    column: 0,
    line: -1
  }, loc.start);
  const endLoc = Object.assign({}, startLoc, loc.end);
  const {
    linesAbove = 2,
    linesBelow = 3
  } = opts || {};
  const startLine = startLoc.line;
  const startColumn = startLoc.column;
  const endLine = endLoc.line;
  const endColumn = endLoc.column;
  let start = Math.max(startLine - (linesAbove + 1), 0);
  let end = Math.min(source.length, endLine + linesBelow);

  if (startLine === -1) {
    start = 0;
  }

  if (endLine === -1) {
    end = source.length;
  }

  const lineDiff = endLine - startLine;
  const markerLines = {};

  if (lineDiff) {
    for (let i = 0; i <= lineDiff; i++) {
      const lineNumber = i + startLine;

      if (!startColumn) {
        markerLines[lineNumber] = true;
      } else if (i === 0) {
        const sourceLength = source[lineNumber - 1].length;
        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];
      } else if (i === lineDiff) {
        markerLines[lineNumber] = [0, endColumn];
      } else {
        const sourceLength = source[lineNumber - i].length;
        markerLines[lineNumber] = [0, sourceLength];
      }
    }
  } else {
    if (startColumn === endColumn) {
      if (startColumn) {
        markerLines[startLine] = [startColumn, 0];
      } else {
        markerLines[startLine] = true;
      }
    } else {
      markerLines[startLine] = [startColumn, endColumn - startColumn];
    }
  }

  return {
    start,
    end,
    markerLines
  };
}

function codeFrameColumns(rawLines, loc, opts = {}) {
  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);
  const chalk = (0, _highlight.getChalk)(opts);
  const defs = getDefs(chalk);

  const maybeHighlight = (chalkFn, string) => {
    return highlighted ? chalkFn(string) : string;
  };

  const lines = rawLines.split(NEWLINE);
  const {
    start,
    end,
    markerLines
  } = getMarkerLines(loc, lines, opts);
  const hasColumns = loc.start && typeof loc.start.column === "number";
  const numberMaxWidth = String(end).length;
  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;
  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {
    const number = start + 1 + index;
    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);
    const gutter = ` ${paddedNumber} |`;
    const hasMarker = markerLines[number];
    const lastMarkerLine = !markerLines[number + 1];

    if (hasMarker) {
      let markerLine = "";

      if (Array.isArray(hasMarker)) {
        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\t]/g, " ");
        const numberOfMarkers = hasMarker[1] || 1;
        markerLine = ["\n ", maybeHighlight(defs.gutter, gutter.replace(/\d/g, " ")), " ", markerSpacing, maybeHighlight(defs.marker, "^").repeat(numberOfMarkers)].join("");

        if (lastMarkerLine && opts.message) {
          markerLine += " " + maybeHighlight(defs.message, opts.message);
        }
      }

      return [maybeHighlight(defs.marker, ">"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : "", markerLine].join("");
    } else {
      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : ""}`;
    }
  }).join("\n");

  if (opts.message && !hasColumns) {
    frame = `${" ".repeat(numberMaxWidth + 1)}${opts.message}\n${frame}`;
  }

  if (highlighted) {
    return chalk.reset(frame);
  } else {
    return frame;
  }
}

function _default(rawLines, lineNumber, colNumber, opts = {}) {
  if (!deprecationWarningShown) {
    deprecationWarningShown = true;
    const message = "Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";

    if (process.emitWarning) {
      process.emitWarning(message, "DeprecationWarning");
    } else {
      const deprecationError = new Error(message);
      deprecationError.name = "DeprecationWarning";
      console.warn(new Error(message));
    }
  }

  colNumber = Math.max(colNumber, 0);
  const location = {
    start: {
      column: colNumber,
      line: lineNumber
    }
  };
  return codeFrameColumns(rawLines, location, opts);
}

/***/ }),
/* 149 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.shouldHighlight = shouldHighlight;
exports.getChalk = getChalk;
exports.default = highlight;

var jsTokensNs = _interopRequireWildcard(__webpack_require__(150));

var _helperValidatorIdentifier = __webpack_require__(29);

var _chalk = _interopRequireDefault(__webpack_require__(151));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const sometimesKeywords = new Set(["as", "async", "from", "get", "of", "set"]);

function getDefs(chalk) {
  return {
    keyword: chalk.cyan,
    capitalized: chalk.yellow,
    jsxIdentifier: chalk.yellow,
    punctuator: chalk.yellow,
    number: chalk.magenta,
    string: chalk.green,
    regex: chalk.magenta,
    comment: chalk.grey,
    invalid: chalk.white.bgRed.bold
  };
}

const NEWLINE = /\r\n|[\n\r\u2028\u2029]/;
const BRACKET = /^[()[\]{}]$/;
let tokenize;
{
  const {
    matchToToken
  } = jsTokensNs;
  const JSX_TAG = /^[a-z][\w-]*$/i;

  const getTokenType = function (token, offset, text) {
    if (token.type === "name") {
      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {
        return "keyword";
      }

      if (JSX_TAG.test(token.value) && (text[offset - 1] === "<" || text.substr(offset - 2, 2) == "</")) {
        return "jsxIdentifier";
      }

      if (token.value[0] !== token.value[0].toLowerCase()) {
        return "capitalized";
      }
    }

    if (token.type === "punctuator" && BRACKET.test(token.value)) {
      return "bracket";
    }

    if (token.type === "invalid" && (token.value === "@" || token.value === "#")) {
      return "punctuator";
    }

    return token.type;
  };

  tokenize = function* (text) {
    let match;

    while (match = jsTokensNs.default.exec(text)) {
      const token = matchToToken(match);
      yield {
        type: getTokenType(token, match.index, text),
        value: token.value
      };
    }
  };
}

function highlightTokens(defs, text) {
  let highlighted = "";

  for (const {
    type,
    value
  } of tokenize(text)) {
    const colorize = defs[type];

    if (colorize) {
      highlighted += value.split(NEWLINE).map(str => colorize(str)).join("\n");
    } else {
      highlighted += value;
    }
  }

  return highlighted;
}

function shouldHighlight(options) {
  return !!_chalk.default.supportsColor || options.forceColor;
}

function getChalk(options) {
  return options.forceColor ? new _chalk.default.constructor({
    enabled: true,
    level: 1
  }) : _chalk.default;
}

function highlight(code, options = {}) {
  if (shouldHighlight(options)) {
    const chalk = getChalk(options);
    const defs = getDefs(chalk);
    return highlightTokens(defs, code);
  } else {
    return code;
  }
}

/***/ }),
/* 150 */
/***/ ((__unused_webpack_module, exports) => {

// Copyright 2014, 2015, 2016, 2017, 2018 Simon Lydell
// License: MIT. (See LICENSE.)

Object.defineProperty(exports, "__esModule", ({
  value: true
}))

// This regex comes from regex.coffee, and is inserted here by generate-index.js
// (run `npm run build`).
exports.default = /((['"])(?:(?!\2|\\).|\\(?:\r\n|[\s\S]))*(\2)?|`(?:[^`\\$]|\\[\s\S]|\$(?!\{)|\$\{(?:[^{}]|\{[^}]*\}?)*\}?)*(`)?)|(\/\/.*)|(\/\*(?:[^*]|\*(?!\/))*(\*\/)?)|(\/(?!\*)(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\]\\]).|\\.)+\/(?:(?!\s*(?:\b|[\u0080-\uFFFF$\\'"~({]|[+\-!](?!=)|\.?\d))|[gmiyus]{1,6}\b(?![\u0080-\uFFFF$\\]|\s*(?:[+\-*%&|^<>!=?({]|\/(?![\/*])))))|(0[xX][\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\d*\.\d+|\d+\.?)(?:[eE][+-]?\d+)?)|((?!\d)(?:(?!\s)[$\w\u0080-\uFFFF]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+)|(--|\+\+|&&|\|\||=>|\.{3}|(?:[+\-\/%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\](){}])|(\s+)|(^$|[\s\S])/g

exports.matchToToken = function(match) {
  var token = {type: "invalid", value: match[0], closed: undefined}
       if (match[ 1]) token.type = "string" , token.closed = !!(match[3] || match[4])
  else if (match[ 5]) token.type = "comment"
  else if (match[ 6]) token.type = "comment", token.closed = !!match[7]
  else if (match[ 8]) token.type = "regex"
  else if (match[ 9]) token.type = "number"
  else if (match[10]) token.type = "name"
  else if (match[11]) token.type = "punctuator"
  else if (match[12]) token.type = "whitespace"
  return token
}


/***/ }),
/* 151 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const escapeStringRegexp = __webpack_require__(152);
const ansiStyles = __webpack_require__(153);
const stdoutColor = __webpack_require__(158).stdout;

const template = __webpack_require__(160);

const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');

// `supportsColor.level` → `ansiStyles.color[name]` mapping
const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];

// `color-convert` models to exclude from the Chalk API due to conflicts and such
const skipModels = new Set(['gray']);

const styles = Object.create(null);

function applyOptions(obj, options) {
	options = options || {};

	// Detect level if not set manually
	const scLevel = stdoutColor ? stdoutColor.level : 0;
	obj.level = options.level === undefined ? scLevel : options.level;
	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;
}

function Chalk(options) {
	// We check for this.template here since calling `chalk.constructor()`
	// by itself will have a `this` of a previously constructed chalk object
	if (!this || !(this instanceof Chalk) || this.template) {
		const chalk = {};
		applyOptions(chalk, options);

		chalk.template = function () {
			const args = [].slice.call(arguments);
			return chalkTag.apply(null, [chalk.template].concat(args));
		};

		Object.setPrototypeOf(chalk, Chalk.prototype);
		Object.setPrototypeOf(chalk.template, chalk);

		chalk.template.constructor = Chalk;

		return chalk.template;
	}

	applyOptions(this, options);
}

// Use bright blue on Windows as the normal blue color is illegible
if (isSimpleWindowsTerm) {
	ansiStyles.blue.open = '\u001B[94m';
}

for (const key of Object.keys(ansiStyles)) {
	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');

	styles[key] = {
		get() {
			const codes = ansiStyles[key];
			return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);
		}
	};
}

styles.visible = {
	get() {
		return build.call(this, this._styles || [], true, 'visible');
	}
};

ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');
for (const model of Object.keys(ansiStyles.color.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	styles[model] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.color.close,
					closeRe: ansiStyles.color.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');
for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);
	styles[bgModel] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.bgColor.close,
					closeRe: ansiStyles.bgColor.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

const proto = Object.defineProperties(() => {}, styles);

function build(_styles, _empty, key) {
	const builder = function () {
		return applyStyle.apply(builder, arguments);
	};

	builder._styles = _styles;
	builder._empty = _empty;

	const self = this;

	Object.defineProperty(builder, 'level', {
		enumerable: true,
		get() {
			return self.level;
		},
		set(level) {
			self.level = level;
		}
	});

	Object.defineProperty(builder, 'enabled', {
		enumerable: true,
		get() {
			return self.enabled;
		},
		set(enabled) {
			self.enabled = enabled;
		}
	});

	// See below for fix regarding invisible grey/dim combination on Windows
	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';

	// `__proto__` is used because we must return a function, but there is
	// no way to create a function with a different prototype
	builder.__proto__ = proto; // eslint-disable-line no-proto

	return builder;
}

function applyStyle() {
	// Support varags, but simply cast to string in case there's only one arg
	const args = arguments;
	const argsLen = args.length;
	let str = String(arguments[0]);

	if (argsLen === 0) {
		return '';
	}

	if (argsLen > 1) {
		// Don't slice `arguments`, it prevents V8 optimizations
		for (let a = 1; a < argsLen; a++) {
			str += ' ' + args[a];
		}
	}

	if (!this.enabled || this.level <= 0 || !str) {
		return this._empty ? '' : str;
	}

	// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
	// see https://github.com/chalk/chalk/issues/58
	// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
	const originalDim = ansiStyles.dim.open;
	if (isSimpleWindowsTerm && this.hasGrey) {
		ansiStyles.dim.open = '';
	}

	for (const code of this._styles.slice().reverse()) {
		// Replace any instances already present with a re-opening code
		// otherwise only the part of the string until said closing code
		// will be colored, and the rest will simply be 'plain'.
		str = code.open + str.replace(code.closeRe, code.open) + code.close;

		// Close the styling before a linebreak and reopen
		// after next line to fix a bleed issue on macOS
		// https://github.com/chalk/chalk/pull/92
		str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);
	}

	// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue
	ansiStyles.dim.open = originalDim;

	return str;
}

function chalkTag(chalk, strings) {
	if (!Array.isArray(strings)) {
		// If chalk() was called by itself or with a string,
		// return the string itself as a string.
		return [].slice.call(arguments, 1).join(' ');
	}

	const args = [].slice.call(arguments, 2);
	const parts = [strings.raw[0]];

	for (let i = 1; i < strings.length; i++) {
		parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));
		parts.push(String(strings.raw[i]));
	}

	return template(chalk, parts.join(''));
}

Object.defineProperties(Chalk.prototype, styles);

module.exports = Chalk(); // eslint-disable-line new-cap
module.exports.supportsColor = stdoutColor;
module.exports.default = module.exports; // For TypeScript


/***/ }),
/* 152 */
/***/ ((module) => {

"use strict";


var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
	if (typeof str !== 'string') {
		throw new TypeError('Expected a string');
	}

	return str.replace(matchOperatorsRe, '\\$&');
};


/***/ }),
/* 153 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* module decorator */ module = __webpack_require__.nmd(module);

const colorConvert = __webpack_require__(154);

const wrapAnsi16 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${code + offset}m`;
};

const wrapAnsi256 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};5;${code}m`;
};

const wrapAnsi16m = (fn, offset) => function () {
	const rgb = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
};

function assembleStyles() {
	const codes = new Map();
	const styles = {
		modifier: {
			reset: [0, 0],
			// 21 isn't widely supported and 22 does the same thing
			bold: [1, 22],
			dim: [2, 22],
			italic: [3, 23],
			underline: [4, 24],
			inverse: [7, 27],
			hidden: [8, 28],
			strikethrough: [9, 29]
		},
		color: {
			black: [30, 39],
			red: [31, 39],
			green: [32, 39],
			yellow: [33, 39],
			blue: [34, 39],
			magenta: [35, 39],
			cyan: [36, 39],
			white: [37, 39],
			gray: [90, 39],

			// Bright color
			redBright: [91, 39],
			greenBright: [92, 39],
			yellowBright: [93, 39],
			blueBright: [94, 39],
			magentaBright: [95, 39],
			cyanBright: [96, 39],
			whiteBright: [97, 39]
		},
		bgColor: {
			bgBlack: [40, 49],
			bgRed: [41, 49],
			bgGreen: [42, 49],
			bgYellow: [43, 49],
			bgBlue: [44, 49],
			bgMagenta: [45, 49],
			bgCyan: [46, 49],
			bgWhite: [47, 49],

			// Bright color
			bgBlackBright: [100, 49],
			bgRedBright: [101, 49],
			bgGreenBright: [102, 49],
			bgYellowBright: [103, 49],
			bgBlueBright: [104, 49],
			bgMagentaBright: [105, 49],
			bgCyanBright: [106, 49],
			bgWhiteBright: [107, 49]
		}
	};

	// Fix humans
	styles.color.grey = styles.color.gray;

	for (const groupName of Object.keys(styles)) {
		const group = styles[groupName];

		for (const styleName of Object.keys(group)) {
			const style = group[styleName];

			styles[styleName] = {
				open: `\u001B[${style[0]}m`,
				close: `\u001B[${style[1]}m`
			};

			group[styleName] = styles[styleName];

			codes.set(style[0], style[1]);
		}

		Object.defineProperty(styles, groupName, {
			value: group,
			enumerable: false
		});

		Object.defineProperty(styles, 'codes', {
			value: codes,
			enumerable: false
		});
	}

	const ansi2ansi = n => n;
	const rgb2rgb = (r, g, b) => [r, g, b];

	styles.color.close = '\u001B[39m';
	styles.bgColor.close = '\u001B[49m';

	styles.color.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 0)
	};
	styles.color.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 0)
	};
	styles.color.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 0)
	};

	styles.bgColor.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 10)
	};
	styles.bgColor.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 10)
	};
	styles.bgColor.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 10)
	};

	for (let key of Object.keys(colorConvert)) {
		if (typeof colorConvert[key] !== 'object') {
			continue;
		}

		const suite = colorConvert[key];

		if (key === 'ansi16') {
			key = 'ansi';
		}

		if ('ansi16' in suite) {
			styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
			styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
		}

		if ('ansi256' in suite) {
			styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
			styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
		}

		if ('rgb' in suite) {
			styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
			styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
		}
	}

	return styles;
}

// Make the export immutable
Object.defineProperty(module, 'exports', {
	enumerable: true,
	get: assembleStyles
});


/***/ }),
/* 154 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var conversions = __webpack_require__(155);
var route = __webpack_require__(157);

var convert = {};

var models = Object.keys(conversions);

function wrapRaw(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		return fn(args);
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		var result = fn(args);

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(function (fromModel) {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	var routes = route(fromModel);
	var routeModels = Object.keys(routes);

	routeModels.forEach(function (toModel) {
		var fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

module.exports = convert;


/***/ }),
/* 155 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* MIT license */
var cssKeywords = __webpack_require__(156);

// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

var reverseKeywords = {};
for (var key in cssKeywords) {
	if (cssKeywords.hasOwnProperty(key)) {
		reverseKeywords[cssKeywords[key]] = key;
	}
}

var convert = module.exports = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

// hide .channels and .labels properties
for (var model in convert) {
	if (convert.hasOwnProperty(model)) {
		if (!('channels' in convert[model])) {
			throw new Error('missing channels property: ' + model);
		}

		if (!('labels' in convert[model])) {
			throw new Error('missing channel labels property: ' + model);
		}

		if (convert[model].labels.length !== convert[model].channels) {
			throw new Error('channel and label counts mismatch: ' + model);
		}

		var channels = convert[model].channels;
		var labels = convert[model].labels;
		delete convert[model].channels;
		delete convert[model].labels;
		Object.defineProperty(convert[model], 'channels', {value: channels});
		Object.defineProperty(convert[model], 'labels', {value: labels});
	}
}

convert.rgb.hsl = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var min = Math.min(r, g, b);
	var max = Math.max(r, g, b);
	var delta = max - min;
	var h;
	var s;
	var l;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	var rdif;
	var gdif;
	var bdif;
	var h;
	var s;

	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var v = Math.max(r, g, b);
	var diff = v - Math.min(r, g, b);
	var diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	var r = rgb[0];
	var g = rgb[1];
	var b = rgb[2];
	var h = convert.rgb.hsl(rgb)[0];
	var w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var c;
	var m;
	var y;
	var k;

	k = Math.min(1 - r, 1 - g, 1 - b);
	c = (1 - r - k) / (1 - k) || 0;
	m = (1 - g - k) / (1 - k) || 0;
	y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */
function comparativeDistance(x, y) {
	return (
		Math.pow(x[0] - y[0], 2) +
		Math.pow(x[1] - y[1], 2) +
		Math.pow(x[2] - y[2], 2)
	);
}

convert.rgb.keyword = function (rgb) {
	var reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	var currentClosestDistance = Infinity;
	var currentClosestKeyword;

	for (var keyword in cssKeywords) {
		if (cssKeywords.hasOwnProperty(keyword)) {
			var value = cssKeywords[keyword];

			// Compute comparative distance
			var distance = comparativeDistance(rgb, value);

			// Check if its less, if so set as closest
			if (distance < currentClosestDistance) {
				currentClosestDistance = distance;
				currentClosestKeyword = keyword;
			}
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return cssKeywords[keyword];
};

convert.rgb.xyz = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;

	// assume sRGB
	r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	var xyz = convert.rgb.xyz(rgb);
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	var h = hsl[0] / 360;
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var t1;
	var t2;
	var t3;
	var rgb;
	var val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	t1 = 2 * l - t2;

	rgb = [0, 0, 0];
	for (var i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	var h = hsl[0];
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var smin = s;
	var lmin = Math.max(l, 0.01);
	var sv;
	var v;

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	v = (l + s) / 2;
	sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	var h = hsv[0] / 60;
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var hi = Math.floor(h) % 6;

	var f = h - Math.floor(h);
	var p = 255 * v * (1 - s);
	var q = 255 * v * (1 - (s * f));
	var t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	var h = hsv[0];
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var vmin = Math.max(v, 0.01);
	var lmin;
	var sl;
	var l;

	l = (2 - s) * v;
	lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	var h = hwb[0] / 360;
	var wh = hwb[1] / 100;
	var bl = hwb[2] / 100;
	var ratio = wh + bl;
	var i;
	var v;
	var f;
	var n;

	// wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	i = Math.floor(6 * h);
	v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	n = wh + f * (v - wh); // linear interpolation

	var r;
	var g;
	var b;
	switch (i) {
		default:
		case 6:
		case 0: r = v; g = n; b = wh; break;
		case 1: r = n; g = v; b = wh; break;
		case 2: r = wh; g = v; b = n; break;
		case 3: r = wh; g = n; b = v; break;
		case 4: r = n; g = wh; b = v; break;
		case 5: r = v; g = wh; b = n; break;
	}

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	var c = cmyk[0] / 100;
	var m = cmyk[1] / 100;
	var y = cmyk[2] / 100;
	var k = cmyk[3] / 100;
	var r;
	var g;
	var b;

	r = 1 - Math.min(1, c * (1 - k) + k);
	g = 1 - Math.min(1, m * (1 - k) + k);
	b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	var x = xyz[0] / 100;
	var y = xyz[1] / 100;
	var z = xyz[2] / 100;
	var r;
	var g;
	var b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// assume sRGB
	r = r > 0.0031308
		? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var x;
	var y;
	var z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	var y2 = Math.pow(y, 3);
	var x2 = Math.pow(x, 3);
	var z2 = Math.pow(z, 3);
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var hr;
	var h;
	var c;

	hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	var l = lch[0];
	var c = lch[1];
	var h = lch[2];
	var a;
	var b;
	var hr;

	hr = h / 360 * 2 * Math.PI;
	a = c * Math.cos(hr);
	b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];
	var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	var ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];

	// we use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	var ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	var color = args % 10;

	// handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	var mult = (~~(args > 50) + 1) * 0.5;
	var r = ((color & 1) * mult) * 255;
	var g = (((color >> 1) & 1) * mult) * 255;
	var b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// handle greyscale
	if (args >= 232) {
		var c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	var rem;
	var r = Math.floor(args / 36) / 5 * 255;
	var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	var b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	var integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = (integer >> 16) & 0xFF;
	var g = (integer >> 8) & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var max = Math.max(Math.max(r, g), b);
	var min = Math.min(Math.min(r, g), b);
	var chroma = (max - min);
	var grayscale;
	var hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma + 4;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var c = 1;
	var f = 0;

	if (l < 0.5) {
		c = 2.0 * s * l;
	} else {
		c = 2.0 * s * (1.0 - l);
	}

	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;

	var c = s * v;
	var f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	var h = hcg[0] / 360;
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	var pure = [0, 0, 0];
	var hi = (h % 1) * 6;
	var v = hi % 1;
	var w = 1 - v;
	var mg = 0;

	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var v = c + g * (1.0 - c);
	var f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var l = g * (1.0 - c) + 0.5 * c;
	var s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;
	var v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	var w = hwb[1] / 100;
	var b = hwb[2] / 100;
	var v = 1 - b;
	var c = v - w;
	var g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	var val = Math.round(gray[0] / 100 * 255) & 0xFF;
	var integer = (val << 16) + (val << 8) + val;

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};


/***/ }),
/* 156 */
/***/ ((module) => {

"use strict";


module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),
/* 157 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var conversions = __webpack_require__(155);

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph();
	var queue = [fromModel]; // unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		var current = queue.pop();
		var adjacents = Object.keys(conversions[current]);

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i];
			var node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel];
	var fn = conversions[graph[toModel].parent][toModel];

	var cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

module.exports = function (fromModel) {
	var graph = deriveBFS(fromModel);
	var conversion = {};

	var models = Object.keys(graph);
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i];
		var node = graph[toModel];

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};



/***/ }),
/* 158 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

const os = __webpack_require__(103);
const hasFlag = __webpack_require__(159);

const env = process.env;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false')) {
	forceColor = false;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = true;
}
if ('FORCE_COLOR' in env) {
	forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(stream) {
	if (forceColor === false) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor !== true) {
		return 0;
	}

	const min = forceColor ? 1 : 0;

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	if (env.TERM === 'dumb') {
		return min;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: getSupportLevel(process.stdout),
	stderr: getSupportLevel(process.stderr)
};


/***/ }),
/* 159 */
/***/ ((module) => {

"use strict";

module.exports = (flag, argv) => {
	argv = argv || process.argv;
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const pos = argv.indexOf(prefix + flag);
	const terminatorPos = argv.indexOf('--');
	return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};


/***/ }),
/* 160 */
/***/ ((module) => {

"use strict";

const TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
const STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
const STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
const ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;

const ESCAPES = new Map([
	['n', '\n'],
	['r', '\r'],
	['t', '\t'],
	['b', '\b'],
	['f', '\f'],
	['v', '\v'],
	['0', '\0'],
	['\\', '\\'],
	['e', '\u001B'],
	['a', '\u0007']
]);

function unescape(c) {
	if ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {
		return String.fromCharCode(parseInt(c.slice(1), 16));
	}

	return ESCAPES.get(c) || c;
}

function parseArguments(name, args) {
	const results = [];
	const chunks = args.trim().split(/\s*,\s*/g);
	let matches;

	for (const chunk of chunks) {
		if (!isNaN(chunk)) {
			results.push(Number(chunk));
		} else if ((matches = chunk.match(STRING_REGEX))) {
			results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));
		} else {
			throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
		}
	}

	return results;
}

function parseStyle(style) {
	STYLE_REGEX.lastIndex = 0;

	const results = [];
	let matches;

	while ((matches = STYLE_REGEX.exec(style)) !== null) {
		const name = matches[1];

		if (matches[2]) {
			const args = parseArguments(name, matches[2]);
			results.push([name].concat(args));
		} else {
			results.push([name]);
		}
	}

	return results;
}

function buildStyle(chalk, styles) {
	const enabled = {};

	for (const layer of styles) {
		for (const style of layer.styles) {
			enabled[style[0]] = layer.inverse ? null : style.slice(1);
		}
	}

	let current = chalk;
	for (const styleName of Object.keys(enabled)) {
		if (Array.isArray(enabled[styleName])) {
			if (!(styleName in current)) {
				throw new Error(`Unknown Chalk style: ${styleName}`);
			}

			if (enabled[styleName].length > 0) {
				current = current[styleName].apply(current, enabled[styleName]);
			} else {
				current = current[styleName];
			}
		}
	}

	return current;
}

module.exports = (chalk, tmp) => {
	const styles = [];
	const chunks = [];
	let chunk = [];

	// eslint-disable-next-line max-params
	tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
		if (escapeChar) {
			chunk.push(unescape(escapeChar));
		} else if (style) {
			const str = chunk.join('');
			chunk = [];
			chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));
			styles.push({inverse, styles: parseStyle(style)});
		} else if (close) {
			if (styles.length === 0) {
				throw new Error('Found extraneous } in Chalk template literal');
			}

			chunks.push(buildStyle(chalk, styles)(chunk.join('')));
			chunk = [];
			styles.pop();
		} else {
			chunk.push(chr);
		}
	});

	chunks.push(chunk.join(''));

	if (styles.length > 0) {
		const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\`}\`)`;
		throw new Error(errMsg);
	}

	return chunks.join('');
};


/***/ }),
/* 161 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.evaluateTruthy = evaluateTruthy;
exports.evaluate = evaluate;
const VALID_CALLEES = ["String", "Number", "Math"];
const INVALID_METHODS = ["random"];

function evaluateTruthy() {
  const res = this.evaluate();
  if (res.confident) return !!res.value;
}

function deopt(path, state) {
  if (!state.confident) return;
  state.deoptPath = path;
  state.confident = false;
}

function evaluateCached(path, state) {
  const {
    node
  } = path;
  const {
    seen
  } = state;

  if (seen.has(node)) {
    const existing = seen.get(node);

    if (existing.resolved) {
      return existing.value;
    } else {
      deopt(path, state);
      return;
    }
  } else {
    const item = {
      resolved: false
    };
    seen.set(node, item);

    const val = _evaluate(path, state);

    if (state.confident) {
      item.resolved = true;
      item.value = val;
    }

    return val;
  }
}

function _evaluate(path, state) {
  if (!state.confident) return;

  if (path.isSequenceExpression()) {
    const exprs = path.get("expressions");
    return evaluateCached(exprs[exprs.length - 1], state);
  }

  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {
    return path.node.value;
  }

  if (path.isNullLiteral()) {
    return null;
  }

  if (path.isTemplateLiteral()) {
    return evaluateQuasis(path, path.node.quasis, state);
  }

  if (path.isTaggedTemplateExpression() && path.get("tag").isMemberExpression()) {
    const object = path.get("tag.object");
    const {
      node: {
        name
      }
    } = object;
    const property = path.get("tag.property");

    if (object.isIdentifier() && name === "String" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === "raw") {
      return evaluateQuasis(path, path.node.quasi.quasis, state, true);
    }
  }

  if (path.isConditionalExpression()) {
    const testResult = evaluateCached(path.get("test"), state);
    if (!state.confident) return;

    if (testResult) {
      return evaluateCached(path.get("consequent"), state);
    } else {
      return evaluateCached(path.get("alternate"), state);
    }
  }

  if (path.isExpressionWrapper()) {
    return evaluateCached(path.get("expression"), state);
  }

  if (path.isMemberExpression() && !path.parentPath.isCallExpression({
    callee: path.node
  })) {
    const property = path.get("property");
    const object = path.get("object");

    if (object.isLiteral() && property.isIdentifier()) {
      const value = object.node.value;
      const type = typeof value;

      if (type === "number" || type === "string") {
        return value[property.node.name];
      }
    }
  }

  if (path.isReferencedIdentifier()) {
    const binding = path.scope.getBinding(path.node.name);

    if (binding && binding.constantViolations.length > 0) {
      return deopt(binding.path, state);
    }

    if (binding && path.node.start < binding.path.node.end) {
      return deopt(binding.path, state);
    }

    if (binding != null && binding.hasValue) {
      return binding.value;
    } else {
      if (path.node.name === "undefined") {
        return binding ? deopt(binding.path, state) : undefined;
      } else if (path.node.name === "Infinity") {
        return binding ? deopt(binding.path, state) : Infinity;
      } else if (path.node.name === "NaN") {
        return binding ? deopt(binding.path, state) : NaN;
      }

      const resolved = path.resolve();

      if (resolved === path) {
        return deopt(path, state);
      } else {
        return evaluateCached(resolved, state);
      }
    }
  }

  if (path.isUnaryExpression({
    prefix: true
  })) {
    if (path.node.operator === "void") {
      return undefined;
    }

    const argument = path.get("argument");

    if (path.node.operator === "typeof" && (argument.isFunction() || argument.isClass())) {
      return "function";
    }

    const arg = evaluateCached(argument, state);
    if (!state.confident) return;

    switch (path.node.operator) {
      case "!":
        return !arg;

      case "+":
        return +arg;

      case "-":
        return -arg;

      case "~":
        return ~arg;

      case "typeof":
        return typeof arg;
    }
  }

  if (path.isArrayExpression()) {
    const arr = [];
    const elems = path.get("elements");

    for (const elem of elems) {
      const elemValue = elem.evaluate();

      if (elemValue.confident) {
        arr.push(elemValue.value);
      } else {
        return deopt(elemValue.deopt, state);
      }
    }

    return arr;
  }

  if (path.isObjectExpression()) {
    const obj = {};
    const props = path.get("properties");

    for (const prop of props) {
      if (prop.isObjectMethod() || prop.isSpreadElement()) {
        return deopt(prop, state);
      }

      const keyPath = prop.get("key");
      let key = keyPath;

      if (prop.node.computed) {
        key = key.evaluate();

        if (!key.confident) {
          return deopt(key.deopt, state);
        }

        key = key.value;
      } else if (key.isIdentifier()) {
        key = key.node.name;
      } else {
        key = key.node.value;
      }

      const valuePath = prop.get("value");
      let value = valuePath.evaluate();

      if (!value.confident) {
        return deopt(value.deopt, state);
      }

      value = value.value;
      obj[key] = value;
    }

    return obj;
  }

  if (path.isLogicalExpression()) {
    const wasConfident = state.confident;
    const left = evaluateCached(path.get("left"), state);
    const leftConfident = state.confident;
    state.confident = wasConfident;
    const right = evaluateCached(path.get("right"), state);
    const rightConfident = state.confident;

    switch (path.node.operator) {
      case "||":
        state.confident = leftConfident && (!!left || rightConfident);
        if (!state.confident) return;
        return left || right;

      case "&&":
        state.confident = leftConfident && (!left || rightConfident);
        if (!state.confident) return;
        return left && right;
    }
  }

  if (path.isBinaryExpression()) {
    const left = evaluateCached(path.get("left"), state);
    if (!state.confident) return;
    const right = evaluateCached(path.get("right"), state);
    if (!state.confident) return;

    switch (path.node.operator) {
      case "-":
        return left - right;

      case "+":
        return left + right;

      case "/":
        return left / right;

      case "*":
        return left * right;

      case "%":
        return left % right;

      case "**":
        return Math.pow(left, right);

      case "<":
        return left < right;

      case ">":
        return left > right;

      case "<=":
        return left <= right;

      case ">=":
        return left >= right;

      case "==":
        return left == right;

      case "!=":
        return left != right;

      case "===":
        return left === right;

      case "!==":
        return left !== right;

      case "|":
        return left | right;

      case "&":
        return left & right;

      case "^":
        return left ^ right;

      case "<<":
        return left << right;

      case ">>":
        return left >> right;

      case ">>>":
        return left >>> right;
    }
  }

  if (path.isCallExpression()) {
    const callee = path.get("callee");
    let context;
    let func;

    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {
      func = global[callee.node.name];
    }

    if (callee.isMemberExpression()) {
      const object = callee.get("object");
      const property = callee.get("property");

      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {
        context = global[object.node.name];
        func = context[property.node.name];
      }

      if (object.isLiteral() && property.isIdentifier()) {
        const type = typeof object.node.value;

        if (type === "string" || type === "number") {
          context = object.node.value;
          func = context[property.node.name];
        }
      }
    }

    if (func) {
      const args = path.get("arguments").map(arg => evaluateCached(arg, state));
      if (!state.confident) return;
      return func.apply(context, args);
    }
  }

  deopt(path, state);
}

function evaluateQuasis(path, quasis, state, raw = false) {
  let str = "";
  let i = 0;
  const exprs = path.get("expressions");

  for (const elem of quasis) {
    if (!state.confident) break;
    str += raw ? elem.value.raw : elem.value.cooked;
    const expr = exprs[i++];
    if (expr) str += String(evaluateCached(expr, state));
  }

  if (!state.confident) return;
  return str;
}

function evaluate() {
  const state = {
    confident: true,
    deoptPath: null,
    seen: new Map()
  };
  let value = evaluateCached(this, state);
  if (!state.confident) value = undefined;
  return {
    confident: state.confident,
    deopt: state.deoptPath,
    value: value
  };
}

/***/ }),
/* 162 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.toComputedKey = toComputedKey;
exports.ensureBlock = ensureBlock;
exports.arrowFunctionToShadowed = arrowFunctionToShadowed;
exports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;
exports.arrowFunctionToExpression = arrowFunctionToExpression;

var t = __webpack_require__(11);

var _helperFunctionName = __webpack_require__(163);

function toComputedKey() {
  let key;

  if (this.isMemberExpression()) {
    key = this.node.property;
  } else if (this.isProperty() || this.isMethod()) {
    key = this.node.key;
  } else {
    throw new ReferenceError("todo");
  }

  if (!this.node.computed) {
    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);
  }

  return key;
}

function ensureBlock() {
  const body = this.get("body");
  const bodyNode = body.node;

  if (Array.isArray(body)) {
    throw new Error("Can't convert array path to a block statement");
  }

  if (!bodyNode) {
    throw new Error("Can't convert node without a body");
  }

  if (body.isBlockStatement()) {
    return bodyNode;
  }

  const statements = [];
  let stringPath = "body";
  let key;
  let listKey;

  if (body.isStatement()) {
    listKey = "body";
    key = 0;
    statements.push(body.node);
  } else {
    stringPath += ".body.0";

    if (this.isFunction()) {
      key = "argument";
      statements.push(t.returnStatement(body.node));
    } else {
      key = "expression";
      statements.push(t.expressionStatement(body.node));
    }
  }

  this.node.body = t.blockStatement(statements);
  const parentPath = this.get(stringPath);
  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);
  return this.node;
}

function arrowFunctionToShadowed() {
  if (!this.isArrowFunctionExpression()) return;
  this.arrowFunctionToExpression();
}

function unwrapFunctionEnvironment() {
  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {
    throw this.buildCodeFrameError("Can only unwrap the environment of a function.");
  }

  hoistFunctionEnvironment(this);
}

function arrowFunctionToExpression({
  allowInsertArrow = true,
  specCompliant = false,
  noNewArrows = !specCompliant
} = {}) {
  if (!this.isArrowFunctionExpression()) {
    throw this.buildCodeFrameError("Cannot convert non-arrow function to a function expression.");
  }

  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);
  this.ensureBlock();
  this.node.type = "FunctionExpression";

  if (!noNewArrows) {
    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier("arrowCheckId");

    if (checkBinding) {
      this.parentPath.scope.push({
        id: checkBinding,
        init: t.objectExpression([])
      });
    }

    this.get("body").unshiftContainer("body", t.expressionStatement(t.callExpression(this.hub.addHelper("newArrowCheck"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));
    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier("bind")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));
  }
}

function hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {
  const thisEnvFn = fnPath.findParent(p => {
    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({
      static: false
    });
  });
  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === "constructor";

  if (thisEnvFn.isClassProperty()) {
    throw fnPath.buildCodeFrameError("Unable to transform arrow inside class property");
  }

  const {
    thisPaths,
    argumentsPaths,
    newTargetPaths,
    superProps,
    superCalls
  } = getScopeInformation(fnPath);

  if (inConstructor && superCalls.length > 0) {
    if (!allowInsertArrow) {
      throw superCalls[0].buildCodeFrameError("Unable to handle nested super() usage in arrow");
    }

    const allSuperCalls = [];
    thisEnvFn.traverse({
      Function(child) {
        if (child.isArrowFunctionExpression()) return;
        child.skip();
      },

      ClassProperty(child) {
        child.skip();
      },

      CallExpression(child) {
        if (!child.get("callee").isSuper()) return;
        allSuperCalls.push(child);
      }

    });
    const superBinding = getSuperBinding(thisEnvFn);
    allSuperCalls.forEach(superCall => {
      const callee = t.identifier(superBinding);
      callee.loc = superCall.node.callee.loc;
      superCall.get("callee").replaceWith(callee);
    });
  }

  if (argumentsPaths.length > 0) {
    const argumentsBinding = getBinding(thisEnvFn, "arguments", () => t.identifier("arguments"));
    argumentsPaths.forEach(argumentsChild => {
      const argsRef = t.identifier(argumentsBinding);
      argsRef.loc = argumentsChild.node.loc;
      argumentsChild.replaceWith(argsRef);
    });
  }

  if (newTargetPaths.length > 0) {
    const newTargetBinding = getBinding(thisEnvFn, "newtarget", () => t.metaProperty(t.identifier("new"), t.identifier("target")));
    newTargetPaths.forEach(targetChild => {
      const targetRef = t.identifier(newTargetBinding);
      targetRef.loc = targetChild.node.loc;
      targetChild.replaceWith(targetRef);
    });
  }

  if (superProps.length > 0) {
    if (!allowInsertArrow) {
      throw superProps[0].buildCodeFrameError("Unable to handle nested super.prop usage");
    }

    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);
    flatSuperProps.forEach(superProp => {
      const key = superProp.node.computed ? "" : superProp.get("property").node.name;
      const isAssignment = superProp.parentPath.isAssignmentExpression({
        left: superProp.node
      });
      const isCall = superProp.parentPath.isCallExpression({
        callee: superProp.node
      });
      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);
      const args = [];

      if (superProp.node.computed) {
        args.push(superProp.get("property").node);
      }

      if (isAssignment) {
        const value = superProp.parentPath.node.right;
        args.push(value);
      }

      const call = t.callExpression(t.identifier(superBinding), args);

      if (isCall) {
        superProp.parentPath.unshiftContainer("arguments", t.thisExpression());
        superProp.replaceWith(t.memberExpression(call, t.identifier("call")));
        thisPaths.push(superProp.parentPath.get("arguments.0"));
      } else if (isAssignment) {
        superProp.parentPath.replaceWith(call);
      } else {
        superProp.replaceWith(call);
      }
    });
  }

  let thisBinding;

  if (thisPaths.length > 0 || !noNewArrows) {
    thisBinding = getThisBinding(thisEnvFn, inConstructor);

    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {
      thisPaths.forEach(thisChild => {
        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);
        thisRef.loc = thisChild.node.loc;
        thisChild.replaceWith(thisRef);
      });
      if (!noNewArrows) thisBinding = null;
    }
  }

  return thisBinding;
}

function standardizeSuperProperty(superProp) {
  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== "=") {
    const assignmentPath = superProp.parentPath;
    const op = assignmentPath.node.operator.slice(0, -1);
    const value = assignmentPath.node.right;
    assignmentPath.node.operator = "=";

    if (superProp.node.computed) {
      const tmp = superProp.scope.generateDeclaredUidIdentifier("tmp");
      assignmentPath.get("left").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression("=", tmp, superProp.node.property), true));
      assignmentPath.get("right").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));
    } else {
      assignmentPath.get("left").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));
      assignmentPath.get("right").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));
    }

    return [assignmentPath.get("left"), assignmentPath.get("right").get("left")];
  } else if (superProp.parentPath.isUpdateExpression()) {
    const updateExpr = superProp.parentPath;
    const tmp = superProp.scope.generateDeclaredUidIdentifier("tmp");
    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier("prop") : null;
    const parts = [t.assignmentExpression("=", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression("=", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression("=", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression("+", t.identifier(tmp.name), t.numericLiteral(1)))];

    if (!superProp.parentPath.node.prefix) {
      parts.push(t.identifier(tmp.name));
    }

    updateExpr.replaceWith(t.sequenceExpression(parts));
    const left = updateExpr.get("expressions.0.right");
    const right = updateExpr.get("expressions.1.left");
    return [left, right];
  }

  return [superProp];
}

function hasSuperClass(thisEnvFn) {
  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;
}

function getThisBinding(thisEnvFn, inConstructor) {
  return getBinding(thisEnvFn, "this", thisBinding => {
    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();
    const supers = new WeakSet();
    thisEnvFn.traverse({
      Function(child) {
        if (child.isArrowFunctionExpression()) return;
        child.skip();
      },

      ClassProperty(child) {
        child.skip();
      },

      CallExpression(child) {
        if (!child.get("callee").isSuper()) return;
        if (supers.has(child.node)) return;
        supers.add(child.node);
        child.replaceWithMultiple([child.node, t.assignmentExpression("=", t.identifier(thisBinding), t.identifier("this"))]);
      }

    });
  });
}

function getSuperBinding(thisEnvFn) {
  return getBinding(thisEnvFn, "supercall", () => {
    const argsBinding = thisEnvFn.scope.generateUidIdentifier("args");
    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));
  });
}

function getSuperPropBinding(thisEnvFn, isAssignment, propName) {
  const op = isAssignment ? "set" : "get";
  return getBinding(thisEnvFn, `superprop_${op}:${propName || ""}`, () => {
    const argsList = [];
    let fnBody;

    if (propName) {
      fnBody = t.memberExpression(t.super(), t.identifier(propName));
    } else {
      const method = thisEnvFn.scope.generateUidIdentifier("prop");
      argsList.unshift(method);
      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);
    }

    if (isAssignment) {
      const valueIdent = thisEnvFn.scope.generateUidIdentifier("value");
      argsList.push(valueIdent);
      fnBody = t.assignmentExpression("=", fnBody, t.identifier(valueIdent.name));
    }

    return t.arrowFunctionExpression(argsList, fnBody);
  });
}

function getBinding(thisEnvFn, key, init) {
  const cacheKey = "binding:" + key;
  let data = thisEnvFn.getData(cacheKey);

  if (!data) {
    const id = thisEnvFn.scope.generateUidIdentifier(key);
    data = id.name;
    thisEnvFn.setData(cacheKey, data);
    thisEnvFn.scope.push({
      id: id,
      init: init(data)
    });
  }

  return data;
}

function getScopeInformation(fnPath) {
  const thisPaths = [];
  const argumentsPaths = [];
  const newTargetPaths = [];
  const superProps = [];
  const superCalls = [];
  fnPath.traverse({
    ClassProperty(child) {
      child.skip();
    },

    Function(child) {
      if (child.isArrowFunctionExpression()) return;
      child.skip();
    },

    ThisExpression(child) {
      thisPaths.push(child);
    },

    JSXIdentifier(child) {
      if (child.node.name !== "this") return;

      if (!child.parentPath.isJSXMemberExpression({
        object: child.node
      }) && !child.parentPath.isJSXOpeningElement({
        name: child.node
      })) {
        return;
      }

      thisPaths.push(child);
    },

    CallExpression(child) {
      if (child.get("callee").isSuper()) superCalls.push(child);
    },

    MemberExpression(child) {
      if (child.get("object").isSuper()) superProps.push(child);
    },

    ReferencedIdentifier(child) {
      if (child.node.name !== "arguments") return;
      argumentsPaths.push(child);
    },

    MetaProperty(child) {
      if (!child.get("meta").isIdentifier({
        name: "new"
      })) return;
      if (!child.get("property").isIdentifier({
        name: "target"
      })) return;
      newTargetPaths.push(child);
    }

  });
  return {
    thisPaths,
    argumentsPaths,
    newTargetPaths,
    superProps,
    superCalls
  };
}

/***/ }),
/* 163 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;

var _helperGetFunctionArity = __webpack_require__(164);

var _template = __webpack_require__(165);

var t = __webpack_require__(11);

const buildPropertyMethodAssignmentWrapper = (0, _template.default)(`
  (function (FUNCTION_KEY) {
    function FUNCTION_ID() {
      return FUNCTION_KEY.apply(this, arguments);
    }

    FUNCTION_ID.toString = function () {
      return FUNCTION_KEY.toString();
    }

    return FUNCTION_ID;
  })(FUNCTION)
`);
const buildGeneratorPropertyMethodAssignmentWrapper = (0, _template.default)(`
  (function (FUNCTION_KEY) {
    function* FUNCTION_ID() {
      return yield* FUNCTION_KEY.apply(this, arguments);
    }

    FUNCTION_ID.toString = function () {
      return FUNCTION_KEY.toString();
    };

    return FUNCTION_ID;
  })(FUNCTION)
`);
const visitor = {
  "ReferencedIdentifier|BindingIdentifier"(path, state) {
    if (path.node.name !== state.name) return;
    const localDeclar = path.scope.getBindingIdentifier(state.name);
    if (localDeclar !== state.outerDeclar) return;
    state.selfReference = true;
    path.stop();
  }

};

function getNameFromLiteralId(id) {
  if (t.isNullLiteral(id)) {
    return "null";
  }

  if (t.isRegExpLiteral(id)) {
    return `_${id.pattern}_${id.flags}`;
  }

  if (t.isTemplateLiteral(id)) {
    return id.quasis.map(quasi => quasi.value.raw).join("");
  }

  if (id.value !== undefined) {
    return id.value + "";
  }

  return "";
}

function wrap(state, method, id, scope) {
  if (state.selfReference) {
    if (scope.hasBinding(id.name) && !scope.hasGlobal(id.name)) {
      scope.rename(id.name);
    } else {
      if (!t.isFunction(method)) return;
      let build = buildPropertyMethodAssignmentWrapper;

      if (method.generator) {
        build = buildGeneratorPropertyMethodAssignmentWrapper;
      }

      const template = build({
        FUNCTION: method,
        FUNCTION_ID: id,
        FUNCTION_KEY: scope.generateUidIdentifier(id.name)
      }).expression;
      const params = template.callee.body.body[0].params;

      for (let i = 0, len = (0, _helperGetFunctionArity.default)(method); i < len; i++) {
        params.push(scope.generateUidIdentifier("x"));
      }

      return template;
    }
  }

  method.id = id;
  scope.getProgramParent().references[id.name] = true;
}

function visit(node, name, scope) {
  const state = {
    selfAssignment: false,
    selfReference: false,
    outerDeclar: scope.getBindingIdentifier(name),
    references: [],
    name: name
  };
  const binding = scope.getOwnBinding(name);

  if (binding) {
    if (binding.kind === "param") {
      state.selfReference = true;
    } else {}
  } else if (state.outerDeclar || scope.hasGlobal(name)) {
    scope.traverse(node, visitor, state);
  }

  return state;
}

function _default({
  node,
  parent,
  scope,
  id
}, localBinding = false) {
  if (node.id) return;

  if ((t.isObjectProperty(parent) || t.isObjectMethod(parent, {
    kind: "method"
  })) && (!parent.computed || t.isLiteral(parent.key))) {
    id = parent.key;
  } else if (t.isVariableDeclarator(parent)) {
    id = parent.id;

    if (t.isIdentifier(id) && !localBinding) {
      const binding = scope.parent.getBinding(id.name);

      if (binding && binding.constant && scope.getBinding(id.name) === binding) {
        node.id = t.cloneNode(id);
        node.id[t.NOT_LOCAL_BINDING] = true;
        return;
      }
    }
  } else if (t.isAssignmentExpression(parent, {
    operator: "="
  })) {
    id = parent.left;
  } else if (!id) {
    return;
  }

  let name;

  if (id && t.isLiteral(id)) {
    name = getNameFromLiteralId(id);
  } else if (id && t.isIdentifier(id)) {
    name = id.name;
  }

  if (name === undefined) {
    return;
  }

  name = t.toBindingIdentifierName(name);
  id = t.identifier(name);
  id[t.NOT_LOCAL_BINDING] = true;
  const state = visit(node, name, scope);
  return wrap(state, node, id, scope) || node;
}

/***/ }),
/* 164 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(node) {
  const params = node.params;

  for (let i = 0; i < params.length; i++) {
    const param = params[i];

    if (t.isAssignmentPattern(param) || t.isRestElement(param)) {
      return i;
    }
  }

  return params.length;
}

/***/ }),
/* 165 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;

var formatters = _interopRequireWildcard(__webpack_require__(166));

var _builder = _interopRequireDefault(__webpack_require__(167));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const smart = (0, _builder.default)(formatters.smart);
exports.smart = smart;
const statement = (0, _builder.default)(formatters.statement);
exports.statement = statement;
const statements = (0, _builder.default)(formatters.statements);
exports.statements = statements;
const expression = (0, _builder.default)(formatters.expression);
exports.expression = expression;
const program = (0, _builder.default)(formatters.program);
exports.program = program;

var _default = Object.assign(smart.bind(undefined), {
  smart,
  statement,
  statements,
  expression,
  program,
  ast: smart.ast
});

exports.default = _default;

/***/ }),
/* 166 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function makeStatementFormatter(fn) {
  return {
    code: str => `/* @babel/template */;\n${str}`,
    validate: () => {},
    unwrap: ast => {
      return fn(ast.program.body.slice(1));
    }
  };
}

const smart = makeStatementFormatter(body => {
  if (body.length > 1) {
    return body;
  } else {
    return body[0];
  }
});
exports.smart = smart;
const statements = makeStatementFormatter(body => body);
exports.statements = statements;
const statement = makeStatementFormatter(body => {
  if (body.length === 0) {
    throw new Error("Found nothing to return.");
  }

  if (body.length > 1) {
    throw new Error("Found multiple statements but wanted one");
  }

  return body[0];
});
exports.statement = statement;
const expression = {
  code: str => `(\n${str}\n)`,
  validate: ast => {
    if (ast.program.body.length > 1) {
      throw new Error("Found multiple statements but wanted one");
    }

    if (expression.unwrap(ast).start === 0) {
      throw new Error("Parse result included parens.");
    }
  },
  unwrap: ({
    program
  }) => {
    const [stmt] = program.body;
    t.assertExpressionStatement(stmt);
    return stmt.expression;
  }
};
exports.expression = expression;
const program = {
  code: str => str,
  validate: () => {},
  unwrap: ast => ast.program
};
exports.program = program;

/***/ }),
/* 167 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = createTemplateBuilder;

var _options = __webpack_require__(168);

var _string = _interopRequireDefault(__webpack_require__(169));

var _literal = _interopRequireDefault(__webpack_require__(172));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const NO_PLACEHOLDER = (0, _options.validate)({
  placeholderPattern: false
});

function createTemplateBuilder(formatter, defaultOpts) {
  const templateFnCache = new WeakMap();
  const templateAstCache = new WeakMap();
  const cachedOpts = defaultOpts || (0, _options.validate)(null);
  return Object.assign((tpl, ...args) => {
    if (typeof tpl === "string") {
      if (args.length > 1) throw new Error("Unexpected extra params.");
      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));
    } else if (Array.isArray(tpl)) {
      let builder = templateFnCache.get(tpl);

      if (!builder) {
        builder = (0, _literal.default)(formatter, tpl, cachedOpts);
        templateFnCache.set(tpl, builder);
      }

      return extendedTrace(builder(args));
    } else if (typeof tpl === "object" && tpl) {
      if (args.length > 0) throw new Error("Unexpected extra params.");
      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));
    }

    throw new Error(`Unexpected template param ${typeof tpl}`);
  }, {
    ast: (tpl, ...args) => {
      if (typeof tpl === "string") {
        if (args.length > 1) throw new Error("Unexpected extra params.");
        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();
      } else if (Array.isArray(tpl)) {
        let builder = templateAstCache.get(tpl);

        if (!builder) {
          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));
          templateAstCache.set(tpl, builder);
        }

        return builder(args)();
      }

      throw new Error(`Unexpected template param ${typeof tpl}`);
    }
  });
}

function extendedTrace(fn) {
  let rootStack = "";

  try {
    throw new Error();
  } catch (error) {
    if (error.stack) {
      rootStack = error.stack.split("\n").slice(3).join("\n");
    }
  }

  return arg => {
    try {
      return fn(arg);
    } catch (err) {
      err.stack += `\n    =============\n${rootStack}`;
      throw err;
    }
  };
}

/***/ }),
/* 168 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.merge = merge;
exports.validate = validate;
exports.normalizeReplacements = normalizeReplacements;

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function merge(a, b) {
  const {
    placeholderWhitelist = a.placeholderWhitelist,
    placeholderPattern = a.placeholderPattern,
    preserveComments = a.preserveComments,
    syntacticPlaceholders = a.syntacticPlaceholders
  } = b;
  return {
    parser: Object.assign({}, a.parser, b.parser),
    placeholderWhitelist,
    placeholderPattern,
    preserveComments,
    syntacticPlaceholders
  };
}

function validate(opts) {
  if (opts != null && typeof opts !== "object") {
    throw new Error("Unknown template options.");
  }

  const _ref = opts || {},
        {
    placeholderWhitelist,
    placeholderPattern,
    preserveComments,
    syntacticPlaceholders
  } = _ref,
        parser = _objectWithoutPropertiesLoose(_ref, ["placeholderWhitelist", "placeholderPattern", "preserveComments", "syntacticPlaceholders"]);

  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {
    throw new Error("'.placeholderWhitelist' must be a Set, null, or undefined");
  }

  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {
    throw new Error("'.placeholderPattern' must be a RegExp, false, null, or undefined");
  }

  if (preserveComments != null && typeof preserveComments !== "boolean") {
    throw new Error("'.preserveComments' must be a boolean, null, or undefined");
  }

  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== "boolean") {
    throw new Error("'.syntacticPlaceholders' must be a boolean, null, or undefined");
  }

  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {
    throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible" + " with '.syntacticPlaceholders: true'");
  }

  return {
    parser,
    placeholderWhitelist: placeholderWhitelist || undefined,
    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,
    preserveComments: preserveComments == null ? undefined : preserveComments,
    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders
  };
}

function normalizeReplacements(replacements) {
  if (Array.isArray(replacements)) {
    return replacements.reduce((acc, replacement, i) => {
      acc["$" + i] = replacement;
      return acc;
    }, {});
  } else if (typeof replacements === "object" || replacements == null) {
    return replacements || undefined;
  }

  throw new Error("Template replacements must be an array, object, null, or undefined");
}

/***/ }),
/* 169 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = stringTemplate;

var _options = __webpack_require__(168);

var _parse = _interopRequireDefault(__webpack_require__(170));

var _populate = _interopRequireDefault(__webpack_require__(171));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringTemplate(formatter, code, opts) {
  code = formatter.code(code);
  let metadata;
  return arg => {
    const replacements = (0, _options.normalizeReplacements)(arg);
    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);
    return formatter.unwrap((0, _populate.default)(metadata, replacements));
  };
}

/***/ }),
/* 170 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = parseAndBuildMetadata;

var t = _interopRequireWildcard(__webpack_require__(11));

var _parser = __webpack_require__(3);

var _codeFrame = __webpack_require__(148);

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PATTERN = /^[_$A-Z0-9]+$/;

function parseAndBuildMetadata(formatter, code, opts) {
  const {
    placeholderWhitelist,
    placeholderPattern,
    preserveComments,
    syntacticPlaceholders
  } = opts;
  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);
  t.removePropertiesDeep(ast, {
    preserveComments
  });
  formatter.validate(ast);
  const syntactic = {
    placeholders: [],
    placeholderNames: new Set()
  };
  const legacy = {
    placeholders: [],
    placeholderNames: new Set()
  };
  const isLegacyRef = {
    value: undefined
  };
  t.traverse(ast, placeholderVisitorHandler, {
    syntactic,
    legacy,
    isLegacyRef,
    placeholderWhitelist,
    placeholderPattern,
    syntacticPlaceholders
  });
  return Object.assign({
    ast
  }, isLegacyRef.value ? legacy : syntactic);
}

function placeholderVisitorHandler(node, ancestors, state) {
  var _state$placeholderWhi;

  let name;

  if (t.isPlaceholder(node)) {
    if (state.syntacticPlaceholders === false) {
      throw new Error("%%foo%%-style placeholders can't be used when " + "'.syntacticPlaceholders' is false.");
    } else {
      name = node.name.name;
      state.isLegacyRef.value = false;
    }
  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {
    return;
  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {
    name = node.name;
    state.isLegacyRef.value = true;
  } else if (t.isStringLiteral(node)) {
    name = node.value;
    state.isLegacyRef.value = true;
  } else {
    return;
  }

  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {
    throw new Error("'.placeholderWhitelist' and '.placeholderPattern' aren't compatible" + " with '.syntacticPlaceholders: true'");
  }

  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) == null ? void 0 : _state$placeholderWhi.has(name))) {
    return;
  }

  ancestors = ancestors.slice();
  const {
    node: parent,
    key
  } = ancestors[ancestors.length - 1];
  let type;

  if (t.isStringLiteral(node) || t.isPlaceholder(node, {
    expectedNode: "StringLiteral"
  })) {
    type = "string";
  } else if (t.isNewExpression(parent) && key === "arguments" || t.isCallExpression(parent) && key === "arguments" || t.isFunction(parent) && key === "params") {
    type = "param";
  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {
    type = "statement";
    ancestors = ancestors.slice(0, -1);
  } else if (t.isStatement(node) && t.isPlaceholder(node)) {
    type = "statement";
  } else {
    type = "other";
  }

  const {
    placeholders,
    placeholderNames
  } = state.isLegacyRef.value ? state.legacy : state.syntactic;
  placeholders.push({
    name,
    type,
    resolve: ast => resolveAncestors(ast, ancestors),
    isDuplicate: placeholderNames.has(name)
  });
  placeholderNames.add(name);
}

function resolveAncestors(ast, ancestors) {
  let parent = ast;

  for (let i = 0; i < ancestors.length - 1; i++) {
    const {
      key,
      index
    } = ancestors[i];

    if (index === undefined) {
      parent = parent[key];
    } else {
      parent = parent[key][index];
    }
  }

  const {
    key,
    index
  } = ancestors[ancestors.length - 1];
  return {
    parent,
    key,
    index
  };
}

function parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {
  const plugins = (parserOpts.plugins || []).slice();

  if (syntacticPlaceholders !== false) {
    plugins.push("placeholders");
  }

  parserOpts = Object.assign({
    allowReturnOutsideFunction: true,
    allowSuperOutsideMethod: true,
    sourceType: "module"
  }, parserOpts, {
    plugins
  });

  try {
    return (0, _parser.parse)(code, parserOpts);
  } catch (err) {
    const loc = err.loc;

    if (loc) {
      err.message += "\n" + (0, _codeFrame.codeFrameColumns)(code, {
        start: loc
      });
      err.code = "BABEL_TEMPLATE_PARSE_ERROR";
    }

    throw err;
  }
}

/***/ }),
/* 171 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = populatePlaceholders;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function populatePlaceholders(metadata, replacements) {
  const ast = t.cloneNode(metadata.ast);

  if (replacements) {
    metadata.placeholders.forEach(placeholder => {
      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {
        const placeholderName = placeholder.name;
        throw new Error(`Error: No substitution given for "${placeholderName}". If this is not meant to be a
            placeholder you may want to consider passing one of the following options to @babel/template:
            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}
            - { placeholderPattern: /^${placeholderName}$/ }`);
      }
    });
    Object.keys(replacements).forEach(key => {
      if (!metadata.placeholderNames.has(key)) {
        throw new Error(`Unknown substitution "${key}" given`);
      }
    });
  }

  metadata.placeholders.slice().reverse().forEach(placeholder => {
    try {
      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);
    } catch (e) {
      e.message = `@babel/template placeholder "${placeholder.name}": ${e.message}`;
      throw e;
    }
  });
  return ast;
}

function applyReplacement(placeholder, ast, replacement) {
  if (placeholder.isDuplicate) {
    if (Array.isArray(replacement)) {
      replacement = replacement.map(node => t.cloneNode(node));
    } else if (typeof replacement === "object") {
      replacement = t.cloneNode(replacement);
    }
  }

  const {
    parent,
    key,
    index
  } = placeholder.resolve(ast);

  if (placeholder.type === "string") {
    if (typeof replacement === "string") {
      replacement = t.stringLiteral(replacement);
    }

    if (!replacement || !t.isStringLiteral(replacement)) {
      throw new Error("Expected string substitution");
    }
  } else if (placeholder.type === "statement") {
    if (index === undefined) {
      if (!replacement) {
        replacement = t.emptyStatement();
      } else if (Array.isArray(replacement)) {
        replacement = t.blockStatement(replacement);
      } else if (typeof replacement === "string") {
        replacement = t.expressionStatement(t.identifier(replacement));
      } else if (!t.isStatement(replacement)) {
        replacement = t.expressionStatement(replacement);
      }
    } else {
      if (replacement && !Array.isArray(replacement)) {
        if (typeof replacement === "string") {
          replacement = t.identifier(replacement);
        }

        if (!t.isStatement(replacement)) {
          replacement = t.expressionStatement(replacement);
        }
      }
    }
  } else if (placeholder.type === "param") {
    if (typeof replacement === "string") {
      replacement = t.identifier(replacement);
    }

    if (index === undefined) throw new Error("Assertion failure.");
  } else {
    if (typeof replacement === "string") {
      replacement = t.identifier(replacement);
    }

    if (Array.isArray(replacement)) {
      throw new Error("Cannot replace single expression with an array.");
    }
  }

  if (index === undefined) {
    t.validate(parent, key, replacement);
    parent[key] = replacement;
  } else {
    const items = parent[key].slice();

    if (placeholder.type === "statement" || placeholder.type === "param") {
      if (replacement == null) {
        items.splice(index, 1);
      } else if (Array.isArray(replacement)) {
        items.splice(index, 1, ...replacement);
      } else {
        items[index] = replacement;
      }
    } else {
      items[index] = replacement;
    }

    t.validate(parent, key, items);
    parent[key] = items;
  }
}

/***/ }),
/* 172 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = literalTemplate;

var _options = __webpack_require__(168);

var _parse = _interopRequireDefault(__webpack_require__(170));

var _populate = _interopRequireDefault(__webpack_require__(171));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function literalTemplate(formatter, tpl, opts) {
  const {
    metadata,
    names
  } = buildLiteralData(formatter, tpl, opts);
  return arg => {
    const defaultReplacements = {};
    arg.forEach((replacement, i) => {
      defaultReplacements[names[i]] = replacement;
    });
    return arg => {
      const replacements = (0, _options.normalizeReplacements)(arg);

      if (replacements) {
        Object.keys(replacements).forEach(key => {
          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {
            throw new Error("Unexpected replacement overlap.");
          }
        });
      }

      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));
    };
  };
}

function buildLiteralData(formatter, tpl, opts) {
  let names;
  let nameSet;
  let metadata;
  let prefix = "";

  do {
    prefix += "$";
    const result = buildTemplateCode(tpl, prefix);
    names = result.names;
    nameSet = new Set(names);
    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {
      parser: opts.parser,
      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),
      placeholderPattern: opts.placeholderPattern,
      preserveComments: opts.preserveComments,
      syntacticPlaceholders: opts.syntacticPlaceholders
    });
  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));

  return {
    metadata,
    names
  };
}

function buildTemplateCode(tpl, prefix) {
  const names = [];
  let code = tpl[0];

  for (let i = 1; i < tpl.length; i++) {
    const value = `${prefix}${i - 1}`;
    names.push(value);
    code += value + tpl[i];
  }

  return {
    names,
    code
  };
}

/***/ }),
/* 173 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.matchesPattern = matchesPattern;
exports.has = has;
exports.isStatic = isStatic;
exports.isnt = isnt;
exports.equals = equals;
exports.isNodeType = isNodeType;
exports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;
exports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;
exports.isCompletionRecord = isCompletionRecord;
exports.isStatementOrBlock = isStatementOrBlock;
exports.referencesImport = referencesImport;
exports.getSource = getSource;
exports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;
exports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;
exports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;
exports.resolve = resolve;
exports._resolve = _resolve;
exports.isConstantExpression = isConstantExpression;
exports.isInStrictMode = isInStrictMode;
exports.is = void 0;

var t = __webpack_require__(11);

function matchesPattern(pattern, allowPartial) {
  return t.matchesPattern(this.node, pattern, allowPartial);
}

function has(key) {
  const val = this.node && this.node[key];

  if (val && Array.isArray(val)) {
    return !!val.length;
  } else {
    return !!val;
  }
}

function isStatic() {
  return this.scope.isStatic(this.node);
}

const is = has;
exports.is = is;

function isnt(key) {
  return !this.has(key);
}

function equals(key, value) {
  return this.node[key] === value;
}

function isNodeType(type) {
  return t.isType(this.type, type);
}

function canHaveVariableDeclarationOrExpression() {
  return (this.key === "init" || this.key === "left") && this.parentPath.isFor();
}

function canSwapBetweenExpressionAndStatement(replacement) {
  if (this.key !== "body" || !this.parentPath.isArrowFunctionExpression()) {
    return false;
  }

  if (this.isExpression()) {
    return t.isBlockStatement(replacement);
  } else if (this.isBlockStatement()) {
    return t.isExpression(replacement);
  }

  return false;
}

function isCompletionRecord(allowInsideFunction) {
  let path = this;
  let first = true;

  do {
    const container = path.container;

    if (path.isFunction() && !first) {
      return !!allowInsideFunction;
    }

    first = false;

    if (Array.isArray(container) && path.key !== container.length - 1) {
      return false;
    }
  } while ((path = path.parentPath) && !path.isProgram());

  return true;
}

function isStatementOrBlock() {
  if (this.parentPath.isLabeledStatement() || t.isBlockStatement(this.container)) {
    return false;
  } else {
    return t.STATEMENT_OR_BLOCK_KEYS.includes(this.key);
  }
}

function referencesImport(moduleSource, importName) {
  if (!this.isReferencedIdentifier()) {
    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? t.isStringLiteral(this.node.property, {
      value: importName
    }) : this.node.property.name === importName)) {
      const object = this.get("object");
      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, "*");
    }

    return false;
  }

  const binding = this.scope.getBinding(this.node.name);
  if (!binding || binding.kind !== "module") return false;
  const path = binding.path;
  const parent = path.parentPath;
  if (!parent.isImportDeclaration()) return false;

  if (parent.node.source.value === moduleSource) {
    if (!importName) return true;
  } else {
    return false;
  }

  if (path.isImportDefaultSpecifier() && importName === "default") {
    return true;
  }

  if (path.isImportNamespaceSpecifier() && importName === "*") {
    return true;
  }

  if (path.isImportSpecifier() && t.isIdentifier(path.node.imported, {
    name: importName
  })) {
    return true;
  }

  return false;
}

function getSource() {
  const node = this.node;

  if (node.end) {
    const code = this.hub.getCode();
    if (code) return code.slice(node.start, node.end);
  }

  return "";
}

function willIMaybeExecuteBefore(target) {
  return this._guessExecutionStatusRelativeTo(target) !== "after";
}

function getOuterFunction(path) {
  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;
}

function isExecutionUncertain(type, key) {
  switch (type) {
    case "LogicalExpression":
      return key === "right";

    case "ConditionalExpression":
    case "IfStatement":
      return key === "consequent" || key === "alternate";

    case "WhileStatement":
    case "DoWhileStatement":
    case "ForInStatement":
    case "ForOfStatement":
      return key === "body";

    case "ForStatement":
      return key === "body" || key === "update";

    case "SwitchStatement":
      return key === "cases";

    case "TryStatement":
      return key === "handler";

    case "AssignmentPattern":
      return key === "right";

    case "OptionalMemberExpression":
      return key === "property";

    case "OptionalCallExpression":
      return key === "arguments";

    default:
      return false;
  }
}

function isExecutionUncertainInList(paths, maxIndex) {
  for (let i = 0; i < maxIndex; i++) {
    const path = paths[i];

    if (isExecutionUncertain(path.parent.type, path.parentKey)) {
      return true;
    }
  }

  return false;
}

function _guessExecutionStatusRelativeTo(target) {
  const funcParent = {
    this: getOuterFunction(this),
    target: getOuterFunction(target)
  };

  if (funcParent.target.node !== funcParent.this.node) {
    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);
  }

  const paths = {
    target: target.getAncestry(),
    this: this.getAncestry()
  };
  if (paths.target.indexOf(this) >= 0) return "after";
  if (paths.this.indexOf(target) >= 0) return "before";
  let commonPath;
  const commonIndex = {
    target: 0,
    this: 0
  };

  while (!commonPath && commonIndex.this < paths.this.length) {
    const path = paths.this[commonIndex.this];
    commonIndex.target = paths.target.indexOf(path);

    if (commonIndex.target >= 0) {
      commonPath = path;
    } else {
      commonIndex.this++;
    }
  }

  if (!commonPath) {
    throw new Error("Internal Babel error - The two compared nodes" + " don't appear to belong to the same program.");
  }

  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {
    return "unknown";
  }

  const divergence = {
    this: paths.this[commonIndex.this - 1],
    target: paths.target[commonIndex.target - 1]
  };

  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {
    return divergence.target.key > divergence.this.key ? "before" : "after";
  }

  const keys = t.VISITOR_KEYS[commonPath.type];
  const keyPosition = {
    this: keys.indexOf(divergence.this.parentKey),
    target: keys.indexOf(divergence.target.parentKey)
  };
  return keyPosition.target > keyPosition.this ? "before" : "after";
}

const executionOrderCheckedNodes = new WeakSet();

function _guessExecutionStatusRelativeToDifferentFunctions(target) {
  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {
    return "unknown";
  }

  const binding = target.scope.getBinding(target.node.id.name);
  if (!binding.references) return "before";
  const referencePaths = binding.referencePaths;
  let allStatus;

  for (const path of referencePaths) {
    const childOfFunction = !!path.find(path => path.node === target.node);
    if (childOfFunction) continue;

    if (path.key !== "callee" || !path.parentPath.isCallExpression()) {
      return "unknown";
    }

    if (executionOrderCheckedNodes.has(path.node)) continue;
    executionOrderCheckedNodes.add(path.node);

    const status = this._guessExecutionStatusRelativeTo(path);

    executionOrderCheckedNodes.delete(path.node);

    if (allStatus && allStatus !== status) {
      return "unknown";
    } else {
      allStatus = status;
    }
  }

  return allStatus;
}

function resolve(dangerous, resolved) {
  return this._resolve(dangerous, resolved) || this;
}

function _resolve(dangerous, resolved) {
  if (resolved && resolved.indexOf(this) >= 0) return;
  resolved = resolved || [];
  resolved.push(this);

  if (this.isVariableDeclarator()) {
    if (this.get("id").isIdentifier()) {
      return this.get("init").resolve(dangerous, resolved);
    } else {}
  } else if (this.isReferencedIdentifier()) {
    const binding = this.scope.getBinding(this.node.name);
    if (!binding) return;
    if (!binding.constant) return;
    if (binding.kind === "module") return;

    if (binding.path !== this) {
      const ret = binding.path.resolve(dangerous, resolved);
      if (this.find(parent => parent.node === ret.node)) return;
      return ret;
    }
  } else if (this.isTypeCastExpression()) {
    return this.get("expression").resolve(dangerous, resolved);
  } else if (dangerous && this.isMemberExpression()) {
    const targetKey = this.toComputedKey();
    if (!t.isLiteral(targetKey)) return;
    const targetName = targetKey.value;
    const target = this.get("object").resolve(dangerous, resolved);

    if (target.isObjectExpression()) {
      const props = target.get("properties");

      for (const prop of props) {
        if (!prop.isProperty()) continue;
        const key = prop.get("key");
        let match = prop.isnt("computed") && key.isIdentifier({
          name: targetName
        });
        match = match || key.isLiteral({
          value: targetName
        });
        if (match) return prop.get("value").resolve(dangerous, resolved);
      }
    } else if (target.isArrayExpression() && !isNaN(+targetName)) {
      const elems = target.get("elements");
      const elem = elems[targetName];
      if (elem) return elem.resolve(dangerous, resolved);
    }
  }
}

function isConstantExpression() {
  if (this.isIdentifier()) {
    const binding = this.scope.getBinding(this.node.name);
    if (!binding) return false;
    return binding.constant;
  }

  if (this.isLiteral()) {
    if (this.isRegExpLiteral()) {
      return false;
    }

    if (this.isTemplateLiteral()) {
      return this.get("expressions").every(expression => expression.isConstantExpression());
    }

    return true;
  }

  if (this.isUnaryExpression()) {
    if (this.node.operator !== "void") {
      return false;
    }

    return this.get("argument").isConstantExpression();
  }

  if (this.isBinaryExpression()) {
    return this.get("left").isConstantExpression() && this.get("right").isConstantExpression();
  }

  return false;
}

function isInStrictMode() {
  const start = this.isProgram() ? this : this.parentPath;
  const strictParent = start.find(path => {
    if (path.isProgram({
      sourceType: "module"
    })) return true;
    if (path.isClass()) return true;
    if (!path.isProgram() && !path.isFunction()) return false;

    if (path.isArrowFunctionExpression() && !path.get("body").isBlockStatement()) {
      return false;
    }

    const body = path.isFunction() ? path.node.body : path.node;

    for (const directive of body.directives) {
      if (directive.value.value === "use strict") {
        return true;
      }
    }
  });
  return !!strictParent;
}

/***/ }),
/* 174 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.call = call;
exports._call = _call;
exports.isBlacklisted = exports.isDenylisted = isDenylisted;
exports.visit = visit;
exports.skip = skip;
exports.skipKey = skipKey;
exports.stop = stop;
exports.setScope = setScope;
exports.setContext = setContext;
exports.resync = resync;
exports._resyncParent = _resyncParent;
exports._resyncKey = _resyncKey;
exports._resyncList = _resyncList;
exports._resyncRemoved = _resyncRemoved;
exports.popContext = popContext;
exports.pushContext = pushContext;
exports.setup = setup;
exports.setKey = setKey;
exports.requeue = requeue;
exports._getQueueContexts = _getQueueContexts;

var _index = __webpack_require__(7);

var _index2 = __webpack_require__(9);

function call(key) {
  const opts = this.opts;
  this.debug(key);

  if (this.node) {
    if (this._call(opts[key])) return true;
  }

  if (this.node) {
    return this._call(opts[this.node.type] && opts[this.node.type][key]);
  }

  return false;
}

function _call(fns) {
  if (!fns) return false;

  for (const fn of fns) {
    if (!fn) continue;
    const node = this.node;
    if (!node) return true;
    const ret = fn.call(this.state, this, this.state);

    if (ret && typeof ret === "object" && typeof ret.then === "function") {
      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);
    }

    if (ret) {
      throw new Error(`Unexpected return value from visitor method ${fn}`);
    }

    if (this.node !== node) return true;
    if (this._traverseFlags > 0) return true;
  }

  return false;
}

function isDenylisted() {
  var _this$opts$denylist;

  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;
  return denylist && denylist.indexOf(this.node.type) > -1;
}

function visit() {
  if (!this.node) {
    return false;
  }

  if (this.isDenylisted()) {
    return false;
  }

  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {
    return false;
  }

  if (this.shouldSkip || this.call("enter") || this.shouldSkip) {
    this.debug("Skip...");
    return this.shouldStop;
  }

  this.debug("Recursing into...");

  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);

  this.call("exit");
  return this.shouldStop;
}

function skip() {
  this.shouldSkip = true;
}

function skipKey(key) {
  if (this.skipKeys == null) {
    this.skipKeys = {};
  }

  this.skipKeys[key] = true;
}

function stop() {
  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;
}

function setScope() {
  if (this.opts && this.opts.noScope) return;
  let path = this.parentPath;
  if (this.key === "key" && path.isMethod()) path = path.parentPath;
  let target;

  while (path && !target) {
    if (path.opts && path.opts.noScope) return;
    target = path.scope;
    path = path.parentPath;
  }

  this.scope = this.getScope(target);
  if (this.scope) this.scope.init();
}

function setContext(context) {
  if (this.skipKeys != null) {
    this.skipKeys = {};
  }

  this._traverseFlags = 0;

  if (context) {
    this.context = context;
    this.state = context.state;
    this.opts = context.opts;
  }

  this.setScope();
  return this;
}

function resync() {
  if (this.removed) return;

  this._resyncParent();

  this._resyncList();

  this._resyncKey();
}

function _resyncParent() {
  if (this.parentPath) {
    this.parent = this.parentPath.node;
  }
}

function _resyncKey() {
  if (!this.container) return;
  if (this.node === this.container[this.key]) return;

  if (Array.isArray(this.container)) {
    for (let i = 0; i < this.container.length; i++) {
      if (this.container[i] === this.node) {
        return this.setKey(i);
      }
    }
  } else {
    for (const key of Object.keys(this.container)) {
      if (this.container[key] === this.node) {
        return this.setKey(key);
      }
    }
  }

  this.key = null;
}

function _resyncList() {
  if (!this.parent || !this.inList) return;
  const newContainer = this.parent[this.listKey];
  if (this.container === newContainer) return;
  this.container = newContainer || null;
}

function _resyncRemoved() {
  if (this.key == null || !this.container || this.container[this.key] !== this.node) {
    this._markRemoved();
  }
}

function popContext() {
  this.contexts.pop();

  if (this.contexts.length > 0) {
    this.setContext(this.contexts[this.contexts.length - 1]);
  } else {
    this.setContext(undefined);
  }
}

function pushContext(context) {
  this.contexts.push(context);
  this.setContext(context);
}

function setup(parentPath, container, listKey, key) {
  this.listKey = listKey;
  this.container = container;
  this.parentPath = parentPath || this.parentPath;
  this.setKey(key);
}

function setKey(key) {
  var _this$node;

  this.key = key;
  this.node = this.container[this.key];
  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;
}

function requeue(pathToQueue = this) {
  if (pathToQueue.removed) return;
  ;
  const contexts = this.contexts;

  for (const context of contexts) {
    context.maybeQueue(pathToQueue);
  }
}

function _getQueueContexts() {
  let path = this;
  let contexts = this.contexts;

  while (!contexts.length) {
    path = path.parentPath;
    if (!path) break;
    contexts = path.contexts;
  }

  return contexts;
}

/***/ }),
/* 175 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.remove = remove;
exports._removeFromScope = _removeFromScope;
exports._callRemovalHooks = _callRemovalHooks;
exports._remove = _remove;
exports._markRemoved = _markRemoved;
exports._assertUnremoved = _assertUnremoved;

var _removalHooks = __webpack_require__(176);

var _cache = __webpack_require__(111);

var _index = __webpack_require__(9);

function remove() {
  var _this$opts;

  this._assertUnremoved();

  this.resync();

  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {
    this._removeFromScope();
  }

  if (this._callRemovalHooks()) {
    this._markRemoved();

    return;
  }

  this.shareCommentsWithSiblings();

  this._remove();

  this._markRemoved();
}

function _removeFromScope() {
  const bindings = this.getBindingIdentifiers();
  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));
}

function _callRemovalHooks() {
  for (const fn of _removalHooks.hooks) {
    if (fn(this, this.parentPath)) return true;
  }
}

function _remove() {
  if (Array.isArray(this.container)) {
    this.container.splice(this.key, 1);
    this.updateSiblingKeys(this.key, -1);
  } else {
    this._replaceWith(null);
  }
}

function _markRemoved() {
  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;
  if (this.parent) _cache.path.get(this.parent).delete(this.node);
  this.node = null;
}

function _assertUnremoved() {
  if (this.removed) {
    throw this.buildCodeFrameError("NodePath has been removed so is read-only.");
  }
}

/***/ }),
/* 176 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.hooks = void 0;
const hooks = [function (self, parent) {
  const removeParent = self.key === "test" && (parent.isWhile() || parent.isSwitchCase()) || self.key === "declaration" && parent.isExportDeclaration() || self.key === "body" && parent.isLabeledStatement() || self.listKey === "declarations" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === "expression" && parent.isExpressionStatement();

  if (removeParent) {
    parent.remove();
    return true;
  }
}, function (self, parent) {
  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {
    parent.replaceWith(parent.node.expressions[0]);
    return true;
  }
}, function (self, parent) {
  if (parent.isBinary()) {
    if (self.key === "left") {
      parent.replaceWith(parent.node.right);
    } else {
      parent.replaceWith(parent.node.left);
    }

    return true;
  }
}, function (self, parent) {
  if (parent.isIfStatement() && (self.key === "consequent" || self.key === "alternate") || self.key === "body" && (parent.isLoop() || parent.isArrowFunctionExpression())) {
    self.replaceWith({
      type: "BlockStatement",
      body: []
    });
    return true;
  }
}];
exports.hooks = hooks;

/***/ }),
/* 177 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.insertBefore = insertBefore;
exports._containerInsert = _containerInsert;
exports._containerInsertBefore = _containerInsertBefore;
exports._containerInsertAfter = _containerInsertAfter;
exports.insertAfter = insertAfter;
exports.updateSiblingKeys = updateSiblingKeys;
exports._verifyNodeList = _verifyNodeList;
exports.unshiftContainer = unshiftContainer;
exports.pushContainer = pushContainer;
exports.hoist = hoist;

var _cache = __webpack_require__(111);

var _hoister = __webpack_require__(178);

var _index = __webpack_require__(9);

var t = __webpack_require__(11);

function insertBefore(nodes_) {
  this._assertUnremoved();

  const nodes = this._verifyNodeList(nodes_);

  const {
    parentPath
  } = this;

  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {
    return parentPath.insertBefore(nodes);
  } else if (this.isNodeType("Expression") && !this.isJSXElement() || parentPath.isForStatement() && this.key === "init") {
    if (this.node) nodes.push(this.node);
    return this.replaceExpressionWithStatements(nodes);
  } else if (Array.isArray(this.container)) {
    return this._containerInsertBefore(nodes);
  } else if (this.isStatementOrBlock()) {
    const node = this.node;
    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);
    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));
    return this.unshiftContainer("body", nodes);
  } else {
    throw new Error("We don't know what to do with this node type. " + "We were previously a Statement but we can't fit in here?");
  }
}

function _containerInsert(from, nodes) {
  this.updateSiblingKeys(from, nodes.length);
  const paths = [];
  this.container.splice(from, 0, ...nodes);

  for (let i = 0; i < nodes.length; i++) {
    const to = from + i;
    const path = this.getSibling(to);
    paths.push(path);

    if (this.context && this.context.queue) {
      path.pushContext(this.context);
    }
  }

  const contexts = this._getQueueContexts();

  for (const path of paths) {
    path.setScope();
    path.debug("Inserted.");

    for (const context of contexts) {
      context.maybeQueue(path, true);
    }
  }

  return paths;
}

function _containerInsertBefore(nodes) {
  return this._containerInsert(this.key, nodes);
}

function _containerInsertAfter(nodes) {
  return this._containerInsert(this.key + 1, nodes);
}

function insertAfter(nodes_) {
  this._assertUnremoved();

  const nodes = this._verifyNodeList(nodes_);

  const {
    parentPath
  } = this;

  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {
    return parentPath.insertAfter(nodes.map(node => {
      return t.isExpression(node) ? t.expressionStatement(node) : node;
    }));
  } else if (this.isNodeType("Expression") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === "init") {
    if (this.node) {
      const node = this.node;
      let {
        scope
      } = this;

      if (scope.path.isPattern()) {
        t.assertExpression(node);
        this.replaceWith(t.callExpression(t.arrowFunctionExpression([], node), []));
        this.get("callee.body").insertAfter(nodes);
        return [this];
      }

      if (parentPath.isMethod({
        computed: true,
        key: node
      })) {
        scope = scope.parent;
      }

      const temp = scope.generateDeclaredUidIdentifier();
      nodes.unshift(t.expressionStatement(t.assignmentExpression("=", t.cloneNode(temp), node)));
      nodes.push(t.expressionStatement(t.cloneNode(temp)));
    }

    return this.replaceExpressionWithStatements(nodes);
  } else if (Array.isArray(this.container)) {
    return this._containerInsertAfter(nodes);
  } else if (this.isStatementOrBlock()) {
    const node = this.node;
    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);
    this.replaceWith(t.blockStatement(shouldInsertCurrentNode ? [node] : []));
    return this.pushContainer("body", nodes);
  } else {
    throw new Error("We don't know what to do with this node type. " + "We were previously a Statement but we can't fit in here?");
  }
}

function updateSiblingKeys(fromIndex, incrementBy) {
  if (!this.parent) return;

  const paths = _cache.path.get(this.parent);

  for (const [, path] of paths) {
    if (path.key >= fromIndex) {
      path.key += incrementBy;
    }
  }
}

function _verifyNodeList(nodes) {
  if (!nodes) {
    return [];
  }

  if (!Array.isArray(nodes)) {
    nodes = [nodes];
  }

  for (let i = 0; i < nodes.length; i++) {
    const node = nodes[i];
    let msg;

    if (!node) {
      msg = "has falsy node";
    } else if (typeof node !== "object") {
      msg = "contains a non-object node";
    } else if (!node.type) {
      msg = "without a type";
    } else if (node instanceof _index.default) {
      msg = "has a NodePath when it expected a raw object";
    }

    if (msg) {
      const type = Array.isArray(node) ? "array" : typeof node;
      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);
    }
  }

  return nodes;
}

function unshiftContainer(listKey, nodes) {
  this._assertUnremoved();

  nodes = this._verifyNodeList(nodes);

  const path = _index.default.get({
    parentPath: this,
    parent: this.node,
    container: this.node[listKey],
    listKey,
    key: 0
  }).setContext(this.context);

  return path._containerInsertBefore(nodes);
}

function pushContainer(listKey, nodes) {
  this._assertUnremoved();

  const verifiedNodes = this._verifyNodeList(nodes);

  const container = this.node[listKey];

  const path = _index.default.get({
    parentPath: this,
    parent: this.node,
    container: container,
    listKey,
    key: container.length
  }).setContext(this.context);

  return path.replaceWithMultiple(verifiedNodes);
}

function hoist(scope = this.scope) {
  const hoister = new _hoister.default(this, scope);
  return hoister.run();
}

/***/ }),
/* 178 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var t = __webpack_require__(11);

const referenceVisitor = {
  ReferencedIdentifier(path, state) {
    if (path.isJSXIdentifier() && t.react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {
      return;
    }

    if (path.node.name === "this") {
      let scope = path.scope;

      do {
        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {
          break;
        }
      } while (scope = scope.parent);

      if (scope) state.breakOnScopePaths.push(scope.path);
    }

    const binding = path.scope.getBinding(path.node.name);
    if (!binding) return;

    for (const violation of binding.constantViolations) {
      if (violation.scope !== binding.path.scope) {
        state.mutableBinding = true;
        path.stop();
        return;
      }
    }

    if (binding !== state.scope.getBinding(path.node.name)) return;
    state.bindings[path.node.name] = binding;
  }

};

class PathHoister {
  constructor(path, scope) {
    this.breakOnScopePaths = void 0;
    this.bindings = void 0;
    this.mutableBinding = void 0;
    this.scopes = void 0;
    this.scope = void 0;
    this.path = void 0;
    this.attachAfter = void 0;
    this.breakOnScopePaths = [];
    this.bindings = {};
    this.mutableBinding = false;
    this.scopes = [];
    this.scope = scope;
    this.path = path;
    this.attachAfter = false;
  }

  isCompatibleScope(scope) {
    for (const key of Object.keys(this.bindings)) {
      const binding = this.bindings[key];

      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {
        return false;
      }
    }

    return true;
  }

  getCompatibleScopes() {
    let scope = this.path.scope;

    do {
      if (this.isCompatibleScope(scope)) {
        this.scopes.push(scope);
      } else {
        break;
      }

      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {
        break;
      }
    } while (scope = scope.parent);
  }

  getAttachmentPath() {
    let path = this._getAttachmentPath();

    if (!path) return;
    let targetScope = path.scope;

    if (targetScope.path === path) {
      targetScope = path.scope.parent;
    }

    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {
      for (const name of Object.keys(this.bindings)) {
        if (!targetScope.hasOwnBinding(name)) continue;
        const binding = this.bindings[name];

        if (binding.kind === "param" || binding.path.parentKey === "params") {
          continue;
        }

        const bindingParentPath = this.getAttachmentParentForPath(binding.path);

        if (bindingParentPath.key >= path.key) {
          this.attachAfter = true;
          path = binding.path;

          for (const violationPath of binding.constantViolations) {
            if (this.getAttachmentParentForPath(violationPath).key > path.key) {
              path = violationPath;
            }
          }
        }
      }
    }

    return path;
  }

  _getAttachmentPath() {
    const scopes = this.scopes;
    const scope = scopes.pop();
    if (!scope) return;

    if (scope.path.isFunction()) {
      if (this.hasOwnParamBindings(scope)) {
        if (this.scope === scope) return;
        const bodies = scope.path.get("body").get("body");

        for (let i = 0; i < bodies.length; i++) {
          if (bodies[i].node._blockHoist) continue;
          return bodies[i];
        }
      } else {
        return this.getNextScopeAttachmentParent();
      }
    } else if (scope.path.isProgram()) {
      return this.getNextScopeAttachmentParent();
    }
  }

  getNextScopeAttachmentParent() {
    const scope = this.scopes.pop();
    if (scope) return this.getAttachmentParentForPath(scope.path);
  }

  getAttachmentParentForPath(path) {
    do {
      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {
        return path;
      }
    } while (path = path.parentPath);
  }

  hasOwnParamBindings(scope) {
    for (const name of Object.keys(this.bindings)) {
      if (!scope.hasOwnBinding(name)) continue;
      const binding = this.bindings[name];
      if (binding.kind === "param" && binding.constant) return true;
    }

    return false;
  }

  run() {
    this.path.traverse(referenceVisitor, this);
    if (this.mutableBinding) return;
    this.getCompatibleScopes();
    const attachTo = this.getAttachmentPath();
    if (!attachTo) return;
    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;
    let uid = attachTo.scope.generateUidIdentifier("ref");
    const declarator = t.variableDeclarator(uid, this.path.node);
    const insertFn = this.attachAfter ? "insertAfter" : "insertBefore";
    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : t.variableDeclaration("var", [declarator])]);
    const parent = this.path.parentPath;

    if (parent.isJSXElement() && this.path.container === parent.node.children) {
      uid = t.jsxExpressionContainer(uid);
    }

    this.path.replaceWith(t.cloneNode(uid));
    return attachTo.isVariableDeclarator() ? attached.get("init") : attached.get("declarations.0.init");
  }

}

exports.default = PathHoister;

/***/ }),
/* 179 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getOpposite = getOpposite;
exports.getCompletionRecords = getCompletionRecords;
exports.getSibling = getSibling;
exports.getPrevSibling = getPrevSibling;
exports.getNextSibling = getNextSibling;
exports.getAllNextSiblings = getAllNextSiblings;
exports.getAllPrevSiblings = getAllPrevSiblings;
exports.get = get;
exports._getKey = _getKey;
exports._getPattern = _getPattern;
exports.getBindingIdentifiers = getBindingIdentifiers;
exports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;
exports.getBindingIdentifierPaths = getBindingIdentifierPaths;
exports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;

var _index = __webpack_require__(9);

var t = __webpack_require__(11);

const NORMAL_COMPLETION = 0;
const BREAK_COMPLETION = 1;

function NormalCompletion(path) {
  return {
    type: NORMAL_COMPLETION,
    path
  };
}

function BreakCompletion(path) {
  return {
    type: BREAK_COMPLETION,
    path
  };
}

function getOpposite() {
  if (this.key === "left") {
    return this.getSibling("right");
  } else if (this.key === "right") {
    return this.getSibling("left");
  }

  return null;
}

function addCompletionRecords(path, records, context) {
  if (path) return records.concat(_getCompletionRecords(path, context));
  return records;
}

function completionRecordForSwitch(cases, records, context) {
  let lastNormalCompletions = [];

  for (let i = 0; i < cases.length; i++) {
    const casePath = cases[i];

    const caseCompletions = _getCompletionRecords(casePath, context);

    const normalCompletions = [];
    const breakCompletions = [];

    for (const c of caseCompletions) {
      if (c.type === NORMAL_COMPLETION) {
        normalCompletions.push(c);
      }

      if (c.type === BREAK_COMPLETION) {
        breakCompletions.push(c);
      }
    }

    if (normalCompletions.length) {
      lastNormalCompletions = normalCompletions;
    }

    records = records.concat(breakCompletions);
  }

  records = records.concat(lastNormalCompletions);
  return records;
}

function normalCompletionToBreak(completions) {
  completions.forEach(c => {
    c.type = BREAK_COMPLETION;
  });
}

function replaceBreakStatementInBreakCompletion(completions, reachable) {
  completions.forEach(c => {
    if (c.path.isBreakStatement({
      label: null
    })) {
      if (reachable) {
        c.path.replaceWith(t.unaryExpression("void", t.numericLiteral(0)));
      } else {
        c.path.remove();
      }
    }
  });
}

function getStatementListCompletion(paths, context) {
  let completions = [];

  if (context.canHaveBreak) {
    let lastNormalCompletions = [];

    for (let i = 0; i < paths.length; i++) {
      const path = paths[i];
      const newContext = Object.assign({}, context, {
        inCaseClause: false
      });

      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {
          newContext.shouldPopulateBreak = true;
        } else {
        newContext.shouldPopulateBreak = false;
      }

      const statementCompletions = _getCompletionRecords(path, newContext);

      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {
        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({
          label: null
        }))) {
          normalCompletionToBreak(lastNormalCompletions);
          completions = completions.concat(lastNormalCompletions);

          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {
            completions = completions.concat(statementCompletions);
            replaceBreakStatementInBreakCompletion(statementCompletions, true);
          }

          replaceBreakStatementInBreakCompletion(statementCompletions, false);
        } else {
          completions = completions.concat(statementCompletions);

          if (!context.shouldPopulateBreak) {
            replaceBreakStatementInBreakCompletion(statementCompletions, true);
          }
        }

        break;
      }

      if (i === paths.length - 1) {
        completions = completions.concat(statementCompletions);
      } else {
        completions = completions.concat(statementCompletions.filter(c => c.type === BREAK_COMPLETION));
        lastNormalCompletions = statementCompletions.filter(c => c.type === NORMAL_COMPLETION);
      }
    }
  } else if (paths.length) {
    completions = completions.concat(_getCompletionRecords(paths[paths.length - 1], context));
  }

  return completions;
}

function _getCompletionRecords(path, context) {
  let records = [];

  if (path.isIfStatement()) {
    records = addCompletionRecords(path.get("consequent"), records, context);
    records = addCompletionRecords(path.get("alternate"), records, context);
  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {
    records = addCompletionRecords(path.get("body"), records, context);
  } else if (path.isProgram() || path.isBlockStatement()) {
    records = records.concat(getStatementListCompletion(path.get("body"), context));
  } else if (path.isFunction()) {
    return _getCompletionRecords(path.get("body"), context);
  } else if (path.isTryStatement()) {
    records = addCompletionRecords(path.get("block"), records, context);
    records = addCompletionRecords(path.get("handler"), records, context);
  } else if (path.isCatchClause()) {
    records = addCompletionRecords(path.get("body"), records, context);
  } else if (path.isSwitchStatement()) {
    records = completionRecordForSwitch(path.get("cases"), records, context);
  } else if (path.isSwitchCase()) {
    records = records.concat(getStatementListCompletion(path.get("consequent"), {
      canHaveBreak: true,
      shouldPopulateBreak: false,
      inCaseClause: true
    }));
  } else if (path.isBreakStatement()) {
    records.push(BreakCompletion(path));
  } else {
    records.push(NormalCompletion(path));
  }

  return records;
}

function getCompletionRecords() {
  const records = _getCompletionRecords(this, {
    canHaveBreak: false,
    shouldPopulateBreak: false,
    inCaseClause: false
  });

  return records.map(r => r.path);
}

function getSibling(key) {
  return _index.default.get({
    parentPath: this.parentPath,
    parent: this.parent,
    container: this.container,
    listKey: this.listKey,
    key: key
  }).setContext(this.context);
}

function getPrevSibling() {
  return this.getSibling(this.key - 1);
}

function getNextSibling() {
  return this.getSibling(this.key + 1);
}

function getAllNextSiblings() {
  let _key = this.key;
  let sibling = this.getSibling(++_key);
  const siblings = [];

  while (sibling.node) {
    siblings.push(sibling);
    sibling = this.getSibling(++_key);
  }

  return siblings;
}

function getAllPrevSiblings() {
  let _key = this.key;
  let sibling = this.getSibling(--_key);
  const siblings = [];

  while (sibling.node) {
    siblings.push(sibling);
    sibling = this.getSibling(--_key);
  }

  return siblings;
}

function get(key, context = true) {
  if (context === true) context = this.context;
  const parts = key.split(".");

  if (parts.length === 1) {
    return this._getKey(key, context);
  } else {
    return this._getPattern(parts, context);
  }
}

function _getKey(key, context) {
  const node = this.node;
  const container = node[key];

  if (Array.isArray(container)) {
    return container.map((_, i) => {
      return _index.default.get({
        listKey: key,
        parentPath: this,
        parent: node,
        container: container,
        key: i
      }).setContext(context);
    });
  } else {
    return _index.default.get({
      parentPath: this,
      parent: node,
      container: node,
      key: key
    }).setContext(context);
  }
}

function _getPattern(parts, context) {
  let path = this;

  for (const part of parts) {
    if (part === ".") {
      path = path.parentPath;
    } else {
      if (Array.isArray(path)) {
        path = path[part];
      } else {
        path = path.get(part, context);
      }
    }
  }

  return path;
}

function getBindingIdentifiers(duplicates) {
  return t.getBindingIdentifiers(this.node, duplicates);
}

function getOuterBindingIdentifiers(duplicates) {
  return t.getOuterBindingIdentifiers(this.node, duplicates);
}

function getBindingIdentifierPaths(duplicates = false, outerOnly = false) {
  const path = this;
  let search = [].concat(path);
  const ids = Object.create(null);

  while (search.length) {
    const id = search.shift();
    if (!id) continue;
    if (!id.node) continue;
    const keys = t.getBindingIdentifiers.keys[id.node.type];

    if (id.isIdentifier()) {
      if (duplicates) {
        const _ids = ids[id.node.name] = ids[id.node.name] || [];

        _ids.push(id);
      } else {
        ids[id.node.name] = id;
      }

      continue;
    }

    if (id.isExportDeclaration()) {
      const declaration = id.get("declaration");

      if (declaration.isDeclaration()) {
        search.push(declaration);
      }

      continue;
    }

    if (outerOnly) {
      if (id.isFunctionDeclaration()) {
        search.push(id.get("id"));
        continue;
      }

      if (id.isFunctionExpression()) {
        continue;
      }
    }

    if (keys) {
      for (let i = 0; i < keys.length; i++) {
        const key = keys[i];
        const child = id.get(key);

        if (Array.isArray(child) || child.node) {
          search = search.concat(child);
        }
      }
    }
  }

  return ids;
}

function getOuterBindingIdentifierPaths(duplicates) {
  return this.getBindingIdentifierPaths(duplicates, true);
}

/***/ }),
/* 180 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.shareCommentsWithSiblings = shareCommentsWithSiblings;
exports.addComment = addComment;
exports.addComments = addComments;

var t = __webpack_require__(11);

function shareCommentsWithSiblings() {
  if (typeof this.key === "string") return;
  const node = this.node;
  if (!node) return;
  const trailing = node.trailingComments;
  const leading = node.leadingComments;
  if (!trailing && !leading) return;
  const prev = this.getSibling(this.key - 1);
  const next = this.getSibling(this.key + 1);
  const hasPrev = Boolean(prev.node);
  const hasNext = Boolean(next.node);

  if (hasPrev && !hasNext) {
    prev.addComments("trailing", trailing);
  } else if (hasNext && !hasPrev) {
    next.addComments("leading", leading);
  }
}

function addComment(type, content, line) {
  t.addComment(this.node, type, content, line);
}

function addComments(type, comments) {
  t.addComments(this.node, type, comments);
}

/***/ }),
/* 181 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.explode = explode;
exports.verify = verify;
exports.merge = merge;

var virtualTypes = __webpack_require__(10);

var t = __webpack_require__(11);

function explode(visitor) {
  if (visitor._exploded) return visitor;
  visitor._exploded = true;

  for (const nodeType of Object.keys(visitor)) {
    if (shouldIgnoreKey(nodeType)) continue;
    const parts = nodeType.split("|");
    if (parts.length === 1) continue;
    const fns = visitor[nodeType];
    delete visitor[nodeType];

    for (const part of parts) {
      visitor[part] = fns;
    }
  }

  verify(visitor);
  delete visitor.__esModule;
  ensureEntranceObjects(visitor);
  ensureCallbackArrays(visitor);

  for (const nodeType of Object.keys(visitor)) {
    if (shouldIgnoreKey(nodeType)) continue;
    const wrapper = virtualTypes[nodeType];
    if (!wrapper) continue;
    const fns = visitor[nodeType];

    for (const type of Object.keys(fns)) {
      fns[type] = wrapCheck(wrapper, fns[type]);
    }

    delete visitor[nodeType];

    if (wrapper.types) {
      for (const type of wrapper.types) {
        if (visitor[type]) {
          mergePair(visitor[type], fns);
        } else {
          visitor[type] = fns;
        }
      }
    } else {
      mergePair(visitor, fns);
    }
  }

  for (const nodeType of Object.keys(visitor)) {
    if (shouldIgnoreKey(nodeType)) continue;
    const fns = visitor[nodeType];
    let aliases = t.FLIPPED_ALIAS_KEYS[nodeType];
    const deprecatedKey = t.DEPRECATED_KEYS[nodeType];

    if (deprecatedKey) {
      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);
      aliases = [deprecatedKey];
    }

    if (!aliases) continue;
    delete visitor[nodeType];

    for (const alias of aliases) {
      const existing = visitor[alias];

      if (existing) {
        mergePair(existing, fns);
      } else {
        visitor[alias] = Object.assign({}, fns);
      }
    }
  }

  for (const nodeType of Object.keys(visitor)) {
    if (shouldIgnoreKey(nodeType)) continue;
    ensureCallbackArrays(visitor[nodeType]);
  }

  return visitor;
}

function verify(visitor) {
  if (visitor._verified) return;

  if (typeof visitor === "function") {
    throw new Error("You passed `traverse()` a function when it expected a visitor object, " + "are you sure you didn't mean `{ enter: Function }`?");
  }

  for (const nodeType of Object.keys(visitor)) {
    if (nodeType === "enter" || nodeType === "exit") {
      validateVisitorMethods(nodeType, visitor[nodeType]);
    }

    if (shouldIgnoreKey(nodeType)) continue;

    if (t.TYPES.indexOf(nodeType) < 0) {
      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);
    }

    const visitors = visitor[nodeType];

    if (typeof visitors === "object") {
      for (const visitorKey of Object.keys(visitors)) {
        if (visitorKey === "enter" || visitorKey === "exit") {
          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);
        } else {
          throw new Error("You passed `traverse()` a visitor object with the property " + `${nodeType} that has the invalid property ${visitorKey}`);
        }
      }
    }
  }

  visitor._verified = true;
}

function validateVisitorMethods(path, val) {
  const fns = [].concat(val);

  for (const fn of fns) {
    if (typeof fn !== "function") {
      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);
    }
  }
}

function merge(visitors, states = [], wrapper) {
  const rootVisitor = {};

  for (let i = 0; i < visitors.length; i++) {
    const visitor = visitors[i];
    const state = states[i];
    explode(visitor);

    for (const type of Object.keys(visitor)) {
      let visitorType = visitor[type];

      if (state || wrapper) {
        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);
      }

      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};
      mergePair(nodeVisitor, visitorType);
    }
  }

  return rootVisitor;
}

function wrapWithStateOrWrapper(oldVisitor, state, wrapper) {
  const newVisitor = {};

  for (const key of Object.keys(oldVisitor)) {
    let fns = oldVisitor[key];
    if (!Array.isArray(fns)) continue;
    fns = fns.map(function (fn) {
      let newFn = fn;

      if (state) {
        newFn = function (path) {
          return fn.call(state, path, state);
        };
      }

      if (wrapper) {
        newFn = wrapper(state.key, key, newFn);
      }

      if (newFn !== fn) {
        newFn.toString = () => fn.toString();
      }

      return newFn;
    });
    newVisitor[key] = fns;
  }

  return newVisitor;
}

function ensureEntranceObjects(obj) {
  for (const key of Object.keys(obj)) {
    if (shouldIgnoreKey(key)) continue;
    const fns = obj[key];

    if (typeof fns === "function") {
      obj[key] = {
        enter: fns
      };
    }
  }
}

function ensureCallbackArrays(obj) {
  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];
  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];
}

function wrapCheck(wrapper, fn) {
  const newFn = function (path) {
    if (wrapper.checkPath(path)) {
      return fn.apply(this, arguments);
    }
  };

  newFn.toString = () => fn.toString();

  return newFn;
}

function shouldIgnoreKey(key) {
  if (key[0] === "_") return true;
  if (key === "enter" || key === "exit" || key === "shouldSkip") return true;

  if (key === "denylist" || key === "noScope" || key === "skipKeys" || key === "blacklist") {
    return true;
  }

  return false;
}

function mergePair(dest, src) {
  for (const key of Object.keys(src)) {
    dest[key] = [].concat(dest[key] || [], src[key]);
  }
}

/***/ }),
/* 182 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

class Hub {
  getCode() {}

  getScope() {}

  addHelper() {
    throw new Error("Helpers are not supported by the default hub.");
  }

  buildError(node, msg, Error = TypeError) {
    return new Error(msg);
  }

}

exports.default = Hub;

/***/ }),
/* 183 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var _template = _interopRequireDefault(__webpack_require__(165));

var generated = _interopRequireWildcard(__webpack_require__(184));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const helpers = Object.assign({
  __proto__: null
}, generated);
var _default = helpers;
exports.default = _default;

const helper = minVersion => tpl => ({
  minVersion,
  ast: () => _template.default.program.ast(tpl)
});

helpers.asyncIterator = helper("7.0.0-beta.0")`
  export default function _asyncIterator(iterable) {
    var method;
    if (typeof Symbol !== "undefined") {
      if (Symbol.asyncIterator) method = iterable[Symbol.asyncIterator];
      if (method == null && Symbol.iterator) method = iterable[Symbol.iterator];
    }
    if (method == null) method = iterable["@@asyncIterator"];
    if (method == null) method = iterable["@@iterator"]
    if (method == null) throw new TypeError("Object is not async iterable");
    return method.call(iterable);
  }
`;
helpers.AwaitValue = helper("7.0.0-beta.0")`
  export default function _AwaitValue(value) {
    this.wrapped = value;
  }
`;
helpers.AsyncGenerator = helper("7.0.0-beta.0")`
  import AwaitValue from "AwaitValue";

  export default function AsyncGenerator(gen) {
    var front, back;

    function send(key, arg) {
      return new Promise(function (resolve, reject) {
        var request = {
          key: key,
          arg: arg,
          resolve: resolve,
          reject: reject,
          next: null,
        };

        if (back) {
          back = back.next = request;
        } else {
          front = back = request;
          resume(key, arg);
        }
      });
    }

    function resume(key, arg) {
      try {
        var result = gen[key](arg)
        var value = result.value;
        var wrappedAwait = value instanceof AwaitValue;

        Promise.resolve(wrappedAwait ? value.wrapped : value).then(
          function (arg) {
            if (wrappedAwait) {
              resume(key === "return" ? "return" : "next", arg);
              return
            }

            settle(result.done ? "return" : "normal", arg);
          },
          function (err) { resume("throw", err); });
      } catch (err) {
        settle("throw", err);
      }
    }

    function settle(type, value) {
      switch (type) {
        case "return":
          front.resolve({ value: value, done: true });
          break;
        case "throw":
          front.reject(value);
          break;
        default:
          front.resolve({ value: value, done: false });
          break;
      }

      front = front.next;
      if (front) {
        resume(front.key, front.arg);
      } else {
        back = null;
      }
    }

    this._invoke = send;

    // Hide "return" method if generator return is not supported
    if (typeof gen.return !== "function") {
      this.return = undefined;
    }
  }

  AsyncGenerator.prototype[typeof Symbol === "function" && Symbol.asyncIterator || "@@asyncIterator"] = function () { return this; };

  AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };
  AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };
  AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };
`;
helpers.wrapAsyncGenerator = helper("7.0.0-beta.0")`
  import AsyncGenerator from "AsyncGenerator";

  export default function _wrapAsyncGenerator(fn) {
    return function () {
      return new AsyncGenerator(fn.apply(this, arguments));
    };
  }
`;
helpers.awaitAsyncGenerator = helper("7.0.0-beta.0")`
  import AwaitValue from "AwaitValue";

  export default function _awaitAsyncGenerator(value) {
    return new AwaitValue(value);
  }
`;
helpers.asyncGeneratorDelegate = helper("7.0.0-beta.0")`
  export default function _asyncGeneratorDelegate(inner, awaitWrap) {
    var iter = {}, waiting = false;

    function pump(key, value) {
      waiting = true;
      value = new Promise(function (resolve) { resolve(inner[key](value)); });
      return { done: false, value: awaitWrap(value) };
    };

    iter[typeof Symbol !== "undefined" && Symbol.iterator || "@@iterator"] = function () { return this; };

    iter.next = function (value) {
      if (waiting) {
        waiting = false;
        return value;
      }
      return pump("next", value);
    };

    if (typeof inner.throw === "function") {
      iter.throw = function (value) {
        if (waiting) {
          waiting = false;
          throw value;
        }
        return pump("throw", value);
      };
    }

    if (typeof inner.return === "function") {
      iter.return = function (value) {
        if (waiting) {
          waiting = false;
          return value;
        }
        return pump("return", value);
      };
    }

    return iter;
  }
`;
helpers.asyncToGenerator = helper("7.0.0-beta.0")`
  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }

    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }

  export default function _asyncToGenerator(fn) {
    return function () {
      var self = this, args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);
        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }
        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }

        _next(undefined);
      });
    };
  }
`;
helpers.classCallCheck = helper("7.0.0-beta.0")`
  export default function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
`;
helpers.createClass = helper("7.0.0-beta.0")`
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i ++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  export default function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }
`;
helpers.defineEnumerableProperties = helper("7.0.0-beta.0")`
  export default function _defineEnumerableProperties(obj, descs) {
    for (var key in descs) {
      var desc = descs[key];
      desc.configurable = desc.enumerable = true;
      if ("value" in desc) desc.writable = true;
      Object.defineProperty(obj, key, desc);
    }

    // Symbols are not enumerated over by for-in loops. If native
    // Symbols are available, fetch all of the descs object's own
    // symbol properties and define them on our target object too.
    if (Object.getOwnPropertySymbols) {
      var objectSymbols = Object.getOwnPropertySymbols(descs);
      for (var i = 0; i < objectSymbols.length; i++) {
        var sym = objectSymbols[i];
        var desc = descs[sym];
        desc.configurable = desc.enumerable = true;
        if ("value" in desc) desc.writable = true;
        Object.defineProperty(obj, sym, desc);
      }
    }
    return obj;
  }
`;
helpers.defaults = helper("7.0.0-beta.0")`
  export default function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
`;
helpers.defineProperty = helper("7.0.0-beta.0")`
  export default function _defineProperty(obj, key, value) {
    // Shortcircuit the slow defineProperty path when possible.
    // We are trying to avoid issues where setters defined on the
    // prototype cause side effects under the fast path of simple
    // assignment. By checking for existence of the property with
    // the in operator, we can optimize most of this overhead away.
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  }
`;
helpers.extends = helper("7.0.0-beta.0")`
  export default function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };

    return _extends.apply(this, arguments);
  }
`;
helpers.objectSpread = helper("7.0.0-beta.0")`
  import defineProperty from "defineProperty";

  export default function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = (arguments[i] != null) ? Object(arguments[i]) : {};
      var ownKeys = Object.keys(source);
      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }
      ownKeys.forEach(function(key) {
        defineProperty(target, key, source[key]);
      });
    }
    return target;
  }
`;
helpers.inherits = helper("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";

  export default function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }
`;
helpers.inheritsLoose = helper("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";

  export default function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    setPrototypeOf(subClass, superClass);
  }
`;
helpers.getPrototypeOf = helper("7.0.0-beta.0")`
  export default function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf
      ? Object.getPrototypeOf
      : function _getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o);
        };
    return _getPrototypeOf(o);
  }
`;
helpers.setPrototypeOf = helper("7.0.0-beta.0")`
  export default function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
    return _setPrototypeOf(o, p);
  }
`;
helpers.isNativeReflectConstruct = helper("7.9.0")`
  export default function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;

    // core-js@3
    if (Reflect.construct.sham) return false;

    // Proxy can't be polyfilled. Every browser implemented
    // proxies before or at the same time as Reflect.construct,
    // so if they support Proxy they also support Reflect.construct.
    if (typeof Proxy === "function") return true;

    // Since Reflect.construct can't be properly polyfilled, some
    // implementations (e.g. core-js@2) don't set the correct internal slots.
    // Those polyfills don't allow us to subclass built-ins, so we need to
    // use our fallback implementation.
    try {
      // If the internal slots aren't set, this throws an error similar to
      //   TypeError: this is not a Boolean object.

      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));
      return true;
    } catch (e) {
      return false;
    }
  }
`;
helpers.construct = helper("7.0.0-beta.0")`
  import setPrototypeOf from "setPrototypeOf";
  import isNativeReflectConstruct from "isNativeReflectConstruct";

  export default function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      // NOTE: If Parent !== Class, the correct __proto__ is set *after*
      //       calling the constructor.
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }
    // Avoid issues with Class being present but undefined when it wasn't
    // present in the original call.
    return _construct.apply(null, arguments);
  }
`;
helpers.isNativeFunction = helper("7.0.0-beta.0")`
  export default function _isNativeFunction(fn) {
    // Note: This function returns "true" for core-js functions.
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }
`;
helpers.wrapNativeSuper = helper("7.0.0-beta.0")`
  import getPrototypeOf from "getPrototypeOf";
  import setPrototypeOf from "setPrototypeOf";
  import isNativeFunction from "isNativeFunction";
  import construct from "construct";

  export default function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;
      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }
      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);
        _cache.set(Class, Wrapper);
      }
      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor)
      }
      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true,
        }
      });

      return setPrototypeOf(Wrapper, Class);
    }

    return _wrapNativeSuper(Class)
  }
`;
helpers.instanceof = helper("7.0.0-beta.0")`
  export default function _instanceof(left, right) {
    if (right != null && typeof Symbol !== "undefined" && right[Symbol.hasInstance]) {
      return !!right[Symbol.hasInstance](left);
    } else {
      return left instanceof right;
    }
  }
`;
helpers.interopRequireDefault = helper("7.0.0-beta.0")`
  export default function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }
`;
helpers.interopRequireWildcard = helper("7.14.0")`
  function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;

    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function (nodeInterop) {
      return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
  }

  export default function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || (typeof obj !== "object" && typeof obj !== "function")) {
      return { default: obj }
    }

    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor
          ? Object.getOwnPropertyDescriptor(obj, key)
          : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
    newObj.default = obj;
    if (cache) {
      cache.set(obj, newObj);
    }
    return newObj;
  }
`;
helpers.newArrowCheck = helper("7.0.0-beta.0")`
  export default function _newArrowCheck(innerThis, boundThis) {
    if (innerThis !== boundThis) {
      throw new TypeError("Cannot instantiate an arrow function");
    }
  }
`;
helpers.objectDestructuringEmpty = helper("7.0.0-beta.0")`
  export default function _objectDestructuringEmpty(obj) {
    if (obj == null) throw new TypeError("Cannot destructure undefined");
  }
`;
helpers.objectWithoutPropertiesLoose = helper("7.0.0-beta.0")`
  export default function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};

    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }
`;
helpers.objectWithoutProperties = helper("7.0.0-beta.0")`
  import objectWithoutPropertiesLoose from "objectWithoutPropertiesLoose";

  export default function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};

    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }
`;
helpers.assertThisInitialized = helper("7.0.0-beta.0")`
  export default function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
`;
helpers.possibleConstructorReturn = helper("7.0.0-beta.0")`
  import assertThisInitialized from "assertThisInitialized";

  export default function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }
    return assertThisInitialized(self);
  }
`;
helpers.createSuper = helper("7.9.0")`
  import getPrototypeOf from "getPrototypeOf";
  import isNativeReflectConstruct from "isNativeReflectConstruct";
  import possibleConstructorReturn from "possibleConstructorReturn";

  export default function _createSuper(Derived) {
    var hasNativeReflectConstruct = isNativeReflectConstruct();

    return function _createSuperInternal() {
      var Super = getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        // NOTE: This doesn't work if this.__proto__.constructor has been modified.
        var NewTarget = getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return possibleConstructorReturn(this, result);
    }
  }
 `;
helpers.superPropBase = helper("7.0.0-beta.0")`
  import getPrototypeOf from "getPrototypeOf";

  export default function _superPropBase(object, property) {
    // Yes, this throws if object is null to being with, that's on purpose.
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }
    return object;
  }
`;
helpers.get = helper("7.0.0-beta.0")`
  import superPropBase from "superPropBase";

  export default function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      _get = Reflect.get;
    } else {
      _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);

        if (!base) return;

        var desc = Object.getOwnPropertyDescriptor(base, property);
        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }
    return _get(target, property, receiver || target);
  }
`;
helpers.set = helper("7.0.0-beta.0")`
  import superPropBase from "superPropBase";
  import defineProperty from "defineProperty";

  function set(target, property, value, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.set) {
      set = Reflect.set;
    } else {
      set = function set(target, property, value, receiver) {
        var base = superPropBase(target, property);
        var desc;

        if (base) {
          desc = Object.getOwnPropertyDescriptor(base, property);
          if (desc.set) {
            desc.set.call(receiver, value);
            return true;
          } else if (!desc.writable) {
            // Both getter and non-writable fall into this.
            return false;
          }
        }

        // Without a super that defines the property, spec boils down to
        // "define on receiver" for some reason.
        desc = Object.getOwnPropertyDescriptor(receiver, property);
        if (desc) {
          if (!desc.writable) {
            // Setter, getter, and non-writable fall into this.
            return false;
          }

          desc.value = value;
          Object.defineProperty(receiver, property, desc);
        } else {
          // Avoid setters that may be defined on Sub's prototype, but not on
          // the instance.
          defineProperty(receiver, property, value);
        }

        return true;
      };
    }

    return set(target, property, value, receiver);
  }

  export default function _set(target, property, value, receiver, isStrict) {
    var s = set(target, property, value, receiver || target);
    if (!s && isStrict) {
      throw new Error('failed to set property');
    }

    return value;
  }
`;
helpers.taggedTemplateLiteral = helper("7.0.0-beta.0")`
  export default function _taggedTemplateLiteral(strings, raw) {
    if (!raw) { raw = strings.slice(0); }
    return Object.freeze(Object.defineProperties(strings, {
        raw: { value: Object.freeze(raw) }
    }));
  }
`;
helpers.taggedTemplateLiteralLoose = helper("7.0.0-beta.0")`
  export default function _taggedTemplateLiteralLoose(strings, raw) {
    if (!raw) { raw = strings.slice(0); }
    strings.raw = raw;
    return strings;
  }
`;
helpers.readOnlyError = helper("7.0.0-beta.0")`
  export default function _readOnlyError(name) {
    throw new TypeError("\\"" + name + "\\" is read-only");
  }
`;
helpers.writeOnlyError = helper("7.12.13")`
  export default function _writeOnlyError(name) {
    throw new TypeError("\\"" + name + "\\" is write-only");
  }
`;
helpers.classNameTDZError = helper("7.0.0-beta.0")`
  export default function _classNameTDZError(name) {
    throw new Error("Class \\"" + name + "\\" cannot be referenced in computed property keys.");
  }
`;
helpers.temporalUndefined = helper("7.0.0-beta.0")`
  // This function isn't mean to be called, but to be used as a reference.
  // We can't use a normal object because it isn't hoisted.
  export default function _temporalUndefined() {}
`;
helpers.tdz = helper("7.5.5")`
  export default function _tdzError(name) {
    throw new ReferenceError(name + " is not defined - temporal dead zone");
  }
`;
helpers.temporalRef = helper("7.0.0-beta.0")`
  import undef from "temporalUndefined";
  import err from "tdz";

  export default function _temporalRef(val, name) {
    return val === undef ? err(name) : val;
  }
`;
helpers.slicedToArray = helper("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArrayLimit from "iterableToArrayLimit";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _slicedToArray(arr, i) {
    return (
      arrayWithHoles(arr) ||
      iterableToArrayLimit(arr, i) ||
      unsupportedIterableToArray(arr, i) ||
      nonIterableRest()
    );
  }
`;
helpers.slicedToArrayLoose = helper("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArrayLimitLoose from "iterableToArrayLimitLoose";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _slicedToArrayLoose(arr, i) {
    return (
      arrayWithHoles(arr) ||
      iterableToArrayLimitLoose(arr, i) ||
      unsupportedIterableToArray(arr, i) ||
      nonIterableRest()
    );
  }
`;
helpers.toArray = helper("7.0.0-beta.0")`
  import arrayWithHoles from "arrayWithHoles";
  import iterableToArray from "iterableToArray";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableRest from "nonIterableRest";

  export default function _toArray(arr) {
    return (
      arrayWithHoles(arr) ||
      iterableToArray(arr) ||
      unsupportedIterableToArray(arr) ||
      nonIterableRest()
    );
  }
`;
helpers.toConsumableArray = helper("7.0.0-beta.0")`
  import arrayWithoutHoles from "arrayWithoutHoles";
  import iterableToArray from "iterableToArray";
  import unsupportedIterableToArray from "unsupportedIterableToArray";
  import nonIterableSpread from "nonIterableSpread";

  export default function _toConsumableArray(arr) {
    return (
      arrayWithoutHoles(arr) ||
      iterableToArray(arr) ||
      unsupportedIterableToArray(arr) ||
      nonIterableSpread()
    );
  }
`;
helpers.arrayWithoutHoles = helper("7.0.0-beta.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return arrayLikeToArray(arr);
  }
`;
helpers.arrayWithHoles = helper("7.0.0-beta.0")`
  export default function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
`;
helpers.maybeArrayLike = helper("7.9.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _maybeArrayLike(next, arr, i) {
    if (arr && !Array.isArray(arr) && typeof arr.length === "number") {
      var len = arr.length;
      return arrayLikeToArray(arr, i !== void 0 && i < len ? i : len);
    }
    return next(arr, i);
  }
`;
helpers.iterableToArray = helper("7.0.0-beta.0")`
  export default function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
  }
`;
helpers.iterableToArrayLimit = helper("7.0.0-beta.0")`
  export default function _iterableToArrayLimit(arr, i) {
    // this is an expanded form of \`for...of\` that properly supports abrupt completions of
    // iterators etc. variable names have been minimised to reduce the size of this massive
    // helper. sometimes spec compliance is annoying :(
    //
    // _n = _iteratorNormalCompletion
    // _d = _didIteratorError
    // _e = _iteratorError
    // _i = _iterator
    // _s = _step

    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);
    if (_i == null) return;

    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
`;
helpers.iterableToArrayLimitLoose = helper("7.0.0-beta.0")`
  export default function _iterableToArrayLimitLoose(arr, i) {
    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);
    if (_i == null) return;

    var _arr = [];
    for (_i = _i.call(arr), _step; !(_step = _i.next()).done;) {
      _arr.push(_step.value);
      if (i && _arr.length === i) break;
    }
    return _arr;
  }
`;
helpers.unsupportedIterableToArray = helper("7.9.0")`
  import arrayLikeToArray from "arrayLikeToArray";

  export default function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
      return arrayLikeToArray(o, minLen);
  }
`;
helpers.arrayLikeToArray = helper("7.9.0")`
  export default function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
  }
`;
helpers.nonIterableSpread = helper("7.0.0-beta.0")`
  export default function _nonIterableSpread() {
    throw new TypeError(
      "Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
`;
helpers.nonIterableRest = helper("7.0.0-beta.0")`
  export default function _nonIterableRest() {
    throw new TypeError(
      "Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
  }
`;
helpers.createForOfIteratorHelper = helper("7.9.0")`
  import unsupportedIterableToArray from "unsupportedIterableToArray";

  // s: start (create the iterator)
  // n: next
  // e: error (called whenever something throws)
  // f: finish (always called at the end)

  export default function _createForOfIteratorHelper(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

    if (!it) {
      // Fallback for engines without symbol support
      if (
        Array.isArray(o) ||
        (it = unsupportedIterableToArray(o)) ||
        (allowArrayLike && o && typeof o.length === "number")
      ) {
        if (it) o = it;
        var i = 0;
        var F = function(){};
        return {
          s: F,
          n: function() {
            if (i >= o.length) return { done: true };
            return { done: false, value: o[i++] };
          },
          e: function(e) { throw e; },
          f: F,
        };
      }

      throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    var normalCompletion = true, didErr = false, err;

    return {
      s: function() {
        it = it.call(o);
      },
      n: function() {
        var step = it.next();
        normalCompletion = step.done;
        return step;
      },
      e: function(e) {
        didErr = true;
        err = e;
      },
      f: function() {
        try {
          if (!normalCompletion && it.return != null) it.return();
        } finally {
          if (didErr) throw err;
        }
      }
    };
  }
`;
helpers.createForOfIteratorHelperLoose = helper("7.9.0")`
  import unsupportedIterableToArray from "unsupportedIterableToArray";

  export default function _createForOfIteratorHelperLoose(o, allowArrayLike) {
    var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

    if (it) return (it = it.call(o)).next.bind(it);

    // Fallback for engines without symbol support
    if (
      Array.isArray(o) ||
      (it = unsupportedIterableToArray(o)) ||
      (allowArrayLike && o && typeof o.length === "number")
    ) {
      if (it) o = it;
      var i = 0;
      return function() {
        if (i >= o.length) return { done: true };
        return { done: false, value: o[i++] };
      }
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
`;
helpers.skipFirstGeneratorNext = helper("7.0.0-beta.0")`
  export default function _skipFirstGeneratorNext(fn) {
    return function () {
      var it = fn.apply(this, arguments);
      it.next();
      return it;
    }
  }
`;
helpers.toPrimitive = helper("7.1.5")`
  export default function _toPrimitive(
    input,
    hint /*: "default" | "string" | "number" | void */
  ) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
`;
helpers.toPropertyKey = helper("7.1.5")`
  import toPrimitive from "toPrimitive";

  export default function _toPropertyKey(arg) {
    var key = toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }
`;
helpers.initializerWarningHelper = helper("7.0.0-beta.0")`
    export default function _initializerWarningHelper(descriptor, context){
        throw new Error(
          'Decorating class property failed. Please ensure that ' +
          'proposal-class-properties is enabled and runs after the decorators transform.'
        );
    }
`;
helpers.initializerDefineProperty = helper("7.0.0-beta.0")`
    export default function _initializerDefineProperty(target, property, descriptor, context){
        if (!descriptor) return;

        Object.defineProperty(target, property, {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
            writable: descriptor.writable,
            value: descriptor.initializer ? descriptor.initializer.call(context) : void 0,
        });
    }
`;
helpers.applyDecoratedDescriptor = helper("7.0.0-beta.0")`
    export default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context){
        var desc = {};
        Object.keys(descriptor).forEach(function(key){
            desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;
        if ('value' in desc || desc.initializer){
            desc.writable = true;
        }

        desc = decorators.slice().reverse().reduce(function(desc, decorator){
            return decorator(target, property, desc) || desc;
        }, desc);

        if (context && desc.initializer !== void 0){
            desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
            desc.initializer = undefined;
        }

        if (desc.initializer === void 0){
            Object.defineProperty(target, property, desc);
            desc = null;
        }

        return desc;
    }
`;
helpers.classPrivateFieldLooseKey = helper("7.0.0-beta.0")`
  var id = 0;
  export default function _classPrivateFieldKey(name) {
    return "__private_" + (id++) + "_" + name;
  }
`;
helpers.classPrivateFieldLooseBase = helper("7.0.0-beta.0")`
  export default function _classPrivateFieldBase(receiver, privateKey) {
    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {
      throw new TypeError("attempted to use private field on non-instance");
    }
    return receiver;
  }
`;
helpers.classPrivateFieldGet = helper("7.0.0-beta.0")`
  import classApplyDescriptorGet from "classApplyDescriptorGet";
  import classExtractFieldDescriptor from "classExtractFieldDescriptor";
  export default function _classPrivateFieldGet(receiver, privateMap) {
    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "get");
    return classApplyDescriptorGet(receiver, descriptor);
  }
`;
helpers.classPrivateFieldSet = helper("7.0.0-beta.0")`
  import classApplyDescriptorSet from "classApplyDescriptorSet";
  import classExtractFieldDescriptor from "classExtractFieldDescriptor";
  export default function _classPrivateFieldSet(receiver, privateMap, value) {
    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "set");
    classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
`;
helpers.classPrivateFieldDestructureSet = helper("7.4.4")`
  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";
  import classExtractFieldDescriptor from "classExtractFieldDescriptor";
  export default function _classPrivateFieldDestructureSet(receiver, privateMap) {
    var descriptor = classExtractFieldDescriptor(receiver, privateMap, "set");
    return classApplyDescriptorDestructureSet(receiver, descriptor);
  }
`;
helpers.classExtractFieldDescriptor = helper("7.13.10")`
  export default function _classExtractFieldDescriptor(receiver, privateMap, action) {
    if (!privateMap.has(receiver)) {
      throw new TypeError("attempted to " + action + " private field on non-instance");
    }
    return privateMap.get(receiver);
  }
`;
helpers.classStaticPrivateFieldSpecGet = helper("7.0.2")`
  import classApplyDescriptorGet from "classApplyDescriptorGet";
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    classCheckPrivateStaticFieldDescriptor(descriptor, "get");
    return classApplyDescriptorGet(receiver, descriptor);
  }
`;
helpers.classStaticPrivateFieldSpecSet = helper("7.0.2")`
  import classApplyDescriptorSet from "classApplyDescriptorSet";
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");
    classApplyDescriptorSet(receiver, descriptor, value);
    return value;
  }
`;
helpers.classStaticPrivateMethodGet = helper("7.3.2")`
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  export default function _classStaticPrivateMethodGet(receiver, classConstructor, method) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    return method;
  }
`;
helpers.classStaticPrivateMethodSet = helper("7.3.2")`
  export default function _classStaticPrivateMethodSet() {
    throw new TypeError("attempted to set read only static private field");
  }
`;
helpers.classApplyDescriptorGet = helper("7.13.10")`
  export default function _classApplyDescriptorGet(receiver, descriptor) {
    if (descriptor.get) {
      return descriptor.get.call(receiver);
    }
    return descriptor.value;
  }
`;
helpers.classApplyDescriptorSet = helper("7.13.10")`
  export default function _classApplyDescriptorSet(receiver, descriptor, value) {
    if (descriptor.set) {
      descriptor.set.call(receiver, value);
    } else {
      if (!descriptor.writable) {
        // This should only throw in strict mode, but class bodies are
        // always strict and private fields can only be used inside
        // class bodies.
        throw new TypeError("attempted to set read only private field");
      }
      descriptor.value = value;
    }
  }
`;
helpers.classApplyDescriptorDestructureSet = helper("7.13.10")`
  export default function _classApplyDescriptorDestructureSet(receiver, descriptor) {
    if (descriptor.set) {
      if (!("__destrObj" in descriptor)) {
        descriptor.__destrObj = {
          set value(v) {
            descriptor.set.call(receiver, v)
          },
        };
      }
      return descriptor.__destrObj;
    } else {
      if (!descriptor.writable) {
        // This should only throw in strict mode, but class bodies are
        // always strict and private fields can only be used inside
        // class bodies.
        throw new TypeError("attempted to set read only private field");
      }

      return descriptor;
    }
  }
`;
helpers.classStaticPrivateFieldDestructureSet = helper("7.13.10")`
  import classApplyDescriptorDestructureSet from "classApplyDescriptorDestructureSet";
  import classCheckPrivateStaticAccess from "classCheckPrivateStaticAccess";
  import classCheckPrivateStaticFieldDescriptor from "classCheckPrivateStaticFieldDescriptor";
  export default function _classStaticPrivateFieldDestructureSet(receiver, classConstructor, descriptor) {
    classCheckPrivateStaticAccess(receiver, classConstructor);
    classCheckPrivateStaticFieldDescriptor(descriptor, "set");
    return classApplyDescriptorDestructureSet(receiver, descriptor);
  }
`;
helpers.classCheckPrivateStaticAccess = helper("7.13.10")`
  export default function _classCheckPrivateStaticAccess(receiver, classConstructor) {
    if (receiver !== classConstructor) {
      throw new TypeError("Private static access of wrong provenance");
    }
  }
`;
helpers.classCheckPrivateStaticFieldDescriptor = helper("7.13.10")`
  export default function _classCheckPrivateStaticFieldDescriptor(descriptor, action) {
    if (descriptor === undefined) {
      throw new TypeError("attempted to " + action + " private static field before its declaration");
    }
  }
`;
helpers.decorate = helper("7.1.5")`
  import toArray from "toArray";
  import toPropertyKey from "toPropertyKey";

  // These comments are stripped by @babel/template
  /*::
  type PropertyDescriptor =
    | {
        value: any,
        writable: boolean,
        configurable: boolean,
        enumerable: boolean,
      }
    | {
        get?: () => any,
        set?: (v: any) => void,
        configurable: boolean,
        enumerable: boolean,
      };

  type FieldDescriptor ={
    writable: boolean,
    configurable: boolean,
    enumerable: boolean,
  };

  type Placement = "static" | "prototype" | "own";
  type Key = string | symbol; // PrivateName is not supported yet.

  type ElementDescriptor =
    | {
        kind: "method",
        key: Key,
        placement: Placement,
        descriptor: PropertyDescriptor
      }
    | {
        kind: "field",
        key: Key,
        placement: Placement,
        descriptor: FieldDescriptor,
        initializer?: () => any,
      };

  // This is exposed to the user code
  type ElementObjectInput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
  };

  // This is exposed to the user code
  type ElementObjectOutput = ElementDescriptor & {
    [@@toStringTag]?: "Descriptor"
    extras?: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  // This is exposed to the user code
  type ClassObject = {
    [@@toStringTag]?: "Descriptor",
    kind: "class",
    elements: ElementDescriptor[],
  };

  type ElementDecorator = (descriptor: ElementObjectInput) => ?ElementObjectOutput;
  type ClassDecorator = (descriptor: ClassObject) => ?ClassObject;
  type ClassFinisher = <A, B>(cl: Class<A>) => Class<B>;

  // Only used by Babel in the transform output, not part of the spec.
  type ElementDefinition =
    | {
        kind: "method",
        value: any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
      }
    | {
        kind: "field",
        value: () => any,
        key: Key,
        static?: boolean,
        decorators?: ElementDecorator[],
    };

  declare function ClassFactory<C>(initialize: (instance: C) => void): {
    F: Class<C>,
    d: ElementDefinition[]
  }

  */

  /*::
  // Various combinations with/without extras and with one or many finishers

  type ElementFinisherExtras = {
    element: ElementDescriptor,
    finisher?: ClassFinisher,
    extras?: ElementDescriptor[],
  };

  type ElementFinishersExtras = {
    element: ElementDescriptor,
    finishers: ClassFinisher[],
    extras: ElementDescriptor[],
  };

  type ElementsFinisher = {
    elements: ElementDescriptor[],
    finisher?: ClassFinisher,
  };

  type ElementsFinishers = {
    elements: ElementDescriptor[],
    finishers: ClassFinisher[],
  };

  */

  /*::

  type Placements = {
    static: Key[],
    prototype: Key[],
    own: Key[],
  };

  */

  // ClassDefinitionEvaluation (Steps 26-*)
  export default function _decorate(
    decorators /*: ClassDecorator[] */,
    factory /*: ClassFactory */,
    superClass /*: ?Class<*> */,
    mixins /*: ?Array<Function> */,
  ) /*: Class<*> */ {
    var api = _getDecoratorsApi();
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        api = mixins[i](api);
      }
    }

    var r = factory(function initialize(O) {
      api.initializeInstanceElements(O, decorated.elements);
    }, superClass);
    var decorated = api.decorateClass(
      _coalesceClassElements(r.d.map(_createElementDescriptor)),
      decorators,
    );

    api.initializeClassElements(r.F, decorated.elements);

    return api.runClassFinishers(r.F, decorated.finishers);
  }

  function _getDecoratorsApi() {
    _getDecoratorsApi = function() {
      return api;
    };

    var api = {
      elementsDefinitionOrder: [["method"], ["field"]],

      // InitializeInstanceElements
      initializeInstanceElements: function(
        /*::<C>*/ O /*: C */,
        elements /*: ElementDescriptor[] */,
      ) {
        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            if (element.kind === kind && element.placement === "own") {
              this.defineClassElement(O, element);
            }
          }, this);
        }, this);
      },

      // InitializeClassElements
      initializeClassElements: function(
        /*::<C>*/ F /*: Class<C> */,
        elements /*: ElementDescriptor[] */,
      ) {
        var proto = F.prototype;

        ["method", "field"].forEach(function(kind) {
          elements.forEach(function(element /*: ElementDescriptor */) {
            var placement = element.placement;
            if (
              element.kind === kind &&
              (placement === "static" || placement === "prototype")
            ) {
              var receiver = placement === "static" ? F : proto;
              this.defineClassElement(receiver, element);
            }
          }, this);
        }, this);
      },

      // DefineClassElement
      defineClassElement: function(
        /*::<C>*/ receiver /*: C | Class<C> */,
        element /*: ElementDescriptor */,
      ) {
        var descriptor /*: PropertyDescriptor */ = element.descriptor;
        if (element.kind === "field") {
          var initializer = element.initializer;
          descriptor = {
            enumerable: descriptor.enumerable,
            writable: descriptor.writable,
            configurable: descriptor.configurable,
            value: initializer === void 0 ? void 0 : initializer.call(receiver),
          };
        }
        Object.defineProperty(receiver, element.key, descriptor);
      },

      // DecorateClass
      decorateClass: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var newElements /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];
        var placements /*: Placements */ = {
          static: [],
          prototype: [],
          own: [],
        };

        elements.forEach(function(element /*: ElementDescriptor */) {
          this.addElementPlacement(element, placements);
        }, this);

        elements.forEach(function(element /*: ElementDescriptor */) {
          if (!_hasDecorators(element)) return newElements.push(element);

          var elementFinishersExtras /*: ElementFinishersExtras */ = this.decorateElement(
            element,
            placements,
          );
          newElements.push(elementFinishersExtras.element);
          newElements.push.apply(newElements, elementFinishersExtras.extras);
          finishers.push.apply(finishers, elementFinishersExtras.finishers);
        }, this);

        if (!decorators) {
          return { elements: newElements, finishers: finishers };
        }

        var result /*: ElementsFinishers */ = this.decorateConstructor(
          newElements,
          decorators,
        );
        finishers.push.apply(finishers, result.finishers);
        result.finishers = finishers;

        return result;
      },

      // AddElementPlacement
      addElementPlacement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
        silent /*: boolean */,
      ) {
        var keys = placements[element.placement];
        if (!silent && keys.indexOf(element.key) !== -1) {
          throw new TypeError("Duplicated element (" + element.key + ")");
        }
        keys.push(element.key);
      },

      // DecorateElement
      decorateElement: function(
        element /*: ElementDescriptor */,
        placements /*: Placements */,
      ) /*: ElementFinishersExtras */ {
        var extras /*: ElementDescriptor[] */ = [];
        var finishers /*: ClassFinisher[] */ = [];

        for (
          var decorators = element.decorators, i = decorators.length - 1;
          i >= 0;
          i--
        ) {
          // (inlined) RemoveElementPlacement
          var keys = placements[element.placement];
          keys.splice(keys.indexOf(element.key), 1);

          var elementObject /*: ElementObjectInput */ = this.fromElementDescriptor(
            element,
          );
          var elementFinisherExtras /*: ElementFinisherExtras */ = this.toElementFinisherExtras(
            (0, decorators[i])(elementObject) /*: ElementObjectOutput */ ||
              elementObject,
          );

          element = elementFinisherExtras.element;
          this.addElementPlacement(element, placements);

          if (elementFinisherExtras.finisher) {
            finishers.push(elementFinisherExtras.finisher);
          }

          var newExtras /*: ElementDescriptor[] | void */ =
            elementFinisherExtras.extras;
          if (newExtras) {
            for (var j = 0; j < newExtras.length; j++) {
              this.addElementPlacement(newExtras[j], placements);
            }
            extras.push.apply(extras, newExtras);
          }
        }

        return { element: element, finishers: finishers, extras: extras };
      },

      // DecorateConstructor
      decorateConstructor: function(
        elements /*: ElementDescriptor[] */,
        decorators /*: ClassDecorator[] */,
      ) /*: ElementsFinishers */ {
        var finishers /*: ClassFinisher[] */ = [];

        for (var i = decorators.length - 1; i >= 0; i--) {
          var obj /*: ClassObject */ = this.fromClassDescriptor(elements);
          var elementsAndFinisher /*: ElementsFinisher */ = this.toClassDescriptor(
            (0, decorators[i])(obj) /*: ClassObject */ || obj,
          );

          if (elementsAndFinisher.finisher !== undefined) {
            finishers.push(elementsAndFinisher.finisher);
          }

          if (elementsAndFinisher.elements !== undefined) {
            elements = elementsAndFinisher.elements;

            for (var j = 0; j < elements.length - 1; j++) {
              for (var k = j + 1; k < elements.length; k++) {
                if (
                  elements[j].key === elements[k].key &&
                  elements[j].placement === elements[k].placement
                ) {
                  throw new TypeError(
                    "Duplicated element (" + elements[j].key + ")",
                  );
                }
              }
            }
          }
        }

        return { elements: elements, finishers: finishers };
      },

      // FromElementDescriptor
      fromElementDescriptor: function(
        element /*: ElementDescriptor */,
      ) /*: ElementObject */ {
        var obj /*: ElementObject */ = {
          kind: element.kind,
          key: element.key,
          placement: element.placement,
          descriptor: element.descriptor,
        };

        var desc = {
          value: "Descriptor",
          configurable: true,
        };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        if (element.kind === "field") obj.initializer = element.initializer;

        return obj;
      },

      // ToElementDescriptors
      toElementDescriptors: function(
        elementObjects /*: ElementObject[] */,
      ) /*: ElementDescriptor[] */ {
        if (elementObjects === undefined) return;
        return toArray(elementObjects).map(function(elementObject) {
          var element = this.toElementDescriptor(elementObject);
          this.disallowProperty(elementObject, "finisher", "An element descriptor");
          this.disallowProperty(elementObject, "extras", "An element descriptor");
          return element;
        }, this);
      },

      // ToElementDescriptor
      toElementDescriptor: function(
        elementObject /*: ElementObject */,
      ) /*: ElementDescriptor */ {
        var kind = String(elementObject.kind);
        if (kind !== "method" && kind !== "field") {
          throw new TypeError(
            'An element descriptor\\'s .kind property must be either "method" or' +
              ' "field", but a decorator created an element descriptor with' +
              ' .kind "' +
              kind +
              '"',
          );
        }

        var key = toPropertyKey(elementObject.key);

        var placement = String(elementObject.placement);
        if (
          placement !== "static" &&
          placement !== "prototype" &&
          placement !== "own"
        ) {
          throw new TypeError(
            'An element descriptor\\'s .placement property must be one of "static",' +
              ' "prototype" or "own", but a decorator created an element descriptor' +
              ' with .placement "' +
              placement +
              '"',
          );
        }

        var descriptor /*: PropertyDescriptor */ = elementObject.descriptor;

        this.disallowProperty(elementObject, "elements", "An element descriptor");

        var element /*: ElementDescriptor */ = {
          kind: kind,
          key: key,
          placement: placement,
          descriptor: Object.assign({}, descriptor),
        };

        if (kind !== "field") {
          this.disallowProperty(elementObject, "initializer", "A method descriptor");
        } else {
          this.disallowProperty(
            descriptor,
            "get",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "set",
            "The property descriptor of a field descriptor",
          );
          this.disallowProperty(
            descriptor,
            "value",
            "The property descriptor of a field descriptor",
          );

          element.initializer = elementObject.initializer;
        }

        return element;
      },

      toElementFinisherExtras: function(
        elementObject /*: ElementObject */,
      ) /*: ElementFinisherExtras */ {
        var element /*: ElementDescriptor */ = this.toElementDescriptor(
          elementObject,
        );
        var finisher /*: ClassFinisher */ = _optionalCallableProperty(
          elementObject,
          "finisher",
        );
        var extras /*: ElementDescriptors[] */ = this.toElementDescriptors(
          elementObject.extras,
        );

        return { element: element, finisher: finisher, extras: extras };
      },

      // FromClassDescriptor
      fromClassDescriptor: function(
        elements /*: ElementDescriptor[] */,
      ) /*: ClassObject */ {
        var obj = {
          kind: "class",
          elements: elements.map(this.fromElementDescriptor, this),
        };

        var desc = { value: "Descriptor", configurable: true };
        Object.defineProperty(obj, Symbol.toStringTag, desc);

        return obj;
      },

      // ToClassDescriptor
      toClassDescriptor: function(
        obj /*: ClassObject */,
      ) /*: ElementsFinisher */ {
        var kind = String(obj.kind);
        if (kind !== "class") {
          throw new TypeError(
            'A class descriptor\\'s .kind property must be "class", but a decorator' +
              ' created a class descriptor with .kind "' +
              kind +
              '"',
          );
        }

        this.disallowProperty(obj, "key", "A class descriptor");
        this.disallowProperty(obj, "placement", "A class descriptor");
        this.disallowProperty(obj, "descriptor", "A class descriptor");
        this.disallowProperty(obj, "initializer", "A class descriptor");
        this.disallowProperty(obj, "extras", "A class descriptor");

        var finisher = _optionalCallableProperty(obj, "finisher");
        var elements = this.toElementDescriptors(obj.elements);

        return { elements: elements, finisher: finisher };
      },

      // RunClassFinishers
      runClassFinishers: function(
        constructor /*: Class<*> */,
        finishers /*: ClassFinisher[] */,
      ) /*: Class<*> */ {
        for (var i = 0; i < finishers.length; i++) {
          var newConstructor /*: ?Class<*> */ = (0, finishers[i])(constructor);
          if (newConstructor !== undefined) {
            // NOTE: This should check if IsConstructor(newConstructor) is false.
            if (typeof newConstructor !== "function") {
              throw new TypeError("Finishers must return a constructor.");
            }
            constructor = newConstructor;
          }
        }
        return constructor;
      },

      disallowProperty: function(obj, name, objectType) {
        if (obj[name] !== undefined) {
          throw new TypeError(objectType + " can't have a ." + name + " property.");
        }
      }
    };

    return api;
  }

  // ClassElementEvaluation
  function _createElementDescriptor(
    def /*: ElementDefinition */,
  ) /*: ElementDescriptor */ {
    var key = toPropertyKey(def.key);

    var descriptor /*: PropertyDescriptor */;
    if (def.kind === "method") {
      descriptor = {
        value: def.value,
        writable: true,
        configurable: true,
        enumerable: false,
      };
    } else if (def.kind === "get") {
      descriptor = { get: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "set") {
      descriptor = { set: def.value, configurable: true, enumerable: false };
    } else if (def.kind === "field") {
      descriptor = { configurable: true, writable: true, enumerable: true };
    }

    var element /*: ElementDescriptor */ = {
      kind: def.kind === "field" ? "field" : "method",
      key: key,
      placement: def.static
        ? "static"
        : def.kind === "field"
        ? "own"
        : "prototype",
      descriptor: descriptor,
    };
    if (def.decorators) element.decorators = def.decorators;
    if (def.kind === "field") element.initializer = def.value;

    return element;
  }

  // CoalesceGetterSetter
  function _coalesceGetterSetter(
    element /*: ElementDescriptor */,
    other /*: ElementDescriptor */,
  ) {
    if (element.descriptor.get !== undefined) {
      other.descriptor.get = element.descriptor.get;
    } else {
      other.descriptor.set = element.descriptor.set;
    }
  }

  // CoalesceClassElements
  function _coalesceClassElements(
    elements /*: ElementDescriptor[] */,
  ) /*: ElementDescriptor[] */ {
    var newElements /*: ElementDescriptor[] */ = [];

    var isSameElement = function(
      other /*: ElementDescriptor */,
    ) /*: boolean */ {
      return (
        other.kind === "method" &&
        other.key === element.key &&
        other.placement === element.placement
      );
    };

    for (var i = 0; i < elements.length; i++) {
      var element /*: ElementDescriptor */ = elements[i];
      var other /*: ElementDescriptor */;

      if (
        element.kind === "method" &&
        (other = newElements.find(isSameElement))
      ) {
        if (
          _isDataDescriptor(element.descriptor) ||
          _isDataDescriptor(other.descriptor)
        ) {
          if (_hasDecorators(element) || _hasDecorators(other)) {
            throw new ReferenceError(
              "Duplicated methods (" + element.key + ") can't be decorated.",
            );
          }
          other.descriptor = element.descriptor;
        } else {
          if (_hasDecorators(element)) {
            if (_hasDecorators(other)) {
              throw new ReferenceError(
                "Decorators can't be placed on different accessors with for " +
                  "the same property (" +
                  element.key +
                  ").",
              );
            }
            other.decorators = element.decorators;
          }
          _coalesceGetterSetter(element, other);
        }
      } else {
        newElements.push(element);
      }
    }

    return newElements;
  }

  function _hasDecorators(element /*: ElementDescriptor */) /*: boolean */ {
    return element.decorators && element.decorators.length;
  }

  function _isDataDescriptor(desc /*: PropertyDescriptor */) /*: boolean */ {
    return (
      desc !== undefined &&
      !(desc.value === undefined && desc.writable === undefined)
    );
  }

  function _optionalCallableProperty /*::<T>*/(
    obj /*: T */,
    name /*: $Keys<T> */,
  ) /*: ?Function */ {
    var value = obj[name];
    if (value !== undefined && typeof value !== "function") {
      throw new TypeError("Expected '" + name + "' to be a function");
    }
    return value;
  }

`;
helpers.classPrivateMethodGet = helper("7.1.6")`
  export default function _classPrivateMethodGet(receiver, privateSet, fn) {
    if (!privateSet.has(receiver)) {
      throw new TypeError("attempted to get private field on non-instance");
    }
    return fn;
  }
`;
{
  helpers.classPrivateMethodSet = helper("7.1.6")`
    export default function _classPrivateMethodSet() {
      throw new TypeError("attempted to reassign private method");
    }
  `;
}

/***/ }),
/* 184 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.wrapRegExp = exports.typeof = exports.objectSpread2 = exports.jsx = void 0;

var _template = _interopRequireDefault(__webpack_require__(165));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const jsx = {
  minVersion: "7.0.0-beta.0",
  ast: () => _template.default.program.ast('\nvar REACT_ELEMENT_TYPE;\nexport default function _createRawReactElement(type, props, key, children) {\n  if (!REACT_ELEMENT_TYPE) {\n    REACT_ELEMENT_TYPE =\n      (typeof Symbol === "function" &&\n        \n        Symbol["for"] &&\n        Symbol["for"]("react.element")) ||\n      0xeac7;\n  }\n  var defaultProps = type && type.defaultProps;\n  var childrenLength = arguments.length - 3;\n  if (!props && childrenLength !== 0) {\n    \n    \n    props = { children: void 0 };\n  }\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = new Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 3];\n    }\n    props.children = childArray;\n  }\n  if (props && defaultProps) {\n    for (var propName in defaultProps) {\n      if (props[propName] === void 0) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  } else if (!props) {\n    props = defaultProps || {};\n  }\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key === undefined ? null : "" + key,\n    ref: null,\n    props: props,\n    _owner: null,\n  };\n}\n')
};
exports.jsx = jsx;
const objectSpread2 = {
  minVersion: "7.5.0",
  ast: () => _template.default.program.ast('\nimport defineProperty from "defineProperty";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(\n          target,\n          key,\n          Object.getOwnPropertyDescriptor(source, key)\n        );\n      });\n    }\n  }\n  return target;\n}\n')
};
exports.objectSpread2 = objectSpread2;
const _typeof = {
  minVersion: "7.0.0-beta.0",
  ast: () => _template.default.program.ast('\nexport default function _typeof(obj) {\n  "@babel/helpers - typeof";\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj &&\n        typeof Symbol === "function" &&\n        obj.constructor === Symbol &&\n        obj !== Symbol.prototype\n        ? "symbol"\n        : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\n')
};
exports.typeof = _typeof;
const wrapRegExp = {
  minVersion: "7.2.6",
  ast: () => _template.default.program.ast('\nimport setPrototypeOf from "setPrototypeOf";\nimport inherits from "inherits";\nexport default function _wrapRegExp() {\n  _wrapRegExp = function (re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n  var _super = RegExp.prototype;\n  var _groups = new WeakMap();\n  function BabelRegExp(re, flags, groups) {\n    var _this = new RegExp(re, flags);\n    \n    _groups.set(_this, groups || _groups.get(re));\n    return setPrototypeOf(_this, BabelRegExp.prototype);\n  }\n  inherits(BabelRegExp, RegExp);\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === "string") {\n      var groups = _groups.get(this);\n      return _super[Symbol.replace].call(\n        this,\n        str,\n        substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n          return "$" + groups[name];\n        })\n      );\n    } else if (typeof substitution === "function") {\n      var _this = this;\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = arguments;\n        \n        if (typeof args[args.length - 1] !== "object") {\n          args = [].slice.call(args);\n          args.push(buildGroups(args, _this));\n        }\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n  function buildGroups(result, re) {\n    \n    \n    var g = _groups.get(re);\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n  return _wrapRegExp.apply(this, arguments);\n}\n')
};
exports.wrapRegExp = wrapRegExp;

/***/ }),
/* 185 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.rewriteModuleStatementsAndPrepareHeader = rewriteModuleStatementsAndPrepareHeader;
exports.ensureStatementsHoisted = ensureStatementsHoisted;
exports.wrapInterop = wrapInterop;
exports.buildNamespaceInitStatements = buildNamespaceInitStatements;
Object.defineProperty(exports, "isModule", ({
  enumerable: true,
  get: function () {
    return _helperModuleImports.isModule;
  }
}));
Object.defineProperty(exports, "rewriteThis", ({
  enumerable: true,
  get: function () {
    return _rewriteThis.default;
  }
}));
Object.defineProperty(exports, "hasExports", ({
  enumerable: true,
  get: function () {
    return _normalizeAndLoadMetadata.hasExports;
  }
}));
Object.defineProperty(exports, "isSideEffectImport", ({
  enumerable: true,
  get: function () {
    return _normalizeAndLoadMetadata.isSideEffectImport;
  }
}));
Object.defineProperty(exports, "getModuleName", ({
  enumerable: true,
  get: function () {
    return _getModuleName.default;
  }
}));

var _assert = __webpack_require__(186);

var t = __webpack_require__(11);

var _template = __webpack_require__(165);

var _helperModuleImports = __webpack_require__(187);

var _rewriteThis = __webpack_require__(191);

var _rewriteLiveReferences = __webpack_require__(195);

var _normalizeAndLoadMetadata = __webpack_require__(197);

var _getModuleName = __webpack_require__(199);

function rewriteModuleStatementsAndPrepareHeader(path, {
  loose,
  exportName,
  strict,
  allowTopLevelThis,
  strictMode,
  noInterop,
  importInterop = noInterop ? "none" : "babel",
  lazy,
  esNamespaceOnly,
  constantReexports = loose,
  enumerableModuleMeta = loose
}) {
  (0, _normalizeAndLoadMetadata.validateImportInteropOption)(importInterop);

  _assert((0, _helperModuleImports.isModule)(path), "Cannot process module statements in a script");

  path.node.sourceType = "script";
  const meta = (0, _normalizeAndLoadMetadata.default)(path, exportName, {
    importInterop,
    initializeReexports: constantReexports,
    lazy,
    esNamespaceOnly
  });

  if (!allowTopLevelThis) {
    (0, _rewriteThis.default)(path);
  }

  (0, _rewriteLiveReferences.default)(path, meta);

  if (strictMode !== false) {
    const hasStrict = path.node.directives.some(directive => {
      return directive.value.value === "use strict";
    });

    if (!hasStrict) {
      path.unshiftContainer("directives", t.directive(t.directiveLiteral("use strict")));
    }
  }

  const headers = [];

  if ((0, _normalizeAndLoadMetadata.hasExports)(meta) && !strict) {
    headers.push(buildESModuleHeader(meta, enumerableModuleMeta));
  }

  const nameList = buildExportNameListDeclaration(path, meta);

  if (nameList) {
    meta.exportNameListName = nameList.name;
    headers.push(nameList.statement);
  }

  headers.push(...buildExportInitializationStatements(path, meta, constantReexports));
  return {
    meta,
    headers
  };
}

function ensureStatementsHoisted(statements) {
  statements.forEach(header => {
    header._blockHoist = 3;
  });
}

function wrapInterop(programPath, expr, type) {
  if (type === "none") {
    return null;
  }

  if (type === "node-namespace") {
    return t.callExpression(programPath.hub.addHelper("interopRequireWildcard"), [expr, t.booleanLiteral(true)]);
  } else if (type === "node-default") {
    return null;
  }

  let helper;

  if (type === "default") {
    helper = "interopRequireDefault";
  } else if (type === "namespace") {
    helper = "interopRequireWildcard";
  } else {
    throw new Error(`Unknown interop: ${type}`);
  }

  return t.callExpression(programPath.hub.addHelper(helper), [expr]);
}

function buildNamespaceInitStatements(metadata, sourceMetadata, constantReexports = false) {
  const statements = [];
  let srcNamespace = t.identifier(sourceMetadata.name);
  if (sourceMetadata.lazy) srcNamespace = t.callExpression(srcNamespace, []);

  for (const localName of sourceMetadata.importsNamespace) {
    if (localName === sourceMetadata.name) continue;
    statements.push(_template.default.statement`var NAME = SOURCE;`({
      NAME: localName,
      SOURCE: t.cloneNode(srcNamespace)
    }));
  }

  if (constantReexports) {
    statements.push(...buildReexportsFromMeta(metadata, sourceMetadata, true));
  }

  for (const exportName of sourceMetadata.reexportNamespace) {
    statements.push((sourceMetadata.lazy ? _template.default.statement`
            Object.defineProperty(EXPORTS, "NAME", {
              enumerable: true,
              get: function() {
                return NAMESPACE;
              }
            });
          ` : _template.default.statement`EXPORTS.NAME = NAMESPACE;`)({
      EXPORTS: metadata.exportName,
      NAME: exportName,
      NAMESPACE: t.cloneNode(srcNamespace)
    }));
  }

  if (sourceMetadata.reexportAll) {
    const statement = buildNamespaceReexport(metadata, t.cloneNode(srcNamespace), constantReexports);
    statement.loc = sourceMetadata.reexportAll.loc;
    statements.push(statement);
  }

  return statements;
}

const ReexportTemplate = {
  constant: _template.default.statement`EXPORTS.EXPORT_NAME = NAMESPACE_IMPORT;`,
  constantComputed: _template.default.statement`EXPORTS["EXPORT_NAME"] = NAMESPACE_IMPORT;`,
  spec: (0, _template.default)`
    Object.defineProperty(EXPORTS, "EXPORT_NAME", {
      enumerable: true,
      get: function() {
        return NAMESPACE_IMPORT;
      },
    });
    `
};

const buildReexportsFromMeta = (meta, metadata, constantReexports) => {
  const namespace = metadata.lazy ? t.callExpression(t.identifier(metadata.name), []) : t.identifier(metadata.name);
  const {
    stringSpecifiers
  } = meta;
  return Array.from(metadata.reexports, ([exportName, importName]) => {
    let NAMESPACE_IMPORT = t.cloneNode(namespace);

    if (importName === "default" && metadata.interop === "node-default") {} else if (stringSpecifiers.has(importName)) {
      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.stringLiteral(importName), true);
    } else {
      NAMESPACE_IMPORT = t.memberExpression(NAMESPACE_IMPORT, t.identifier(importName));
    }

    const astNodes = {
      EXPORTS: meta.exportName,
      EXPORT_NAME: exportName,
      NAMESPACE_IMPORT
    };

    if (constantReexports || t.isIdentifier(NAMESPACE_IMPORT)) {
      if (stringSpecifiers.has(exportName)) {
        return ReexportTemplate.constantComputed(astNodes);
      } else {
        return ReexportTemplate.constant(astNodes);
      }
    } else {
      return ReexportTemplate.spec(astNodes);
    }
  });
};

function buildESModuleHeader(metadata, enumerableModuleMeta = false) {
  return (enumerableModuleMeta ? _template.default.statement`
        EXPORTS.__esModule = true;
      ` : _template.default.statement`
        Object.defineProperty(EXPORTS, "__esModule", {
          value: true,
        });
      `)({
    EXPORTS: metadata.exportName
  });
}

function buildNamespaceReexport(metadata, namespace, constantReexports) {
  return (constantReexports ? _template.default.statement`
        Object.keys(NAMESPACE).forEach(function(key) {
          if (key === "default" || key === "__esModule") return;
          VERIFY_NAME_LIST;
          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;

          EXPORTS[key] = NAMESPACE[key];
        });
      ` : _template.default.statement`
        Object.keys(NAMESPACE).forEach(function(key) {
          if (key === "default" || key === "__esModule") return;
          VERIFY_NAME_LIST;
          if (key in EXPORTS && EXPORTS[key] === NAMESPACE[key]) return;

          Object.defineProperty(EXPORTS, key, {
            enumerable: true,
            get: function() {
              return NAMESPACE[key];
            },
          });
        });
    `)({
    NAMESPACE: namespace,
    EXPORTS: metadata.exportName,
    VERIFY_NAME_LIST: metadata.exportNameListName ? (0, _template.default)`
            if (Object.prototype.hasOwnProperty.call(EXPORTS_LIST, key)) return;
          `({
      EXPORTS_LIST: metadata.exportNameListName
    }) : null
  });
}

function buildExportNameListDeclaration(programPath, metadata) {
  const exportedVars = Object.create(null);

  for (const data of metadata.local.values()) {
    for (const name of data.names) {
      exportedVars[name] = true;
    }
  }

  let hasReexport = false;

  for (const data of metadata.source.values()) {
    for (const exportName of data.reexports.keys()) {
      exportedVars[exportName] = true;
    }

    for (const exportName of data.reexportNamespace) {
      exportedVars[exportName] = true;
    }

    hasReexport = hasReexport || !!data.reexportAll;
  }

  if (!hasReexport || Object.keys(exportedVars).length === 0) return null;
  const name = programPath.scope.generateUidIdentifier("exportNames");
  delete exportedVars.default;
  return {
    name: name.name,
    statement: t.variableDeclaration("var", [t.variableDeclarator(name, t.valueToNode(exportedVars))])
  };
}

function buildExportInitializationStatements(programPath, metadata, constantReexports = false) {
  const initStatements = [];
  const exportNames = [];

  for (const [localName, data] of metadata.local) {
    if (data.kind === "import") {} else if (data.kind === "hoisted") {
      initStatements.push(buildInitStatement(metadata, data.names, t.identifier(localName)));
    } else {
      exportNames.push(...data.names);
    }
  }

  for (const data of metadata.source.values()) {
    if (!constantReexports) {
      initStatements.push(...buildReexportsFromMeta(metadata, data, false));
    }

    for (const exportName of data.reexportNamespace) {
      exportNames.push(exportName);
    }
  }

  initStatements.push(...chunk(exportNames, 100).map(members => {
    return buildInitStatement(metadata, members, programPath.scope.buildUndefinedNode());
  }));
  return initStatements;
}

const InitTemplate = {
  computed: _template.default.expression`EXPORTS["NAME"] = VALUE`,
  default: _template.default.expression`EXPORTS.NAME = VALUE`
};

function buildInitStatement(metadata, exportNames, initExpr) {
  const {
    stringSpecifiers,
    exportName: EXPORTS
  } = metadata;
  return t.expressionStatement(exportNames.reduce((acc, exportName) => {
    const params = {
      EXPORTS,
      NAME: exportName,
      VALUE: acc
    };

    if (stringSpecifiers.has(exportName)) {
      return InitTemplate.computed(params);
    } else {
      return InitTemplate.default(params);
    }
  }, initExpr));
}

function chunk(array, size) {
  const chunks = [];

  for (let i = 0; i < array.length; i += size) {
    chunks.push(array.slice(i, i + size));
  }

  return chunks;
}

/***/ }),
/* 186 */
/***/ ((module) => {

"use strict";
module.exports = require("assert");;

/***/ }),
/* 187 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.addDefault = addDefault;
exports.addNamed = addNamed;
exports.addNamespace = addNamespace;
exports.addSideEffect = addSideEffect;
Object.defineProperty(exports, "ImportInjector", ({
  enumerable: true,
  get: function () {
    return _importInjector.default;
  }
}));
Object.defineProperty(exports, "isModule", ({
  enumerable: true,
  get: function () {
    return _isModule.default;
  }
}));

var _importInjector = _interopRequireDefault(__webpack_require__(188));

var _isModule = _interopRequireDefault(__webpack_require__(190));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function addDefault(path, importedSource, opts) {
  return new _importInjector.default(path).addDefault(importedSource, opts);
}

function addNamed(path, name, importedSource, opts) {
  return new _importInjector.default(path).addNamed(name, importedSource, opts);
}

function addNamespace(path, importedSource, opts) {
  return new _importInjector.default(path).addNamespace(importedSource, opts);
}

function addSideEffect(path, importedSource, opts) {
  return new _importInjector.default(path).addSideEffect(importedSource, opts);
}

/***/ }),
/* 188 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var t = _interopRequireWildcard(__webpack_require__(11));

var _importBuilder = _interopRequireDefault(__webpack_require__(189));

var _isModule = _interopRequireDefault(__webpack_require__(190));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const assert = __webpack_require__(186);

class ImportInjector {
  constructor(path, importedSource, opts) {
    this._defaultOpts = {
      importedSource: null,
      importedType: "commonjs",
      importedInterop: "babel",
      importingInterop: "babel",
      ensureLiveReference: false,
      ensureNoContext: false,
      importPosition: "before"
    };
    const programPath = path.find(p => p.isProgram());
    this._programPath = programPath;
    this._programScope = programPath.scope;
    this._hub = programPath.hub;
    this._defaultOpts = this._applyDefaults(importedSource, opts, true);
  }

  addDefault(importedSourceIn, opts) {
    return this.addNamed("default", importedSourceIn, opts);
  }

  addNamed(importName, importedSourceIn, opts) {
    assert(typeof importName === "string");
    return this._generateImport(this._applyDefaults(importedSourceIn, opts), importName);
  }

  addNamespace(importedSourceIn, opts) {
    return this._generateImport(this._applyDefaults(importedSourceIn, opts), null);
  }

  addSideEffect(importedSourceIn, opts) {
    return this._generateImport(this._applyDefaults(importedSourceIn, opts), false);
  }

  _applyDefaults(importedSource, opts, isInit = false) {
    const optsList = [];

    if (typeof importedSource === "string") {
      optsList.push({
        importedSource
      });
      optsList.push(opts);
    } else {
      assert(!opts, "Unexpected secondary arguments.");
      optsList.push(importedSource);
    }

    const newOpts = Object.assign({}, this._defaultOpts);

    for (const opts of optsList) {
      if (!opts) continue;
      Object.keys(newOpts).forEach(key => {
        if (opts[key] !== undefined) newOpts[key] = opts[key];
      });

      if (!isInit) {
        if (opts.nameHint !== undefined) newOpts.nameHint = opts.nameHint;
        if (opts.blockHoist !== undefined) newOpts.blockHoist = opts.blockHoist;
      }
    }

    return newOpts;
  }

  _generateImport(opts, importName) {
    const isDefault = importName === "default";
    const isNamed = !!importName && !isDefault;
    const isNamespace = importName === null;
    const {
      importedSource,
      importedType,
      importedInterop,
      importingInterop,
      ensureLiveReference,
      ensureNoContext,
      nameHint,
      importPosition,
      blockHoist
    } = opts;
    let name = nameHint || importName;
    const isMod = (0, _isModule.default)(this._programPath);
    const isModuleForNode = isMod && importingInterop === "node";
    const isModuleForBabel = isMod && importingInterop === "babel";

    if (importPosition === "after" && !isMod) {
      throw new Error(`"importPosition": "after" is only supported in modules`);
    }

    const builder = new _importBuilder.default(importedSource, this._programScope, this._hub);

    if (importedType === "es6") {
      if (!isModuleForNode && !isModuleForBabel) {
        throw new Error("Cannot import an ES6 module from CommonJS");
      }

      builder.import();

      if (isNamespace) {
        builder.namespace(nameHint || importedSource);
      } else if (isDefault || isNamed) {
        builder.named(name, importName);
      }
    } else if (importedType !== "commonjs") {
      throw new Error(`Unexpected interopType "${importedType}"`);
    } else if (importedInterop === "babel") {
      if (isModuleForNode) {
        name = name !== "default" ? name : importedSource;
        const es6Default = `${importedSource}$es6Default`;
        builder.import();

        if (isNamespace) {
          builder.default(es6Default).var(name || importedSource).wildcardInterop();
        } else if (isDefault) {
          if (ensureLiveReference) {
            builder.default(es6Default).var(name || importedSource).defaultInterop().read("default");
          } else {
            builder.default(es6Default).var(name).defaultInterop().prop(importName);
          }
        } else if (isNamed) {
          builder.default(es6Default).read(importName);
        }
      } else if (isModuleForBabel) {
        builder.import();

        if (isNamespace) {
          builder.namespace(name || importedSource);
        } else if (isDefault || isNamed) {
          builder.named(name, importName);
        }
      } else {
        builder.require();

        if (isNamespace) {
          builder.var(name || importedSource).wildcardInterop();
        } else if ((isDefault || isNamed) && ensureLiveReference) {
          if (isDefault) {
            name = name !== "default" ? name : importedSource;
            builder.var(name).read(importName);
            builder.defaultInterop();
          } else {
            builder.var(importedSource).read(importName);
          }
        } else if (isDefault) {
          builder.var(name).defaultInterop().prop(importName);
        } else if (isNamed) {
          builder.var(name).prop(importName);
        }
      }
    } else if (importedInterop === "compiled") {
      if (isModuleForNode) {
        builder.import();

        if (isNamespace) {
          builder.default(name || importedSource);
        } else if (isDefault || isNamed) {
          builder.default(importedSource).read(name);
        }
      } else if (isModuleForBabel) {
        builder.import();

        if (isNamespace) {
          builder.namespace(name || importedSource);
        } else if (isDefault || isNamed) {
          builder.named(name, importName);
        }
      } else {
        builder.require();

        if (isNamespace) {
          builder.var(name || importedSource);
        } else if (isDefault || isNamed) {
          if (ensureLiveReference) {
            builder.var(importedSource).read(name);
          } else {
            builder.prop(importName).var(name);
          }
        }
      }
    } else if (importedInterop === "uncompiled") {
      if (isDefault && ensureLiveReference) {
        throw new Error("No live reference for commonjs default");
      }

      if (isModuleForNode) {
        builder.import();

        if (isNamespace) {
          builder.default(name || importedSource);
        } else if (isDefault) {
          builder.default(name);
        } else if (isNamed) {
          builder.default(importedSource).read(name);
        }
      } else if (isModuleForBabel) {
        builder.import();

        if (isNamespace) {
          builder.default(name || importedSource);
        } else if (isDefault) {
          builder.default(name);
        } else if (isNamed) {
          builder.named(name, importName);
        }
      } else {
        builder.require();

        if (isNamespace) {
          builder.var(name || importedSource);
        } else if (isDefault) {
          builder.var(name);
        } else if (isNamed) {
          if (ensureLiveReference) {
            builder.var(importedSource).read(name);
          } else {
            builder.var(name).prop(importName);
          }
        }
      }
    } else {
      throw new Error(`Unknown importedInterop "${importedInterop}".`);
    }

    const {
      statements,
      resultName
    } = builder.done();

    this._insertStatements(statements, importPosition, blockHoist);

    if ((isDefault || isNamed) && ensureNoContext && resultName.type !== "Identifier") {
      return t.sequenceExpression([t.numericLiteral(0), resultName]);
    }

    return resultName;
  }

  _insertStatements(statements, importPosition = "before", blockHoist = 3) {
    const body = this._programPath.get("body");

    if (importPosition === "after") {
      for (let i = body.length - 1; i >= 0; i--) {
        if (body[i].isImportDeclaration()) {
          body[i].insertAfter(statements);
          return;
        }
      }
    } else {
      statements.forEach(node => {
        node._blockHoist = blockHoist;
      });
      const targetPath = body.find(p => {
        const val = p.node._blockHoist;
        return Number.isFinite(val) && val < 4;
      });

      if (targetPath) {
        targetPath.insertBefore(statements);
        return;
      }
    }

    this._programPath.unshiftContainer("body", statements);
  }

}

exports.default = ImportInjector;

/***/ }),
/* 189 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const assert = __webpack_require__(186);

class ImportBuilder {
  constructor(importedSource, scope, hub) {
    this._statements = [];
    this._resultName = null;
    this._scope = null;
    this._hub = null;
    this._importedSource = void 0;
    this._scope = scope;
    this._hub = hub;
    this._importedSource = importedSource;
  }

  done() {
    return {
      statements: this._statements,
      resultName: this._resultName
    };
  }

  import() {
    this._statements.push(t.importDeclaration([], t.stringLiteral(this._importedSource)));

    return this;
  }

  require() {
    this._statements.push(t.expressionStatement(t.callExpression(t.identifier("require"), [t.stringLiteral(this._importedSource)])));

    return this;
  }

  namespace(name = "namespace") {
    const local = this._scope.generateUidIdentifier(name);

    const statement = this._statements[this._statements.length - 1];
    assert(statement.type === "ImportDeclaration");
    assert(statement.specifiers.length === 0);
    statement.specifiers = [t.importNamespaceSpecifier(local)];
    this._resultName = t.cloneNode(local);
    return this;
  }

  default(name) {
    name = this._scope.generateUidIdentifier(name);
    const statement = this._statements[this._statements.length - 1];
    assert(statement.type === "ImportDeclaration");
    assert(statement.specifiers.length === 0);
    statement.specifiers = [t.importDefaultSpecifier(name)];
    this._resultName = t.cloneNode(name);
    return this;
  }

  named(name, importName) {
    if (importName === "default") return this.default(name);
    name = this._scope.generateUidIdentifier(name);
    const statement = this._statements[this._statements.length - 1];
    assert(statement.type === "ImportDeclaration");
    assert(statement.specifiers.length === 0);
    statement.specifiers = [t.importSpecifier(name, t.identifier(importName))];
    this._resultName = t.cloneNode(name);
    return this;
  }

  var(name) {
    name = this._scope.generateUidIdentifier(name);
    let statement = this._statements[this._statements.length - 1];

    if (statement.type !== "ExpressionStatement") {
      assert(this._resultName);
      statement = t.expressionStatement(this._resultName);

      this._statements.push(statement);
    }

    this._statements[this._statements.length - 1] = t.variableDeclaration("var", [t.variableDeclarator(name, statement.expression)]);
    this._resultName = t.cloneNode(name);
    return this;
  }

  defaultInterop() {
    return this._interop(this._hub.addHelper("interopRequireDefault"));
  }

  wildcardInterop() {
    return this._interop(this._hub.addHelper("interopRequireWildcard"));
  }

  _interop(callee) {
    const statement = this._statements[this._statements.length - 1];

    if (statement.type === "ExpressionStatement") {
      statement.expression = t.callExpression(callee, [statement.expression]);
    } else if (statement.type === "VariableDeclaration") {
      assert(statement.declarations.length === 1);
      statement.declarations[0].init = t.callExpression(callee, [statement.declarations[0].init]);
    } else {
      assert.fail("Unexpected type.");
    }

    return this;
  }

  prop(name) {
    const statement = this._statements[this._statements.length - 1];

    if (statement.type === "ExpressionStatement") {
      statement.expression = t.memberExpression(statement.expression, t.identifier(name));
    } else if (statement.type === "VariableDeclaration") {
      assert(statement.declarations.length === 1);
      statement.declarations[0].init = t.memberExpression(statement.declarations[0].init, t.identifier(name));
    } else {
      assert.fail("Unexpected type:" + statement.type);
    }

    return this;
  }

  read(name) {
    this._resultName = t.memberExpression(this._resultName, t.identifier(name));
  }

}

exports.default = ImportBuilder;

/***/ }),
/* 190 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = isModule;

function isModule(path) {
  const {
    sourceType
  } = path.node;

  if (sourceType !== "module" && sourceType !== "script") {
    throw path.buildCodeFrameError(`Unknown sourceType "${sourceType}", cannot transform.`);
  }

  return path.node.sourceType === "module";
}

/***/ }),
/* 191 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = rewriteThis;

var _helperReplaceSupers = __webpack_require__(192);

var _traverse = __webpack_require__(7);

var t = __webpack_require__(11);

function rewriteThis(programPath) {
  (0, _traverse.default)(programPath.node, Object.assign({}, rewriteThisVisitor, {
    noScope: true
  }));
}

const rewriteThisVisitor = _traverse.default.visitors.merge([_helperReplaceSupers.environmentVisitor, {
  ThisExpression(path) {
    path.replaceWith(t.unaryExpression("void", t.numericLiteral(0), true));
  }

}]);

/***/ }),
/* 192 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.skipAllButComputedKey = skipAllButComputedKey;
exports.default = exports.environmentVisitor = void 0;

var _traverse = _interopRequireDefault(__webpack_require__(7));

var _helperMemberExpressionToFunctions = _interopRequireDefault(__webpack_require__(193));

var _helperOptimiseCallExpression = _interopRequireDefault(__webpack_require__(194));

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getPrototypeOfExpression(objectRef, isStatic, file, isPrivateMethod) {
  objectRef = t.cloneNode(objectRef);
  const targetRef = isStatic || isPrivateMethod ? objectRef : t.memberExpression(objectRef, t.identifier("prototype"));
  return t.callExpression(file.addHelper("getPrototypeOf"), [targetRef]);
}

function skipAllButComputedKey(path) {
  if (!path.node.computed) {
    path.skip();
    return;
  }

  const keys = t.VISITOR_KEYS[path.type];

  for (const key of keys) {
    if (key !== "key") path.skipKey(key);
  }
}

const environmentVisitor = {
  [`${t.staticBlock ? "StaticBlock|" : ""}ClassPrivateProperty|TypeAnnotation`](path) {
    path.skip();
  },

  Function(path) {
    if (path.isMethod()) return;
    if (path.isArrowFunctionExpression()) return;
    path.skip();
  },

  "Method|ClassProperty"(path) {
    skipAllButComputedKey(path);
  }

};
exports.environmentVisitor = environmentVisitor;

const visitor = _traverse.default.visitors.merge([environmentVisitor, {
  Super(path, state) {
    const {
      node,
      parentPath
    } = path;
    if (!parentPath.isMemberExpression({
      object: node
    })) return;
    state.handle(parentPath);
  }

}]);

const unshadowSuperBindingVisitor = _traverse.default.visitors.merge([environmentVisitor, {
  Scopable(path, {
    refName
  }) {
    const binding = path.scope.getOwnBinding(refName);

    if (binding && binding.identifier.name === refName) {
      path.scope.rename(refName);
    }
  }

}]);

const specHandlers = {
  memoise(superMember, count) {
    const {
      scope,
      node
    } = superMember;
    const {
      computed,
      property
    } = node;

    if (!computed) {
      return;
    }

    const memo = scope.maybeGenerateMemoised(property);

    if (!memo) {
      return;
    }

    this.memoiser.set(property, memo, count);
  },

  prop(superMember) {
    const {
      computed,
      property
    } = superMember.node;

    if (this.memoiser.has(property)) {
      return t.cloneNode(this.memoiser.get(property));
    }

    if (computed) {
      return t.cloneNode(property);
    }

    return t.stringLiteral(property.name);
  },

  get(superMember) {
    return this._get(superMember, this._getThisRefs());
  },

  _get(superMember, thisRefs) {
    const proto = getPrototypeOfExpression(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);
    return t.callExpression(this.file.addHelper("get"), [thisRefs.memo ? t.sequenceExpression([thisRefs.memo, proto]) : proto, this.prop(superMember), thisRefs.this]);
  },

  _getThisRefs() {
    if (!this.isDerivedConstructor) {
      return {
        this: t.thisExpression()
      };
    }

    const thisRef = this.scope.generateDeclaredUidIdentifier("thisSuper");
    return {
      memo: t.assignmentExpression("=", thisRef, t.thisExpression()),
      this: t.cloneNode(thisRef)
    };
  },

  set(superMember, value) {
    const thisRefs = this._getThisRefs();

    const proto = getPrototypeOfExpression(this.getObjectRef(), this.isStatic, this.file, this.isPrivateMethod);
    return t.callExpression(this.file.addHelper("set"), [thisRefs.memo ? t.sequenceExpression([thisRefs.memo, proto]) : proto, this.prop(superMember), value, thisRefs.this, t.booleanLiteral(superMember.isInStrictMode())]);
  },

  destructureSet(superMember) {
    throw superMember.buildCodeFrameError(`Destructuring to a super field is not supported yet.`);
  },

  call(superMember, args) {
    const thisRefs = this._getThisRefs();

    return (0, _helperOptimiseCallExpression.default)(this._get(superMember, thisRefs), t.cloneNode(thisRefs.this), args, false);
  },

  optionalCall(superMember, args) {
    const thisRefs = this._getThisRefs();

    return (0, _helperOptimiseCallExpression.default)(this._get(superMember, thisRefs), t.cloneNode(thisRefs.this), args, true);
  }

};
const looseHandlers = Object.assign({}, specHandlers, {
  prop(superMember) {
    const {
      property
    } = superMember.node;

    if (this.memoiser.has(property)) {
      return t.cloneNode(this.memoiser.get(property));
    }

    return t.cloneNode(property);
  },

  get(superMember) {
    const {
      isStatic,
      superRef
    } = this;
    const {
      computed
    } = superMember.node;
    const prop = this.prop(superMember);
    let object;

    if (isStatic) {
      object = superRef ? t.cloneNode(superRef) : t.memberExpression(t.identifier("Function"), t.identifier("prototype"));
    } else {
      object = superRef ? t.memberExpression(t.cloneNode(superRef), t.identifier("prototype")) : t.memberExpression(t.identifier("Object"), t.identifier("prototype"));
    }

    return t.memberExpression(object, prop, computed);
  },

  set(superMember, value) {
    const {
      computed
    } = superMember.node;
    const prop = this.prop(superMember);
    return t.assignmentExpression("=", t.memberExpression(t.thisExpression(), prop, computed), value);
  },

  destructureSet(superMember) {
    const {
      computed
    } = superMember.node;
    const prop = this.prop(superMember);
    return t.memberExpression(t.thisExpression(), prop, computed);
  },

  call(superMember, args) {
    return (0, _helperOptimiseCallExpression.default)(this.get(superMember), t.thisExpression(), args, false);
  },

  optionalCall(superMember, args) {
    return (0, _helperOptimiseCallExpression.default)(this.get(superMember), t.thisExpression(), args, true);
  }

});

class ReplaceSupers {
  constructor(opts) {
    var _opts$constantSuper;

    const path = opts.methodPath;
    this.methodPath = path;
    this.isDerivedConstructor = path.isClassMethod({
      kind: "constructor"
    }) && !!opts.superRef;
    this.isStatic = path.isObjectMethod() || path.node.static;
    this.isPrivateMethod = path.isPrivate() && path.isMethod();
    this.file = opts.file;
    this.superRef = opts.superRef;
    this.constantSuper = (_opts$constantSuper = opts.constantSuper) != null ? _opts$constantSuper : opts.isLoose;
    this.opts = opts;
  }

  getObjectRef() {
    return t.cloneNode(this.opts.objectRef || this.opts.getObjectRef());
  }

  replace() {
    if (this.opts.refToPreserve) {
      this.methodPath.traverse(unshadowSuperBindingVisitor, {
        refName: this.opts.refToPreserve.name
      });
    }

    const handler = this.constantSuper ? looseHandlers : specHandlers;
    (0, _helperMemberExpressionToFunctions.default)(this.methodPath, visitor, Object.assign({
      file: this.file,
      scope: this.methodPath.scope,
      isDerivedConstructor: this.isDerivedConstructor,
      isStatic: this.isStatic,
      isPrivateMethod: this.isPrivateMethod,
      getObjectRef: this.getObjectRef.bind(this),
      superRef: this.superRef
    }, handler));
  }

}

exports.default = ReplaceSupers;

/***/ }),
/* 193 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var t = __webpack_require__(11);

function willPathCastToBoolean(path) {
  const maybeWrapped = path;
  const {
    node,
    parentPath
  } = maybeWrapped;

  if (parentPath.isLogicalExpression()) {
    const {
      operator,
      right
    } = parentPath.node;

    if (operator === "&&" || operator === "||" || operator === "??" && node === right) {
      return willPathCastToBoolean(parentPath);
    }
  }

  if (parentPath.isSequenceExpression()) {
    const {
      expressions
    } = parentPath.node;

    if (expressions[expressions.length - 1] === node) {
      return willPathCastToBoolean(parentPath);
    } else {
      return true;
    }
  }

  return parentPath.isConditional({
    test: node
  }) || parentPath.isUnaryExpression({
    operator: "!"
  }) || parentPath.isLoop({
    test: node
  });
}

class AssignmentMemoiser {
  constructor() {
    this._map = void 0;
    this._map = new WeakMap();
  }

  has(key) {
    return this._map.has(key);
  }

  get(key) {
    if (!this.has(key)) return;

    const record = this._map.get(key);

    const {
      value
    } = record;
    record.count--;

    if (record.count === 0) {
      return t.assignmentExpression("=", value, key);
    }

    return value;
  }

  set(key, value, count) {
    return this._map.set(key, {
      count,
      value
    });
  }

}

function toNonOptional(path, base) {
  const {
    node
  } = path;

  if (path.isOptionalMemberExpression()) {
    return t.memberExpression(base, node.property, node.computed);
  }

  if (path.isOptionalCallExpression()) {
    const callee = path.get("callee");

    if (path.node.optional && callee.isOptionalMemberExpression()) {
      const {
        object
      } = callee.node;
      const context = path.scope.maybeGenerateMemoised(object) || object;
      callee.get("object").replaceWith(t.assignmentExpression("=", context, object));
      return t.callExpression(t.memberExpression(base, t.identifier("call")), [context, ...node.arguments]);
    }

    return t.callExpression(base, node.arguments);
  }

  return path.node;
}

function isInDetachedTree(path) {
  while (path) {
    if (path.isProgram()) break;
    const {
      parentPath,
      container,
      listKey
    } = path;
    const parentNode = parentPath.node;

    if (listKey) {
      if (container !== parentNode[listKey]) return true;
    } else {
      if (container !== parentNode) return true;
    }

    path = parentPath;
  }

  return false;
}

const handle = {
  memoise() {},

  handle(member, noDocumentAll) {
    const {
      node,
      parent,
      parentPath,
      scope
    } = member;

    if (member.isOptionalMemberExpression()) {
      if (isInDetachedTree(member)) return;
      const endPath = member.find(({
        node,
        parent,
        parentPath
      }) => {
        if (parentPath.isOptionalMemberExpression()) {
          return parent.optional || parent.object !== node;
        }

        if (parentPath.isOptionalCallExpression()) {
          return node !== member.node && parent.optional || parent.callee !== node;
        }

        return true;
      });

      if (scope.path.isPattern()) {
        endPath.replaceWith(t.callExpression(t.arrowFunctionExpression([], endPath.node), []));
        return;
      }

      const willEndPathCastToBoolean = willPathCastToBoolean(endPath);
      const rootParentPath = endPath.parentPath;

      if (rootParentPath.isUpdateExpression({
        argument: node
      }) || rootParentPath.isAssignmentExpression({
        left: node
      })) {
        throw member.buildCodeFrameError(`can't handle assignment`);
      }

      const isDeleteOperation = rootParentPath.isUnaryExpression({
        operator: "delete"
      });

      if (isDeleteOperation && endPath.isOptionalMemberExpression() && endPath.get("property").isPrivateName()) {
        throw member.buildCodeFrameError(`can't delete a private class element`);
      }

      let startingOptional = member;

      for (;;) {
        if (startingOptional.isOptionalMemberExpression()) {
          if (startingOptional.node.optional) break;
          startingOptional = startingOptional.get("object");
          continue;
        } else if (startingOptional.isOptionalCallExpression()) {
          if (startingOptional.node.optional) break;
          startingOptional = startingOptional.get("callee");
          continue;
        }

        throw new Error(`Internal error: unexpected ${startingOptional.node.type}`);
      }

      const startingProp = startingOptional.isOptionalMemberExpression() ? "object" : "callee";
      const startingNode = startingOptional.node[startingProp];
      const baseNeedsMemoised = scope.maybeGenerateMemoised(startingNode);
      const baseRef = baseNeedsMemoised != null ? baseNeedsMemoised : startingNode;
      const parentIsOptionalCall = parentPath.isOptionalCallExpression({
        callee: node
      });
      const parentIsCall = parentPath.isCallExpression({
        callee: node
      });
      startingOptional.replaceWith(toNonOptional(startingOptional, baseRef));

      if (parentIsOptionalCall) {
        if (parent.optional) {
          parentPath.replaceWith(this.optionalCall(member, parent.arguments));
        } else {
          parentPath.replaceWith(this.call(member, parent.arguments));
        }
      } else if (parentIsCall) {
        member.replaceWith(this.boundGet(member));
      } else {
        member.replaceWith(this.get(member));
      }

      let regular = member.node;

      for (let current = member; current !== endPath;) {
        const {
          parentPath
        } = current;

        if (parentPath === endPath && parentIsOptionalCall && parent.optional) {
          regular = parentPath.node;
          break;
        }

        regular = toNonOptional(parentPath, regular);
        current = parentPath;
      }

      let context;
      const endParentPath = endPath.parentPath;

      if (t.isMemberExpression(regular) && endParentPath.isOptionalCallExpression({
        callee: endPath.node,
        optional: true
      })) {
        const {
          object
        } = regular;
        context = member.scope.maybeGenerateMemoised(object);

        if (context) {
          regular.object = t.assignmentExpression("=", context, object);
        }
      }

      let replacementPath = endPath;

      if (isDeleteOperation) {
        replacementPath = endParentPath;
        regular = endParentPath.node;
      }

      const baseMemoised = baseNeedsMemoised ? t.assignmentExpression("=", t.cloneNode(baseRef), t.cloneNode(startingNode)) : t.cloneNode(baseRef);

      if (willEndPathCastToBoolean) {
        let nonNullishCheck;

        if (noDocumentAll) {
          nonNullishCheck = t.binaryExpression("!=", baseMemoised, t.nullLiteral());
        } else {
          nonNullishCheck = t.logicalExpression("&&", t.binaryExpression("!==", baseMemoised, t.nullLiteral()), t.binaryExpression("!==", t.cloneNode(baseRef), scope.buildUndefinedNode()));
        }

        replacementPath.replaceWith(t.logicalExpression("&&", nonNullishCheck, regular));
      } else {
        let nullishCheck;

        if (noDocumentAll) {
          nullishCheck = t.binaryExpression("==", baseMemoised, t.nullLiteral());
        } else {
          nullishCheck = t.logicalExpression("||", t.binaryExpression("===", baseMemoised, t.nullLiteral()), t.binaryExpression("===", t.cloneNode(baseRef), scope.buildUndefinedNode()));
        }

        replacementPath.replaceWith(t.conditionalExpression(nullishCheck, isDeleteOperation ? t.booleanLiteral(true) : scope.buildUndefinedNode(), regular));
      }

      if (context) {
        const endParent = endParentPath.node;
        endParentPath.replaceWith(t.optionalCallExpression(t.optionalMemberExpression(endParent.callee, t.identifier("call"), false, true), [t.cloneNode(context), ...endParent.arguments], false));
      }

      return;
    }

    if (parentPath.isUpdateExpression({
      argument: node
    })) {
      if (this.simpleSet) {
        member.replaceWith(this.simpleSet(member));
        return;
      }

      const {
        operator,
        prefix
      } = parent;
      this.memoise(member, 2);
      const value = t.binaryExpression(operator[0], t.unaryExpression("+", this.get(member)), t.numericLiteral(1));

      if (prefix) {
        parentPath.replaceWith(this.set(member, value));
      } else {
        const {
          scope
        } = member;
        const ref = scope.generateUidIdentifierBasedOnNode(node);
        scope.push({
          id: ref
        });
        value.left = t.assignmentExpression("=", t.cloneNode(ref), value.left);
        parentPath.replaceWith(t.sequenceExpression([this.set(member, value), t.cloneNode(ref)]));
      }

      return;
    }

    if (parentPath.isAssignmentExpression({
      left: node
    })) {
      if (this.simpleSet) {
        member.replaceWith(this.simpleSet(member));
        return;
      }

      const {
        operator,
        right: value
      } = parent;

      if (operator === "=") {
        parentPath.replaceWith(this.set(member, value));
      } else {
        const operatorTrunc = operator.slice(0, -1);

        if (t.LOGICAL_OPERATORS.includes(operatorTrunc)) {
          this.memoise(member, 1);
          parentPath.replaceWith(t.logicalExpression(operatorTrunc, this.get(member), this.set(member, value)));
        } else {
          this.memoise(member, 2);
          parentPath.replaceWith(this.set(member, t.binaryExpression(operatorTrunc, this.get(member), value)));
        }
      }

      return;
    }

    if (parentPath.isCallExpression({
      callee: node
    })) {
      parentPath.replaceWith(this.call(member, parent.arguments));
      return;
    }

    if (parentPath.isOptionalCallExpression({
      callee: node
    })) {
      if (scope.path.isPattern()) {
        parentPath.replaceWith(t.callExpression(t.arrowFunctionExpression([], parentPath.node), []));
        return;
      }

      parentPath.replaceWith(this.optionalCall(member, parent.arguments));
      return;
    }

    if (parentPath.isForXStatement({
      left: node
    }) || parentPath.isObjectProperty({
      value: node
    }) && parentPath.parentPath.isObjectPattern() || parentPath.isAssignmentPattern({
      left: node
    }) && parentPath.parentPath.isObjectProperty({
      value: parent
    }) && parentPath.parentPath.parentPath.isObjectPattern() || parentPath.isArrayPattern() || parentPath.isAssignmentPattern({
      left: node
    }) && parentPath.parentPath.isArrayPattern() || parentPath.isRestElement()) {
      member.replaceWith(this.destructureSet(member));
      return;
    }

    member.replaceWith(this.get(member));
  }

};
function memberExpressionToFunctions(path, visitor, state) {
  path.traverse(visitor, Object.assign({}, handle, state, {
    memoiser: new AssignmentMemoiser()
  }));
}

exports.default = memberExpressionToFunctions;
//# sourceMappingURL=index.js.map


/***/ }),
/* 194 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = optimiseCallExpression;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function optimiseCallExpression(callee, thisNode, args, optional) {
  if (args.length === 1 && t.isSpreadElement(args[0]) && t.isIdentifier(args[0].argument, {
    name: "arguments"
  })) {
    if (optional) {
      return t.optionalCallExpression(t.optionalMemberExpression(callee, t.identifier("apply"), false, true), [thisNode, args[0].argument], false);
    }

    return t.callExpression(t.memberExpression(callee, t.identifier("apply")), [thisNode, args[0].argument]);
  } else {
    if (optional) {
      return t.optionalCallExpression(t.optionalMemberExpression(callee, t.identifier("call"), false, true), [thisNode, ...args], false);
    }

    return t.callExpression(t.memberExpression(callee, t.identifier("call")), [thisNode, ...args]);
  }
}

/***/ }),
/* 195 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = rewriteLiveReferences;

var _assert = __webpack_require__(186);

var t = __webpack_require__(11);

var _template = __webpack_require__(165);

var _helperSimpleAccess = __webpack_require__(196);

function rewriteLiveReferences(programPath, metadata) {
  const imported = new Map();
  const exported = new Map();

  const requeueInParent = path => {
    programPath.requeue(path);
  };

  for (const [source, data] of metadata.source) {
    for (const [localName, importName] of data.imports) {
      imported.set(localName, [source, importName, null]);
    }

    for (const localName of data.importsNamespace) {
      imported.set(localName, [source, null, localName]);
    }
  }

  for (const [local, data] of metadata.local) {
    let exportMeta = exported.get(local);

    if (!exportMeta) {
      exportMeta = [];
      exported.set(local, exportMeta);
    }

    exportMeta.push(...data.names);
  }

  const rewriteBindingInitVisitorState = {
    metadata,
    requeueInParent,
    scope: programPath.scope,
    exported
  };
  programPath.traverse(rewriteBindingInitVisitor, rewriteBindingInitVisitorState);
  (0, _helperSimpleAccess.default)(programPath, new Set([...Array.from(imported.keys()), ...Array.from(exported.keys())]));
  const rewriteReferencesVisitorState = {
    seen: new WeakSet(),
    metadata,
    requeueInParent,
    scope: programPath.scope,
    imported,
    exported,
    buildImportReference: ([source, importName, localName], identNode) => {
      const meta = metadata.source.get(source);

      if (localName) {
        if (meta.lazy) identNode = t.callExpression(identNode, []);
        return identNode;
      }

      let namespace = t.identifier(meta.name);
      if (meta.lazy) namespace = t.callExpression(namespace, []);

      if (importName === "default" && meta.interop === "node-default") {
        return namespace;
      }

      const computed = metadata.stringSpecifiers.has(importName);
      return t.memberExpression(namespace, computed ? t.stringLiteral(importName) : t.identifier(importName), computed);
    }
  };
  programPath.traverse(rewriteReferencesVisitor, rewriteReferencesVisitorState);
}

const rewriteBindingInitVisitor = {
  Scope(path) {
    path.skip();
  },

  ClassDeclaration(path) {
    const {
      requeueInParent,
      exported,
      metadata
    } = this;
    const {
      id
    } = path.node;
    if (!id) throw new Error("Expected class to have a name");
    const localName = id.name;
    const exportNames = exported.get(localName) || [];

    if (exportNames.length > 0) {
      const statement = t.expressionStatement(buildBindingExportAssignmentExpression(metadata, exportNames, t.identifier(localName)));
      statement._blockHoist = path.node._blockHoist;
      requeueInParent(path.insertAfter(statement)[0]);
    }
  },

  VariableDeclaration(path) {
    const {
      requeueInParent,
      exported,
      metadata
    } = this;
    Object.keys(path.getOuterBindingIdentifiers()).forEach(localName => {
      const exportNames = exported.get(localName) || [];

      if (exportNames.length > 0) {
        const statement = t.expressionStatement(buildBindingExportAssignmentExpression(metadata, exportNames, t.identifier(localName)));
        statement._blockHoist = path.node._blockHoist;
        requeueInParent(path.insertAfter(statement)[0]);
      }
    });
  }

};

const buildBindingExportAssignmentExpression = (metadata, exportNames, localExpr) => {
  return (exportNames || []).reduce((expr, exportName) => {
    const {
      stringSpecifiers
    } = metadata;
    const computed = stringSpecifiers.has(exportName);
    return t.assignmentExpression("=", t.memberExpression(t.identifier(metadata.exportName), computed ? t.stringLiteral(exportName) : t.identifier(exportName), computed), expr);
  }, localExpr);
};

const buildImportThrow = localName => {
  return _template.default.expression.ast`
    (function() {
      throw new Error('"' + '${localName}' + '" is read-only.');
    })()
  `;
};

const rewriteReferencesVisitor = {
  ReferencedIdentifier(path) {
    const {
      seen,
      buildImportReference,
      scope,
      imported,
      requeueInParent
    } = this;
    if (seen.has(path.node)) return;
    seen.add(path.node);
    const localName = path.node.name;
    const importData = imported.get(localName);

    if (importData) {
      const localBinding = path.scope.getBinding(localName);
      const rootBinding = scope.getBinding(localName);
      if (rootBinding !== localBinding) return;
      const ref = buildImportReference(importData, path.node);
      ref.loc = path.node.loc;

      if ((path.parentPath.isCallExpression({
        callee: path.node
      }) || path.parentPath.isOptionalCallExpression({
        callee: path.node
      }) || path.parentPath.isTaggedTemplateExpression({
        tag: path.node
      })) && t.isMemberExpression(ref)) {
        path.replaceWith(t.sequenceExpression([t.numericLiteral(0), ref]));
      } else if (path.isJSXIdentifier() && t.isMemberExpression(ref)) {
        const {
          object,
          property
        } = ref;
        path.replaceWith(t.jsxMemberExpression(t.jsxIdentifier(object.name), t.jsxIdentifier(property.name)));
      } else {
        path.replaceWith(ref);
      }

      requeueInParent(path);
      path.skip();
    }
  },

  AssignmentExpression: {
    exit(path) {
      const {
        scope,
        seen,
        imported,
        exported,
        requeueInParent,
        buildImportReference
      } = this;
      if (seen.has(path.node)) return;
      seen.add(path.node);
      const left = path.get("left");
      if (left.isMemberExpression()) return;

      if (left.isIdentifier()) {
        const localName = left.node.name;

        if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {
          return;
        }

        const exportedNames = exported.get(localName);
        const importData = imported.get(localName);

        if ((exportedNames == null ? void 0 : exportedNames.length) > 0 || importData) {
          _assert(path.node.operator === "=", "Path was not simplified");

          const assignment = path.node;

          if (importData) {
            assignment.left = buildImportReference(importData, assignment.left);
            assignment.right = t.sequenceExpression([assignment.right, buildImportThrow(localName)]);
          }

          path.replaceWith(buildBindingExportAssignmentExpression(this.metadata, exportedNames, assignment));
          requeueInParent(path);
        }
      } else {
        const ids = left.getOuterBindingIdentifiers();
        const programScopeIds = Object.keys(ids).filter(localName => scope.getBinding(localName) === path.scope.getBinding(localName));
        const id = programScopeIds.find(localName => imported.has(localName));

        if (id) {
          path.node.right = t.sequenceExpression([path.node.right, buildImportThrow(id)]);
        }

        const items = [];
        programScopeIds.forEach(localName => {
          const exportedNames = exported.get(localName) || [];

          if (exportedNames.length > 0) {
            items.push(buildBindingExportAssignmentExpression(this.metadata, exportedNames, t.identifier(localName)));
          }
        });

        if (items.length > 0) {
          let node = t.sequenceExpression(items);

          if (path.parentPath.isExpressionStatement()) {
            node = t.expressionStatement(node);
            node._blockHoist = path.parentPath.node._blockHoist;
          }

          const statement = path.insertAfter(node)[0];
          requeueInParent(statement);
        }
      }
    }

  },

  "ForOfStatement|ForInStatement"(path) {
    const {
      scope,
      node
    } = path;
    const {
      left
    } = node;
    const {
      exported,
      scope: programScope
    } = this;

    if (!t.isVariableDeclaration(left)) {
      let didTransform = false;
      const bodyPath = path.get("body");
      const loopBodyScope = bodyPath.scope;

      for (const name of Object.keys(t.getOuterBindingIdentifiers(left))) {
        if (exported.get(name) && programScope.getBinding(name) === scope.getBinding(name)) {
          didTransform = true;

          if (loopBodyScope.hasOwnBinding(name)) {
            loopBodyScope.rename(name);
          }
        }
      }

      if (!didTransform) {
        return;
      }

      const newLoopId = scope.generateUidIdentifierBasedOnNode(left);
      bodyPath.unshiftContainer("body", t.expressionStatement(t.assignmentExpression("=", left, newLoopId)));
      path.get("left").replaceWith(t.variableDeclaration("let", [t.variableDeclarator(t.cloneNode(newLoopId))]));
      scope.registerDeclaration(path.get("left"));
    }
  }

};

/***/ }),
/* 196 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = simplifyAccess;

var t = _interopRequireWildcard(__webpack_require__(11));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function simplifyAccess(path, bindingNames) {
  path.traverse(simpleAssignmentVisitor, {
    scope: path.scope,
    bindingNames,
    seen: new WeakSet()
  });
}

const simpleAssignmentVisitor = {
  UpdateExpression: {
    exit(path) {
      const {
        scope,
        bindingNames
      } = this;
      const arg = path.get("argument");
      if (!arg.isIdentifier()) return;
      const localName = arg.node.name;
      if (!bindingNames.has(localName)) return;

      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {
        return;
      }

      if (path.parentPath.isExpressionStatement() && !path.isCompletionRecord()) {
        const operator = path.node.operator == "++" ? "+=" : "-=";
        path.replaceWith(t.assignmentExpression(operator, arg.node, t.numericLiteral(1)));
      } else if (path.node.prefix) {
        path.replaceWith(t.assignmentExpression("=", t.identifier(localName), t.binaryExpression(path.node.operator[0], t.unaryExpression("+", arg.node), t.numericLiteral(1))));
      } else {
        const old = path.scope.generateUidIdentifierBasedOnNode(arg.node, "old");
        const varName = old.name;
        path.scope.push({
          id: old
        });
        const binary = t.binaryExpression(path.node.operator[0], t.identifier(varName), t.numericLiteral(1));
        path.replaceWith(t.sequenceExpression([t.assignmentExpression("=", t.identifier(varName), t.unaryExpression("+", arg.node)), t.assignmentExpression("=", t.cloneNode(arg.node), binary), t.identifier(varName)]));
      }
    }

  },
  AssignmentExpression: {
    exit(path) {
      const {
        scope,
        seen,
        bindingNames
      } = this;
      if (path.node.operator === "=") return;
      if (seen.has(path.node)) return;
      seen.add(path.node);
      const left = path.get("left");
      if (!left.isIdentifier()) return;
      const localName = left.node.name;
      if (!bindingNames.has(localName)) return;

      if (scope.getBinding(localName) !== path.scope.getBinding(localName)) {
        return;
      }

      path.node.right = t.binaryExpression(path.node.operator.slice(0, -1), t.cloneNode(path.node.left), path.node.right);
      path.node.operator = "=";
    }

  }
};

/***/ }),
/* 197 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.hasExports = hasExports;
exports.isSideEffectImport = isSideEffectImport;
exports.validateImportInteropOption = validateImportInteropOption;
exports.default = normalizeModuleAndLoadMetadata;

var _path = __webpack_require__(198);

var _helperValidatorIdentifier = __webpack_require__(29);

var _helperSplitExportDeclaration = __webpack_require__(108);

function hasExports(metadata) {
  return metadata.hasExports;
}

function isSideEffectImport(source) {
  return source.imports.size === 0 && source.importsNamespace.size === 0 && source.reexports.size === 0 && source.reexportNamespace.size === 0 && !source.reexportAll;
}

function validateImportInteropOption(importInterop) {
  if (typeof importInterop !== "function" && importInterop !== "none" && importInterop !== "babel" && importInterop !== "node") {
    throw new Error(`.importInterop must be one of "none", "babel", "node", or a function returning one of those values (received ${importInterop}).`);
  }

  return importInterop;
}

function resolveImportInterop(importInterop, source) {
  if (typeof importInterop === "function") {
    return validateImportInteropOption(importInterop(source));
  }

  return importInterop;
}

function normalizeModuleAndLoadMetadata(programPath, exportName, {
  importInterop,
  initializeReexports = false,
  lazy = false,
  esNamespaceOnly = false
}) {
  if (!exportName) {
    exportName = programPath.scope.generateUidIdentifier("exports").name;
  }

  const stringSpecifiers = new Set();
  nameAnonymousExports(programPath);
  const {
    local,
    source,
    hasExports
  } = getModuleMetadata(programPath, {
    initializeReexports,
    lazy
  }, stringSpecifiers);
  removeModuleDeclarations(programPath);

  for (const [, metadata] of source) {
    if (metadata.importsNamespace.size > 0) {
      metadata.name = metadata.importsNamespace.values().next().value;
    }

    const resolvedInterop = resolveImportInterop(importInterop, metadata.source);

    if (resolvedInterop === "none") {
      metadata.interop = "none";
    } else if (resolvedInterop === "node" && metadata.interop === "namespace") {
      metadata.interop = "node-namespace";
    } else if (resolvedInterop === "node" && metadata.interop === "default") {
      metadata.interop = "node-default";
    } else if (esNamespaceOnly && metadata.interop === "namespace") {
      metadata.interop = "default";
    }
  }

  return {
    exportName,
    exportNameListName: null,
    hasExports,
    local,
    source,
    stringSpecifiers
  };
}

function getExportSpecifierName(path, stringSpecifiers) {
  if (path.isIdentifier()) {
    return path.node.name;
  } else if (path.isStringLiteral()) {
    const stringValue = path.node.value;

    if (!(0, _helperValidatorIdentifier.isIdentifierName)(stringValue)) {
      stringSpecifiers.add(stringValue);
    }

    return stringValue;
  } else {
    throw new Error(`Expected export specifier to be either Identifier or StringLiteral, got ${path.node.type}`);
  }
}

function assertExportSpecifier(path) {
  if (path.isExportSpecifier()) {
    return;
  } else if (path.isExportNamespaceSpecifier()) {
    throw path.buildCodeFrameError("Export namespace should be first transformed by `@babel/plugin-proposal-export-namespace-from`.");
  } else {
    throw path.buildCodeFrameError("Unexpected export specifier type");
  }
}

function getModuleMetadata(programPath, {
  lazy,
  initializeReexports
}, stringSpecifiers) {
  const localData = getLocalExportMetadata(programPath, initializeReexports, stringSpecifiers);
  const sourceData = new Map();

  const getData = sourceNode => {
    const source = sourceNode.value;
    let data = sourceData.get(source);

    if (!data) {
      data = {
        name: programPath.scope.generateUidIdentifier((0, _path.basename)(source, (0, _path.extname)(source))).name,
        interop: "none",
        loc: null,
        imports: new Map(),
        importsNamespace: new Set(),
        reexports: new Map(),
        reexportNamespace: new Set(),
        reexportAll: null,
        lazy: false,
        source
      };
      sourceData.set(source, data);
    }

    return data;
  };

  let hasExports = false;
  programPath.get("body").forEach(child => {
    if (child.isImportDeclaration()) {
      const data = getData(child.node.source);
      if (!data.loc) data.loc = child.node.loc;
      child.get("specifiers").forEach(spec => {
        if (spec.isImportDefaultSpecifier()) {
          const localName = spec.get("local").node.name;
          data.imports.set(localName, "default");
          const reexport = localData.get(localName);

          if (reexport) {
            localData.delete(localName);
            reexport.names.forEach(name => {
              data.reexports.set(name, "default");
            });
          }
        } else if (spec.isImportNamespaceSpecifier()) {
          const localName = spec.get("local").node.name;
          data.importsNamespace.add(localName);
          const reexport = localData.get(localName);

          if (reexport) {
            localData.delete(localName);
            reexport.names.forEach(name => {
              data.reexportNamespace.add(name);
            });
          }
        } else if (spec.isImportSpecifier()) {
          const importName = getExportSpecifierName(spec.get("imported"), stringSpecifiers);
          const localName = spec.get("local").node.name;
          data.imports.set(localName, importName);
          const reexport = localData.get(localName);

          if (reexport) {
            localData.delete(localName);
            reexport.names.forEach(name => {
              data.reexports.set(name, importName);
            });
          }
        }
      });
    } else if (child.isExportAllDeclaration()) {
      hasExports = true;
      const data = getData(child.node.source);
      if (!data.loc) data.loc = child.node.loc;
      data.reexportAll = {
        loc: child.node.loc
      };
    } else if (child.isExportNamedDeclaration() && child.node.source) {
      hasExports = true;
      const data = getData(child.node.source);
      if (!data.loc) data.loc = child.node.loc;
      child.get("specifiers").forEach(spec => {
        assertExportSpecifier(spec);
        const importName = getExportSpecifierName(spec.get("local"), stringSpecifiers);
        const exportName = getExportSpecifierName(spec.get("exported"), stringSpecifiers);
        data.reexports.set(exportName, importName);

        if (exportName === "__esModule") {
          throw spec.get("exported").buildCodeFrameError('Illegal export "__esModule".');
        }
      });
    } else if (child.isExportNamedDeclaration() || child.isExportDefaultDeclaration()) {
      hasExports = true;
    }
  });

  for (const metadata of sourceData.values()) {
    let needsDefault = false;
    let needsNamed = false;

    if (metadata.importsNamespace.size > 0) {
      needsDefault = true;
      needsNamed = true;
    }

    if (metadata.reexportAll) {
      needsNamed = true;
    }

    for (const importName of metadata.imports.values()) {
      if (importName === "default") needsDefault = true;else needsNamed = true;
    }

    for (const importName of metadata.reexports.values()) {
      if (importName === "default") needsDefault = true;else needsNamed = true;
    }

    if (needsDefault && needsNamed) {
      metadata.interop = "namespace";
    } else if (needsDefault) {
      metadata.interop = "default";
    }
  }

  for (const [source, metadata] of sourceData) {
    if (lazy !== false && !(isSideEffectImport(metadata) || metadata.reexportAll)) {
      if (lazy === true) {
        metadata.lazy = !/\./.test(source);
      } else if (Array.isArray(lazy)) {
        metadata.lazy = lazy.indexOf(source) !== -1;
      } else if (typeof lazy === "function") {
        metadata.lazy = lazy(source);
      } else {
        throw new Error(`.lazy must be a boolean, string array, or function`);
      }
    }
  }

  return {
    hasExports,
    local: localData,
    source: sourceData
  };
}

function getLocalExportMetadata(programPath, initializeReexports, stringSpecifiers) {
  const bindingKindLookup = new Map();
  programPath.get("body").forEach(child => {
    let kind;

    if (child.isImportDeclaration()) {
      kind = "import";
    } else {
      if (child.isExportDefaultDeclaration()) child = child.get("declaration");

      if (child.isExportNamedDeclaration()) {
        if (child.node.declaration) {
          child = child.get("declaration");
        } else if (initializeReexports && child.node.source && child.get("source").isStringLiteral()) {
          child.get("specifiers").forEach(spec => {
            assertExportSpecifier(spec);
            bindingKindLookup.set(spec.get("local").node.name, "block");
          });
          return;
        }
      }

      if (child.isFunctionDeclaration()) {
        kind = "hoisted";
      } else if (child.isClassDeclaration()) {
        kind = "block";
      } else if (child.isVariableDeclaration({
        kind: "var"
      })) {
        kind = "var";
      } else if (child.isVariableDeclaration()) {
        kind = "block";
      } else {
        return;
      }
    }

    Object.keys(child.getOuterBindingIdentifiers()).forEach(name => {
      bindingKindLookup.set(name, kind);
    });
  });
  const localMetadata = new Map();

  const getLocalMetadata = idPath => {
    const localName = idPath.node.name;
    let metadata = localMetadata.get(localName);

    if (!metadata) {
      const kind = bindingKindLookup.get(localName);

      if (kind === undefined) {
        throw idPath.buildCodeFrameError(`Exporting local "${localName}", which is not declared.`);
      }

      metadata = {
        names: [],
        kind
      };
      localMetadata.set(localName, metadata);
    }

    return metadata;
  };

  programPath.get("body").forEach(child => {
    if (child.isExportNamedDeclaration() && (initializeReexports || !child.node.source)) {
      if (child.node.declaration) {
        const declaration = child.get("declaration");
        const ids = declaration.getOuterBindingIdentifierPaths();
        Object.keys(ids).forEach(name => {
          if (name === "__esModule") {
            throw declaration.buildCodeFrameError('Illegal export "__esModule".');
          }

          getLocalMetadata(ids[name]).names.push(name);
        });
      } else {
        child.get("specifiers").forEach(spec => {
          const local = spec.get("local");
          const exported = spec.get("exported");
          const localMetadata = getLocalMetadata(local);
          const exportName = getExportSpecifierName(exported, stringSpecifiers);

          if (exportName === "__esModule") {
            throw exported.buildCodeFrameError('Illegal export "__esModule".');
          }

          localMetadata.names.push(exportName);
        });
      }
    } else if (child.isExportDefaultDeclaration()) {
      const declaration = child.get("declaration");

      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {
        getLocalMetadata(declaration.get("id")).names.push("default");
      } else {
        throw declaration.buildCodeFrameError("Unexpected default expression export.");
      }
    }
  });
  return localMetadata;
}

function nameAnonymousExports(programPath) {
  programPath.get("body").forEach(child => {
    if (!child.isExportDefaultDeclaration()) return;
    (0, _helperSplitExportDeclaration.default)(child);
  });
}

function removeModuleDeclarations(programPath) {
  programPath.get("body").forEach(child => {
    if (child.isImportDeclaration()) {
      child.remove();
    } else if (child.isExportNamedDeclaration()) {
      if (child.node.declaration) {
        child.node.declaration._blockHoist = child.node._blockHoist;
        child.replaceWith(child.node.declaration);
      } else {
        child.remove();
      }
    } else if (child.isExportDefaultDeclaration()) {
      const declaration = child.get("declaration");

      if (declaration.isFunctionDeclaration() || declaration.isClassDeclaration()) {
        declaration._blockHoist = child.node._blockHoist;
        child.replaceWith(declaration);
      } else {
        throw declaration.buildCodeFrameError("Unexpected default expression export.");
      }
    } else if (child.isExportAllDeclaration()) {
      child.remove();
    }
  });
}

/***/ }),
/* 198 */
/***/ ((module) => {

"use strict";
module.exports = require("path");;

/***/ }),
/* 199 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = getModuleName;
{
  const originalGetModuleName = getModuleName;

  exports.default = getModuleName = function getModuleName(rootOpts, pluginOpts) {
    var _pluginOpts$moduleId, _pluginOpts$moduleIds, _pluginOpts$getModule, _pluginOpts$moduleRoo;

    return originalGetModuleName(rootOpts, {
      moduleId: (_pluginOpts$moduleId = pluginOpts.moduleId) != null ? _pluginOpts$moduleId : rootOpts.moduleId,
      moduleIds: (_pluginOpts$moduleIds = pluginOpts.moduleIds) != null ? _pluginOpts$moduleIds : rootOpts.moduleIds,
      getModuleId: (_pluginOpts$getModule = pluginOpts.getModuleId) != null ? _pluginOpts$getModule : rootOpts.getModuleId,
      moduleRoot: (_pluginOpts$moduleRoo = pluginOpts.moduleRoot) != null ? _pluginOpts$moduleRoo : rootOpts.moduleRoot
    });
  };
}

function getModuleName(rootOpts, pluginOpts) {
  const {
    filename,
    filenameRelative = filename,
    sourceRoot = pluginOpts.moduleRoot
  } = rootOpts;
  const {
    moduleId,
    moduleIds = !!moduleId,
    getModuleId,
    moduleRoot = sourceRoot
  } = pluginOpts;
  if (!moduleIds) return null;

  if (moduleId != null && !getModuleId) {
    return moduleId;
  }

  let moduleName = moduleRoot != null ? moduleRoot + "/" : "";

  if (filenameRelative) {
    const sourceRootReplacer = sourceRoot != null ? new RegExp("^" + sourceRoot + "/?") : "";
    moduleName += filenameRelative.replace(sourceRootReplacer, "").replace(/\.(\w*?)$/, "");
  }

  moduleName = moduleName.replace(/\\/g, "/");

  if (getModuleId) {
    return getModuleId(moduleName) || moduleName;
  } else {
    return moduleName;
  }
}

/***/ }),
/* 200 */
/***/ ((module, exports) => {

exports = module.exports = SemVer

var debug
/* istanbul ignore next */
if (typeof process === 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
  debug = function () {
    var args = Array.prototype.slice.call(arguments, 0)
    args.unshift('SEMVER')
    console.log.apply(console, args)
  }
} else {
  debug = function () {}
}

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0'

var MAX_LENGTH = 256
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
var MAX_SAFE_COMPONENT_LENGTH = 16

// The actual regexps go on exports.re
var re = exports.re = []
var src = exports.src = []
var t = exports.tokens = {}
var R = 0

function tok (n) {
  t[n] = R++
}

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

tok('NUMERICIDENTIFIER')
src[t.NUMERICIDENTIFIER] = '0|[1-9]\\d*'
tok('NUMERICIDENTIFIERLOOSE')
src[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

tok('NONNUMERICIDENTIFIER')
src[t.NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

// ## Main Version
// Three dot-separated numeric identifiers.

tok('MAINVERSION')
src[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[t.NUMERICIDENTIFIER] + ')'

tok('MAINVERSIONLOOSE')
src[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

tok('PRERELEASEIDENTIFIER')
src[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +
                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'

tok('PRERELEASEIDENTIFIERLOOSE')
src[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

tok('PRERELEASE')
src[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'

tok('PRERELEASELOOSE')
src[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

tok('BUILDIDENTIFIER')
src[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

tok('BUILD')
src[t.BUILD] = '(?:\\+(' + src[t.BUILDIDENTIFIER] +
             '(?:\\.' + src[t.BUILDIDENTIFIER] + ')*))'

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

tok('FULL')
tok('FULLPLAIN')
src[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +
                  src[t.PRERELEASE] + '?' +
                  src[t.BUILD] + '?'

src[t.FULL] = '^' + src[t.FULLPLAIN] + '$'

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
tok('LOOSEPLAIN')
src[t.LOOSEPLAIN] = '[v=\\s]*' + src[t.MAINVERSIONLOOSE] +
                  src[t.PRERELEASELOOSE] + '?' +
                  src[t.BUILD] + '?'

tok('LOOSE')
src[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'

tok('GTLT')
src[t.GTLT] = '((?:<|>)?=?)'

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
tok('XRANGEIDENTIFIERLOOSE')
src[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
tok('XRANGEIDENTIFIER')
src[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\*'

tok('XRANGEPLAIN')
src[t.XRANGEPLAIN] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[t.PRERELEASE] + ')?' +
                   src[t.BUILD] + '?' +
                   ')?)?'

tok('XRANGEPLAINLOOSE')
src[t.XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +
                        src[t.BUILD] + '?' +
                        ')?)?'

tok('XRANGE')
src[t.XRANGE] = '^' + src[t.GTLT] + '\\s*' + src[t.XRANGEPLAIN] + '$'
tok('XRANGELOOSE')
src[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\s*' + src[t.XRANGEPLAINLOOSE] + '$'

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
tok('COERCE')
src[t.COERCE] = '(^|[^\\d])' +
              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:$|[^\\d])'
tok('COERCERTL')
re[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')

// Tilde ranges.
// Meaning is "reasonably at or greater than"
tok('LONETILDE')
src[t.LONETILDE] = '(?:~>?)'

tok('TILDETRIM')
src[t.TILDETRIM] = '(\\s*)' + src[t.LONETILDE] + '\\s+'
re[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')
var tildeTrimReplace = '$1~'

tok('TILDE')
src[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'
tok('TILDELOOSE')
src[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'

// Caret ranges.
// Meaning is "at least and backwards compatible with"
tok('LONECARET')
src[t.LONECARET] = '(?:\\^)'

tok('CARETTRIM')
src[t.CARETTRIM] = '(\\s*)' + src[t.LONECARET] + '\\s+'
re[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')
var caretTrimReplace = '$1^'

tok('CARET')
src[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'
tok('CARETLOOSE')
src[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'

// A simple gt/lt/eq thing, or just "" to indicate "any version"
tok('COMPARATORLOOSE')
src[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'
tok('COMPARATOR')
src[t.COMPARATOR] = '^' + src[t.GTLT] + '\\s*(' + src[t.FULLPLAIN] + ')$|^$'

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
tok('COMPARATORTRIM')
src[t.COMPARATORTRIM] = '(\\s*)' + src[t.GTLT] +
                      '\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'

// this one has to use the /g flag
re[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')
var comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
tok('HYPHENRANGE')
src[t.HYPHENRANGE] = '^\\s*(' + src[t.XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[t.XRANGEPLAIN] + ')' +
                   '\\s*$'

tok('HYPHENRANGELOOSE')
src[t.HYPHENRANGELOOSE] = '^\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +
                        '\\s*$'

// Star ranges basically just allow anything at all.
tok('STAR')
src[t.STAR] = '(<|>)?=?\\s*\\*'

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i])
  if (!re[i]) {
    re[i] = new RegExp(src[i])
  }
}

exports.parse = parse
function parse (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  var r = options.loose ? re[t.LOOSE] : re[t.FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

exports.valid = valid
function valid (version, options) {
  var v = parse(version, options)
  return v ? v.version : null
}

exports.clean = clean
function clean (version, options) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}

exports.SemVer = SemVer

function SemVer (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }
  if (version instanceof SemVer) {
    if (version.loose === options.loose) {
      return version
    } else {
      version = version.version
    }
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version)
  }

  if (version.length > MAX_LENGTH) {
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
  }

  if (!(this instanceof SemVer)) {
    return new SemVer(version, options)
  }

  debug('SemVer', version, options)
  this.options = options
  this.loose = !!options.loose

  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])

  if (!m) {
    throw new TypeError('Invalid Version: ' + version)
  }

  this.raw = version

  // these are actually numbers
  this.major = +m[1]
  this.minor = +m[2]
  this.patch = +m[3]

  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
    throw new TypeError('Invalid major version')
  }

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
    throw new TypeError('Invalid minor version')
  }

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
    throw new TypeError('Invalid patch version')
  }

  // numberify any prerelease numeric ids
  if (!m[4]) {
    this.prerelease = []
  } else {
    this.prerelease = m[4].split('.').map(function (id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER) {
          return num
        }
      }
      return id
    })
  }

  this.build = m[5] ? m[5].split('.') : []
  this.format()
}

SemVer.prototype.format = function () {
  this.version = this.major + '.' + this.minor + '.' + this.patch
  if (this.prerelease.length) {
    this.version += '-' + this.prerelease.join('.')
  }
  return this.version
}

SemVer.prototype.toString = function () {
  return this.version
}

SemVer.prototype.compare = function (other) {
  debug('SemVer.compare', this.version, this.options, other)
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return this.compareMain(other) || this.comparePre(other)
}

SemVer.prototype.compareMain = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch)
}

SemVer.prototype.comparePre = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length) {
    return -1
  } else if (!this.prerelease.length && other.prerelease.length) {
    return 1
  } else if (!this.prerelease.length && !other.prerelease.length) {
    return 0
  }

  var i = 0
  do {
    var a = this.prerelease[i]
    var b = other.prerelease[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

SemVer.prototype.compareBuild = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  var i = 0
  do {
    var a = this.build[i]
    var b = other.build[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function (release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor = 0
      this.major++
      this.inc('pre', identifier)
      break
    case 'preminor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor++
      this.inc('pre', identifier)
      break
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0
      this.inc('patch', identifier)
      this.inc('pre', identifier)
      break
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0) {
        this.inc('patch', identifier)
      }
      this.inc('pre', identifier)
      break

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0) {
        this.major++
      }
      this.minor = 0
      this.patch = 0
      this.prerelease = []
      break
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0) {
        this.minor++
      }
      this.patch = 0
      this.prerelease = []
      break
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0) {
        this.patch++
      }
      this.prerelease = []
      break
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0) {
        this.prerelease = [0]
      } else {
        var i = this.prerelease.length
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++
            i = -2
          }
        }
        if (i === -1) {
          // didn't increment anything
          this.prerelease.push(0)
        }
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1])) {
            this.prerelease = [identifier, 0]
          }
        } else {
          this.prerelease = [identifier, 0]
        }
      }
      break

    default:
      throw new Error('invalid increment argument: ' + release)
  }
  this.format()
  this.raw = this.version
  return this
}

exports.inc = inc
function inc (version, release, loose, identifier) {
  if (typeof (loose) === 'string') {
    identifier = loose
    loose = undefined
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version
  } catch (er) {
    return null
  }
}

exports.diff = diff
function diff (version1, version2) {
  if (eq(version1, version2)) {
    return null
  } else {
    var v1 = parse(version1)
    var v2 = parse(version2)
    var prefix = ''
    if (v1.prerelease.length || v2.prerelease.length) {
      prefix = 'pre'
      var defaultResult = 'prerelease'
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}

exports.compareIdentifiers = compareIdentifiers

var numeric = /^[0-9]+$/
function compareIdentifiers (a, b) {
  var anum = numeric.test(a)
  var bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

exports.rcompareIdentifiers = rcompareIdentifiers
function rcompareIdentifiers (a, b) {
  return compareIdentifiers(b, a)
}

exports.major = major
function major (a, loose) {
  return new SemVer(a, loose).major
}

exports.minor = minor
function minor (a, loose) {
  return new SemVer(a, loose).minor
}

exports.patch = patch
function patch (a, loose) {
  return new SemVer(a, loose).patch
}

exports.compare = compare
function compare (a, b, loose) {
  return new SemVer(a, loose).compare(new SemVer(b, loose))
}

exports.compareLoose = compareLoose
function compareLoose (a, b) {
  return compare(a, b, true)
}

exports.compareBuild = compareBuild
function compareBuild (a, b, loose) {
  var versionA = new SemVer(a, loose)
  var versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}

exports.rcompare = rcompare
function rcompare (a, b, loose) {
  return compare(b, a, loose)
}

exports.sort = sort
function sort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(a, b, loose)
  })
}

exports.rsort = rsort
function rsort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(b, a, loose)
  })
}

exports.gt = gt
function gt (a, b, loose) {
  return compare(a, b, loose) > 0
}

exports.lt = lt
function lt (a, b, loose) {
  return compare(a, b, loose) < 0
}

exports.eq = eq
function eq (a, b, loose) {
  return compare(a, b, loose) === 0
}

exports.neq = neq
function neq (a, b, loose) {
  return compare(a, b, loose) !== 0
}

exports.gte = gte
function gte (a, b, loose) {
  return compare(a, b, loose) >= 0
}

exports.lte = lte
function lte (a, b, loose) {
  return compare(a, b, loose) <= 0
}

exports.cmp = cmp
function cmp (a, op, b, loose) {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError('Invalid operator: ' + op)
  }
}

exports.Comparator = Comparator
function Comparator (comp, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (comp instanceof Comparator) {
    if (comp.loose === !!options.loose) {
      return comp
    } else {
      comp = comp.value
    }
  }

  if (!(this instanceof Comparator)) {
    return new Comparator(comp, options)
  }

  debug('comparator', comp, options)
  this.options = options
  this.loose = !!options.loose
  this.parse(comp)

  if (this.semver === ANY) {
    this.value = ''
  } else {
    this.value = this.operator + this.semver.version
  }

  debug('comp', this)
}

var ANY = {}
Comparator.prototype.parse = function (comp) {
  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
  var m = comp.match(r)

  if (!m) {
    throw new TypeError('Invalid comparator: ' + comp)
  }

  this.operator = m[1] !== undefined ? m[1] : ''
  if (this.operator === '=') {
    this.operator = ''
  }

  // if it literally is just '>' or '' then allow anything.
  if (!m[2]) {
    this.semver = ANY
  } else {
    this.semver = new SemVer(m[2], this.options.loose)
  }
}

Comparator.prototype.toString = function () {
  return this.value
}

Comparator.prototype.test = function (version) {
  debug('Comparator.test', version, this.options.loose)

  if (this.semver === ANY || version === ANY) {
    return true
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  return cmp(version, this.operator, this.semver, this.options)
}

Comparator.prototype.intersects = function (comp, options) {
  if (!(comp instanceof Comparator)) {
    throw new TypeError('a Comparator is required')
  }

  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  var rangeTmp

  if (this.operator === '') {
    if (this.value === '') {
      return true
    }
    rangeTmp = new Range(comp.value, options)
    return satisfies(this.value, rangeTmp, options)
  } else if (comp.operator === '') {
    if (comp.value === '') {
      return true
    }
    rangeTmp = new Range(this.value, options)
    return satisfies(comp.semver, rangeTmp, options)
  }

  var sameDirectionIncreasing =
    (this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '>=' || comp.operator === '>')
  var sameDirectionDecreasing =
    (this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '<=' || comp.operator === '<')
  var sameSemVer = this.semver.version === comp.semver.version
  var differentDirectionsInclusive =
    (this.operator === '>=' || this.operator === '<=') &&
    (comp.operator === '>=' || comp.operator === '<=')
  var oppositeDirectionsLessThan =
    cmp(this.semver, '<', comp.semver, options) &&
    ((this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '<=' || comp.operator === '<'))
  var oppositeDirectionsGreaterThan =
    cmp(this.semver, '>', comp.semver, options) &&
    ((this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '>=' || comp.operator === '>'))

  return sameDirectionIncreasing || sameDirectionDecreasing ||
    (sameSemVer && differentDirectionsInclusive) ||
    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
}

exports.Range = Range
function Range (range, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (range instanceof Range) {
    if (range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease) {
      return range
    } else {
      return new Range(range.raw, options)
    }
  }

  if (range instanceof Comparator) {
    return new Range(range.value, options)
  }

  if (!(this instanceof Range)) {
    return new Range(range, options)
  }

  this.options = options
  this.loose = !!options.loose
  this.includePrerelease = !!options.includePrerelease

  // First, split based on boolean or ||
  this.raw = range
  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
    return this.parseRange(range.trim())
  }, this).filter(function (c) {
    // throw out any that are not relevant for whatever reason
    return c.length
  })

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range)
  }

  this.format()
}

Range.prototype.format = function () {
  this.range = this.set.map(function (comps) {
    return comps.join(' ').trim()
  }).join('||').trim()
  return this.range
}

Range.prototype.toString = function () {
  return this.range
}

Range.prototype.parseRange = function (range) {
  var loose = this.options.loose
  range = range.trim()
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]
  range = range.replace(hr, hyphenReplace)
  debug('hyphen replace', range)
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)
  debug('comparator trim', range, re[t.COMPARATORTRIM])

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[t.CARETTRIM], caretTrimReplace)

  // normalize spaces
  range = range.split(/\s+/).join(' ')

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
  var set = range.split(' ').map(function (comp) {
    return parseComparator(comp, this.options)
  }, this).join(' ').split(/\s+/)
  if (this.options.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function (comp) {
      return !!comp.match(compRe)
    })
  }
  set = set.map(function (comp) {
    return new Comparator(comp, this.options)
  }, this)

  return set
}

Range.prototype.intersects = function (range, options) {
  if (!(range instanceof Range)) {
    throw new TypeError('a Range is required')
  }

  return this.set.some(function (thisComparators) {
    return (
      isSatisfiable(thisComparators, options) &&
      range.set.some(function (rangeComparators) {
        return (
          isSatisfiable(rangeComparators, options) &&
          thisComparators.every(function (thisComparator) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options)
            })
          })
        )
      })
    )
  })
}

// take a set of comparators and determine whether there
// exists a version which can satisfy it
function isSatisfiable (comparators, options) {
  var result = true
  var remainingComparators = comparators.slice()
  var testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every(function (otherComparator) {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators
function toComparators (range, options) {
  return new Range(range, options).set.map(function (comp) {
    return comp.map(function (c) {
      return c.value
    }).join(' ').trim().split(' ')
  })
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator (comp, options) {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

function isX (id) {
  return !id || id.toLowerCase() === 'x' || id === '*'
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceTilde(comp, options)
  }).join(' ')
}

function replaceTilde (comp, options) {
  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
            ' <' + M + '.' + (+m + 1) + '.0'
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0'
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceCaret(comp, options)
  }).join(' ')
}

function replaceCaret (comp, options) {
  debug('caret', comp, options)
  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      if (M === '0') {
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
      } else {
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
              ' <' + (+M + 1) + '.0.0'
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0'
      }
    }

    debug('caret return', ret)
    return ret
  })
}

function replaceXRanges (comp, options) {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map(function (comp) {
    return replaceXRange(comp, options)
  }).join(' ')
}

function replaceXRange (comp, options) {
  comp = comp.trim()
  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]
  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    var xM = isX(M)
    var xm = xM || isX(m)
    var xp = xm || isX(p)
    var anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      ret = gtlt + M + '.' + m + '.' + p + pr
    } else if (xm) {
      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0' + pr +
        ' <' + M + '.' + (+m + 1) + '.0' + pr
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars (comp, options) {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[t.STAR], '')
}

// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = '>=' + fM + '.0.0'
  } else if (isX(fp)) {
    from = '>=' + fM + '.' + fm + '.0'
  } else {
    from = '>=' + from
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = '<' + (+tM + 1) + '.0.0'
  } else if (isX(tp)) {
    to = '<' + tM + '.' + (+tm + 1) + '.0'
  } else if (tpr) {
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
  } else {
    to = '<=' + to
  }

  return (from + ' ' + to).trim()
}

// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function (version) {
  if (!version) {
    return false
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version, this.options)) {
      return true
    }
  }
  return false
}

function testSet (set, version, options) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}

exports.satisfies = satisfies
function satisfies (version, range, options) {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}

exports.maxSatisfying = maxSatisfying
function maxSatisfying (versions, range, options) {
  var max = null
  var maxSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}

exports.minSatisfying = minSatisfying
function minSatisfying (versions, range, options) {
  var min = null
  var minSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}

exports.minVersion = minVersion
function minVersion (range, loose) {
  range = new Range(range, loose)

  var minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    comparators.forEach(function (comparator) {
      // Clone to avoid manipulating the comparator's semver object.
      var compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!minver || gt(minver, compver)) {
            minver = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error('Unexpected operation: ' + comparator.operator)
      }
    })
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}

exports.validRange = validRange
function validRange (range, options) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr
function ltr (version, range, options) {
  return outside(version, range, '<', options)
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr
function gtr (version, range, options) {
  return outside(version, range, '>', options)
}

exports.outside = outside
function outside (version, range, hilo, options) {
  version = new SemVer(version, options)
  range = new Range(range, options)

  var gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    var high = null
    var low = null

    comparators.forEach(function (comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

exports.prerelease = prerelease
function prerelease (version, options) {
  var parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}

exports.intersects = intersects
function intersects (r1, r2, options) {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}

exports.coerce = coerce
function coerce (version, options) {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version === 'number') {
    version = String(version)
  }

  if (typeof version !== 'string') {
    return null
  }

  options = options || {}

  var match = null
  if (!options.rtl) {
    match = version.match(re[t.COERCE])
  } else {
    // Find the right-most coercible string that does not share
    // a terminus with a more left-ward coercible string.
    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
    //
    // Walk through the string checking with a /g regexp
    // Manually set the index so as to pick up overlapping matches.
    // Stop when we get a match that ends at the string end, since no
    // coercible string can be more right-ward without the same terminus.
    var next
    while ((next = re[t.COERCERTL].exec(version)) &&
      (!match || match.index + match[0].length !== version.length)
    ) {
      if (!match ||
          next.index + next[0].length !== match.index + match[0].length) {
        match = next
      }
      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length
    }
    // leave it in a clean state
    re[t.COERCERTL].lastIndex = -1
  }

  if (match === null) {
    return null
  }

  return parse(match[2] +
    '.' + (match[3] || '0') +
    '.' + (match[4] || '0'), options)
}


/***/ }),
/* 201 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;

function helpers() {
  const data = __webpack_require__(6);

  helpers = function () {
    return data;
  };

  return data;
}

function _generator() {
  const data = __webpack_require__(112);

  _generator = function () {
    return data;
  };

  return data;
}

function _template() {
  const data = __webpack_require__(165);

  _template = function () {
    return data;
  };

  return data;
}

function t() {
  const data = __webpack_require__(11);

  t = function () {
    return data;
  };

  return data;
}

var _file = __webpack_require__(5);

const buildUmdWrapper = replacements => (0, _template().default)`
    (function (root, factory) {
      if (typeof define === "function" && define.amd) {
        define(AMD_ARGUMENTS, factory);
      } else if (typeof exports === "object") {
        factory(COMMON_ARGUMENTS);
      } else {
        factory(BROWSER_ARGUMENTS);
      }
    })(UMD_ROOT, function (FACTORY_PARAMETERS) {
      FACTORY_BODY
    });
  `(replacements);

function buildGlobal(allowlist) {
  const namespace = t().identifier("babelHelpers");
  const body = [];
  const container = t().functionExpression(null, [t().identifier("global")], t().blockStatement(body));
  const tree = t().program([t().expressionStatement(t().callExpression(container, [t().conditionalExpression(t().binaryExpression("===", t().unaryExpression("typeof", t().identifier("global")), t().stringLiteral("undefined")), t().identifier("self"), t().identifier("global"))]))]);
  body.push(t().variableDeclaration("var", [t().variableDeclarator(namespace, t().assignmentExpression("=", t().memberExpression(t().identifier("global"), namespace), t().objectExpression([])))]));
  buildHelpers(body, namespace, allowlist);
  return tree;
}

function buildModule(allowlist) {
  const body = [];
  const refs = buildHelpers(body, null, allowlist);
  body.unshift(t().exportNamedDeclaration(null, Object.keys(refs).map(name => {
    return t().exportSpecifier(t().cloneNode(refs[name]), t().identifier(name));
  })));
  return t().program(body, [], "module");
}

function buildUmd(allowlist) {
  const namespace = t().identifier("babelHelpers");
  const body = [];
  body.push(t().variableDeclaration("var", [t().variableDeclarator(namespace, t().identifier("global"))]));
  buildHelpers(body, namespace, allowlist);
  return t().program([buildUmdWrapper({
    FACTORY_PARAMETERS: t().identifier("global"),
    BROWSER_ARGUMENTS: t().assignmentExpression("=", t().memberExpression(t().identifier("root"), namespace), t().objectExpression([])),
    COMMON_ARGUMENTS: t().identifier("exports"),
    AMD_ARGUMENTS: t().arrayExpression([t().stringLiteral("exports")]),
    FACTORY_BODY: body,
    UMD_ROOT: t().identifier("this")
  })]);
}

function buildVar(allowlist) {
  const namespace = t().identifier("babelHelpers");
  const body = [];
  body.push(t().variableDeclaration("var", [t().variableDeclarator(namespace, t().objectExpression([]))]));
  const tree = t().program(body);
  buildHelpers(body, namespace, allowlist);
  body.push(t().expressionStatement(namespace));
  return tree;
}

function buildHelpers(body, namespace, allowlist) {
  const getHelperReference = name => {
    return namespace ? t().memberExpression(namespace, t().identifier(name)) : t().identifier(`_${name}`);
  };

  const refs = {};
  helpers().list.forEach(function (name) {
    if (allowlist && allowlist.indexOf(name) < 0) return;
    const ref = refs[name] = getHelperReference(name);
    helpers().ensure(name, _file.default);
    const {
      nodes
    } = helpers().get(name, getHelperReference, ref);
    body.push(...nodes);
  });
  return refs;
}

function _default(allowlist, outputType = "global") {
  let tree;
  const build = {
    global: buildGlobal,
    module: buildModule,
    umd: buildUmd,
    var: buildVar
  }[outputType];

  if (build) {
    tree = build(allowlist);
  } else {
    throw new Error(`Unsupported output type ${outputType}`);
  }

  return (0, _generator().default)(tree).code;
}

/***/ }),
/* 202 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "findPackageData", ({
  enumerable: true,
  get: function () {
    return _package.findPackageData;
  }
}));
Object.defineProperty(exports, "findConfigUpwards", ({
  enumerable: true,
  get: function () {
    return _configuration.findConfigUpwards;
  }
}));
Object.defineProperty(exports, "findRelativeConfig", ({
  enumerable: true,
  get: function () {
    return _configuration.findRelativeConfig;
  }
}));
Object.defineProperty(exports, "findRootConfig", ({
  enumerable: true,
  get: function () {
    return _configuration.findRootConfig;
  }
}));
Object.defineProperty(exports, "loadConfig", ({
  enumerable: true,
  get: function () {
    return _configuration.loadConfig;
  }
}));
Object.defineProperty(exports, "resolveShowConfigPath", ({
  enumerable: true,
  get: function () {
    return _configuration.resolveShowConfigPath;
  }
}));
Object.defineProperty(exports, "ROOT_CONFIG_FILENAMES", ({
  enumerable: true,
  get: function () {
    return _configuration.ROOT_CONFIG_FILENAMES;
  }
}));
Object.defineProperty(exports, "resolvePlugin", ({
  enumerable: true,
  get: function () {
    return _plugins.resolvePlugin;
  }
}));
Object.defineProperty(exports, "resolvePreset", ({
  enumerable: true,
  get: function () {
    return _plugins.resolvePreset;
  }
}));
Object.defineProperty(exports, "loadPlugin", ({
  enumerable: true,
  get: function () {
    return _plugins.loadPlugin;
  }
}));
Object.defineProperty(exports, "loadPreset", ({
  enumerable: true,
  get: function () {
    return _plugins.loadPreset;
  }
}));

var _package = __webpack_require__(203);

var _configuration = __webpack_require__(211);

var _plugins = __webpack_require__(222);

({});

/***/ }),
/* 203 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.findPackageData = findPackageData;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

var _utils = __webpack_require__(204);

const PACKAGE_FILENAME = "package.json";

function* findPackageData(filepath) {
  let pkg = null;
  const directories = [];
  let isPackage = true;

  let dirname = _path().dirname(filepath);

  while (!pkg && _path().basename(dirname) !== "node_modules") {
    directories.push(dirname);
    pkg = yield* readConfigPackage(_path().join(dirname, PACKAGE_FILENAME));

    const nextLoc = _path().dirname(dirname);

    if (dirname === nextLoc) {
      isPackage = false;
      break;
    }

    dirname = nextLoc;
  }

  return {
    filepath,
    directories,
    pkg,
    isPackage
  };
}

const readConfigPackage = (0, _utils.makeStaticFileCache)((filepath, content) => {
  let options;

  try {
    options = JSON.parse(content);
  } catch (err) {
    err.message = `${filepath}: Error while parsing JSON - ${err.message}`;
    throw err;
  }

  if (!options) throw new Error(`${filepath}: No config detected`);

  if (typeof options !== "object") {
    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);
  }

  if (Array.isArray(options)) {
    throw new Error(`${filepath}: Expected config object but found array`);
  }

  return {
    filepath,
    dirname: _path().dirname(filepath),
    options
  };
});

/***/ }),
/* 204 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.makeStaticFileCache = makeStaticFileCache;

var _caching = __webpack_require__(205);

var fs = __webpack_require__(209);

function _fs2() {
  const data = __webpack_require__(210);

  _fs2 = function () {
    return data;
  };

  return data;
}

function makeStaticFileCache(fn) {
  return (0, _caching.makeStrongCache)(function* (filepath, cache) {
    const cached = cache.invalidate(() => fileMtime(filepath));

    if (cached === null) {
      return null;
    }

    return fn(filepath, yield* fs.readFile(filepath, "utf8"));
  });
}

function fileMtime(filepath) {
  if (!_fs2().existsSync(filepath)) return null;

  try {
    return +_fs2().statSync(filepath).mtime;
  } catch (e) {
    if (e.code !== "ENOENT" && e.code !== "ENOTDIR") throw e;
  }

  return null;
}

/***/ }),
/* 205 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.makeWeakCache = makeWeakCache;
exports.makeWeakCacheSync = makeWeakCacheSync;
exports.makeStrongCache = makeStrongCache;
exports.makeStrongCacheSync = makeStrongCacheSync;
exports.assertSimpleType = assertSimpleType;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _async = __webpack_require__(207);

var _util = __webpack_require__(208);

const synchronize = gen => {
  return _gensync()(gen).sync;
};

function* genTrue() {
  return true;
}

function makeWeakCache(handler) {
  return makeCachedFunction(WeakMap, handler);
}

function makeWeakCacheSync(handler) {
  return synchronize(makeWeakCache(handler));
}

function makeStrongCache(handler) {
  return makeCachedFunction(Map, handler);
}

function makeStrongCacheSync(handler) {
  return synchronize(makeStrongCache(handler));
}

function makeCachedFunction(CallCache, handler) {
  const callCacheSync = new CallCache();
  const callCacheAsync = new CallCache();
  const futureCache = new CallCache();
  return function* cachedFunction(arg, data) {
    const asyncContext = yield* (0, _async.isAsync)();
    const callCache = asyncContext ? callCacheAsync : callCacheSync;
    const cached = yield* getCachedValueOrWait(asyncContext, callCache, futureCache, arg, data);
    if (cached.valid) return cached.value;
    const cache = new CacheConfigurator(data);
    const handlerResult = handler(arg, cache);
    let finishLock;
    let value;

    if ((0, _util.isIterableIterator)(handlerResult)) {
      const gen = handlerResult;
      value = yield* (0, _async.onFirstPause)(gen, () => {
        finishLock = setupAsyncLocks(cache, futureCache, arg);
      });
    } else {
      value = handlerResult;
    }

    updateFunctionCache(callCache, cache, arg, value);

    if (finishLock) {
      futureCache.delete(arg);
      finishLock.release(value);
    }

    return value;
  };
}

function* getCachedValue(cache, arg, data) {
  const cachedValue = cache.get(arg);

  if (cachedValue) {
    for (const {
      value,
      valid
    } of cachedValue) {
      if (yield* valid(data)) return {
        valid: true,
        value
      };
    }
  }

  return {
    valid: false,
    value: null
  };
}

function* getCachedValueOrWait(asyncContext, callCache, futureCache, arg, data) {
  const cached = yield* getCachedValue(callCache, arg, data);

  if (cached.valid) {
    return cached;
  }

  if (asyncContext) {
    const cached = yield* getCachedValue(futureCache, arg, data);

    if (cached.valid) {
      const value = yield* (0, _async.waitFor)(cached.value.promise);
      return {
        valid: true,
        value
      };
    }
  }

  return {
    valid: false,
    value: null
  };
}

function setupAsyncLocks(config, futureCache, arg) {
  const finishLock = new Lock();
  updateFunctionCache(futureCache, config, arg, finishLock);
  return finishLock;
}

function updateFunctionCache(cache, config, arg, value) {
  if (!config.configured()) config.forever();
  let cachedValue = cache.get(arg);
  config.deactivate();

  switch (config.mode()) {
    case "forever":
      cachedValue = [{
        value,
        valid: genTrue
      }];
      cache.set(arg, cachedValue);
      break;

    case "invalidate":
      cachedValue = [{
        value,
        valid: config.validator()
      }];
      cache.set(arg, cachedValue);
      break;

    case "valid":
      if (cachedValue) {
        cachedValue.push({
          value,
          valid: config.validator()
        });
      } else {
        cachedValue = [{
          value,
          valid: config.validator()
        }];
        cache.set(arg, cachedValue);
      }

  }
}

class CacheConfigurator {
  constructor(data) {
    this._active = true;
    this._never = false;
    this._forever = false;
    this._invalidate = false;
    this._configured = false;
    this._pairs = [];
    this._data = void 0;
    this._data = data;
  }

  simple() {
    return makeSimpleConfigurator(this);
  }

  mode() {
    if (this._never) return "never";
    if (this._forever) return "forever";
    if (this._invalidate) return "invalidate";
    return "valid";
  }

  forever() {
    if (!this._active) {
      throw new Error("Cannot change caching after evaluation has completed.");
    }

    if (this._never) {
      throw new Error("Caching has already been configured with .never()");
    }

    this._forever = true;
    this._configured = true;
  }

  never() {
    if (!this._active) {
      throw new Error("Cannot change caching after evaluation has completed.");
    }

    if (this._forever) {
      throw new Error("Caching has already been configured with .forever()");
    }

    this._never = true;
    this._configured = true;
  }

  using(handler) {
    if (!this._active) {
      throw new Error("Cannot change caching after evaluation has completed.");
    }

    if (this._never || this._forever) {
      throw new Error("Caching has already been configured with .never or .forever()");
    }

    this._configured = true;
    const key = handler(this._data);
    const fn = (0, _async.maybeAsync)(handler, `You appear to be using an async cache handler, but Babel has been called synchronously`);

    if ((0, _async.isThenable)(key)) {
      return key.then(key => {
        this._pairs.push([key, fn]);

        return key;
      });
    }

    this._pairs.push([key, fn]);

    return key;
  }

  invalidate(handler) {
    this._invalidate = true;
    return this.using(handler);
  }

  validator() {
    const pairs = this._pairs;
    return function* (data) {
      for (const [key, fn] of pairs) {
        if (key !== (yield* fn(data))) return false;
      }

      return true;
    };
  }

  deactivate() {
    this._active = false;
  }

  configured() {
    return this._configured;
  }

}

function makeSimpleConfigurator(cache) {
  function cacheFn(val) {
    if (typeof val === "boolean") {
      if (val) cache.forever();else cache.never();
      return;
    }

    return cache.using(() => assertSimpleType(val()));
  }

  cacheFn.forever = () => cache.forever();

  cacheFn.never = () => cache.never();

  cacheFn.using = cb => cache.using(() => assertSimpleType(cb()));

  cacheFn.invalidate = cb => cache.invalidate(() => assertSimpleType(cb()));

  return cacheFn;
}

function assertSimpleType(value) {
  if ((0, _async.isThenable)(value)) {
    throw new Error(`You appear to be using an async cache handler, ` + `which your current version of Babel does not support. ` + `We may add support for this in the future, ` + `but if you're on the most recent version of @babel/core and still ` + `seeing this error, then you'll need to synchronously handle your caching logic.`);
  }

  if (value != null && typeof value !== "string" && typeof value !== "boolean" && typeof value !== "number") {
    throw new Error("Cache keys must be either string, boolean, number, null, or undefined.");
  }

  return value;
}

class Lock {
  constructor() {
    this.released = false;
    this.promise = void 0;
    this._resolve = void 0;
    this.promise = new Promise(resolve => {
      this._resolve = resolve;
    });
  }

  release(value) {
    this.released = true;

    this._resolve(value);
  }

}

/***/ }),
/* 206 */
/***/ ((module) => {

"use strict";


// These use the global symbol registry so that multiple copies of this
// library can work together in case they are not deduped.
const GENSYNC_START = Symbol.for("gensync:v1:start");
const GENSYNC_SUSPEND = Symbol.for("gensync:v1:suspend");

const GENSYNC_EXPECTED_START = "GENSYNC_EXPECTED_START";
const GENSYNC_EXPECTED_SUSPEND = "GENSYNC_EXPECTED_SUSPEND";
const GENSYNC_OPTIONS_ERROR = "GENSYNC_OPTIONS_ERROR";
const GENSYNC_RACE_NONEMPTY = "GENSYNC_RACE_NONEMPTY";
const GENSYNC_ERRBACK_NO_CALLBACK = "GENSYNC_ERRBACK_NO_CALLBACK";

module.exports = Object.assign(
  function gensync(optsOrFn) {
    let genFn = optsOrFn;
    if (typeof optsOrFn !== "function") {
      genFn = newGenerator(optsOrFn);
    } else {
      genFn = wrapGenerator(optsOrFn);
    }

    return Object.assign(genFn, makeFunctionAPI(genFn));
  },
  {
    all: buildOperation({
      name: "all",
      arity: 1,
      sync: function(args) {
        const items = Array.from(args[0]);
        return items.map(item => evaluateSync(item));
      },
      async: function(args, resolve, reject) {
        const items = Array.from(args[0]);

        if (items.length === 0) {
          Promise.resolve().then(() => resolve([]));
          return;
        }

        let count = 0;
        const results = items.map(() => undefined);
        items.forEach((item, i) => {
          evaluateAsync(
            item,
            val => {
              results[i] = val;
              count += 1;

              if (count === results.length) resolve(results);
            },
            reject
          );
        });
      },
    }),
    race: buildOperation({
      name: "race",
      arity: 1,
      sync: function(args) {
        const items = Array.from(args[0]);
        if (items.length === 0) {
          throw makeError("Must race at least 1 item", GENSYNC_RACE_NONEMPTY);
        }

        return evaluateSync(items[0]);
      },
      async: function(args, resolve, reject) {
        const items = Array.from(args[0]);
        if (items.length === 0) {
          throw makeError("Must race at least 1 item", GENSYNC_RACE_NONEMPTY);
        }

        for (const item of items) {
          evaluateAsync(item, resolve, reject);
        }
      },
    }),
  }
);

/**
 * Given a generator function, return the standard API object that executes
 * the generator and calls the callbacks.
 */
function makeFunctionAPI(genFn) {
  const fns = {
    sync: function(...args) {
      return evaluateSync(genFn.apply(this, args));
    },
    async: function(...args) {
      return new Promise((resolve, reject) => {
        evaluateAsync(genFn.apply(this, args), resolve, reject);
      });
    },
    errback: function(...args) {
      const cb = args.pop();
      if (typeof cb !== "function") {
        throw makeError(
          "Asynchronous function called without callback",
          GENSYNC_ERRBACK_NO_CALLBACK
        );
      }

      let gen;
      try {
        gen = genFn.apply(this, args);
      } catch (err) {
        cb(err);
        return;
      }

      evaluateAsync(gen, val => cb(undefined, val), err => cb(err));
    },
  };
  return fns;
}

function assertTypeof(type, name, value, allowUndefined) {
  if (
    typeof value === type ||
    (allowUndefined && typeof value === "undefined")
  ) {
    return;
  }

  let msg;
  if (allowUndefined) {
    msg = `Expected opts.${name} to be either a ${type}, or undefined.`;
  } else {
    msg = `Expected opts.${name} to be a ${type}.`;
  }

  throw makeError(msg, GENSYNC_OPTIONS_ERROR);
}
function makeError(msg, code) {
  return Object.assign(new Error(msg), { code });
}

/**
 * Given an options object, return a new generator that dispatches the
 * correct handler based on sync or async execution.
 */
function newGenerator({ name, arity, sync, async, errback }) {
  assertTypeof("string", "name", name, true /* allowUndefined */);
  assertTypeof("number", "arity", arity, true /* allowUndefined */);
  assertTypeof("function", "sync", sync);
  assertTypeof("function", "async", async, true /* allowUndefined */);
  assertTypeof("function", "errback", errback, true /* allowUndefined */);
  if (async && errback) {
    throw makeError(
      "Expected one of either opts.async or opts.errback, but got _both_.",
      GENSYNC_OPTIONS_ERROR
    );
  }

  if (typeof name !== "string") {
    let fnName;
    if (errback && errback.name && errback.name !== "errback") {
      fnName = errback.name;
    }
    if (async && async.name && async.name !== "async") {
      fnName = async.name.replace(/Async$/, "");
    }
    if (sync && sync.name && sync.name !== "sync") {
      fnName = sync.name.replace(/Sync$/, "");
    }

    if (typeof fnName === "string") {
      name = fnName;
    }
  }

  if (typeof arity !== "number") {
    arity = sync.length;
  }

  return buildOperation({
    name,
    arity,
    sync: function(args) {
      return sync.apply(this, args);
    },
    async: function(args, resolve, reject) {
      if (async) {
        async.apply(this, args).then(resolve, reject);
      } else if (errback) {
        errback.call(this, ...args, (err, value) => {
          if (err == null) resolve(value);
          else reject(err);
        });
      } else {
        resolve(sync.apply(this, args));
      }
    },
  });
}

function wrapGenerator(genFn) {
  return setFunctionMetadata(genFn.name, genFn.length, function(...args) {
    return genFn.apply(this, args);
  });
}

function buildOperation({ name, arity, sync, async }) {
  return setFunctionMetadata(name, arity, function*(...args) {
    const resume = yield GENSYNC_START;
    if (!resume) {
      // Break the tail call to avoid a bug in V8 v6.X with --harmony enabled.
      const res = sync.call(this, args);
      return res;
    }

    let result;
    try {
      async.call(
        this,
        args,
        value => {
          if (result) return;

          result = { value };
          resume();
        },
        err => {
          if (result) return;

          result = { err };
          resume();
        }
      );
    } catch (err) {
      result = { err };
      resume();
    }

    // Suspend until the callbacks run. Will resume synchronously if the
    // callback was already called.
    yield GENSYNC_SUSPEND;

    if (result.hasOwnProperty("err")) {
      throw result.err;
    }

    return result.value;
  });
}

function evaluateSync(gen) {
  let value;
  while (!({ value } = gen.next()).done) {
    assertStart(value, gen);
  }
  return value;
}

function evaluateAsync(gen, resolve, reject) {
  (function step() {
    try {
      let value;
      while (!({ value } = gen.next()).done) {
        assertStart(value, gen);

        // If this throws, it is considered to have broken the contract
        // established for async handlers. If these handlers are called
        // synchronously, it is also considered bad behavior.
        let sync = true;
        let didSyncResume = false;
        const out = gen.next(() => {
          if (sync) {
            didSyncResume = true;
          } else {
            step();
          }
        });
        sync = false;

        assertSuspend(out, gen);

        if (!didSyncResume) {
          // Callback wasn't called synchronously, so break out of the loop
          // and let it call 'step' later.
          return;
        }
      }

      return resolve(value);
    } catch (err) {
      return reject(err);
    }
  })();
}

function assertStart(value, gen) {
  if (value === GENSYNC_START) return;

  throwError(
    gen,
    makeError(
      `Got unexpected yielded value in gensync generator: ${JSON.stringify(
        value
      )}. Did you perhaps mean to use 'yield*' instead of 'yield'?`,
      GENSYNC_EXPECTED_START
    )
  );
}
function assertSuspend({ value, done }, gen) {
  if (!done && value === GENSYNC_SUSPEND) return;

  throwError(
    gen,
    makeError(
      done
        ? "Unexpected generator completion. If you get this, it is probably a gensync bug."
        : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(
            value
          )}. If you get this, it is probably a gensync bug.`,
      GENSYNC_EXPECTED_SUSPEND
    )
  );
}

function throwError(gen, err) {
  // Call `.throw` so that users can step in a debugger to easily see which
  // 'yield' passed an unexpected value. If the `.throw` call didn't throw
  // back to the generator, we explicitly do it to stop the error
  // from being swallowed by user code try/catches.
  if (gen.throw) gen.throw(err);
  throw err;
}

function isIterable(value) {
  return (
    !!value &&
    (typeof value === "object" || typeof value === "function") &&
    !value[Symbol.iterator]
  );
}

function setFunctionMetadata(name, arity, fn) {
  if (typeof name === "string") {
    // This should always work on the supported Node versions, but for the
    // sake of users that are compiling to older versions, we check for
    // configurability so we don't throw.
    const nameDesc = Object.getOwnPropertyDescriptor(fn, "name");
    if (!nameDesc || nameDesc.configurable) {
      Object.defineProperty(
        fn,
        "name",
        Object.assign(nameDesc || {}, {
          configurable: true,
          value: name,
        })
      );
    }
  }

  if (typeof arity === "number") {
    const lengthDesc = Object.getOwnPropertyDescriptor(fn, "length");
    if (!lengthDesc || lengthDesc.configurable) {
      Object.defineProperty(
        fn,
        "length",
        Object.assign(lengthDesc || {}, {
          configurable: true,
          value: arity,
        })
      );
    }
  }

  return fn;
}


/***/ }),
/* 207 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.maybeAsync = maybeAsync;
exports.forwardAsync = forwardAsync;
exports.isThenable = isThenable;
exports.waitFor = exports.onFirstPause = exports.isAsync = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

const id = x => x;

const runGenerator = _gensync()(function* (item) {
  return yield* item;
});

const isAsync = _gensync()({
  sync: () => false,
  errback: cb => cb(null, true)
});

exports.isAsync = isAsync;

function maybeAsync(fn, message) {
  return _gensync()({
    sync(...args) {
      const result = fn.apply(this, args);
      if (isThenable(result)) throw new Error(message);
      return result;
    },

    async(...args) {
      return Promise.resolve(fn.apply(this, args));
    }

  });
}

const withKind = _gensync()({
  sync: cb => cb("sync"),
  async: cb => cb("async")
});

function forwardAsync(action, cb) {
  const g = _gensync()(action);

  return withKind(kind => {
    const adapted = g[kind];
    return cb(adapted);
  });
}

const onFirstPause = _gensync()({
  name: "onFirstPause",
  arity: 2,
  sync: function (item) {
    return runGenerator.sync(item);
  },
  errback: function (item, firstPause, cb) {
    let completed = false;
    runGenerator.errback(item, (err, value) => {
      completed = true;
      cb(err, value);
    });

    if (!completed) {
      firstPause();
    }
  }
});

exports.onFirstPause = onFirstPause;

const waitFor = _gensync()({
  sync: id,
  async: id
});

exports.waitFor = waitFor;

function isThenable(val) {
  return !!val && (typeof val === "object" || typeof val === "function") && !!val.then && typeof val.then === "function";
}

/***/ }),
/* 208 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.mergeOptions = mergeOptions;
exports.isIterableIterator = isIterableIterator;

function mergeOptions(target, source) {
  for (const k of Object.keys(source)) {
    if ((k === "parserOpts" || k === "generatorOpts" || k === "assumptions") && source[k]) {
      const parserOpts = source[k];
      const targetObj = target[k] || (target[k] = {});
      mergeDefaultFields(targetObj, parserOpts);
    } else {
      const val = source[k];
      if (val !== undefined) target[k] = val;
    }
  }
}

function mergeDefaultFields(target, source) {
  for (const k of Object.keys(source)) {
    const val = source[k];
    if (val !== undefined) target[k] = val;
  }
}

function isIterableIterator(value) {
  return !!value && typeof value.next === "function" && typeof value[Symbol.iterator] === "function";
}

/***/ }),
/* 209 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.stat = exports.readFile = void 0;

function _fs() {
  const data = __webpack_require__(210);

  _fs = function () {
    return data;
  };

  return data;
}

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

const readFile = _gensync()({
  sync: _fs().readFileSync,
  errback: _fs().readFile
});

exports.readFile = readFile;

const stat = _gensync()({
  sync: _fs().statSync,
  errback: _fs().stat
});

exports.stat = stat;

/***/ }),
/* 210 */
/***/ ((module) => {

"use strict";
module.exports = require("fs");;

/***/ }),
/* 211 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.findConfigUpwards = findConfigUpwards;
exports.findRelativeConfig = findRelativeConfig;
exports.findRootConfig = findRootConfig;
exports.loadConfig = loadConfig;
exports.resolveShowConfigPath = resolveShowConfigPath;
exports.ROOT_CONFIG_FILENAMES = void 0;

function _debug() {
  const data = __webpack_require__(95);

  _debug = function () {
    return data;
  };

  return data;
}

function _fs() {
  const data = __webpack_require__(210);

  _fs = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function _json() {
  const data = __webpack_require__(212);

  _json = function () {
    return data;
  };

  return data;
}

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _caching = __webpack_require__(205);

var _configApi = __webpack_require__(213);

var _utils = __webpack_require__(204);

var _moduleTypes = __webpack_require__(215);

var _patternToRegex = __webpack_require__(221);

var fs = __webpack_require__(209);

function _module() {
  const data = __webpack_require__(217);

  _module = function () {
    return data;
  };

  return data;
}

const debug = _debug()("babel:config:loading:files:configuration");

const ROOT_CONFIG_FILENAMES = ["babel.config.js", "babel.config.cjs", "babel.config.mjs", "babel.config.json"];
exports.ROOT_CONFIG_FILENAMES = ROOT_CONFIG_FILENAMES;
const RELATIVE_CONFIG_FILENAMES = [".babelrc", ".babelrc.js", ".babelrc.cjs", ".babelrc.mjs", ".babelrc.json"];
const BABELIGNORE_FILENAME = ".babelignore";

function findConfigUpwards(rootDir) {
  let dirname = rootDir;

  for (;;) {
    for (const filename of ROOT_CONFIG_FILENAMES) {
      if (_fs().existsSync(_path().join(dirname, filename))) {
        return dirname;
      }
    }

    const nextDir = _path().dirname(dirname);

    if (dirname === nextDir) break;
    dirname = nextDir;
  }

  return null;
}

function* findRelativeConfig(packageData, envName, caller) {
  let config = null;
  let ignore = null;

  const dirname = _path().dirname(packageData.filepath);

  for (const loc of packageData.directories) {
    if (!config) {
      var _packageData$pkg;

      config = yield* loadOneConfig(RELATIVE_CONFIG_FILENAMES, loc, envName, caller, ((_packageData$pkg = packageData.pkg) == null ? void 0 : _packageData$pkg.dirname) === loc ? packageToBabelConfig(packageData.pkg) : null);
    }

    if (!ignore) {
      const ignoreLoc = _path().join(loc, BABELIGNORE_FILENAME);

      ignore = yield* readIgnoreConfig(ignoreLoc);

      if (ignore) {
        debug("Found ignore %o from %o.", ignore.filepath, dirname);
      }
    }
  }

  return {
    config,
    ignore
  };
}

function findRootConfig(dirname, envName, caller) {
  return loadOneConfig(ROOT_CONFIG_FILENAMES, dirname, envName, caller);
}

function* loadOneConfig(names, dirname, envName, caller, previousConfig = null) {
  const configs = yield* _gensync().all(names.map(filename => readConfig(_path().join(dirname, filename), envName, caller)));
  const config = configs.reduce((previousConfig, config) => {
    if (config && previousConfig) {
      throw new Error(`Multiple configuration files found. Please remove one:\n` + ` - ${_path().basename(previousConfig.filepath)}\n` + ` - ${config.filepath}\n` + `from ${dirname}`);
    }

    return config || previousConfig;
  }, previousConfig);

  if (config) {
    debug("Found configuration %o from %o.", config.filepath, dirname);
  }

  return config;
}

function* loadConfig(name, dirname, envName, caller) {
  const filepath = (((v, w) => (v = v.split("."), w = w.split("."), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, "8.9") ? __webpack_require__(220).resolve : (r, {
    paths: [b]
  }, M = __webpack_require__(217)) => {
    let f = M._findPath(r, M._nodeModulePaths(b).concat(b));

    if (f) return f;
    f = new Error(`Cannot resolve module '${r}'`);
    f.code = "MODULE_NOT_FOUND";
    throw f;
  })(name, {
    paths: [dirname]
  });
  const conf = yield* readConfig(filepath, envName, caller);

  if (!conf) {
    throw new Error(`Config file ${filepath} contains no configuration data`);
  }

  debug("Loaded config %o from %o.", name, dirname);
  return conf;
}

function readConfig(filepath, envName, caller) {
  const ext = _path().extname(filepath);

  return ext === ".js" || ext === ".cjs" || ext === ".mjs" ? readConfigJS(filepath, {
    envName,
    caller
  }) : readConfigJSON5(filepath);
}

const LOADING_CONFIGS = new Set();
const readConfigJS = (0, _caching.makeStrongCache)(function* readConfigJS(filepath, cache) {
  if (!_fs().existsSync(filepath)) {
    cache.never();
    return null;
  }

  if (LOADING_CONFIGS.has(filepath)) {
    cache.never();
    debug("Auto-ignoring usage of config %o.", filepath);
    return {
      filepath,
      dirname: _path().dirname(filepath),
      options: {}
    };
  }

  let options;

  try {
    LOADING_CONFIGS.add(filepath);
    options = yield* (0, _moduleTypes.default)(filepath, "You appear to be using a native ECMAScript module configuration " + "file, which is only supported when running Babel asynchronously.");
  } catch (err) {
    err.message = `${filepath}: Error while loading config - ${err.message}`;
    throw err;
  } finally {
    LOADING_CONFIGS.delete(filepath);
  }

  let assertCache = false;

  if (typeof options === "function") {
    yield* [];
    options = options((0, _configApi.makeConfigAPI)(cache));
    assertCache = true;
  }

  if (!options || typeof options !== "object" || Array.isArray(options)) {
    throw new Error(`${filepath}: Configuration should be an exported JavaScript object.`);
  }

  if (typeof options.then === "function") {
    throw new Error(`You appear to be using an async configuration, ` + `which your current version of Babel does not support. ` + `We may add support for this in the future, ` + `but if you're on the most recent version of @babel/core and still ` + `seeing this error, then you'll need to synchronously return your config.`);
  }

  if (assertCache && !cache.configured()) throwConfigError();
  return {
    filepath,
    dirname: _path().dirname(filepath),
    options
  };
});
const packageToBabelConfig = (0, _caching.makeWeakCacheSync)(file => {
  const babel = file.options["babel"];
  if (typeof babel === "undefined") return null;

  if (typeof babel !== "object" || Array.isArray(babel) || babel === null) {
    throw new Error(`${file.filepath}: .babel property must be an object`);
  }

  return {
    filepath: file.filepath,
    dirname: file.dirname,
    options: babel
  };
});
const readConfigJSON5 = (0, _utils.makeStaticFileCache)((filepath, content) => {
  let options;

  try {
    options = _json().parse(content);
  } catch (err) {
    err.message = `${filepath}: Error while parsing config - ${err.message}`;
    throw err;
  }

  if (!options) throw new Error(`${filepath}: No config detected`);

  if (typeof options !== "object") {
    throw new Error(`${filepath}: Config returned typeof ${typeof options}`);
  }

  if (Array.isArray(options)) {
    throw new Error(`${filepath}: Expected config object but found array`);
  }

  return {
    filepath,
    dirname: _path().dirname(filepath),
    options
  };
});
const readIgnoreConfig = (0, _utils.makeStaticFileCache)((filepath, content) => {
  const ignoreDir = _path().dirname(filepath);

  const ignorePatterns = content.split("\n").map(line => line.replace(/#(.*?)$/, "").trim()).filter(line => !!line);

  for (const pattern of ignorePatterns) {
    if (pattern[0] === "!") {
      throw new Error(`Negation of file paths is not supported.`);
    }
  }

  return {
    filepath,
    dirname: _path().dirname(filepath),
    ignore: ignorePatterns.map(pattern => (0, _patternToRegex.default)(pattern, ignoreDir))
  };
});

function* resolveShowConfigPath(dirname) {
  const targetPath = process.env.BABEL_SHOW_CONFIG_FOR;

  if (targetPath != null) {
    const absolutePath = _path().resolve(dirname, targetPath);

    const stats = yield* fs.stat(absolutePath);

    if (!stats.isFile()) {
      throw new Error(`${absolutePath}: BABEL_SHOW_CONFIG_FOR must refer to a regular file, directories are not supported.`);
    }

    return absolutePath;
  }

  return null;
}

function throwConfigError() {
  throw new Error(`\
Caching was left unconfigured. Babel's plugins, presets, and .babelrc.js files can be configured
for various types of caching, using the first param of their handler functions:

module.exports = function(api) {
  // The API exposes the following:

  // Cache the returned value forever and don't call this function again.
  api.cache(true);

  // Don't cache at all. Not recommended because it will be very slow.
  api.cache(false);

  // Cached based on the value of some function. If this function returns a value different from
  // a previously-encountered value, the plugins will re-evaluate.
  var env = api.cache(() => process.env.NODE_ENV);

  // If testing for a specific env, we recommend specifics to avoid instantiating a plugin for
  // any possible NODE_ENV value that might come up during plugin execution.
  var isProd = api.cache(() => process.env.NODE_ENV === "production");

  // .cache(fn) will perform a linear search though instances to find the matching plugin based
  // based on previous instantiated plugins. If you want to recreate the plugin and discard the
  // previous instance whenever something changes, you may use:
  var isProd = api.cache.invalidate(() => process.env.NODE_ENV === "production");

  // Note, we also expose the following more-verbose versions of the above examples:
  api.cache.forever(); // api.cache(true)
  api.cache.never();   // api.cache(false)
  api.cache.using(fn); // api.cache(fn)

  // Return the value that will be cached.
  return { };
};`);
}

/***/ }),
/* 212 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// This is a generated file. Do not edit.
var Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
var ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;
var ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;

var unicode = {
	Space_Separator: Space_Separator,
	ID_Start: ID_Start,
	ID_Continue: ID_Continue
};

var util = {
    isSpaceSeparator (c) {
        return typeof c === 'string' && unicode.Space_Separator.test(c)
    },

    isIdStartChar (c) {
        return typeof c === 'string' && (
            (c >= 'a' && c <= 'z') ||
        (c >= 'A' && c <= 'Z') ||
        (c === '$') || (c === '_') ||
        unicode.ID_Start.test(c)
        )
    },

    isIdContinueChar (c) {
        return typeof c === 'string' && (
            (c >= 'a' && c <= 'z') ||
        (c >= 'A' && c <= 'Z') ||
        (c >= '0' && c <= '9') ||
        (c === '$') || (c === '_') ||
        (c === '\u200C') || (c === '\u200D') ||
        unicode.ID_Continue.test(c)
        )
    },

    isDigit (c) {
        return typeof c === 'string' && /[0-9]/.test(c)
    },

    isHexDigit (c) {
        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)
    },
};

let source;
let parseState;
let stack;
let pos;
let line;
let column;
let token;
let key;
let root;

var parse = function parse (text, reviver) {
    source = String(text);
    parseState = 'start';
    stack = [];
    pos = 0;
    line = 1;
    column = 0;
    token = undefined;
    key = undefined;
    root = undefined;

    do {
        token = lex();

        // This code is unreachable.
        // if (!parseStates[parseState]) {
        //     throw invalidParseState()
        // }

        parseStates[parseState]();
    } while (token.type !== 'eof')

    if (typeof reviver === 'function') {
        return internalize({'': root}, '', reviver)
    }

    return root
};

function internalize (holder, name, reviver) {
    const value = holder[name];
    if (value != null && typeof value === 'object') {
        for (const key in value) {
            const replacement = internalize(value, key, reviver);
            if (replacement === undefined) {
                delete value[key];
            } else {
                value[key] = replacement;
            }
        }
    }

    return reviver.call(holder, name, value)
}

let lexState;
let buffer;
let doubleQuote;
let sign;
let c;

function lex () {
    lexState = 'default';
    buffer = '';
    doubleQuote = false;
    sign = 1;

    for (;;) {
        c = peek();

        // This code is unreachable.
        // if (!lexStates[lexState]) {
        //     throw invalidLexState(lexState)
        // }

        const token = lexStates[lexState]();
        if (token) {
            return token
        }
    }
}

function peek () {
    if (source[pos]) {
        return String.fromCodePoint(source.codePointAt(pos))
    }
}

function read () {
    const c = peek();

    if (c === '\n') {
        line++;
        column = 0;
    } else if (c) {
        column += c.length;
    } else {
        column++;
    }

    if (c) {
        pos += c.length;
    }

    return c
}

const lexStates = {
    default () {
        switch (c) {
        case '\t':
        case '\v':
        case '\f':
        case ' ':
        case '\u00A0':
        case '\uFEFF':
        case '\n':
        case '\r':
        case '\u2028':
        case '\u2029':
            read();
            return

        case '/':
            read();
            lexState = 'comment';
            return

        case undefined:
            read();
            return newToken('eof')
        }

        if (util.isSpaceSeparator(c)) {
            read();
            return
        }

        // This code is unreachable.
        // if (!lexStates[parseState]) {
        //     throw invalidLexState(parseState)
        // }

        return lexStates[parseState]()
    },

    comment () {
        switch (c) {
        case '*':
            read();
            lexState = 'multiLineComment';
            return

        case '/':
            read();
            lexState = 'singleLineComment';
            return
        }

        throw invalidChar(read())
    },

    multiLineComment () {
        switch (c) {
        case '*':
            read();
            lexState = 'multiLineCommentAsterisk';
            return

        case undefined:
            throw invalidChar(read())
        }

        read();
    },

    multiLineCommentAsterisk () {
        switch (c) {
        case '*':
            read();
            return

        case '/':
            read();
            lexState = 'default';
            return

        case undefined:
            throw invalidChar(read())
        }

        read();
        lexState = 'multiLineComment';
    },

    singleLineComment () {
        switch (c) {
        case '\n':
        case '\r':
        case '\u2028':
        case '\u2029':
            read();
            lexState = 'default';
            return

        case undefined:
            read();
            return newToken('eof')
        }

        read();
    },

    value () {
        switch (c) {
        case '{':
        case '[':
            return newToken('punctuator', read())

        case 'n':
            read();
            literal('ull');
            return newToken('null', null)

        case 't':
            read();
            literal('rue');
            return newToken('boolean', true)

        case 'f':
            read();
            literal('alse');
            return newToken('boolean', false)

        case '-':
        case '+':
            if (read() === '-') {
                sign = -1;
            }

            lexState = 'sign';
            return

        case '.':
            buffer = read();
            lexState = 'decimalPointLeading';
            return

        case '0':
            buffer = read();
            lexState = 'zero';
            return

        case '1':
        case '2':
        case '3':
        case '4':
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
            buffer = read();
            lexState = 'decimalInteger';
            return

        case 'I':
            read();
            literal('nfinity');
            return newToken('numeric', Infinity)

        case 'N':
            read();
            literal('aN');
            return newToken('numeric', NaN)

        case '"':
        case "'":
            doubleQuote = (read() === '"');
            buffer = '';
            lexState = 'string';
            return
        }

        throw invalidChar(read())
    },

    identifierNameStartEscape () {
        if (c !== 'u') {
            throw invalidChar(read())
        }

        read();
        const u = unicodeEscape();
        switch (u) {
        case '$':
        case '_':
            break

        default:
            if (!util.isIdStartChar(u)) {
                throw invalidIdentifier()
            }

            break
        }

        buffer += u;
        lexState = 'identifierName';
    },

    identifierName () {
        switch (c) {
        case '$':
        case '_':
        case '\u200C':
        case '\u200D':
            buffer += read();
            return

        case '\\':
            read();
            lexState = 'identifierNameEscape';
            return
        }

        if (util.isIdContinueChar(c)) {
            buffer += read();
            return
        }

        return newToken('identifier', buffer)
    },

    identifierNameEscape () {
        if (c !== 'u') {
            throw invalidChar(read())
        }

        read();
        const u = unicodeEscape();
        switch (u) {
        case '$':
        case '_':
        case '\u200C':
        case '\u200D':
            break

        default:
            if (!util.isIdContinueChar(u)) {
                throw invalidIdentifier()
            }

            break
        }

        buffer += u;
        lexState = 'identifierName';
    },

    sign () {
        switch (c) {
        case '.':
            buffer = read();
            lexState = 'decimalPointLeading';
            return

        case '0':
            buffer = read();
            lexState = 'zero';
            return

        case '1':
        case '2':
        case '3':
        case '4':
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
            buffer = read();
            lexState = 'decimalInteger';
            return

        case 'I':
            read();
            literal('nfinity');
            return newToken('numeric', sign * Infinity)

        case 'N':
            read();
            literal('aN');
            return newToken('numeric', NaN)
        }

        throw invalidChar(read())
    },

    zero () {
        switch (c) {
        case '.':
            buffer += read();
            lexState = 'decimalPoint';
            return

        case 'e':
        case 'E':
            buffer += read();
            lexState = 'decimalExponent';
            return

        case 'x':
        case 'X':
            buffer += read();
            lexState = 'hexadecimal';
            return
        }

        return newToken('numeric', sign * 0)
    },

    decimalInteger () {
        switch (c) {
        case '.':
            buffer += read();
            lexState = 'decimalPoint';
            return

        case 'e':
        case 'E':
            buffer += read();
            lexState = 'decimalExponent';
            return
        }

        if (util.isDigit(c)) {
            buffer += read();
            return
        }

        return newToken('numeric', sign * Number(buffer))
    },

    decimalPointLeading () {
        if (util.isDigit(c)) {
            buffer += read();
            lexState = 'decimalFraction';
            return
        }

        throw invalidChar(read())
    },

    decimalPoint () {
        switch (c) {
        case 'e':
        case 'E':
            buffer += read();
            lexState = 'decimalExponent';
            return
        }

        if (util.isDigit(c)) {
            buffer += read();
            lexState = 'decimalFraction';
            return
        }

        return newToken('numeric', sign * Number(buffer))
    },

    decimalFraction () {
        switch (c) {
        case 'e':
        case 'E':
            buffer += read();
            lexState = 'decimalExponent';
            return
        }

        if (util.isDigit(c)) {
            buffer += read();
            return
        }

        return newToken('numeric', sign * Number(buffer))
    },

    decimalExponent () {
        switch (c) {
        case '+':
        case '-':
            buffer += read();
            lexState = 'decimalExponentSign';
            return
        }

        if (util.isDigit(c)) {
            buffer += read();
            lexState = 'decimalExponentInteger';
            return
        }

        throw invalidChar(read())
    },

    decimalExponentSign () {
        if (util.isDigit(c)) {
            buffer += read();
            lexState = 'decimalExponentInteger';
            return
        }

        throw invalidChar(read())
    },

    decimalExponentInteger () {
        if (util.isDigit(c)) {
            buffer += read();
            return
        }

        return newToken('numeric', sign * Number(buffer))
    },

    hexadecimal () {
        if (util.isHexDigit(c)) {
            buffer += read();
            lexState = 'hexadecimalInteger';
            return
        }

        throw invalidChar(read())
    },

    hexadecimalInteger () {
        if (util.isHexDigit(c)) {
            buffer += read();
            return
        }

        return newToken('numeric', sign * Number(buffer))
    },

    string () {
        switch (c) {
        case '\\':
            read();
            buffer += escape();
            return

        case '"':
            if (doubleQuote) {
                read();
                return newToken('string', buffer)
            }

            buffer += read();
            return

        case "'":
            if (!doubleQuote) {
                read();
                return newToken('string', buffer)
            }

            buffer += read();
            return

        case '\n':
        case '\r':
            throw invalidChar(read())

        case '\u2028':
        case '\u2029':
            separatorChar(c);
            break

        case undefined:
            throw invalidChar(read())
        }

        buffer += read();
    },

    start () {
        switch (c) {
        case '{':
        case '[':
            return newToken('punctuator', read())

        // This code is unreachable since the default lexState handles eof.
        // case undefined:
        //     return newToken('eof')
        }

        lexState = 'value';
    },

    beforePropertyName () {
        switch (c) {
        case '$':
        case '_':
            buffer = read();
            lexState = 'identifierName';
            return

        case '\\':
            read();
            lexState = 'identifierNameStartEscape';
            return

        case '}':
            return newToken('punctuator', read())

        case '"':
        case "'":
            doubleQuote = (read() === '"');
            lexState = 'string';
            return
        }

        if (util.isIdStartChar(c)) {
            buffer += read();
            lexState = 'identifierName';
            return
        }

        throw invalidChar(read())
    },

    afterPropertyName () {
        if (c === ':') {
            return newToken('punctuator', read())
        }

        throw invalidChar(read())
    },

    beforePropertyValue () {
        lexState = 'value';
    },

    afterPropertyValue () {
        switch (c) {
        case ',':
        case '}':
            return newToken('punctuator', read())
        }

        throw invalidChar(read())
    },

    beforeArrayValue () {
        if (c === ']') {
            return newToken('punctuator', read())
        }

        lexState = 'value';
    },

    afterArrayValue () {
        switch (c) {
        case ',':
        case ']':
            return newToken('punctuator', read())
        }

        throw invalidChar(read())
    },

    end () {
        // This code is unreachable since it's handled by the default lexState.
        // if (c === undefined) {
        //     read()
        //     return newToken('eof')
        // }

        throw invalidChar(read())
    },
};

function newToken (type, value) {
    return {
        type,
        value,
        line,
        column,
    }
}

function literal (s) {
    for (const c of s) {
        const p = peek();

        if (p !== c) {
            throw invalidChar(read())
        }

        read();
    }
}

function escape () {
    const c = peek();
    switch (c) {
    case 'b':
        read();
        return '\b'

    case 'f':
        read();
        return '\f'

    case 'n':
        read();
        return '\n'

    case 'r':
        read();
        return '\r'

    case 't':
        read();
        return '\t'

    case 'v':
        read();
        return '\v'

    case '0':
        read();
        if (util.isDigit(peek())) {
            throw invalidChar(read())
        }

        return '\0'

    case 'x':
        read();
        return hexEscape()

    case 'u':
        read();
        return unicodeEscape()

    case '\n':
    case '\u2028':
    case '\u2029':
        read();
        return ''

    case '\r':
        read();
        if (peek() === '\n') {
            read();
        }

        return ''

    case '1':
    case '2':
    case '3':
    case '4':
    case '5':
    case '6':
    case '7':
    case '8':
    case '9':
        throw invalidChar(read())

    case undefined:
        throw invalidChar(read())
    }

    return read()
}

function hexEscape () {
    let buffer = '';
    let c = peek();

    if (!util.isHexDigit(c)) {
        throw invalidChar(read())
    }

    buffer += read();

    c = peek();
    if (!util.isHexDigit(c)) {
        throw invalidChar(read())
    }

    buffer += read();

    return String.fromCodePoint(parseInt(buffer, 16))
}

function unicodeEscape () {
    let buffer = '';
    let count = 4;

    while (count-- > 0) {
        const c = peek();
        if (!util.isHexDigit(c)) {
            throw invalidChar(read())
        }

        buffer += read();
    }

    return String.fromCodePoint(parseInt(buffer, 16))
}

const parseStates = {
    start () {
        if (token.type === 'eof') {
            throw invalidEOF()
        }

        push();
    },

    beforePropertyName () {
        switch (token.type) {
        case 'identifier':
        case 'string':
            key = token.value;
            parseState = 'afterPropertyName';
            return

        case 'punctuator':
            // This code is unreachable since it's handled by the lexState.
            // if (token.value !== '}') {
            //     throw invalidToken()
            // }

            pop();
            return

        case 'eof':
            throw invalidEOF()
        }

        // This code is unreachable since it's handled by the lexState.
        // throw invalidToken()
    },

    afterPropertyName () {
        // This code is unreachable since it's handled by the lexState.
        // if (token.type !== 'punctuator' || token.value !== ':') {
        //     throw invalidToken()
        // }

        if (token.type === 'eof') {
            throw invalidEOF()
        }

        parseState = 'beforePropertyValue';
    },

    beforePropertyValue () {
        if (token.type === 'eof') {
            throw invalidEOF()
        }

        push();
    },

    beforeArrayValue () {
        if (token.type === 'eof') {
            throw invalidEOF()
        }

        if (token.type === 'punctuator' && token.value === ']') {
            pop();
            return
        }

        push();
    },

    afterPropertyValue () {
        // This code is unreachable since it's handled by the lexState.
        // if (token.type !== 'punctuator') {
        //     throw invalidToken()
        // }

        if (token.type === 'eof') {
            throw invalidEOF()
        }

        switch (token.value) {
        case ',':
            parseState = 'beforePropertyName';
            return

        case '}':
            pop();
        }

        // This code is unreachable since it's handled by the lexState.
        // throw invalidToken()
    },

    afterArrayValue () {
        // This code is unreachable since it's handled by the lexState.
        // if (token.type !== 'punctuator') {
        //     throw invalidToken()
        // }

        if (token.type === 'eof') {
            throw invalidEOF()
        }

        switch (token.value) {
        case ',':
            parseState = 'beforeArrayValue';
            return

        case ']':
            pop();
        }

        // This code is unreachable since it's handled by the lexState.
        // throw invalidToken()
    },

    end () {
        // This code is unreachable since it's handled by the lexState.
        // if (token.type !== 'eof') {
        //     throw invalidToken()
        // }
    },
};

function push () {
    let value;

    switch (token.type) {
    case 'punctuator':
        switch (token.value) {
        case '{':
            value = {};
            break

        case '[':
            value = [];
            break
        }

        break

    case 'null':
    case 'boolean':
    case 'numeric':
    case 'string':
        value = token.value;
        break

    // This code is unreachable.
    // default:
    //     throw invalidToken()
    }

    if (root === undefined) {
        root = value;
    } else {
        const parent = stack[stack.length - 1];
        if (Array.isArray(parent)) {
            parent.push(value);
        } else {
            parent[key] = value;
        }
    }

    if (value !== null && typeof value === 'object') {
        stack.push(value);

        if (Array.isArray(value)) {
            parseState = 'beforeArrayValue';
        } else {
            parseState = 'beforePropertyName';
        }
    } else {
        const current = stack[stack.length - 1];
        if (current == null) {
            parseState = 'end';
        } else if (Array.isArray(current)) {
            parseState = 'afterArrayValue';
        } else {
            parseState = 'afterPropertyValue';
        }
    }
}

function pop () {
    stack.pop();

    const current = stack[stack.length - 1];
    if (current == null) {
        parseState = 'end';
    } else if (Array.isArray(current)) {
        parseState = 'afterArrayValue';
    } else {
        parseState = 'afterPropertyValue';
    }
}

// This code is unreachable.
// function invalidParseState () {
//     return new Error(`JSON5: invalid parse state '${parseState}'`)
// }

// This code is unreachable.
// function invalidLexState (state) {
//     return new Error(`JSON5: invalid lex state '${state}'`)
// }

function invalidChar (c) {
    if (c === undefined) {
        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)
    }

    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)
}

function invalidEOF () {
    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)
}

// This code is unreachable.
// function invalidToken () {
//     if (token.type === 'eof') {
//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)
//     }

//     const c = String.fromCodePoint(token.value.codePointAt(0))
//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)
// }

function invalidIdentifier () {
    column -= 5;
    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)
}

function separatorChar (c) {
    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);
}

function formatChar (c) {
    const replacements = {
        "'": "\\'",
        '"': '\\"',
        '\\': '\\\\',
        '\b': '\\b',
        '\f': '\\f',
        '\n': '\\n',
        '\r': '\\r',
        '\t': '\\t',
        '\v': '\\v',
        '\0': '\\0',
        '\u2028': '\\u2028',
        '\u2029': '\\u2029',
    };

    if (replacements[c]) {
        return replacements[c]
    }

    if (c < ' ') {
        const hexString = c.charCodeAt(0).toString(16);
        return '\\x' + ('00' + hexString).substring(hexString.length)
    }

    return c
}

function syntaxError (message) {
    const err = new SyntaxError(message);
    err.lineNumber = line;
    err.columnNumber = column;
    return err
}

var stringify = function stringify (value, replacer, space) {
    const stack = [];
    let indent = '';
    let propertyList;
    let replacerFunc;
    let gap = '';
    let quote;

    if (
        replacer != null &&
        typeof replacer === 'object' &&
        !Array.isArray(replacer)
    ) {
        space = replacer.space;
        quote = replacer.quote;
        replacer = replacer.replacer;
    }

    if (typeof replacer === 'function') {
        replacerFunc = replacer;
    } else if (Array.isArray(replacer)) {
        propertyList = [];
        for (const v of replacer) {
            let item;

            if (typeof v === 'string') {
                item = v;
            } else if (
                typeof v === 'number' ||
                v instanceof String ||
                v instanceof Number
            ) {
                item = String(v);
            }

            if (item !== undefined && propertyList.indexOf(item) < 0) {
                propertyList.push(item);
            }
        }
    }

    if (space instanceof Number) {
        space = Number(space);
    } else if (space instanceof String) {
        space = String(space);
    }

    if (typeof space === 'number') {
        if (space > 0) {
            space = Math.min(10, Math.floor(space));
            gap = '          '.substr(0, space);
        }
    } else if (typeof space === 'string') {
        gap = space.substr(0, 10);
    }

    return serializeProperty('', {'': value})

    function serializeProperty (key, holder) {
        let value = holder[key];
        if (value != null) {
            if (typeof value.toJSON5 === 'function') {
                value = value.toJSON5(key);
            } else if (typeof value.toJSON === 'function') {
                value = value.toJSON(key);
            }
        }

        if (replacerFunc) {
            value = replacerFunc.call(holder, key, value);
        }

        if (value instanceof Number) {
            value = Number(value);
        } else if (value instanceof String) {
            value = String(value);
        } else if (value instanceof Boolean) {
            value = value.valueOf();
        }

        switch (value) {
        case null: return 'null'
        case true: return 'true'
        case false: return 'false'
        }

        if (typeof value === 'string') {
            return quoteString(value, false)
        }

        if (typeof value === 'number') {
            return String(value)
        }

        if (typeof value === 'object') {
            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)
        }

        return undefined
    }

    function quoteString (value) {
        const quotes = {
            "'": 0.1,
            '"': 0.2,
        };

        const replacements = {
            "'": "\\'",
            '"': '\\"',
            '\\': '\\\\',
            '\b': '\\b',
            '\f': '\\f',
            '\n': '\\n',
            '\r': '\\r',
            '\t': '\\t',
            '\v': '\\v',
            '\0': '\\0',
            '\u2028': '\\u2028',
            '\u2029': '\\u2029',
        };

        let product = '';

        for (let i = 0; i < value.length; i++) {
            const c = value[i];
            switch (c) {
            case "'":
            case '"':
                quotes[c]++;
                product += c;
                continue

            case '\0':
                if (util.isDigit(value[i + 1])) {
                    product += '\\x00';
                    continue
                }
            }

            if (replacements[c]) {
                product += replacements[c];
                continue
            }

            if (c < ' ') {
                let hexString = c.charCodeAt(0).toString(16);
                product += '\\x' + ('00' + hexString).substring(hexString.length);
                continue
            }

            product += c;
        }

        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);

        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);

        return quoteChar + product + quoteChar
    }

    function serializeObject (value) {
        if (stack.indexOf(value) >= 0) {
            throw TypeError('Converting circular structure to JSON5')
        }

        stack.push(value);

        let stepback = indent;
        indent = indent + gap;

        let keys = propertyList || Object.keys(value);
        let partial = [];
        for (const key of keys) {
            const propertyString = serializeProperty(key, value);
            if (propertyString !== undefined) {
                let member = serializeKey(key) + ':';
                if (gap !== '') {
                    member += ' ';
                }
                member += propertyString;
                partial.push(member);
            }
        }

        let final;
        if (partial.length === 0) {
            final = '{}';
        } else {
            let properties;
            if (gap === '') {
                properties = partial.join(',');
                final = '{' + properties + '}';
            } else {
                let separator = ',\n' + indent;
                properties = partial.join(separator);
                final = '{\n' + indent + properties + ',\n' + stepback + '}';
            }
        }

        stack.pop();
        indent = stepback;
        return final
    }

    function serializeKey (key) {
        if (key.length === 0) {
            return quoteString(key, true)
        }

        const firstChar = String.fromCodePoint(key.codePointAt(0));
        if (!util.isIdStartChar(firstChar)) {
            return quoteString(key, true)
        }

        for (let i = firstChar.length; i < key.length; i++) {
            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {
                return quoteString(key, true)
            }
        }

        return key
    }

    function serializeArray (value) {
        if (stack.indexOf(value) >= 0) {
            throw TypeError('Converting circular structure to JSON5')
        }

        stack.push(value);

        let stepback = indent;
        indent = indent + gap;

        let partial = [];
        for (let i = 0; i < value.length; i++) {
            const propertyString = serializeProperty(String(i), value);
            partial.push((propertyString !== undefined) ? propertyString : 'null');
        }

        let final;
        if (partial.length === 0) {
            final = '[]';
        } else {
            if (gap === '') {
                let properties = partial.join(',');
                final = '[' + properties + ']';
            } else {
                let separator = ',\n' + indent;
                let properties = partial.join(separator);
                final = '[\n' + indent + properties + ',\n' + stepback + ']';
            }
        }

        stack.pop();
        indent = stepback;
        return final
    }
};

const JSON5 = {
    parse,
    stringify,
};

var lib = JSON5;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lib);


/***/ }),
/* 213 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.makeConfigAPI = makeConfigAPI;
exports.makePresetAPI = makePresetAPI;
exports.makePluginAPI = makePluginAPI;

function _semver() {
  const data = __webpack_require__(200);

  _semver = function () {
    return data;
  };

  return data;
}

var _ = __webpack_require__(4);

var _caching = __webpack_require__(205);

var Context = __webpack_require__(214);

function makeConfigAPI(cache) {
  const env = value => cache.using(data => {
    if (typeof value === "undefined") return data.envName;

    if (typeof value === "function") {
      return (0, _caching.assertSimpleType)(value(data.envName));
    }

    if (!Array.isArray(value)) value = [value];
    return value.some(entry => {
      if (typeof entry !== "string") {
        throw new Error("Unexpected non-string value");
      }

      return entry === data.envName;
    });
  });

  const caller = cb => cache.using(data => (0, _caching.assertSimpleType)(cb(data.caller)));

  return {
    version: _.version,
    cache: cache.simple(),
    env,
    async: () => false,
    caller,
    assertVersion
  };
}

function makePresetAPI(cache) {
  const targets = () => JSON.parse(cache.using(data => JSON.stringify(data.targets)));

  return Object.assign({}, makeConfigAPI(cache), {
    targets
  });
}

function makePluginAPI(cache) {
  const assumption = name => cache.using(data => data.assumptions[name]);

  return Object.assign({}, makePresetAPI(cache), {
    assumption
  });
}

function assertVersion(range) {
  if (typeof range === "number") {
    if (!Number.isInteger(range)) {
      throw new Error("Expected string or integer value.");
    }

    range = `^${range}.0.0-0`;
  }

  if (typeof range !== "string") {
    throw new Error("Expected string or integer value.");
  }

  if (_semver().satisfies(_.version, range)) return;
  const limit = Error.stackTraceLimit;

  if (typeof limit === "number" && limit < 25) {
    Error.stackTraceLimit = 25;
  }

  const err = new Error(`Requires Babel "${range}", but was loaded with "${_.version}". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention "@babel/core" or "babel-core" ` + `to see what is calling Babel.`);

  if (typeof limit === "number") {
    Error.stackTraceLimit = limit;
  }

  throw Object.assign(err, {
    code: "BABEL_VERSION_UNSUPPORTED",
    version: _.version,
    range
  });
}

/***/ }),
/* 214 */
/***/ (() => {



/***/ }),
/* 215 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = loadCjsOrMjsDefault;

var _async = __webpack_require__(207);

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function _url() {
  const data = __webpack_require__(216);

  _url = function () {
    return data;
  };

  return data;
}

function _module() {
  const data = __webpack_require__(217);

  _module = function () {
    return data;
  };

  return data;
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

let import_;

try {
  import_ = __webpack_require__(218).default;
} catch (_unused) {}

function* loadCjsOrMjsDefault(filepath, asyncError, fallbackToTranspiledModule = false) {
  switch (guessJSModuleType(filepath)) {
    case "cjs":
      return loadCjsDefault(filepath, fallbackToTranspiledModule);

    case "unknown":
      try {
        return loadCjsDefault(filepath, fallbackToTranspiledModule);
      } catch (e) {
        if (e.code !== "ERR_REQUIRE_ESM") throw e;
      }

    case "mjs":
      if (yield* (0, _async.isAsync)()) {
        return yield* (0, _async.waitFor)(loadMjsDefault(filepath));
      }

      throw new Error(asyncError);
  }
}

function guessJSModuleType(filename) {
  switch (_path().extname(filename)) {
    case ".cjs":
      return "cjs";

    case ".mjs":
      return "mjs";

    default:
      return "unknown";
  }
}

function loadCjsDefault(filepath, fallbackToTranspiledModule) {
  const module = __webpack_require__(220)(filepath);

  return module != null && module.__esModule ? module.default || (fallbackToTranspiledModule ? module : undefined) : module;
}

function loadMjsDefault(_x) {
  return _loadMjsDefault.apply(this, arguments);
}

function _loadMjsDefault() {
  _loadMjsDefault = _asyncToGenerator(function* (filepath) {
    if (!import_) {
      throw new Error("Internal error: Native ECMAScript modules aren't supported" + " by this platform.\n");
    }

    const module = yield import_((0, _url().pathToFileURL)(filepath));
    return module.default;
  });
  return _loadMjsDefault.apply(this, arguments);
}

/***/ }),
/* 216 */
/***/ ((module) => {

"use strict";
module.exports = require("url");;

/***/ }),
/* 217 */
/***/ ((module) => {

"use strict";
module.exports = require("module");;

/***/ }),
/* 218 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = import_;

function import_(filepath) {
  return __webpack_require__(219)(filepath);
}

/***/ }),
/* 219 */
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 219;
module.exports = webpackEmptyAsyncContext;

/***/ }),
/* 220 */
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = 220;
module.exports = webpackEmptyContext;

/***/ }),
/* 221 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = pathToPattern;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

const sep = `\\${_path().sep}`;
const endSep = `(?:${sep}|$)`;
const substitution = `[^${sep}]+`;
const starPat = `(?:${substitution}${sep})`;
const starPatLast = `(?:${substitution}${endSep})`;
const starStarPat = `${starPat}*?`;
const starStarPatLast = `${starPat}*?${starPatLast}?`;

function escapeRegExp(string) {
  return string.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&");
}

function pathToPattern(pattern, dirname) {
  const parts = _path().resolve(dirname, pattern).split(_path().sep);

  return new RegExp(["^", ...parts.map((part, i) => {
    const last = i === parts.length - 1;
    if (part === "**") return last ? starStarPatLast : starStarPat;
    if (part === "*") return last ? starPatLast : starPat;

    if (part.indexOf("*.") === 0) {
      return substitution + escapeRegExp(part.slice(1)) + (last ? endSep : sep);
    }

    return escapeRegExp(part) + (last ? endSep : sep);
  })].join(""));
}

/***/ }),
/* 222 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.resolvePlugin = resolvePlugin;
exports.resolvePreset = resolvePreset;
exports.loadPlugin = loadPlugin;
exports.loadPreset = loadPreset;

function _debug() {
  const data = __webpack_require__(95);

  _debug = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

var _moduleTypes = __webpack_require__(215);

function _module() {
  const data = __webpack_require__(217);

  _module = function () {
    return data;
  };

  return data;
}

const debug = _debug()("babel:config:loading:files:plugins");

const EXACT_RE = /^module:/;
const BABEL_PLUGIN_PREFIX_RE = /^(?!@|module:|[^/]+\/|babel-plugin-)/;
const BABEL_PRESET_PREFIX_RE = /^(?!@|module:|[^/]+\/|babel-preset-)/;
const BABEL_PLUGIN_ORG_RE = /^(@babel\/)(?!plugin-|[^/]+\/)/;
const BABEL_PRESET_ORG_RE = /^(@babel\/)(?!preset-|[^/]+\/)/;
const OTHER_PLUGIN_ORG_RE = /^(@(?!babel\/)[^/]+\/)(?![^/]*babel-plugin(?:-|\/|$)|[^/]+\/)/;
const OTHER_PRESET_ORG_RE = /^(@(?!babel\/)[^/]+\/)(?![^/]*babel-preset(?:-|\/|$)|[^/]+\/)/;
const OTHER_ORG_DEFAULT_RE = /^(@(?!babel$)[^/]+)$/;

function resolvePlugin(name, dirname) {
  return resolveStandardizedName("plugin", name, dirname);
}

function resolvePreset(name, dirname) {
  return resolveStandardizedName("preset", name, dirname);
}

function* loadPlugin(name, dirname) {
  const filepath = resolvePlugin(name, dirname);

  if (!filepath) {
    throw new Error(`Plugin ${name} not found relative to ${dirname}`);
  }

  const value = yield* requireModule("plugin", filepath);
  debug("Loaded plugin %o from %o.", name, dirname);
  return {
    filepath,
    value
  };
}

function* loadPreset(name, dirname) {
  const filepath = resolvePreset(name, dirname);

  if (!filepath) {
    throw new Error(`Preset ${name} not found relative to ${dirname}`);
  }

  const value = yield* requireModule("preset", filepath);
  debug("Loaded preset %o from %o.", name, dirname);
  return {
    filepath,
    value
  };
}

function standardizeName(type, name) {
  if (_path().isAbsolute(name)) return name;
  const isPreset = type === "preset";
  return name.replace(isPreset ? BABEL_PRESET_PREFIX_RE : BABEL_PLUGIN_PREFIX_RE, `babel-${type}-`).replace(isPreset ? BABEL_PRESET_ORG_RE : BABEL_PLUGIN_ORG_RE, `$1${type}-`).replace(isPreset ? OTHER_PRESET_ORG_RE : OTHER_PLUGIN_ORG_RE, `$1babel-${type}-`).replace(OTHER_ORG_DEFAULT_RE, `$1/babel-${type}`).replace(EXACT_RE, "");
}

function resolveStandardizedName(type, name, dirname = process.cwd()) {
  const standardizedName = standardizeName(type, name);

  try {
    return (((v, w) => (v = v.split("."), w = w.split("."), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, "8.9") ? __webpack_require__(220).resolve : (r, {
      paths: [b]
    }, M = __webpack_require__(217)) => {
      let f = M._findPath(r, M._nodeModulePaths(b).concat(b));

      if (f) return f;
      f = new Error(`Cannot resolve module '${r}'`);
      f.code = "MODULE_NOT_FOUND";
      throw f;
    })(standardizedName, {
      paths: [dirname]
    });
  } catch (e) {
    if (e.code !== "MODULE_NOT_FOUND") throw e;

    if (standardizedName !== name) {
      let resolvedOriginal = false;

      try {
        (((v, w) => (v = v.split("."), w = w.split("."), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, "8.9") ? __webpack_require__(220).resolve : (r, {
          paths: [b]
        }, M = __webpack_require__(217)) => {
          let f = M._findPath(r, M._nodeModulePaths(b).concat(b));

          if (f) return f;
          f = new Error(`Cannot resolve module '${r}'`);
          f.code = "MODULE_NOT_FOUND";
          throw f;
        })(name, {
          paths: [dirname]
        });
        resolvedOriginal = true;
      } catch (_unused) {}

      if (resolvedOriginal) {
        e.message += `\n- If you want to resolve "${name}", use "module:${name}"`;
      }
    }

    let resolvedBabel = false;

    try {
      (((v, w) => (v = v.split("."), w = w.split("."), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, "8.9") ? __webpack_require__(220).resolve : (r, {
        paths: [b]
      }, M = __webpack_require__(217)) => {
        let f = M._findPath(r, M._nodeModulePaths(b).concat(b));

        if (f) return f;
        f = new Error(`Cannot resolve module '${r}'`);
        f.code = "MODULE_NOT_FOUND";
        throw f;
      })(standardizeName(type, "@babel/" + name), {
        paths: [dirname]
      });
      resolvedBabel = true;
    } catch (_unused2) {}

    if (resolvedBabel) {
      e.message += `\n- Did you mean "@babel/${name}"?`;
    }

    let resolvedOppositeType = false;
    const oppositeType = type === "preset" ? "plugin" : "preset";

    try {
      (((v, w) => (v = v.split("."), w = w.split("."), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, "8.9") ? __webpack_require__(220).resolve : (r, {
        paths: [b]
      }, M = __webpack_require__(217)) => {
        let f = M._findPath(r, M._nodeModulePaths(b).concat(b));

        if (f) return f;
        f = new Error(`Cannot resolve module '${r}'`);
        f.code = "MODULE_NOT_FOUND";
        throw f;
      })(standardizeName(oppositeType, name), {
        paths: [dirname]
      });
      resolvedOppositeType = true;
    } catch (_unused3) {}

    if (resolvedOppositeType) {
      e.message += `\n- Did you accidentally pass a ${oppositeType} as a ${type}?`;
    }

    throw e;
  }
}

const LOADING_MODULES = new Set();

function* requireModule(type, name) {
  if (LOADING_MODULES.has(name)) {
    throw new Error(`Reentrant ${type} detected trying to load "${name}". This module is not ignored ` + "and is trying to load itself while compiling itself, leading to a dependency cycle. " + 'We recommend adding it to your "ignore" list in your babelrc, or to a .babelignore.');
  }

  try {
    LOADING_MODULES.add(name);
    return yield* (0, _moduleTypes.default)(name, `You appear to be using a native ECMAScript module ${type}, ` + "which is only supported when running Babel asynchronously.", true);
  } catch (err) {
    err.message = `[BABEL]: ${err.message} (While processing: ${name})`;
    throw err;
  } finally {
    LOADING_MODULES.delete(name);
  }
}

/***/ }),
/* 223 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getEnv = getEnv;

function getEnv(defaultValue = "development") {
  return process.env.BABEL_ENV || process.env.NODE_ENV || defaultValue;
}

/***/ }),
/* 224 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.createConfigItem = createConfigItem;
Object.defineProperty(exports, "default", ({
  enumerable: true,
  get: function () {
    return _full.default;
  }
}));
exports.createConfigItemAsync = exports.createConfigItemSync = exports.loadOptionsAsync = exports.loadOptionsSync = exports.loadOptions = exports.loadPartialConfigAsync = exports.loadPartialConfigSync = exports.loadPartialConfig = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _full = __webpack_require__(225);

var _partial = __webpack_require__(1054);

var _item = __webpack_require__(227);

const loadOptionsRunner = _gensync()(function* (opts) {
  var _config$options;

  const config = yield* (0, _full.default)(opts);
  return (_config$options = config == null ? void 0 : config.options) != null ? _config$options : null;
});

const createConfigItemRunner = _gensync()(_item.createConfigItem);

const maybeErrback = runner => (opts, callback) => {
  if (callback === undefined && typeof opts === "function") {
    callback = opts;
    opts = undefined;
  }

  return callback ? runner.errback(opts, callback) : runner.sync(opts);
};

const loadPartialConfig = maybeErrback(_partial.loadPartialConfig);
exports.loadPartialConfig = loadPartialConfig;
const loadPartialConfigSync = _partial.loadPartialConfig.sync;
exports.loadPartialConfigSync = loadPartialConfigSync;
const loadPartialConfigAsync = _partial.loadPartialConfig.async;
exports.loadPartialConfigAsync = loadPartialConfigAsync;
const loadOptions = maybeErrback(loadOptionsRunner);
exports.loadOptions = loadOptions;
const loadOptionsSync = loadOptionsRunner.sync;
exports.loadOptionsSync = loadOptionsSync;
const loadOptionsAsync = loadOptionsRunner.async;
exports.loadOptionsAsync = loadOptionsAsync;
const createConfigItemSync = createConfigItemRunner.sync;
exports.createConfigItemSync = createConfigItemSync;
const createConfigItemAsync = createConfigItemRunner.async;
exports.createConfigItemAsync = createConfigItemAsync;

function createConfigItem(target, options, callback) {
  if (callback !== undefined) {
    return createConfigItemRunner.errback(target, options, callback);
  } else if (typeof options === "function") {
    return createConfigItemRunner.errback(target, undefined, callback);
  } else {
    return createConfigItemRunner.sync(target, options);
  }
}

/***/ }),
/* 225 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _async = __webpack_require__(207);

var _util = __webpack_require__(208);

var context = __webpack_require__(4);

var _plugin = __webpack_require__(226);

var _item = __webpack_require__(227);

var _configChain = __webpack_require__(1048);

function _traverse() {
  const data = __webpack_require__(7);

  _traverse = function () {
    return data;
  };

  return data;
}

var _caching = __webpack_require__(205);

var _options = __webpack_require__(1049);

var _plugins = __webpack_require__(1053);

var _configApi = __webpack_require__(213);

var _partial = __webpack_require__(1054);

var Context = __webpack_require__(214);

var _default = _gensync()(function* loadFullConfig(inputOpts) {
  var _opts$assumptions;

  const result = yield* (0, _partial.default)(inputOpts);

  if (!result) {
    return null;
  }

  const {
    options,
    context,
    fileHandling
  } = result;

  if (fileHandling === "ignored") {
    return null;
  }

  const optionDefaults = {};
  const {
    plugins,
    presets
  } = options;

  if (!plugins || !presets) {
    throw new Error("Assertion failure - plugins and presets exist");
  }

  const presetContext = Object.assign({}, context, {
    targets: options.targets
  });

  const toDescriptor = item => {
    const desc = (0, _item.getItemDescriptor)(item);

    if (!desc) {
      throw new Error("Assertion failure - must be config item");
    }

    return desc;
  };

  const presetsDescriptors = presets.map(toDescriptor);
  const initialPluginsDescriptors = plugins.map(toDescriptor);
  const pluginDescriptorsByPass = [[]];
  const passes = [];
  const ignored = yield* enhanceError(context, function* recursePresetDescriptors(rawPresets, pluginDescriptorsPass) {
    const presets = [];

    for (let i = 0; i < rawPresets.length; i++) {
      const descriptor = rawPresets[i];

      if (descriptor.options !== false) {
        try {
          if (descriptor.ownPass) {
            presets.push({
              preset: yield* loadPresetDescriptor(descriptor, presetContext),
              pass: []
            });
          } else {
            presets.unshift({
              preset: yield* loadPresetDescriptor(descriptor, presetContext),
              pass: pluginDescriptorsPass
            });
          }
        } catch (e) {
          if (e.code === "BABEL_UNKNOWN_OPTION") {
            (0, _options.checkNoUnwrappedItemOptionPairs)(rawPresets, i, "preset", e);
          }

          throw e;
        }
      }
    }

    if (presets.length > 0) {
      pluginDescriptorsByPass.splice(1, 0, ...presets.map(o => o.pass).filter(p => p !== pluginDescriptorsPass));

      for (const {
        preset,
        pass
      } of presets) {
        if (!preset) return true;
        pass.push(...preset.plugins);
        const ignored = yield* recursePresetDescriptors(preset.presets, pass);
        if (ignored) return true;
        preset.options.forEach(opts => {
          (0, _util.mergeOptions)(optionDefaults, opts);
        });
      }
    }
  })(presetsDescriptors, pluginDescriptorsByPass[0]);
  if (ignored) return null;
  const opts = optionDefaults;
  (0, _util.mergeOptions)(opts, options);
  const pluginContext = Object.assign({}, presetContext, {
    assumptions: (_opts$assumptions = opts.assumptions) != null ? _opts$assumptions : {}
  });
  yield* enhanceError(context, function* loadPluginDescriptors() {
    pluginDescriptorsByPass[0].unshift(...initialPluginsDescriptors);

    for (const descs of pluginDescriptorsByPass) {
      const pass = [];
      passes.push(pass);

      for (let i = 0; i < descs.length; i++) {
        const descriptor = descs[i];

        if (descriptor.options !== false) {
          try {
            pass.push(yield* loadPluginDescriptor(descriptor, pluginContext));
          } catch (e) {
            if (e.code === "BABEL_UNKNOWN_PLUGIN_PROPERTY") {
              (0, _options.checkNoUnwrappedItemOptionPairs)(descs, i, "plugin", e);
            }

            throw e;
          }
        }
      }
    }
  })();
  opts.plugins = passes[0];
  opts.presets = passes.slice(1).filter(plugins => plugins.length > 0).map(plugins => ({
    plugins
  }));
  opts.passPerPreset = opts.presets.length > 0;
  return {
    options: opts,
    passes: passes
  };
});

exports.default = _default;

function enhanceError(context, fn) {
  return function* (arg1, arg2) {
    try {
      return yield* fn(arg1, arg2);
    } catch (e) {
      if (!/^\[BABEL\]/.test(e.message)) {
        e.message = `[BABEL] ${context.filename || "unknown"}: ${e.message}`;
      }

      throw e;
    }
  };
}

const makeDescriptorLoader = apiFactory => (0, _caching.makeWeakCache)(function* ({
  value,
  options,
  dirname,
  alias
}, cache) {
  if (options === false) throw new Error("Assertion failure");
  options = options || {};
  let item = value;

  if (typeof value === "function") {
    const factory = (0, _async.maybeAsync)(value, `You appear to be using an async plugin/preset, but Babel has been called synchronously`);
    const api = Object.assign({}, context, apiFactory(cache));

    try {
      item = yield* factory(api, options, dirname);
    } catch (e) {
      if (alias) {
        e.message += ` (While processing: ${JSON.stringify(alias)})`;
      }

      throw e;
    }
  }

  if (!item || typeof item !== "object") {
    throw new Error("Plugin/Preset did not return an object.");
  }

  if ((0, _async.isThenable)(item)) {
    yield* [];
    throw new Error(`You appear to be using a promise as a plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version. ` + `As an alternative, you can prefix the promise with "await". ` + `(While processing: ${JSON.stringify(alias)})`);
  }

  return {
    value: item,
    options,
    dirname,
    alias
  };
});

const pluginDescriptorLoader = makeDescriptorLoader(_configApi.makePluginAPI);
const presetDescriptorLoader = makeDescriptorLoader(_configApi.makePresetAPI);

function* loadPluginDescriptor(descriptor, context) {
  if (descriptor.value instanceof _plugin.default) {
    if (descriptor.options) {
      throw new Error("Passed options to an existing Plugin instance will not work.");
    }

    return descriptor.value;
  }

  return yield* instantiatePlugin(yield* pluginDescriptorLoader(descriptor, context), context);
}

const instantiatePlugin = (0, _caching.makeWeakCache)(function* ({
  value,
  options,
  dirname,
  alias
}, cache) {
  const pluginObj = (0, _plugins.validatePluginObject)(value);
  const plugin = Object.assign({}, pluginObj);

  if (plugin.visitor) {
    plugin.visitor = _traverse().default.explode(Object.assign({}, plugin.visitor));
  }

  if (plugin.inherits) {
    const inheritsDescriptor = {
      name: undefined,
      alias: `${alias}$inherits`,
      value: plugin.inherits,
      options,
      dirname
    };
    const inherits = yield* (0, _async.forwardAsync)(loadPluginDescriptor, run => {
      return cache.invalidate(data => run(inheritsDescriptor, data));
    });
    plugin.pre = chain(inherits.pre, plugin.pre);
    plugin.post = chain(inherits.post, plugin.post);
    plugin.manipulateOptions = chain(inherits.manipulateOptions, plugin.manipulateOptions);
    plugin.visitor = _traverse().default.visitors.merge([inherits.visitor || {}, plugin.visitor || {}]);
  }

  return new _plugin.default(plugin, options, alias);
});

const validateIfOptionNeedsFilename = (options, descriptor) => {
  if (options.test || options.include || options.exclude) {
    const formattedPresetName = descriptor.name ? `"${descriptor.name}"` : "/* your preset */";
    throw new Error([`Preset ${formattedPresetName} requires a filename to be set when babel is called directly,`, `\`\`\``, `babel.transform(code, { filename: 'file.ts', presets: [${formattedPresetName}] });`, `\`\`\``, `See https://babeljs.io/docs/en/options#filename for more information.`].join("\n"));
  }
};

const validatePreset = (preset, context, descriptor) => {
  if (!context.filename) {
    const {
      options
    } = preset;
    validateIfOptionNeedsFilename(options, descriptor);

    if (options.overrides) {
      options.overrides.forEach(overrideOptions => validateIfOptionNeedsFilename(overrideOptions, descriptor));
    }
  }
};

function* loadPresetDescriptor(descriptor, context) {
  const preset = instantiatePreset(yield* presetDescriptorLoader(descriptor, context));
  validatePreset(preset, context, descriptor);
  return yield* (0, _configChain.buildPresetChain)(preset, context);
}

const instantiatePreset = (0, _caching.makeWeakCacheSync)(({
  value,
  dirname,
  alias
}) => {
  return {
    options: (0, _options.validate)("preset", value),
    alias,
    dirname
  };
});

function chain(a, b) {
  const fns = [a, b].filter(Boolean);
  if (fns.length <= 1) return fns[0];
  return function (...args) {
    for (const fn of fns) {
      fn.apply(this, args);
    }
  };
}

/***/ }),
/* 226 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

class Plugin {
  constructor(plugin, options, key) {
    this.key = void 0;
    this.manipulateOptions = void 0;
    this.post = void 0;
    this.pre = void 0;
    this.visitor = void 0;
    this.parserOverride = void 0;
    this.generatorOverride = void 0;
    this.options = void 0;
    this.key = plugin.name || key;
    this.manipulateOptions = plugin.manipulateOptions;
    this.post = plugin.post;
    this.pre = plugin.pre;
    this.visitor = plugin.visitor || {};
    this.parserOverride = plugin.parserOverride;
    this.generatorOverride = plugin.generatorOverride;
    this.options = options;
  }

}

exports.default = Plugin;

/***/ }),
/* 227 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.createItemFromDescriptor = createItemFromDescriptor;
exports.createConfigItem = createConfigItem;
exports.getItemDescriptor = getItemDescriptor;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

var _configDescriptors = __webpack_require__(228);

function createItemFromDescriptor(desc) {
  return new ConfigItem(desc);
}

function* createConfigItem(value, {
  dirname = ".",
  type
} = {}) {
  const descriptor = yield* (0, _configDescriptors.createDescriptor)(value, _path().resolve(dirname), {
    type,
    alias: "programmatic item"
  });
  return createItemFromDescriptor(descriptor);
}

function getItemDescriptor(item) {
  if (item != null && item[CONFIG_ITEM_BRAND]) {
    return item._descriptor;
  }

  return undefined;
}

const CONFIG_ITEM_BRAND = Symbol.for("@babel/core@7 - ConfigItem");

class ConfigItem {
  constructor(descriptor) {
    this._descriptor = void 0;
    this[CONFIG_ITEM_BRAND] = true;
    this.value = void 0;
    this.options = void 0;
    this.dirname = void 0;
    this.name = void 0;
    this.file = void 0;
    this._descriptor = descriptor;
    Object.defineProperty(this, "_descriptor", {
      enumerable: false
    });
    Object.defineProperty(this, CONFIG_ITEM_BRAND, {
      enumerable: false
    });
    this.value = this._descriptor.value;
    this.options = this._descriptor.options;
    this.dirname = this._descriptor.dirname;
    this.name = this._descriptor.name;
    this.file = this._descriptor.file ? {
      request: this._descriptor.file.request,
      resolved: this._descriptor.file.resolved
    } : undefined;
    Object.freeze(this);
  }

}

Object.freeze(ConfigItem.prototype);

/***/ }),
/* 228 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.createCachedDescriptors = createCachedDescriptors;
exports.createUncachedDescriptors = createUncachedDescriptors;
exports.createDescriptor = createDescriptor;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _files = __webpack_require__(202);

var _item = __webpack_require__(227);

var _caching = __webpack_require__(205);

var _resolveTargets = __webpack_require__(229);

function isEqualDescriptor(a, b) {
  return a.name === b.name && a.value === b.value && a.options === b.options && a.dirname === b.dirname && a.alias === b.alias && a.ownPass === b.ownPass && (a.file && a.file.request) === (b.file && b.file.request) && (a.file && a.file.resolved) === (b.file && b.file.resolved);
}

function* handlerOf(value) {
  return value;
}

function optionsWithResolvedBrowserslistConfigFile(options, dirname) {
  if (typeof options.browserslistConfigFile === "string") {
    options.browserslistConfigFile = (0, _resolveTargets.resolveBrowserslistConfigFile)(options.browserslistConfigFile, dirname);
  }

  return options;
}

function createCachedDescriptors(dirname, options, alias) {
  const {
    plugins,
    presets,
    passPerPreset
  } = options;
  return {
    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),
    plugins: plugins ? () => createCachedPluginDescriptors(plugins, dirname)(alias) : () => handlerOf([]),
    presets: presets ? () => createCachedPresetDescriptors(presets, dirname)(alias)(!!passPerPreset) : () => handlerOf([])
  };
}

function createUncachedDescriptors(dirname, options, alias) {
  let plugins;
  let presets;
  return {
    options: optionsWithResolvedBrowserslistConfigFile(options, dirname),

    *plugins() {
      if (!plugins) {
        plugins = yield* createPluginDescriptors(options.plugins || [], dirname, alias);
      }

      return plugins;
    },

    *presets() {
      if (!presets) {
        presets = yield* createPresetDescriptors(options.presets || [], dirname, alias, !!options.passPerPreset);
      }

      return presets;
    }

  };
}

const PRESET_DESCRIPTOR_CACHE = new WeakMap();
const createCachedPresetDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {
  const dirname = cache.using(dir => dir);
  return (0, _caching.makeStrongCacheSync)(alias => (0, _caching.makeStrongCache)(function* (passPerPreset) {
    const descriptors = yield* createPresetDescriptors(items, dirname, alias, passPerPreset);
    return descriptors.map(desc => loadCachedDescriptor(PRESET_DESCRIPTOR_CACHE, desc));
  }));
});
const PLUGIN_DESCRIPTOR_CACHE = new WeakMap();
const createCachedPluginDescriptors = (0, _caching.makeWeakCacheSync)((items, cache) => {
  const dirname = cache.using(dir => dir);
  return (0, _caching.makeStrongCache)(function* (alias) {
    const descriptors = yield* createPluginDescriptors(items, dirname, alias);
    return descriptors.map(desc => loadCachedDescriptor(PLUGIN_DESCRIPTOR_CACHE, desc));
  });
});
const DEFAULT_OPTIONS = {};

function loadCachedDescriptor(cache, desc) {
  const {
    value,
    options = DEFAULT_OPTIONS
  } = desc;
  if (options === false) return desc;
  let cacheByOptions = cache.get(value);

  if (!cacheByOptions) {
    cacheByOptions = new WeakMap();
    cache.set(value, cacheByOptions);
  }

  let possibilities = cacheByOptions.get(options);

  if (!possibilities) {
    possibilities = [];
    cacheByOptions.set(options, possibilities);
  }

  if (possibilities.indexOf(desc) === -1) {
    const matches = possibilities.filter(possibility => isEqualDescriptor(possibility, desc));

    if (matches.length > 0) {
      return matches[0];
    }

    possibilities.push(desc);
  }

  return desc;
}

function* createPresetDescriptors(items, dirname, alias, passPerPreset) {
  return yield* createDescriptors("preset", items, dirname, alias, passPerPreset);
}

function* createPluginDescriptors(items, dirname, alias) {
  return yield* createDescriptors("plugin", items, dirname, alias);
}

function* createDescriptors(type, items, dirname, alias, ownPass) {
  const descriptors = yield* _gensync().all(items.map((item, index) => createDescriptor(item, dirname, {
    type,
    alias: `${alias}$${index}`,
    ownPass: !!ownPass
  })));
  assertNoDuplicates(descriptors);
  return descriptors;
}

function* createDescriptor(pair, dirname, {
  type,
  alias,
  ownPass
}) {
  const desc = (0, _item.getItemDescriptor)(pair);

  if (desc) {
    return desc;
  }

  let name;
  let options;
  let value = pair;

  if (Array.isArray(value)) {
    if (value.length === 3) {
      [value, options, name] = value;
    } else {
      [value, options] = value;
    }
  }

  let file = undefined;
  let filepath = null;

  if (typeof value === "string") {
    if (typeof type !== "string") {
      throw new Error("To resolve a string-based item, the type of item must be given");
    }

    const resolver = type === "plugin" ? _files.loadPlugin : _files.loadPreset;
    const request = value;
    ({
      filepath,
      value
    } = yield* resolver(value, dirname));
    file = {
      request,
      resolved: filepath
    };
  }

  if (!value) {
    throw new Error(`Unexpected falsy value: ${String(value)}`);
  }

  if (typeof value === "object" && value.__esModule) {
    if (value.default) {
      value = value.default;
    } else {
      throw new Error("Must export a default export when using ES6 modules.");
    }
  }

  if (typeof value !== "object" && typeof value !== "function") {
    throw new Error(`Unsupported format: ${typeof value}. Expected an object or a function.`);
  }

  if (filepath !== null && typeof value === "object" && value) {
    throw new Error(`Plugin/Preset files are not allowed to export objects, only functions. In ${filepath}`);
  }

  return {
    name,
    alias: filepath || alias,
    value,
    options,
    dirname,
    ownPass,
    file
  };
}

function assertNoDuplicates(items) {
  const map = new Map();

  for (const item of items) {
    if (typeof item.value !== "function") continue;
    let nameMap = map.get(item.value);

    if (!nameMap) {
      nameMap = new Set();
      map.set(item.value, nameMap);
    }

    if (nameMap.has(item.name)) {
      const conflicts = items.filter(i => i.value === item.value);
      throw new Error([`Duplicate plugin/preset detected.`, `If you'd like to use two separate instances of a plugin,`, `they need separate names, e.g.`, ``, `  plugins: [`, `    ['some-plugin', {}],`, `    ['some-plugin', {}, 'some unique name'],`, `  ]`, ``, `Duplicates detected are:`, `${JSON.stringify(conflicts, null, 2)}`].join("\n"));
    }

    nameMap.add(item.name);
  }
}

/***/ }),
/* 229 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.resolveBrowserslistConfigFile = resolveBrowserslistConfigFile;
exports.resolveTargets = resolveTargets;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function _helperCompilationTargets() {
  const data = __webpack_require__(230);

  _helperCompilationTargets = function () {
    return data;
  };

  return data;
}

({});

function resolveBrowserslistConfigFile(browserslistConfigFile, configFileDir) {
  return _path().resolve(configFileDir, browserslistConfigFile);
}

function resolveTargets(options, root) {
  let targets = options.targets;

  if (typeof targets === "string" || Array.isArray(targets)) {
    targets = {
      browsers: targets
    };
  }

  if (targets && targets.esmodules) {
    targets = Object.assign({}, targets, {
      esmodules: "intersect"
    });
  }

  const {
    browserslistConfigFile
  } = options;
  let configFile;
  let ignoreBrowserslistConfig = false;

  if (typeof browserslistConfigFile === "string") {
    configFile = browserslistConfigFile;
  } else {
    ignoreBrowserslistConfig = browserslistConfigFile === false;
  }

  return (0, _helperCompilationTargets().default)(targets, {
    ignoreBrowserslistConfig,
    configFile,
    configPath: root,
    browserslistEnv: options.browserslistEnv
  });
}

/***/ }),
/* 230 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.isBrowsersQueryValid = isBrowsersQueryValid;
exports.default = getTargets;
Object.defineProperty(exports, "unreleasedLabels", ({
  enumerable: true,
  get: function () {
    return _targets.unreleasedLabels;
  }
}));
Object.defineProperty(exports, "TargetNames", ({
  enumerable: true,
  get: function () {
    return _options.TargetNames;
  }
}));
Object.defineProperty(exports, "prettifyTargets", ({
  enumerable: true,
  get: function () {
    return _pretty.prettifyTargets;
  }
}));
Object.defineProperty(exports, "getInclusionReasons", ({
  enumerable: true,
  get: function () {
    return _debug.getInclusionReasons;
  }
}));
Object.defineProperty(exports, "filterItems", ({
  enumerable: true,
  get: function () {
    return _filterItems.default;
  }
}));
Object.defineProperty(exports, "isRequired", ({
  enumerable: true,
  get: function () {
    return _filterItems.isRequired;
  }
}));

var _browserslist = __webpack_require__(231);

var _helperValidatorOption = __webpack_require__(1034);

var _nativeModules = __webpack_require__(1037);

var _utils = __webpack_require__(1039);

var _targets = __webpack_require__(1041);

var _options = __webpack_require__(1042);

var _pretty = __webpack_require__(1043);

var _debug = __webpack_require__(1044);

var _filterItems = __webpack_require__(1045);

const ESM_SUPPORT = _nativeModules["es6.module"];
const v = new _helperValidatorOption.OptionValidator("@babel/helper-compilation-targets");

function validateTargetNames(targets) {
  const validTargets = Object.keys(_options.TargetNames);

  for (const target of Object.keys(targets)) {
    if (!(target in _options.TargetNames)) {
      throw new Error(v.formatMessage(`'${target}' is not a valid target
- Did you mean '${(0, _helperValidatorOption.findSuggestion)(target, validTargets)}'?`));
    }
  }

  return targets;
}

function isBrowsersQueryValid(browsers) {
  return typeof browsers === "string" || Array.isArray(browsers) && browsers.every(b => typeof b === "string");
}

function validateBrowsers(browsers) {
  v.invariant(browsers === undefined || isBrowsersQueryValid(browsers), `'${String(browsers)}' is not a valid browserslist query`);
  return browsers;
}

function getLowestVersions(browsers) {
  return browsers.reduce((all, browser) => {
    const [browserName, browserVersion] = browser.split(" ");
    const normalizedBrowserName = _targets.browserNameMap[browserName];

    if (!normalizedBrowserName) {
      return all;
    }

    try {
      const splitVersion = browserVersion.split("-")[0].toLowerCase();
      const isSplitUnreleased = (0, _utils.isUnreleasedVersion)(splitVersion, browserName);

      if (!all[normalizedBrowserName]) {
        all[normalizedBrowserName] = isSplitUnreleased ? splitVersion : (0, _utils.semverify)(splitVersion);
        return all;
      }

      const version = all[normalizedBrowserName];
      const isUnreleased = (0, _utils.isUnreleasedVersion)(version, browserName);

      if (isUnreleased && isSplitUnreleased) {
        all[normalizedBrowserName] = (0, _utils.getLowestUnreleased)(version, splitVersion, browserName);
      } else if (isUnreleased) {
        all[normalizedBrowserName] = (0, _utils.semverify)(splitVersion);
      } else if (!isUnreleased && !isSplitUnreleased) {
        const parsedBrowserVersion = (0, _utils.semverify)(splitVersion);
        all[normalizedBrowserName] = (0, _utils.semverMin)(version, parsedBrowserVersion);
      }
    } catch (e) {}

    return all;
  }, {});
}

function outputDecimalWarning(decimalTargets) {
  if (!decimalTargets.length) {
    return;
  }

  console.warn("Warning, the following targets are using a decimal version:\n");
  decimalTargets.forEach(({
    target,
    value
  }) => console.warn(`  ${target}: ${value}`));
  console.warn(`
We recommend using a string for minor/patch versions to avoid numbers like 6.10
getting parsed as 6.1, which can lead to unexpected behavior.
`);
}

function semverifyTarget(target, value) {
  try {
    return (0, _utils.semverify)(value);
  } catch (error) {
    throw new Error(v.formatMessage(`'${value}' is not a valid value for 'targets.${target}'.`));
  }
}

const targetParserMap = {
  __default(target, value) {
    const version = (0, _utils.isUnreleasedVersion)(value, target) ? value.toLowerCase() : semverifyTarget(target, value);
    return [target, version];
  },

  node(target, value) {
    const parsed = value === true || value === "current" ? process.versions.node : semverifyTarget(target, value);
    return [target, parsed];
  }

};

function generateTargets(inputTargets) {
  const input = Object.assign({}, inputTargets);
  delete input.esmodules;
  delete input.browsers;
  return input;
}

function resolveTargets(queries) {
  const resolved = _browserslist(queries, {
    mobileToDesktop: true
  });

  return getLowestVersions(resolved);
}

function getTargets(inputTargets = {}, options = {}) {
  var _browsers;

  let {
    browsers,
    esmodules
  } = inputTargets;
  const {
    configPath = "."
  } = options;
  validateBrowsers(browsers);
  const input = generateTargets(inputTargets);
  let targets = validateTargetNames(input);
  const shouldParseBrowsers = !!browsers;
  const hasTargets = shouldParseBrowsers || Object.keys(targets).length > 0;
  const shouldSearchForConfig = !options.ignoreBrowserslistConfig && !hasTargets;

  if (!browsers && shouldSearchForConfig) {
    browsers = _browserslist.loadConfig({
      config: options.configFile,
      path: configPath,
      env: options.browserslistEnv
    });

    if (browsers == null) {
      {
        browsers = [];
      }
    }
  }

  if (esmodules && (esmodules !== "intersect" || !((_browsers = browsers) != null && _browsers.length))) {
    browsers = Object.keys(ESM_SUPPORT).map(browser => `${browser} >= ${ESM_SUPPORT[browser]}`).join(", ");
    esmodules = false;
  }

  if (browsers) {
    const queryBrowsers = resolveTargets(browsers);

    if (esmodules === "intersect") {
      for (const browser of Object.keys(queryBrowsers)) {
        const version = queryBrowsers[browser];

        if (ESM_SUPPORT[browser]) {
          queryBrowsers[browser] = (0, _utils.getHighestUnreleased)(version, (0, _utils.semverify)(ESM_SUPPORT[browser]), browser);
        } else {
          delete queryBrowsers[browser];
        }
      }
    }

    targets = Object.assign(queryBrowsers, targets);
  }

  const result = {};
  const decimalWarnings = [];

  for (const target of Object.keys(targets).sort()) {
    var _targetParserMap$targ;

    const value = targets[target];

    if (typeof value === "number" && value % 1 !== 0) {
      decimalWarnings.push({
        target,
        value
      });
    }

    const parser = (_targetParserMap$targ = targetParserMap[target]) != null ? _targetParserMap$targ : targetParserMap.__default;
    const [parsedTarget, parsedValue] = parser(target, value);

    if (parsedValue) {
      result[parsedTarget] = parsedValue;
    }
  }

  outputDecimalWarning(decimalWarnings);
  return result;
}

/***/ }),
/* 231 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var jsReleases = __webpack_require__(232)
var agents = __webpack_require__(233).agents
var jsEOL = __webpack_require__(239)
var path = __webpack_require__(198)
var e2c = __webpack_require__(240)

var BrowserslistError = __webpack_require__(241)
var env = __webpack_require__(242) // Will load browser.js in webpack

var YEAR = 365.259641 * 24 * 60 * 60 * 1000
var ANDROID_EVERGREEN_FIRST = 37

var QUERY_OR = 1
var QUERY_AND = 2

function isVersionsMatch (versionA, versionB) {
  return (versionA + '.').indexOf(versionB + '.') === 0
}

function isEolReleased (name) {
  var version = name.slice(1)
  return jsReleases.some(function (i) {
    return isVersionsMatch(i.version, version)
  })
}

function normalize (versions) {
  return versions.filter(function (version) {
    return typeof version === 'string'
  })
}

function normalizeElectron (version) {
  var versionToUse = version
  if (version.split('.').length === 3) {
    versionToUse = version
      .split('.')
      .slice(0, -1)
      .join('.')
  }
  return versionToUse
}

function nameMapper (name) {
  return function mapName (version) {
    return name + ' ' + version
  }
}

function getMajor (version) {
  return parseInt(version.split('.')[0])
}

function getMajorVersions (released, number) {
  if (released.length === 0) return []
  var majorVersions = uniq(released.map(getMajor))
  var minimum = majorVersions[majorVersions.length - number]
  if (!minimum) {
    return released
  }
  var selected = []
  for (var i = released.length - 1; i >= 0; i--) {
    if (minimum > getMajor(released[i])) break
    selected.unshift(released[i])
  }
  return selected
}

function uniq (array) {
  var filtered = []
  for (var i = 0; i < array.length; i++) {
    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])
  }
  return filtered
}

// Helpers

function fillUsage (result, name, data) {
  for (var i in data) {
    result[name + ' ' + i] = data[i]
  }
}

function generateFilter (sign, version) {
  version = parseFloat(version)
  if (sign === '>') {
    return function (v) {
      return parseFloat(v) > version
    }
  } else if (sign === '>=') {
    return function (v) {
      return parseFloat(v) >= version
    }
  } else if (sign === '<') {
    return function (v) {
      return parseFloat(v) < version
    }
  } else {
    return function (v) {
      return parseFloat(v) <= version
    }
  }
}

function generateSemverFilter (sign, version) {
  version = version.split('.').map(parseSimpleInt)
  version[1] = version[1] || 0
  version[2] = version[2] || 0
  if (sign === '>') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(v, version) > 0
    }
  } else if (sign === '>=') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(v, version) >= 0
    }
  } else if (sign === '<') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(version, v) > 0
    }
  } else {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(version, v) >= 0
    }
  }
}

function parseSimpleInt (x) {
  return parseInt(x)
}

function compare (a, b) {
  if (a < b) return -1
  if (a > b) return +1
  return 0
}

function compareSemver (a, b) {
  return (
    compare(parseInt(a[0]), parseInt(b[0])) ||
    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||
    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))
  )
}

// this follows the npm-like semver behavior
function semverFilterLoose (operator, range) {
  range = range.split('.').map(parseSimpleInt)
  if (typeof range[1] === 'undefined') {
    range[1] = 'x'
  }
  // ignore any patch version because we only return minor versions
  // range[2] = 'x'
  switch (operator) {
    case '<=':
      return function (version) {
        version = version.split('.').map(parseSimpleInt)
        return compareSemverLoose(version, range) <= 0
      }
    default:
    case '>=':
      return function (version) {
        version = version.split('.').map(parseSimpleInt)
        return compareSemverLoose(version, range) >= 0
      }
  }
}

// this follows the npm-like semver behavior
function compareSemverLoose (version, range) {
  if (version[0] !== range[0]) {
    return version[0] < range[0] ? -1 : +1
  }
  if (range[1] === 'x') {
    return 0
  }
  if (version[1] !== range[1]) {
    return version[1] < range[1] ? -1 : +1
  }
  return 0
}

function resolveVersion (data, version) {
  if (data.versions.indexOf(version) !== -1) {
    return version
  } else if (browserslist.versionAliases[data.name][version]) {
    return browserslist.versionAliases[data.name][version]
  } else {
    return false
  }
}

function normalizeVersion (data, version) {
  var resolved = resolveVersion(data, version)
  if (resolved) {
    return resolved
  } else if (data.versions.length === 1) {
    return data.versions[0]
  } else {
    return false
  }
}

function filterByYear (since, context) {
  since = since / 1000
  return Object.keys(agents).reduce(function (selected, name) {
    var data = byName(name, context)
    if (!data) return selected
    var versions = Object.keys(data.releaseDate).filter(function (v) {
      return data.releaseDate[v] >= since
    })
    return selected.concat(versions.map(nameMapper(data.name)))
  }, [])
}

function cloneData (data) {
  return {
    name: data.name,
    versions: data.versions,
    released: data.released,
    releaseDate: data.releaseDate
  }
}

function mapVersions (data, map) {
  data.versions = data.versions.map(function (i) {
    return map[i] || i
  })
  data.released = data.versions.map(function (i) {
    return map[i] || i
  })
  var fixedDate = { }
  for (var i in data.releaseDate) {
    fixedDate[map[i] || i] = data.releaseDate[i]
  }
  data.releaseDate = fixedDate
  return data
}

function byName (name, context) {
  name = name.toLowerCase()
  name = browserslist.aliases[name] || name
  if (context.mobileToDesktop && browserslist.desktopNames[name]) {
    var desktop = browserslist.data[browserslist.desktopNames[name]]
    if (name === 'android') {
      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)
    } else {
      var cloned = cloneData(desktop)
      cloned.name = name
      if (name === 'op_mob') {
        cloned = mapVersions(cloned, { '10.0-10.1': '10' })
      }
      return cloned
    }
  }
  return browserslist.data[name]
}

function normalizeAndroidVersions (androidVersions, chromeVersions) {
  var firstEvergreen = ANDROID_EVERGREEN_FIRST
  var last = chromeVersions[chromeVersions.length - 1]
  return androidVersions
    .filter(function (version) { return /^(?:[2-4]\.|[34]$)/.test(version) })
    .concat(chromeVersions.slice(firstEvergreen - last - 1))
}

function normalizeAndroidData (android, chrome) {
  android.released = normalizeAndroidVersions(android.released, chrome.released)
  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)
  return android
}

function checkName (name, context) {
  var data = byName(name, context)
  if (!data) throw new BrowserslistError('Unknown browser ' + name)
  return data
}

function unknownQuery (query) {
  return new BrowserslistError(
    'Unknown browser query `' + query + '`. ' +
    'Maybe you are using old Browserslist or made typo in query.'
  )
}

function filterAndroid (list, versions, context) {
  if (context.mobileToDesktop) return list
  var released = browserslist.data.android.released
  var last = released[released.length - 1]
  var diff = last - ANDROID_EVERGREEN_FIRST - versions
  if (diff > 0) {
    return list.slice(-1)
  } else {
    return list.slice(diff - 1)
  }
}

/**
 * Resolves queries into a browser list.
 * @param {string|string[]} queries Queries to combine.
 * Either an array of queries or a long string of queries.
 * @param {object} [context] Optional arguments to
 * the select function in `queries`.
 * @returns {string[]} A list of browsers
 */
function resolve (queries, context) {
  if (Array.isArray(queries)) {
    queries = flatten(queries.map(parse))
  } else {
    queries = parse(queries)
  }

  return queries.reduce(function (result, query, index) {
    var selection = query.queryString

    var isExclude = selection.indexOf('not ') === 0
    if (isExclude) {
      if (index === 0) {
        throw new BrowserslistError(
          'Write any browsers query (for instance, `defaults`) ' +
          'before `' + selection + '`')
      }
      selection = selection.slice(4)
    }

    for (var i = 0; i < QUERIES.length; i++) {
      var type = QUERIES[i]
      var match = selection.match(type.regexp)
      if (match) {
        var args = [context].concat(match.slice(1))
        var array = type.select.apply(browserslist, args).map(function (j) {
          var parts = j.split(' ')
          if (parts[1] === '0') {
            return parts[0] + ' ' + byName(parts[0], context).versions[0]
          } else {
            return j
          }
        })

        switch (query.type) {
          case QUERY_AND:
            if (isExclude) {
              return result.filter(function (j) {
                return array.indexOf(j) === -1
              })
            } else {
              return result.filter(function (j) {
                return array.indexOf(j) !== -1
              })
            }
          case QUERY_OR:
          default:
            if (isExclude) {
              var filter = { }
              array.forEach(function (j) {
                filter[j] = true
              })
              return result.filter(function (j) {
                return !filter[j]
              })
            }
            return result.concat(array)
        }
      }
    }

    throw unknownQuery(selection)
  }, [])
}

var cache = { }

/**
 * Return array of browsers by selection queries.
 *
 * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.
 * @param {object} [opts] Options.
 * @param {string} [opts.path="."] Path to processed file.
 *                                 It will be used to find config files.
 * @param {string} [opts.env="production"] Processing environment.
 *                                         It will be used to take right
 *                                         queries from config file.
 * @param {string} [opts.config] Path to config file with queries.
 * @param {object} [opts.stats] Custom browser usage statistics
 *                              for "> 1% in my stats" query.
 * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown
 *                                                     version in direct query.
 * @param {boolean} [opts.dangerousExtend] Disable security checks
 *                                         for extend query.
 * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop
 *                                         version when Can I Use doesn't have
 *                                         data about the specified version.
 * @returns {string[]} Array with browser names in Can I Use.
 *
 * @example
 * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']
 */
function browserslist (queries, opts) {
  if (typeof opts === 'undefined') opts = { }

  if (typeof opts.path === 'undefined') {
    opts.path = path.resolve ? path.resolve('.') : '.'
  }

  if (typeof queries === 'undefined' || queries === null) {
    var config = browserslist.loadConfig(opts)
    if (config) {
      queries = config
    } else {
      queries = browserslist.defaults
    }
  }

  if (!(typeof queries === 'string' || Array.isArray(queries))) {
    throw new BrowserslistError(
      'Browser queries must be an array or string. Got ' + typeof queries + '.')
  }

  var context = {
    ignoreUnknownVersions: opts.ignoreUnknownVersions,
    dangerousExtend: opts.dangerousExtend,
    mobileToDesktop: opts.mobileToDesktop,
    path: opts.path,
    env: opts.env
  }

  env.oldDataWarning(browserslist.data)
  var stats = env.getStat(opts, browserslist.data)
  if (stats) {
    context.customUsage = { }
    for (var browser in stats) {
      fillUsage(context.customUsage, browser, stats[browser])
    }
  }

  var cacheKey = JSON.stringify([queries, context])
  if (cache[cacheKey]) return cache[cacheKey]

  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {
    name1 = name1.split(' ')
    name2 = name2.split(' ')
    if (name1[0] === name2[0]) {
      // assumptions on caniuse data
      // 1) version ranges never overlaps
      // 2) if version is not a range, it never contains `-`
      var version1 = name1[1].split('-')[0]
      var version2 = name2[1].split('-')[0]
      return compareSemver(version2.split('.'), version1.split('.'))
    } else {
      return compare(name1[0], name2[0])
    }
  })
  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
    cache[cacheKey] = result
  }
  return result
}

function parse (queries) {
  var qs = []
  do {
    queries = doMatch(queries, qs)
  } while (queries)
  return qs
}

function doMatch (string, qs) {
  var or = /^(?:,\s*|\s+or\s+)(.*)/i
  var and = /^\s+and\s+(.*)/i

  return find(string, function (parsed, n, max) {
    if (and.test(parsed)) {
      qs.unshift({ type: QUERY_AND, queryString: parsed.match(and)[1] })
      return true
    } else if (or.test(parsed)) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.match(or)[1] })
      return true
    } else if (n === max) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.trim() })
      return true
    }
    return false
  })
}

function find (string, predicate) {
  for (var n = 1, max = string.length; n <= max; n++) {
    var parsed = string.substr(-n, n)
    if (predicate(parsed, n, max)) {
      return string.slice(0, -n)
    }
  }
  return ''
}

function flatten (array) {
  if (!Array.isArray(array)) return [array]
  return array.reduce(function (a, b) {
    return a.concat(flatten(b))
  }, [])
}

// Will be filled by Can I Use data below
browserslist.cache = { }
browserslist.data = { }
browserslist.usage = {
  global: { },
  custom: null
}

// Default browsers query
browserslist.defaults = [
  '> 0.5%',
  'last 2 versions',
  'Firefox ESR',
  'not dead'
]

// Browser names aliases
browserslist.aliases = {
  fx: 'firefox',
  ff: 'firefox',
  ios: 'ios_saf',
  explorer: 'ie',
  blackberry: 'bb',
  explorermobile: 'ie_mob',
  operamini: 'op_mini',
  operamobile: 'op_mob',
  chromeandroid: 'and_chr',
  firefoxandroid: 'and_ff',
  ucandroid: 'and_uc',
  qqandroid: 'and_qq'
}

// Can I Use only provides a few versions for some browsers (e.g. and_chr).
// Fallback to a similar browser for unknown versions
browserslist.desktopNames = {
  and_chr: 'chrome',
  and_ff: 'firefox',
  ie_mob: 'ie',
  op_mob: 'opera',
  android: 'chrome' // has extra processing logic
}

// Aliases to work with joined versions like `ios_saf 7.0-7.1`
browserslist.versionAliases = { }

browserslist.clearCaches = env.clearCaches
browserslist.parseConfig = env.parseConfig
browserslist.readConfig = env.readConfig
browserslist.findConfig = env.findConfig
browserslist.loadConfig = env.loadConfig

/**
 * Return browsers market coverage.
 *
 * @param {string[]} browsers Browsers names in Can I Use.
 * @param {string|object} [stats="global"] Which statistics should be used.
 *                                         Country code or custom statistics.
 *                                         Pass `"my stats"` to load statistics
 *                                         from Browserslist files.
 *
 * @return {number} Total market coverage for all selected browsers.
 *
 * @example
 * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1
 */
browserslist.coverage = function (browsers, stats) {
  var data
  if (typeof stats === 'undefined') {
    data = browserslist.usage.global
  } else if (stats === 'my stats') {
    var opts = {}
    opts.path = path.resolve ? path.resolve('.') : '.'
    var customStats = env.getStat(opts)
    if (!customStats) {
      throw new BrowserslistError('Custom usage statistics was not provided')
    }
    data = {}
    for (var browser in customStats) {
      fillUsage(data, browser, customStats[browser])
    }
  } else if (typeof stats === 'string') {
    if (stats.length > 2) {
      stats = stats.toLowerCase()
    } else {
      stats = stats.toUpperCase()
    }
    env.loadCountry(browserslist.usage, stats, browserslist.data)
    data = browserslist.usage[stats]
  } else {
    if ('dataByBrowser' in stats) {
      stats = stats.dataByBrowser
    }
    data = { }
    for (var name in stats) {
      for (var version in stats[name]) {
        data[name + ' ' + version] = stats[name][version]
      }
    }
  }

  return browsers.reduce(function (all, i) {
    var usage = data[i]
    if (usage === undefined) {
      usage = data[i.replace(/ \S+$/, ' 0')]
    }
    return all + (usage || 0)
  }, 0)
}

function nodeQuery (context, version) {
  var nodeReleases = jsReleases.filter(function (i) {
    return i.name === 'nodejs'
  })
  var matched = nodeReleases.filter(function (i) {
    return isVersionsMatch(i.version, version)
  })
  if (matched.length === 0) {
    if (context.ignoreUnknownVersions) {
      return []
    } else {
      throw new BrowserslistError('Unknown version ' + version + ' of Node.js')
    }
  }
  return ['node ' + matched[matched.length - 1].version]
}

function sinceQuery (context, year, month, date) {
  year = parseInt(year)
  month = parseInt(month || '01') - 1
  date = parseInt(date || '01')
  return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context)
}

function coverQuery (context, coverage, statMode) {
  coverage = parseFloat(coverage)
  var usage = browserslist.usage.global
  if (statMode) {
    if (statMode.match(/^my\s+stats$/)) {
      if (!context.customUsage) {
        throw new BrowserslistError(
          'Custom usage statistics was not provided'
        )
      }
      usage = context.customUsage
    } else {
      var place
      if (statMode.length === 2) {
        place = statMode.toUpperCase()
      } else {
        place = statMode.toLowerCase()
      }
      env.loadCountry(browserslist.usage, place, browserslist.data)
      usage = browserslist.usage[place]
    }
  }
  var versions = Object.keys(usage).sort(function (a, b) {
    return usage[b] - usage[a]
  })
  var coveraged = 0
  var result = []
  var version
  for (var i = 0; i <= versions.length; i++) {
    version = versions[i]
    if (usage[version] === 0) break
    coveraged += usage[version]
    result.push(version)
    if (coveraged >= coverage) break
  }
  return result
}

var QUERIES = [
  {
    regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name, context)
        if (!data) return selected
        var list = getMajorVersions(data.released, versions)
        list = list.map(nameMapper(data.name))
        if (data.name === 'android') {
          list = filterAndroid(list, versions, context)
        }
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name, context)
        if (!data) return selected
        var list = data.released.slice(-versions)
        list = list.map(nameMapper(data.name))
        if (data.name === 'android') {
          list = filterAndroid(list, versions, context)
        }
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
    select: function (context, versions) {
      var validVersions = getMajorVersions(Object.keys(e2c), versions)
      return validVersions.map(function (i) {
        return 'chrome ' + e2c[i]
      })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name, context)
      var validVersions = getMajorVersions(data.released, versions)
      var list = validVersions.map(nameMapper(data.name))
      if (data.name === 'android') {
        list = filterAndroid(list, versions, context)
      }
      return list
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(e2c)
        .slice(-versions)
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name, context)
      var list = data.released.slice(-versions).map(nameMapper(data.name))
      if (data.name === 'android') {
        list = filterAndroid(list, versions, context)
      }
      return list
    }
  },
  {
    regexp: /^unreleased\s+versions$/i,
    select: function (context) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name, context)
        if (!data) return selected
        var list = data.versions.filter(function (v) {
          return data.released.indexOf(v) === -1
        })
        list = list.map(nameMapper(data.name))
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^unreleased\s+electron\s+versions?$/i,
    select: function () {
      return []
    }
  },
  {
    regexp: /^unreleased\s+(\w+)\s+versions?$/i,
    select: function (context, name) {
      var data = checkName(name, context)
      return data.versions
        .filter(function (v) {
          return data.released.indexOf(v) === -1
        })
        .map(nameMapper(data.name))
    }
  },
  {
    regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
    select: function (context, years) {
      return filterByYear(Date.now() - YEAR * years, context)
    }
  },
  {
    regexp: /^since (\d+)$/i,
    select: sinceQuery
  },
  {
    regexp: /^since (\d+)-(\d+)$/i,
    select: sinceQuery
  },
  {
    regexp: /^since (\d+)-(\d+)-(\d+)$/i,
    select: sinceQuery
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity)
      var usage = browserslist.usage.global
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity)
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
    select: function (context, sign, popularity, name) {
      popularity = parseFloat(popularity)
      var stats = env.loadStat(context, name, browserslist.data)
      if (stats) {
        context.customUsage = {}
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser])
        }
      }
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
    select: function (context, sign, popularity, place) {
      popularity = parseFloat(popularity)
      if (place.length === 2) {
        place = place.toUpperCase()
      } else {
        place = place.toLowerCase()
      }
      env.loadCountry(browserslist.usage, place, browserslist.data)
      var usage = browserslist.usage[place]
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/,
    select: coverQuery
  },
  {
    regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/,
    select: coverQuery
  },
  {
    regexp: /^supports\s+([\w-]+)$/,
    select: function (context, feature) {
      env.loadFeature(browserslist.cache, feature)
      var features = browserslist.cache[feature]
      return Object.keys(features).reduce(function (result, version) {
        var flags = features[version]
        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var fromToUse = normalizeElectron(from)
      var toToUse = normalizeElectron(to)
      if (!e2c[fromToUse]) {
        throw new BrowserslistError('Unknown version ' + from + ' of electron')
      }
      if (!e2c[toToUse]) {
        throw new BrowserslistError('Unknown version ' + to + ' of electron')
      }
      from = parseFloat(from)
      to = parseFloat(to)
      return Object.keys(e2c)
        .filter(function (i) {
          var parsed = parseFloat(i)
          return parsed >= from && parsed <= to
        })
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var nodeVersions = jsReleases
        .filter(function (i) {
          return i.name === 'nodejs'
        })
        .map(function (i) {
          return i.version
        })
      return nodeVersions
        .filter(semverFilterLoose('>=', from))
        .filter(semverFilterLoose('<=', to))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, name, from, to) {
      var data = checkName(name, context)
      from = parseFloat(normalizeVersion(data, from) || from)
      to = parseFloat(normalizeVersion(data, to) || to)
      function filter (v) {
        var parsed = parseFloat(v)
        return parsed >= from && parsed <= to
      }
      return data.released.filter(filter).map(nameMapper(data.name))
    }
  },
  {
    regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var versionToUse = normalizeElectron(version)
      return Object.keys(e2c)
        .filter(generateFilter(sign, versionToUse))
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var nodeVersions = jsReleases
        .filter(function (i) {
          return i.name === 'nodejs'
        })
        .map(function (i) {
          return i.version
        })
      return nodeVersions
        .filter(generateSemverFilter(sign, version))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
    select: function (context, name, sign, version) {
      var data = checkName(name, context)
      var alias = browserslist.versionAliases[data.name][version]
      if (alias) {
        version = alias
      }
      return data.released
        .filter(generateFilter(sign, version))
        .map(function (v) {
          return data.name + ' ' + v
        })
    }
  },
  {
    regexp: /^(firefox|ff|fx)\s+esr$/i,
    select: function () {
      return ['firefox 78']
    }
  },
  {
    regexp: /(operamini|op_mini)\s+all/i,
    select: function () {
      return ['op_mini all']
    }
  },
  {
    regexp: /^electron\s+([\d.]+)$/i,
    select: function (context, version) {
      var versionToUse = normalizeElectron(version)
      var chrome = e2c[versionToUse]
      if (!chrome) {
        throw new BrowserslistError(
          'Unknown version ' + version + ' of electron'
        )
      }
      return ['chrome ' + chrome]
    }
  },
  {
    regexp: /^node\s+(\d+)$/i,
    select: nodeQuery
  },
  {
    regexp: /^node\s+(\d+\.\d+)$/i,
    select: nodeQuery
  },
  {
    regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
    select: nodeQuery
  },
  {
    regexp: /^current\s+node$/i,
    select: function (context) {
      return [env.currentNode(resolve, context)]
    }
  },
  {
    regexp: /^maintained\s+node\s+versions$/i,
    select: function (context) {
      var now = Date.now()
      var queries = Object.keys(jsEOL)
        .filter(function (key) {
          return (
            now < Date.parse(jsEOL[key].end) &&
            now > Date.parse(jsEOL[key].start) &&
            isEolReleased(key)
          )
        })
        .map(function (key) {
          return 'node ' + key.slice(1)
        })
      return resolve(queries, context)
    }
  },
  {
    regexp: /^phantomjs\s+1.9$/i,
    select: function () {
      return ['safari 5']
    }
  },
  {
    regexp: /^phantomjs\s+2.1$/i,
    select: function () {
      return ['safari 6']
    }
  },
  {
    regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
    select: function (context, name, version) {
      if (/^tp$/i.test(version)) version = 'TP'
      var data = checkName(name, context)
      var alias = normalizeVersion(data, version)
      if (alias) {
        version = alias
      } else {
        if (version.indexOf('.') === -1) {
          alias = version + '.0'
        } else {
          alias = version.replace(/\.0$/, '')
        }
        alias = normalizeVersion(data, alias)
        if (alias) {
          version = alias
        } else if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new BrowserslistError(
            'Unknown version ' + version + ' of ' + name
          )
        }
      }
      return [data.name + ' ' + version]
    }
  },
  {
    regexp: /^browserslist config$/i,
    select: function (context) {
      return browserslist(undefined, context)
    }
  },
  {
    regexp: /^extends (.+)$/i,
    select: function (context, name) {
      return resolve(env.loadQueries(context, name), context)
    }
  },
  {
    regexp: /^defaults$/i,
    select: function (context) {
      return resolve(browserslist.defaults, context)
    }
  },
  {
    regexp: /^dead$/i,
    select: function (context) {
      var dead = [
        'ie <= 10',
        'ie_mob <= 11',
        'bb <= 10',
        'op_mob <= 12.1',
        'samsung 4'
      ]
      return resolve(dead, context)
    }
  },
  {
    regexp: /^(\w+)$/i,
    select: function (context, name) {
      if (byName(name, context)) {
        throw new BrowserslistError(
          'Specify versions in Browserslist query for browser ' + name
        )
      } else {
        throw unknownQuery(name)
      }
    }
  }
];

// Get and convert Can I Use data

(function () {
  for (var name in agents) {
    var browser = agents[name]
    browserslist.data[name] = {
      name: name,
      versions: normalize(agents[name].versions),
      released: normalize(agents[name].versions.slice(0, -3)),
      releaseDate: agents[name].release_date
    }
    fillUsage(browserslist.usage.global, name, browser.usage_global)

    browserslist.versionAliases[name] = { }
    for (var i = 0; i < browser.versions.length; i++) {
      var full = browser.versions[i]
      if (!full) continue

      if (full.indexOf('-') !== -1) {
        var interval = full.split('-')
        for (var j = 0; j < interval.length; j++) {
          browserslist.versionAliases[name][interval[j]] = full
        }
      }
    }
  }

  browserslist.versionAliases.op_mob['59'] = '58'
}())

module.exports = browserslist


/***/ }),
/* 232 */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[{"name":"nodejs","version":"0.2.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.3.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.4.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.5.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.6.0","date":"2011-11-04","lts":false,"security":false},{"name":"nodejs","version":"0.7.0","date":"2012-01-17","lts":false,"security":false},{"name":"nodejs","version":"0.8.0","date":"2012-06-22","lts":false,"security":false},{"name":"nodejs","version":"0.9.0","date":"2012-07-20","lts":false,"security":false},{"name":"nodejs","version":"0.10.0","date":"2013-03-11","lts":false,"security":false},{"name":"nodejs","version":"0.11.0","date":"2013-03-28","lts":false,"security":false},{"name":"nodejs","version":"0.12.0","date":"2015-02-06","lts":false,"security":false},{"name":"iojs","version":"1.0.0","date":"2015-01-14"},{"name":"iojs","version":"1.1.0","date":"2015-02-03"},{"name":"iojs","version":"1.2.0","date":"2015-02-11"},{"name":"iojs","version":"1.3.0","date":"2015-02-20"},{"name":"iojs","version":"1.5.0","date":"2015-03-06"},{"name":"iojs","version":"1.6.0","date":"2015-03-20"},{"name":"iojs","version":"2.0.0","date":"2015-05-04"},{"name":"iojs","version":"2.1.0","date":"2015-05-24"},{"name":"iojs","version":"2.2.0","date":"2015-06-01"},{"name":"iojs","version":"2.3.0","date":"2015-06-13"},{"name":"iojs","version":"2.4.0","date":"2015-07-17"},{"name":"iojs","version":"2.5.0","date":"2015-07-28"},{"name":"iojs","version":"3.0.0","date":"2015-08-04"},{"name":"iojs","version":"3.1.0","date":"2015-08-19"},{"name":"iojs","version":"3.2.0","date":"2015-08-25"},{"name":"iojs","version":"3.3.0","date":"2015-09-02"},{"name":"nodejs","version":"4.0.0","date":"2015-09-08","lts":false,"security":false},{"name":"nodejs","version":"4.1.0","date":"2015-09-17","lts":false,"security":false},{"name":"nodejs","version":"4.2.0","date":"2015-10-12","lts":"Argon","security":false},{"name":"nodejs","version":"4.3.0","date":"2016-02-09","lts":"Argon","security":false},{"name":"nodejs","version":"4.4.0","date":"2016-03-08","lts":"Argon","security":false},{"name":"nodejs","version":"4.5.0","date":"2016-08-16","lts":"Argon","security":false},{"name":"nodejs","version":"4.6.0","date":"2016-09-27","lts":"Argon","security":true},{"name":"nodejs","version":"4.7.0","date":"2016-12-06","lts":"Argon","security":false},{"name":"nodejs","version":"4.8.0","date":"2017-02-21","lts":"Argon","security":false},{"name":"nodejs","version":"4.9.0","date":"2018-03-28","lts":"Argon","security":true},{"name":"nodejs","version":"5.0.0","date":"2015-10-29","lts":false,"security":false},{"name":"nodejs","version":"5.1.0","date":"2015-11-17","lts":false,"security":false},{"name":"nodejs","version":"5.2.0","date":"2015-12-09","lts":false,"security":false},{"name":"nodejs","version":"5.3.0","date":"2015-12-15","lts":false,"security":false},{"name":"nodejs","version":"5.4.0","date":"2016-01-06","lts":false,"security":false},{"name":"nodejs","version":"5.5.0","date":"2016-01-21","lts":false,"security":false},{"name":"nodejs","version":"5.6.0","date":"2016-02-09","lts":false,"security":false},{"name":"nodejs","version":"5.7.0","date":"2016-02-23","lts":false,"security":false},{"name":"nodejs","version":"5.8.0","date":"2016-03-09","lts":false,"security":false},{"name":"nodejs","version":"5.9.0","date":"2016-03-16","lts":false,"security":false},{"name":"nodejs","version":"5.10.0","date":"2016-04-01","lts":false,"security":false},{"name":"nodejs","version":"5.11.0","date":"2016-04-21","lts":false,"security":false},{"name":"nodejs","version":"5.12.0","date":"2016-06-23","lts":false,"security":false},{"name":"nodejs","version":"6.0.0","date":"2016-04-26","lts":false,"security":false},{"name":"nodejs","version":"6.1.0","date":"2016-05-05","lts":false,"security":false},{"name":"nodejs","version":"6.2.0","date":"2016-05-17","lts":false,"security":false},{"name":"nodejs","version":"6.3.0","date":"2016-07-06","lts":false,"security":false},{"name":"nodejs","version":"6.4.0","date":"2016-08-12","lts":false,"security":false},{"name":"nodejs","version":"6.5.0","date":"2016-08-26","lts":false,"security":false},{"name":"nodejs","version":"6.6.0","date":"2016-09-14","lts":false,"security":false},{"name":"nodejs","version":"6.7.0","date":"2016-09-27","lts":false,"security":true},{"name":"nodejs","version":"6.8.0","date":"2016-10-12","lts":false,"security":false},{"name":"nodejs","version":"6.9.0","date":"2016-10-18","lts":"Boron","security":false},{"name":"nodejs","version":"6.10.0","date":"2017-02-21","lts":"Boron","security":false},{"name":"nodejs","version":"6.11.0","date":"2017-06-06","lts":"Boron","security":false},{"name":"nodejs","version":"6.12.0","date":"2017-11-06","lts":"Boron","security":false},{"name":"nodejs","version":"6.13.0","date":"2018-02-10","lts":"Boron","security":false},{"name":"nodejs","version":"6.14.0","date":"2018-03-28","lts":"Boron","security":true},{"name":"nodejs","version":"6.15.0","date":"2018-11-27","lts":"Boron","security":true},{"name":"nodejs","version":"6.16.0","date":"2018-12-26","lts":"Boron","security":false},{"name":"nodejs","version":"6.17.0","date":"2019-02-28","lts":"Boron","security":true},{"name":"nodejs","version":"7.0.0","date":"2016-10-25","lts":false,"security":false},{"name":"nodejs","version":"7.1.0","date":"2016-11-08","lts":false,"security":false},{"name":"nodejs","version":"7.2.0","date":"2016-11-22","lts":false,"security":false},{"name":"nodejs","version":"7.3.0","date":"2016-12-20","lts":false,"security":false},{"name":"nodejs","version":"7.4.0","date":"2017-01-04","lts":false,"security":false},{"name":"nodejs","version":"7.5.0","date":"2017-01-31","lts":false,"security":false},{"name":"nodejs","version":"7.6.0","date":"2017-02-21","lts":false,"security":false},{"name":"nodejs","version":"7.7.0","date":"2017-02-28","lts":false,"security":false},{"name":"nodejs","version":"7.8.0","date":"2017-03-29","lts":false,"security":false},{"name":"nodejs","version":"7.9.0","date":"2017-04-11","lts":false,"security":false},{"name":"nodejs","version":"7.10.0","date":"2017-05-02","lts":false,"security":false},{"name":"nodejs","version":"8.0.0","date":"2017-05-30","lts":false,"security":false},{"name":"nodejs","version":"8.1.0","date":"2017-06-08","lts":false,"security":false},{"name":"nodejs","version":"8.2.0","date":"2017-07-19","lts":false,"security":false},{"name":"nodejs","version":"8.3.0","date":"2017-08-08","lts":false,"security":false},{"name":"nodejs","version":"8.4.0","date":"2017-08-15","lts":false,"security":false},{"name":"nodejs","version":"8.5.0","date":"2017-09-12","lts":false,"security":false},{"name":"nodejs","version":"8.6.0","date":"2017-09-26","lts":false,"security":false},{"name":"nodejs","version":"8.7.0","date":"2017-10-11","lts":false,"security":false},{"name":"nodejs","version":"8.8.0","date":"2017-10-24","lts":false,"security":false},{"name":"nodejs","version":"8.9.0","date":"2017-10-31","lts":"Carbon","security":false},{"name":"nodejs","version":"8.10.0","date":"2018-03-06","lts":"Carbon","security":false},{"name":"nodejs","version":"8.11.0","date":"2018-03-28","lts":"Carbon","security":true},{"name":"nodejs","version":"8.12.0","date":"2018-09-10","lts":"Carbon","security":false},{"name":"nodejs","version":"8.13.0","date":"2018-11-20","lts":"Carbon","security":false},{"name":"nodejs","version":"8.14.0","date":"2018-11-27","lts":"Carbon","security":true},{"name":"nodejs","version":"8.15.0","date":"2018-12-26","lts":"Carbon","security":false},{"name":"nodejs","version":"8.16.0","date":"2019-04-16","lts":"Carbon","security":false},{"name":"nodejs","version":"8.17.0","date":"2019-12-17","lts":"Carbon","security":true},{"name":"nodejs","version":"9.0.0","date":"2017-10-31","lts":false,"security":false},{"name":"nodejs","version":"9.1.0","date":"2017-11-07","lts":false,"security":false},{"name":"nodejs","version":"9.2.0","date":"2017-11-14","lts":false,"security":false},{"name":"nodejs","version":"9.3.0","date":"2017-12-12","lts":false,"security":false},{"name":"nodejs","version":"9.4.0","date":"2018-01-10","lts":false,"security":false},{"name":"nodejs","version":"9.5.0","date":"2018-01-31","lts":false,"security":false},{"name":"nodejs","version":"9.6.0","date":"2018-02-21","lts":false,"security":false},{"name":"nodejs","version":"9.7.0","date":"2018-03-01","lts":false,"security":false},{"name":"nodejs","version":"9.8.0","date":"2018-03-07","lts":false,"security":false},{"name":"nodejs","version":"9.9.0","date":"2018-03-21","lts":false,"security":false},{"name":"nodejs","version":"9.10.0","date":"2018-03-28","lts":false,"security":true},{"name":"nodejs","version":"9.11.0","date":"2018-04-04","lts":false,"security":false},{"name":"nodejs","version":"10.0.0","date":"2018-04-24","lts":false,"security":false},{"name":"nodejs","version":"10.1.0","date":"2018-05-08","lts":false,"security":false},{"name":"nodejs","version":"10.2.0","date":"2018-05-23","lts":false,"security":false},{"name":"nodejs","version":"10.3.0","date":"2018-05-29","lts":false,"security":false},{"name":"nodejs","version":"10.4.0","date":"2018-06-06","lts":false,"security":false},{"name":"nodejs","version":"10.5.0","date":"2018-06-20","lts":false,"security":false},{"name":"nodejs","version":"10.6.0","date":"2018-07-04","lts":false,"security":false},{"name":"nodejs","version":"10.7.0","date":"2018-07-18","lts":false,"security":false},{"name":"nodejs","version":"10.8.0","date":"2018-08-01","lts":false,"security":false},{"name":"nodejs","version":"10.9.0","date":"2018-08-15","lts":false,"security":false},{"name":"nodejs","version":"10.10.0","date":"2018-09-06","lts":false,"security":false},{"name":"nodejs","version":"10.11.0","date":"2018-09-19","lts":false,"security":false},{"name":"nodejs","version":"10.12.0","date":"2018-10-10","lts":false,"security":false},{"name":"nodejs","version":"10.13.0","date":"2018-10-30","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.14.0","date":"2018-11-27","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.15.0","date":"2018-12-26","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.16.0","date":"2019-05-28","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.17.0","date":"2019-10-22","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.18.0","date":"2019-12-17","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.19.0","date":"2020-02-05","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.20.0","date":"2020-03-26","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.21.0","date":"2020-06-02","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.22.0","date":"2020-07-21","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.23.0","date":"2020-10-27","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.24.0","date":"2021-02-23","lts":"Dubnium","security":true},{"name":"nodejs","version":"11.0.0","date":"2018-10-23","lts":false,"security":false},{"name":"nodejs","version":"11.1.0","date":"2018-10-30","lts":false,"security":false},{"name":"nodejs","version":"11.2.0","date":"2018-11-15","lts":false,"security":false},{"name":"nodejs","version":"11.3.0","date":"2018-11-27","lts":false,"security":true},{"name":"nodejs","version":"11.4.0","date":"2018-12-07","lts":false,"security":false},{"name":"nodejs","version":"11.5.0","date":"2018-12-18","lts":false,"security":false},{"name":"nodejs","version":"11.6.0","date":"2018-12-26","lts":false,"security":false},{"name":"nodejs","version":"11.7.0","date":"2019-01-17","lts":false,"security":false},{"name":"nodejs","version":"11.8.0","date":"2019-01-24","lts":false,"security":false},{"name":"nodejs","version":"11.9.0","date":"2019-01-30","lts":false,"security":false},{"name":"nodejs","version":"11.10.0","date":"2019-02-14","lts":false,"security":false},{"name":"nodejs","version":"11.11.0","date":"2019-03-05","lts":false,"security":false},{"name":"nodejs","version":"11.12.0","date":"2019-03-14","lts":false,"security":false},{"name":"nodejs","version":"11.13.0","date":"2019-03-28","lts":false,"security":false},{"name":"nodejs","version":"11.14.0","date":"2019-04-10","lts":false,"security":false},{"name":"nodejs","version":"11.15.0","date":"2019-04-30","lts":false,"security":false},{"name":"nodejs","version":"12.0.0","date":"2019-04-23","lts":false,"security":false},{"name":"nodejs","version":"12.1.0","date":"2019-04-29","lts":false,"security":false},{"name":"nodejs","version":"12.2.0","date":"2019-05-07","lts":false,"security":false},{"name":"nodejs","version":"12.3.0","date":"2019-05-21","lts":false,"security":false},{"name":"nodejs","version":"12.4.0","date":"2019-06-04","lts":false,"security":false},{"name":"nodejs","version":"12.5.0","date":"2019-06-26","lts":false,"security":false},{"name":"nodejs","version":"12.6.0","date":"2019-07-03","lts":false,"security":false},{"name":"nodejs","version":"12.7.0","date":"2019-07-23","lts":false,"security":false},{"name":"nodejs","version":"12.8.0","date":"2019-08-06","lts":false,"security":false},{"name":"nodejs","version":"12.9.0","date":"2019-08-20","lts":false,"security":false},{"name":"nodejs","version":"12.10.0","date":"2019-09-04","lts":false,"security":false},{"name":"nodejs","version":"12.11.0","date":"2019-09-25","lts":false,"security":false},{"name":"nodejs","version":"12.12.0","date":"2019-10-11","lts":false,"security":false},{"name":"nodejs","version":"12.13.0","date":"2019-10-21","lts":"Erbium","security":false},{"name":"nodejs","version":"12.14.0","date":"2019-12-17","lts":"Erbium","security":true},{"name":"nodejs","version":"12.15.0","date":"2020-02-05","lts":"Erbium","security":true},{"name":"nodejs","version":"12.16.0","date":"2020-02-11","lts":"Erbium","security":false},{"name":"nodejs","version":"12.17.0","date":"2020-05-26","lts":"Erbium","security":false},{"name":"nodejs","version":"12.18.0","date":"2020-06-02","lts":"Erbium","security":true},{"name":"nodejs","version":"12.19.0","date":"2020-10-06","lts":"Erbium","security":false},{"name":"nodejs","version":"12.20.0","date":"2020-11-24","lts":"Erbium","security":false},{"name":"nodejs","version":"12.21.0","date":"2021-02-23","lts":"Erbium","security":true},{"name":"nodejs","version":"12.22.0","date":"2021-03-30","lts":"Erbium","security":false},{"name":"nodejs","version":"13.0.0","date":"2019-10-22","lts":false,"security":false},{"name":"nodejs","version":"13.1.0","date":"2019-11-05","lts":false,"security":false},{"name":"nodejs","version":"13.2.0","date":"2019-11-21","lts":false,"security":false},{"name":"nodejs","version":"13.3.0","date":"2019-12-03","lts":false,"security":false},{"name":"nodejs","version":"13.4.0","date":"2019-12-17","lts":false,"security":true},{"name":"nodejs","version":"13.5.0","date":"2019-12-18","lts":false,"security":false},{"name":"nodejs","version":"13.6.0","date":"2020-01-07","lts":false,"security":false},{"name":"nodejs","version":"13.7.0","date":"2020-01-21","lts":false,"security":false},{"name":"nodejs","version":"13.8.0","date":"2020-02-05","lts":false,"security":true},{"name":"nodejs","version":"13.9.0","date":"2020-02-18","lts":false,"security":false},{"name":"nodejs","version":"13.10.0","date":"2020-03-04","lts":false,"security":false},{"name":"nodejs","version":"13.11.0","date":"2020-03-12","lts":false,"security":false},{"name":"nodejs","version":"13.12.0","date":"2020-03-26","lts":false,"security":false},{"name":"nodejs","version":"13.13.0","date":"2020-04-14","lts":false,"security":false},{"name":"nodejs","version":"13.14.0","date":"2020-04-29","lts":false,"security":false},{"name":"nodejs","version":"14.0.0","date":"2020-04-21","lts":false,"security":false},{"name":"nodejs","version":"14.1.0","date":"2020-04-29","lts":false,"security":false},{"name":"nodejs","version":"14.2.0","date":"2020-05-05","lts":false,"security":false},{"name":"nodejs","version":"14.3.0","date":"2020-05-19","lts":false,"security":false},{"name":"nodejs","version":"14.4.0","date":"2020-06-02","lts":false,"security":true},{"name":"nodejs","version":"14.5.0","date":"2020-06-30","lts":false,"security":false},{"name":"nodejs","version":"14.6.0","date":"2020-07-20","lts":false,"security":false},{"name":"nodejs","version":"14.7.0","date":"2020-07-29","lts":false,"security":false},{"name":"nodejs","version":"14.8.0","date":"2020-08-11","lts":false,"security":false},{"name":"nodejs","version":"14.9.0","date":"2020-08-27","lts":false,"security":false},{"name":"nodejs","version":"14.10.0","date":"2020-09-08","lts":false,"security":false},{"name":"nodejs","version":"14.11.0","date":"2020-09-15","lts":false,"security":true},{"name":"nodejs","version":"14.12.0","date":"2020-09-22","lts":false,"security":false},{"name":"nodejs","version":"14.13.0","date":"2020-09-29","lts":false,"security":false},{"name":"nodejs","version":"14.14.0","date":"2020-10-15","lts":false,"security":false},{"name":"nodejs","version":"14.15.0","date":"2020-10-27","lts":"Fermium","security":false},{"name":"nodejs","version":"14.16.0","date":"2021-02-23","lts":"Fermium","security":true},{"name":"nodejs","version":"14.17.0","date":"2021-05-11","lts":"Fermium","security":false},{"name":"nodejs","version":"15.0.0","date":"2020-10-20","lts":false,"security":false},{"name":"nodejs","version":"15.1.0","date":"2020-11-04","lts":false,"security":false},{"name":"nodejs","version":"15.2.0","date":"2020-11-10","lts":false,"security":false},{"name":"nodejs","version":"15.3.0","date":"2020-11-24","lts":false,"security":false},{"name":"nodejs","version":"15.4.0","date":"2020-12-09","lts":false,"security":false},{"name":"nodejs","version":"15.5.0","date":"2020-12-22","lts":false,"security":false},{"name":"nodejs","version":"15.6.0","date":"2021-01-14","lts":false,"security":false},{"name":"nodejs","version":"15.7.0","date":"2021-01-25","lts":false,"security":false},{"name":"nodejs","version":"15.8.0","date":"2021-02-02","lts":false,"security":false},{"name":"nodejs","version":"15.9.0","date":"2021-02-18","lts":false,"security":false},{"name":"nodejs","version":"15.10.0","date":"2021-02-23","lts":false,"security":true},{"name":"nodejs","version":"15.11.0","date":"2021-03-03","lts":false,"security":false},{"name":"nodejs","version":"15.12.0","date":"2021-03-17","lts":false,"security":false},{"name":"nodejs","version":"15.13.0","date":"2021-03-31","lts":false,"security":false},{"name":"nodejs","version":"15.14.0","date":"2021-04-06","lts":false,"security":false},{"name":"nodejs","version":"16.0.0","date":"2021-04-20","lts":false,"security":false},{"name":"nodejs","version":"16.1.0","date":"2021-05-04","lts":false,"security":false}]');

/***/ }),
/* 233 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { browsers } = __webpack_require__(234)
const versions = __webpack_require__(236).browserVersions
const agentsData = __webpack_require__(238)

function unpackBrowserVersions(versionsData) {
  return Object.keys(versionsData).reduce((usage, version) => {
    usage[versions[version]] = versionsData[version]
    return usage
  }, {})
}

module.exports.agents = Object.keys(agentsData).reduce((map, key) => {
  let versionsData = agentsData[key]
  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {
    if (entry === 'A') {
      data.usage_global = unpackBrowserVersions(versionsData[entry])
    } else if (entry === 'C') {
      data.versions = versionsData[entry].reduce((list, version) => {
        if (version === '') {
          list.push(null)
        } else {
          list.push(versions[version])
        }
        return list
      }, [])
    } else if (entry === 'D') {
      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])
    } else if (entry === 'E') {
      data.browser = versionsData[entry]
    } else if (entry === 'F') {
      data.release_date = Object.keys(versionsData[entry]).reduce(
        (map2, key2) => {
          map2[versions[key2]] = versionsData[entry][key2]
          return map2
        },
        {}
      )
    } else {
      // entry is B
      data.prefix = versionsData[entry]
    }
    return data
  }, {})
  return map
}, {})


/***/ }),
/* 234 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports.browsers = __webpack_require__(235)


/***/ }),
/* 235 */
/***/ ((module) => {

module.exports={A:"ie",B:"edge",C:"firefox",D:"chrome",E:"safari",F:"opera",G:"ios_saf",H:"op_mini",I:"android",J:"bb",K:"op_mob",L:"and_chr",M:"and_ff",N:"ie_mob",O:"and_uc",P:"samsung",Q:"and_qq",R:"baidu",S:"kaios"};


/***/ }),
/* 236 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports.browserVersions = __webpack_require__(237)


/***/ }),
/* 237 */
/***/ ((module) => {

module.exports={"0":"44","1":"45","2":"46","3":"47","4":"48","5":"49","6":"50","7":"51","8":"52","9":"53",A:"10",B:"11",C:"12",D:"7",E:"8",F:"9",G:"90",H:"4",I:"6",J:"13",K:"14",L:"15",M:"16",N:"17",O:"18",P:"87",Q:"62",R:"79",S:"80",T:"81",U:"83",V:"84",W:"85",X:"86",Y:"88",Z:"89",a:"5",b:"19",c:"20",d:"21",e:"22",f:"23",g:"24",h:"25",i:"26",j:"27",k:"28",l:"29",m:"30",n:"31",o:"32",p:"33",q:"34",r:"35",s:"36",t:"37",u:"38",v:"39",w:"40",x:"41",y:"42",z:"43",AB:"54",BB:"55",CB:"56",DB:"57",EB:"58",FB:"60",GB:"63",HB:"64",IB:"65",JB:"66",KB:"67",LB:"68",MB:"69",NB:"70",OB:"71",PB:"72",QB:"73",RB:"74",SB:"75",TB:"11.1",UB:"12.1",VB:"91",WB:"3",XB:"59",YB:"61",ZB:"76",aB:"77",bB:"78",cB:"3.2",dB:"10.1",eB:"11.5",fB:"4.2-4.3",gB:"5.5",hB:"2",iB:"82",jB:"3.5",kB:"3.6",lB:"92",mB:"93",nB:"94",oB:"3.1",pB:"5.1",qB:"6.1",rB:"7.1",sB:"9.1",tB:"13.1",uB:"14.1",vB:"TP",wB:"9.5-9.6",xB:"10.0-10.1",yB:"10.5",zB:"10.6","0B":"11.6","1B":"4.0-4.1","2B":"5.0-5.1","3B":"6.0-6.1","4B":"7.0-7.1","5B":"8.1-8.4","6B":"9.0-9.2","7B":"9.3","8B":"10.0-10.2","9B":"10.3",AC:"11.0-11.2",BC:"11.3-11.4",CC:"12.0-12.1",DC:"12.2-12.4",EC:"13.0-13.1",FC:"13.2",GC:"13.3",HC:"13.4-13.7",IC:"14.0-14.4",JC:"14.5",KC:"all",LC:"2.1",MC:"2.2",NC:"2.3",OC:"4.1",PC:"4.4",QC:"4.4.3-4.4.4",RC:"12.12",SC:"5.0-5.4",TC:"6.2-6.4",UC:"7.2-7.4",VC:"8.2",WC:"9.2",XC:"11.1-11.2",YC:"12.0",ZC:"13.0",aC:"14.0",bC:"10.4",cC:"7.12",dC:"2.5"};


/***/ }),
/* 238 */
/***/ ((module) => {

module.exports={A:{A:{I:0.0131217,D:0.00621152,E:0.0262435,F:0.111535,A:0.0328044,B:0.905401,gB:0.009298},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gB","I","D","E","F","A","B","","",""],E:"IE",F:{gB:962323200,I:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{C:0.008542,J:0.004267,K:0.004271,L:0.008542,M:0.008542,N:0.029897,O:0.106775,R:0,S:0.004298,T:0.00944,U:0.00415,V:0.008542,W:0.012813,X:0.012813,P:0.017084,Y:0.025626,Z:2.26363,G:1.03358,VB:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C","J","K","L","M","N","O","R","S","T","U","V","W","X","P","Y","Z","G","VB","","",""],E:"Edge",F:{C:1438128000,J:1447286400,K:1470096000,L:1491868800,M:1508198400,N:1525046400,O:1542067200,R:1579046400,S:1581033600,T:1586736000,U:1590019200,V:1594857600,W:1598486400,X:1602201600,P:1605830400,Y:1611360000,Z:1614816000,G:1618358400,VB:1622073600},D:{C:"ms",J:"ms",K:"ms",L:"ms",M:"ms",N:"ms",O:"ms"}},C:{A:{"0":0.004271,"1":0.004271,"2":0.004525,"3":0.004271,"4":0.008542,"5":0.004538,"6":0.004267,"7":0.008542,"8":0.064065,"9":0.004335,hB:0.012813,WB:0.004271,H:0.021355,a:0.004879,I:0.020136,D:0.005725,E:0.004525,F:0.00533,A:0.004283,B:0.004271,C:0.004471,J:0.004486,K:0.00453,L:0.008542,M:0.004417,N:0.004425,O:0.008542,b:0.004443,c:0.004283,d:0.008542,e:0.013698,f:0.008542,g:0.008786,h:0.017084,i:0.004317,j:0.004393,k:0.004418,l:0.008834,m:0.008542,n:0.008928,o:0.004471,p:0.009284,q:0.004707,r:0.009076,s:0.004425,t:0.004783,u:0.004271,v:0.004783,w:0.00487,x:0.005029,y:0.0047,z:0.051252,AB:0.004271,BB:0.004425,CB:0.012813,DB:0.004425,EB:0.008534,XB:0.004271,FB:0.008542,YB:0.00472,Q:0.004425,GB:0.017084,HB:0.00415,IB:0.004267,JB:0.008542,KB:0.004267,LB:0.012813,MB:0.00415,NB:0.004271,OB:0.004425,PB:0.008542,QB:0.00415,RB:0.00415,SB:0.008542,ZB:0.004298,aB:0.008542,bB:0.153756,R:0.012813,S:0.012813,T:0.012813,iB:0.021355,U:0.012813,V:0.029897,W:0.038439,X:0.08542,P:1.76819,Y:0.708986,Z:0.008542,G:0,jB:0.008786,kB:0.00487},B:"moz",C:["hB","WB","jB","kB","H","a","I","D","E","F","A","B","C","J","K","L","M","N","O","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","XB","FB","YB","Q","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","ZB","aB","bB","R","S","T","iB","U","V","W","X","P","Y","Z","G",""],E:"Firefox",F:{"0":1453852800,"1":1457395200,"2":1461628800,"3":1465257600,"4":1470096000,"5":1474329600,"6":1479168000,"7":1485216000,"8":1488844800,"9":1492560000,hB:1161648000,WB:1213660800,jB:1246320000,kB:1264032000,H:1300752000,a:1308614400,I:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,J:1335225600,K:1338854400,L:1342483200,M:1346112000,N:1349740800,O:1353628800,b:1357603200,c:1361232000,d:1364860800,e:1368489600,f:1372118400,g:1375747200,h:1379376000,i:1386633600,j:1391472000,k:1395100800,l:1398729600,m:1402358400,n:1405987200,o:1409616000,p:1413244800,q:1417392000,r:1421107200,s:1424736000,t:1428278400,u:1431475200,v:1435881600,w:1439251200,x:1442880000,y:1446508800,z:1450137600,AB:1497312000,BB:1502150400,CB:1506556800,DB:1510617600,EB:1516665600,XB:1520985600,FB:1525824000,YB:1529971200,Q:1536105600,GB:1540252800,HB:1544486400,IB:1548720000,JB:1552953600,KB:1558396800,LB:1562630400,MB:1567468800,NB:1571788800,OB:1575331200,PB:1578355200,QB:1581379200,RB:1583798400,SB:1586304000,ZB:1588636800,aB:1591056000,bB:1593475200,R:1595894400,S:1598313600,T:1600732800,iB:1603152000,U:1605571200,V:1607990400,W:1611619200,X:1614038400,P:1616457600,Y:1618790400,Z:null,G:null}},D:{A:{"0":0.004465,"1":0.004642,"2":0.004891,"3":0.008542,"4":0.021355,"5":0.200737,"6":0.004271,"7":0.004271,"8":0.004271,"9":0.055523,H:0.004706,a:0.004879,I:0.004879,D:0.005591,E:0.005591,F:0.005591,A:0.004534,B:0.004464,C:0.010424,J:0.0083,K:0.004706,L:0.015087,M:0.004393,N:0.004393,O:0.008652,b:0.008542,c:0.004393,d:0.004317,e:0.008542,f:0.008786,g:0.025626,h:0.004461,i:0.004298,j:0.004326,k:0.0047,l:0.004538,m:0.008542,n:0.008596,o:0.004566,p:0.012813,q:0.008542,r:0.025626,s:0.004335,t:0.004464,u:0.025626,v:0.004464,w:0.012813,x:0.0236,y:0.004403,z:0.008542,AB:0.012813,BB:0.017084,CB:0.064065,DB:0.008542,EB:0.012813,XB:0.008542,FB:0.012813,YB:0.089691,Q:0.008542,GB:0.021355,HB:0.012813,IB:0.021355,JB:0.021355,KB:0.04271,LB:0.04271,MB:0.068336,NB:0.051252,OB:0.025626,PB:0.046981,QB:0.021355,RB:0.119588,SB:0.093962,ZB:0.064065,aB:0.034168,bB:0.081149,R:0.175111,S:0.102504,T:0.081149,U:0.166569,V:0.136672,W:0.205008,X:0.230634,P:0.431371,Y:0.743154,Z:16.8235,G:6.40223,VB:0.021355,lB:0.012813,mB:0,nB:0},B:"webkit",C:["","","H","a","I","D","E","F","A","B","C","J","K","L","M","N","O","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","XB","FB","YB","Q","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","ZB","aB","bB","R","S","T","U","V","W","X","P","Y","Z","G","VB","lB","mB","nB"],E:"Chrome",F:{"0":1437523200,"1":1441152000,"2":1444780800,"3":1449014400,"4":1453248000,"5":1456963200,"6":1460592000,"7":1464134400,"8":1469059200,"9":1472601600,H:1264377600,a:1274745600,I:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,J:1312243200,K:1316131200,L:1316131200,M:1319500800,N:1323734400,O:1328659200,b:1332892800,c:1337040000,d:1340668800,e:1343692800,f:1348531200,g:1352246400,h:1357862400,i:1361404800,j:1364428800,k:1369094400,l:1374105600,m:1376956800,n:1384214400,o:1389657600,p:1392940800,q:1397001600,r:1400544000,s:1405468800,t:1409011200,u:1412640000,v:1416268800,w:1421798400,x:1425513600,y:1429401600,z:1432080000,AB:1476230400,BB:1480550400,CB:1485302400,DB:1489017600,EB:1492560000,XB:1496707200,FB:1500940800,YB:1504569600,Q:1508198400,GB:1512518400,HB:1516752000,IB:1520294400,JB:1523923200,KB:1527552000,LB:1532390400,MB:1536019200,NB:1539648000,OB:1543968000,PB:1548720000,QB:1552348800,RB:1555977600,SB:1559606400,ZB:1564444800,aB:1568073600,bB:1571702400,R:1575936000,S:1580860800,T:1586304000,U:1589846400,V:1594684800,W:1598313600,X:1601942400,P:1605571200,Y:1611014400,Z:1614556800,G:1618272000,VB:1621987200,lB:null,mB:null,nB:null}},E:{A:{H:0,a:0.008542,I:0.004656,D:0.004465,E:0.234905,F:0.004891,A:0.004425,B:0.008542,C:0.012813,J:0.098233,K:2.95126,oB:0,cB:0.008692,pB:0.106775,qB:0.00456,rB:0.004283,sB:0.034168,dB:0.021355,TB:0.064065,UB:0.098233,tB:0.439913,uB:0.055523,vB:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oB","cB","H","a","pB","I","qB","D","rB","E","F","sB","A","dB","B","TB","C","UB","J","tB","K","uB","vB","",""],E:"Safari",F:{oB:1205798400,cB:1226534400,H:1244419200,a:1275868800,pB:1311120000,I:1343174400,qB:1382400000,D:1382400000,rB:1410998400,E:1413417600,F:1443657600,sB:1458518400,A:1474329600,dB:1490572800,B:1505779200,TB:1522281600,C:1537142400,UB:1553472000,J:1568851200,tB:1585008000,K:1600214400,uB:1619395200,vB:null}},F:{A:{"0":0.004227,"1":0.004725,"2":0.004271,"3":0.008942,"4":0.004707,"5":0.004827,"6":0.004707,"7":0.004707,"8":0.004326,"9":0.008922,F:0.0082,B:0.016581,C:0.004317,L:0.00685,M:0.00685,N:0.00685,O:0.005014,b:0.006015,c:0.004879,d:0.006597,e:0.006597,f:0.013434,g:0.006702,h:0.006015,i:0.005595,j:0.004393,k:0.008652,l:0.004879,m:0.004879,n:0.004711,o:0.005152,p:0.005014,q:0.009758,r:0.004879,s:0.008542,t:0.004283,u:0.004367,v:0.004534,w:0.004271,x:0.004227,y:0.004418,z:0.008542,AB:0.014349,BB:0.004425,CB:0.00472,DB:0.004425,EB:0.004425,FB:0.00472,Q:0.004532,GB:0.004566,HB:0.02283,IB:0.00867,JB:0.004656,KB:0.004642,LB:0.004298,MB:0.00944,NB:0.00415,OB:0.004271,PB:0.004298,QB:0.324596,RB:0.153756,SB:0.516791,wB:0.00685,xB:0.008542,yB:0.008392,zB:0.004706,TB:0.006229,eB:0.004879,"0B":0.008786,UB:0.00472},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","F","wB","xB","yB","zB","B","TB","eB","0B","C","UB","L","M","N","O","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","Q","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","","",""],E:"Opera",F:{"0":1490054400,"1":1494374400,"2":1498003200,"3":1502236800,"4":1506470400,"5":1510099200,"6":1515024000,"7":1517961600,"8":1521676800,"9":1525910400,F:1150761600,wB:1223424000,xB:1251763200,yB:1267488000,zB:1277942400,B:1292457600,TB:1302566400,eB:1309219200,"0B":1323129600,C:1323129600,UB:1352073600,L:1372723200,M:1377561600,N:1381104000,O:1386288000,b:1390867200,c:1393891200,d:1399334400,e:1401753600,f:1405987200,g:1409616000,h:1413331200,i:1417132800,j:1422316800,k:1425945600,l:1430179200,m:1433808000,n:1438646400,o:1442448000,p:1445904000,q:1449100800,r:1454371200,s:1457308800,t:1462320000,u:1465344000,v:1470096000,w:1474329600,x:1477267200,y:1481587200,z:1486425600,AB:1530144000,BB:1534982400,CB:1537833600,DB:1543363200,EB:1548201600,FB:1554768000,Q:1561593600,GB:1566259200,HB:1570406400,IB:1573689600,JB:1578441600,KB:1583971200,LB:1587513600,MB:1592956800,NB:1595894400,OB:1600128000,PB:1603238400,QB:1613520000,RB:1612224000,SB:1616544000},D:{F:"o",B:"o",C:"o",wB:"o",xB:"o",yB:"o",zB:"o",TB:"o",eB:"o","0B":"o",UB:"o"}},G:{A:{E:0.0014611,cB:0,"1B":0,fB:0.00292219,"2B":0.00876657,"3B":0.159259,"4B":0.0321441,"5B":0.0204553,"6B":0.0262997,"7B":0.153415,"8B":0.0555216,"9B":0.159259,AC:0.0905879,BC:0.077438,CC:0.0847435,DC:0.283452,EC:0.0715937,FC:0.0336052,GC:0.189942,HC:0.647265,IC:11.7531,JC:0.150493},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cB","1B","fB","2B","3B","4B","E","5B","6B","7B","8B","9B","AC","BC","CC","DC","EC","FC","GC","HC","IC","JC","","",""],E:"Safari on iOS",F:{cB:1270252800,"1B":1283904000,fB:1299628800,"2B":1331078400,"3B":1359331200,"4B":1394409600,E:1410912000,"5B":1413763200,"6B":1442361600,"7B":1458518400,"8B":1473724800,"9B":1490572800,AC:1505779200,BC:1522281600,CC:1537142400,DC:1553472000,EC:1568851200,FC:1572220800,GC:1580169600,HC:1585008000,IC:1600214400,JC:1619395200}},H:{A:{KC:1.0685},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","KC","","",""],E:"Opera Mini",F:{KC:1426464000}},I:{A:{WB:0,H:0.0137496,G:0,LC:0,MC:0,NC:0,OC:0.0120309,fB:0.051561,PC:0,QC:0.214838},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","LC","MC","NC","WB","H","OC","fB","PC","QC","G","","",""],E:"Android Browser",F:{LC:1256515200,MC:1274313600,NC:1291593600,WB:1298332800,H:1318896000,OC:1341792000,fB:1374624000,PC:1386547200,QC:1401667200,G:1618704000}},J:{A:{D:0,A:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","D","A","","",""],E:"Blackberry Browser",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,Q:0.0111391,TB:0,eB:0,UB:0},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","TB","eB","C","UB","Q","","",""],E:"Opera Mobile",F:{A:1287100800,B:1300752000,TB:1314835200,eB:1318291200,C:1330300800,UB:1349740800,Q:1613433600},D:{Q:"webkit"}},L:{A:{G:37.9297},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","G","","",""],E:"Chrome for Android",F:{G:1618704000}},M:{A:{P:0.274992},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","P","","",""],E:"Firefox for Android",F:{P:1616457600}},N:{A:{A:0.0115934,B:0.022664},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","","",""],E:"IE Mobile",F:{A:1340150400,B:1353456000}},O:{A:{RC:1.30048},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RC","","",""],E:"UC Browser for Android",F:{RC:1471392000},D:{RC:"webkit"}},P:{A:{H:0.30804,SC:0.0103543,TC:0.010304,UC:0.071876,VC:0.0103584,WC:0.071876,dB:0.041072,XC:0.174556,YC:0.133484,ZC:1.85851,aC:0.800904},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","H","SC","TC","UC","VC","WC","dB","XC","YC","ZC","aC","","",""],E:"Samsung Internet",F:{H:1461024000,SC:1481846400,TC:1509408000,UC:1528329600,VC:1546128000,WC:1554163200,dB:1567900800,XC:1582588800,YC:1593475200,ZC:1605657600,aC:1618531200}},Q:{A:{bC:0.177599},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bC","","",""],E:"QQ Browser",F:{bC:1589846400}},R:{A:{cC:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cC","","",""],E:"Baidu Browser",F:{cC:1491004800}},S:{A:{dC:0.097393},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dC","","",""],E:"KaiOS Browser",F:{dC:1527811200}}};


/***/ }),
/* 239 */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"v0.8":{"start":"2012-06-25","end":"2014-07-31"},"v0.10":{"start":"2013-03-11","end":"2016-10-31"},"v0.12":{"start":"2015-02-06","end":"2016-12-31"},"v4":{"start":"2015-09-08","lts":"2015-10-12","maintenance":"2017-04-01","end":"2018-04-30","codename":"Argon"},"v5":{"start":"2015-10-29","maintenance":"2016-04-30","end":"2016-06-30"},"v6":{"start":"2016-04-26","lts":"2016-10-18","maintenance":"2018-04-30","end":"2019-04-30","codename":"Boron"},"v7":{"start":"2016-10-25","maintenance":"2017-04-30","end":"2017-06-30"},"v8":{"start":"2017-05-30","lts":"2017-10-31","maintenance":"2019-01-01","end":"2019-12-31","codename":"Carbon"},"v9":{"start":"2017-10-01","maintenance":"2018-04-01","end":"2018-06-30"},"v10":{"start":"2018-04-24","lts":"2018-10-30","maintenance":"2020-05-19","end":"2021-04-30","codename":"Dubnium"},"v11":{"start":"2018-10-23","maintenance":"2019-04-22","end":"2019-06-01"},"v12":{"start":"2019-04-23","lts":"2019-10-21","maintenance":"2020-11-30","end":"2022-04-30","codename":"Erbium"},"v13":{"start":"2019-10-22","maintenance":"2020-04-01","end":"2020-06-01"},"v14":{"start":"2020-04-21","lts":"2020-10-27","maintenance":"2021-10-19","end":"2023-04-30","codename":"Fermium"},"v15":{"start":"2020-10-20","maintenance":"2021-04-01","end":"2021-06-01"},"v16":{"start":"2021-04-20","lts":"2021-10-26","maintenance":"2022-10-18","end":"2024-04-30","codename":""},"v17":{"start":"2021-10-19","maintenance":"2022-04-01","end":"2022-06-01"},"v18":{"start":"2022-04-19","lts":"2022-10-25","maintenance":"2023-10-18","end":"2025-04-30","codename":""}}');

/***/ }),
/* 240 */
/***/ ((module) => {

module.exports = {
	"0.20": "39",
	"0.21": "41",
	"0.22": "41",
	"0.23": "41",
	"0.24": "41",
	"0.25": "42",
	"0.26": "42",
	"0.27": "43",
	"0.28": "43",
	"0.29": "43",
	"0.30": "44",
	"0.31": "45",
	"0.32": "45",
	"0.33": "45",
	"0.34": "45",
	"0.35": "45",
	"0.36": "47",
	"0.37": "49",
	"1.0": "49",
	"1.1": "50",
	"1.2": "51",
	"1.3": "52",
	"1.4": "53",
	"1.5": "54",
	"1.6": "56",
	"1.7": "58",
	"1.8": "59",
	"2.0": "61",
	"2.1": "61",
	"3.0": "66",
	"3.1": "66",
	"4.0": "69",
	"4.1": "69",
	"4.2": "69",
	"5.0": "73",
	"6.0": "76",
	"6.1": "76",
	"7.0": "78",
	"7.1": "78",
	"7.2": "78",
	"7.3": "78",
	"8.0": "80",
	"8.1": "80",
	"8.2": "80",
	"8.3": "80",
	"8.4": "80",
	"8.5": "80",
	"9.0": "83",
	"9.1": "83",
	"9.2": "83",
	"9.3": "83",
	"9.4": "83",
	"10.0": "85",
	"10.1": "85",
	"10.2": "85",
	"10.3": "85",
	"10.4": "85",
	"11.0": "87",
	"11.1": "87",
	"11.2": "87",
	"11.3": "87",
	"11.4": "87",
	"12.0": "89",
	"13.0": "91",
	"14.0": "92"
};

/***/ }),
/* 241 */
/***/ ((module) => {

function BrowserslistError (message) {
  this.name = 'BrowserslistError'
  this.message = message
  this.browserslist = true
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, BrowserslistError)
  }
}

BrowserslistError.prototype = Error.prototype

module.exports = BrowserslistError


/***/ }),
/* 242 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var feature = __webpack_require__(243).default
var region = __webpack_require__(246).default
var path = __webpack_require__(198)
var fs = __webpack_require__(210)

var BrowserslistError = __webpack_require__(241)

var IS_SECTION = /^\s*\[(.+)]\s*$/
var CONFIG_PATTERN = /^browserslist-config-/
var SCOPED_CONFIG__PATTERN = /@[^/]+\/browserslist-config(-|$|\/)/
var TIME_TO_UPDATE_CANIUSE = 6 * 30 * 24 * 60 * 60 * 1000
var FORMAT = 'Browserslist config should be a string or an array ' +
             'of strings with browser queries'

var dataTimeChecked = false
var filenessCache = { }
var configCache = { }
function checkExtend (name) {
  var use = ' Use `dangerousExtend` option to disable.'
  if (!CONFIG_PATTERN.test(name) && !SCOPED_CONFIG__PATTERN.test(name)) {
    throw new BrowserslistError(
      'Browserslist config needs `browserslist-config-` prefix. ' + use)
  }
  if (name.replace(/^@[^/]+\//, '').indexOf('.') !== -1) {
    throw new BrowserslistError(
      '`.` not allowed in Browserslist config name. ' + use)
  }
  if (name.indexOf('node_modules') !== -1) {
    throw new BrowserslistError(
      '`node_modules` not allowed in Browserslist config.' + use)
  }
}

function isFile (file) {
  if (file in filenessCache) {
    return filenessCache[file]
  }
  var result = fs.existsSync(file) && fs.statSync(file).isFile()
  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
    filenessCache[file] = result
  }
  return result
}

function eachParent (file, callback) {
  var dir = isFile(file) ? path.dirname(file) : file
  var loc = path.resolve(dir)
  do {
    var result = callback(loc)
    if (typeof result !== 'undefined') return result
  } while (loc !== (loc = path.dirname(loc)))
  return undefined
}

function check (section) {
  if (Array.isArray(section)) {
    for (var i = 0; i < section.length; i++) {
      if (typeof section[i] !== 'string') {
        throw new BrowserslistError(FORMAT)
      }
    }
  } else if (typeof section !== 'string') {
    throw new BrowserslistError(FORMAT)
  }
}

function pickEnv (config, opts) {
  if (typeof config !== 'object') return config

  var name
  if (typeof opts.env === 'string') {
    name = opts.env
  } else if (process.env.BROWSERSLIST_ENV) {
    name = process.env.BROWSERSLIST_ENV
  } else if (process.env.NODE_ENV) {
    name = process.env.NODE_ENV
  } else {
    name = 'production'
  }

  return config[name] || config.defaults
}

function parsePackage (file) {
  var config = JSON.parse(fs.readFileSync(file))
  if (config.browserlist && !config.browserslist) {
    throw new BrowserslistError(
      '`browserlist` key instead of `browserslist` in ' + file
    )
  }
  var list = config.browserslist
  if (Array.isArray(list) || typeof list === 'string') {
    list = { defaults: list }
  }
  for (var i in list) {
    check(list[i])
  }

  return list
}

function latestReleaseTime (agents) {
  var latest = 0
  for (var name in agents) {
    var dates = agents[name].releaseDate || { }
    for (var key in dates) {
      if (latest < dates[key]) {
        latest = dates[key]
      }
    }
  }
  return latest * 1000
}

function normalizeStats (data, stats) {
  if (stats && 'dataByBrowser' in stats) {
    stats = stats.dataByBrowser
  }

  if (typeof stats !== 'object') return undefined

  var normalized = { }
  for (var i in stats) {
    var versions = Object.keys(stats[i])
    if (
      versions.length === 1 &&
      data[i] &&
      data[i].versions.length === 1
    ) {
      var normal = data[i].versions[0]
      normalized[i] = { }
      normalized[i][normal] = stats[i][versions[0]]
    } else {
      normalized[i] = stats[i]
    }
  }

  return normalized
}

function normalizeUsageData (usageData, data) {
  for (var browser in usageData) {
    var browserUsage = usageData[browser]
    // eslint-disable-next-line max-len
    // https://github.com/browserslist/browserslist/issues/431#issuecomment-565230615
    // caniuse-db returns { 0: "percentage" } for `and_*` regional stats
    if ('0' in browserUsage) {
      var versions = data[browser].versions
      browserUsage[versions[versions.length - 1]] = browserUsage[0]
      delete browserUsage[0]
    }
  }
}

module.exports = {
  loadQueries: function loadQueries (ctx, name) {
    if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
      checkExtend(name)
    }
    // eslint-disable-next-line security/detect-non-literal-require
    var queries = __webpack_require__(247)(__webpack_require__(247).resolve(name, { paths: ['.'] }))
    if (queries) {
      if (Array.isArray(queries)) {
        return queries
      } else if (typeof queries === 'object') {
        if (!queries.defaults) queries.defaults = []
        return pickEnv(queries, ctx, name)
      }
    }
    throw new BrowserslistError(
      '`' + name + '` config exports not an array of queries' +
      ' or an object of envs'
    )
  },

  loadStat: function loadStat (ctx, name, data) {
    if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
      checkExtend(name)
    }
    // eslint-disable-next-line security/detect-non-literal-require
    var stats = __webpack_require__(247)(__webpack_require__(247).resolve(
        path.join(name, 'browserslist-stats.json'),
        { paths: ['.'] }
      ))
    return normalizeStats(data, stats)
  },

  getStat: function getStat (opts, data) {
    var stats
    if (opts.stats) {
      stats = opts.stats
    } else if (process.env.BROWSERSLIST_STATS) {
      stats = process.env.BROWSERSLIST_STATS
    } else if (opts.path && path.resolve && fs.existsSync) {
      stats = eachParent(opts.path, function (dir) {
        var file = path.join(dir, 'browserslist-stats.json')
        return isFile(file) ? file : undefined
      })
    }
    if (typeof stats === 'string') {
      try {
        stats = JSON.parse(fs.readFileSync(stats))
      } catch (e) {
        throw new BrowserslistError('Can\'t read ' + stats)
      }
    }
    return normalizeStats(data, stats)
  },

  loadConfig: function loadConfig (opts) {
    if (process.env.BROWSERSLIST) {
      return process.env.BROWSERSLIST
    } else if (opts.config || process.env.BROWSERSLIST_CONFIG) {
      var file = opts.config || process.env.BROWSERSLIST_CONFIG
      if (path.basename(file) === 'package.json') {
        return pickEnv(parsePackage(file), opts)
      } else {
        return pickEnv(module.exports.readConfig(file), opts)
      }
    } else if (opts.path) {
      return pickEnv(module.exports.findConfig(opts.path), opts)
    } else {
      return undefined
    }
  },

  loadCountry: function loadCountry (usage, country, data) {
    var code = country.replace(/[^\w-]/g, '')
    if (!usage[code]) {
      // eslint-disable-next-line security/detect-non-literal-require
      var compressed = __webpack_require__(248)("./" + code + ".js")
      var usageData = region(compressed)
      normalizeUsageData(usageData, data)
      usage[country] = { }
      for (var i in usageData) {
        for (var j in usageData[i]) {
          usage[country][i + ' ' + j] = usageData[i][j]
        }
      }
    }
  },

  loadFeature: function loadFeature (features, name) {
    name = name.replace(/[^\w-]/g, '')
    if (features[name]) return

    // eslint-disable-next-line security/detect-non-literal-require
    var compressed = __webpack_require__(490)("./" + name + ".js")
    var stats = feature(compressed).stats
    features[name] = { }
    for (var i in stats) {
      for (var j in stats[i]) {
        features[name][i + ' ' + j] = stats[i][j]
      }
    }
  },

  parseConfig: function parseConfig (string) {
    var result = { defaults: [] }
    var sections = ['defaults']

    string.toString()
      .replace(/#[^\n]*/g, '')
      .split(/\n|,/)
      .map(function (line) {
        return line.trim()
      })
      .filter(function (line) {
        return line !== ''
      })
      .forEach(function (line) {
        if (IS_SECTION.test(line)) {
          sections = line.match(IS_SECTION)[1].trim().split(' ')
          sections.forEach(function (section) {
            if (result[section]) {
              throw new BrowserslistError(
                'Duplicate section ' + section + ' in Browserslist config'
              )
            }
            result[section] = []
          })
        } else {
          sections.forEach(function (section) {
            result[section].push(line)
          })
        }
      })

    return result
  },

  readConfig: function readConfig (file) {
    if (!isFile(file)) {
      throw new BrowserslistError('Can\'t read ' + file + ' config')
    }
    return module.exports.parseConfig(fs.readFileSync(file))
  },

  findConfig: function findConfig (from) {
    from = path.resolve(from)

    var passed = []
    var resolved = eachParent(from, function (dir) {
      if (dir in configCache) {
        return configCache[dir]
      }

      passed.push(dir)

      var config = path.join(dir, 'browserslist')
      var pkg = path.join(dir, 'package.json')
      var rc = path.join(dir, '.browserslistrc')

      var pkgBrowserslist
      if (isFile(pkg)) {
        try {
          pkgBrowserslist = parsePackage(pkg)
        } catch (e) {
          if (e.name === 'BrowserslistError') throw e
          console.warn(
            '[Browserslist] Could not parse ' + pkg + '. Ignoring it.'
          )
        }
      }

      if (isFile(config) && pkgBrowserslist) {
        throw new BrowserslistError(
          dir + ' contains both browserslist and package.json with browsers'
        )
      } else if (isFile(rc) && pkgBrowserslist) {
        throw new BrowserslistError(
          dir + ' contains both .browserslistrc and package.json with browsers'
        )
      } else if (isFile(config) && isFile(rc)) {
        throw new BrowserslistError(
          dir + ' contains both .browserslistrc and browserslist'
        )
      } else if (isFile(config)) {
        return module.exports.readConfig(config)
      } else if (isFile(rc)) {
        return module.exports.readConfig(rc)
      } else {
        return pkgBrowserslist
      }
    })
    if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
      passed.forEach(function (dir) {
        configCache[dir] = resolved
      })
    }
    return resolved
  },

  clearCaches: function clearCaches () {
    dataTimeChecked = false
    filenessCache = { }
    configCache = { }

    this.cache = { }
  },

  oldDataWarning: function oldDataWarning (agentsObj) {
    if (dataTimeChecked) return
    dataTimeChecked = true
    if (process.env.BROWSERSLIST_IGNORE_OLD_DATA) return

    var latest = latestReleaseTime(agentsObj)
    var halfYearAgo = Date.now() - TIME_TO_UPDATE_CANIUSE

    if (latest !== 0 && latest < halfYearAgo) {
      console.warn(
        'Browserslist: caniuse-lite is outdated. Please run:\n' +
        'npx browserslist@latest --update-db\n' +
        '\n' +
        'Why you should do it regularly:\n' +
        'https://github.com/browserslist/browserslist#browsers-data-updating'
      )
    }
  },

  currentNode: function currentNode () {
    return 'node ' + process.versions.node
  }
}


/***/ }),
/* 243 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const statuses = __webpack_require__(244)
const supported = __webpack_require__(245)
const { browsers } = __webpack_require__(234)
const versions = __webpack_require__(236).browserVersions

const MATH2LOG = Math.log(2)

function unpackSupport(cipher) {
  // bit flags
  let stats = Object.keys(supported).reduce((list, support) => {
    if (cipher & supported[support]) list.push(support)
    return list
  }, [])

  // notes
  let notes = cipher >> 7
  let notesArray = []
  while (notes) {
    let note = Math.floor(Math.log(notes) / MATH2LOG) + 1
    notesArray.unshift(`#${note}`)
    notes -= Math.pow(2, note - 1)
  }

  return stats.concat(notesArray).join(' ')
}

function unpackFeature(packed) {
  let unpacked = { status: statuses[packed.B], title: packed.C }
  unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
    let browser = packed.A[key]
    browserStats[browsers[key]] = Object.keys(browser).reduce(
      (stats, support) => {
        let packedVersions = browser[support].split(' ')
        let unpacked2 = unpackSupport(support)
        packedVersions.forEach(v => (stats[versions[v]] = unpacked2))
        return stats
      },
      {}
    )
    return browserStats
  }, {})
  return unpacked
}

module.exports = unpackFeature
module.exports.default = unpackFeature


/***/ }),
/* 244 */
/***/ ((module) => {

module.exports = {
  1: 'ls', // WHATWG Living Standard
  2: 'rec', // W3C Recommendation
  3: 'pr', // W3C Proposed Recommendation
  4: 'cr', // W3C Candidate Recommendation
  5: 'wd', // W3C Working Draft
  6: 'other', // Non-W3C, but reputable
  7: 'unoff' // Unofficial, Editor's Draft or W3C "Note"
}


/***/ }),
/* 245 */
/***/ ((module) => {

module.exports = {
  y: 1 << 0,
  n: 1 << 1,
  a: 1 << 2,
  p: 1 << 3,
  u: 1 << 4,
  x: 1 << 5,
  d: 1 << 6
}


/***/ }),
/* 246 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const { browsers } = __webpack_require__(234)

function unpackRegion(packed) {
  return Object.keys(packed).reduce((list, browser) => {
    let data = packed[browser]
    list[browsers[browser]] = Object.keys(data).reduce((memo, key) => {
      let stats = data[key]
      if (key === '_') {
        stats.split(' ').forEach(version => (memo[version] = null))
      } else {
        memo[key] = stats
      }
      return memo
    }, {})
    return list
  }, {})
}

module.exports = unpackRegion
module.exports.default = unpackRegion


/***/ }),
/* 247 */
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = 247;
module.exports = webpackEmptyContext;

/***/ }),
/* 248 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./AD.js": 249,
	"./AE.js": 250,
	"./AF.js": 251,
	"./AG.js": 252,
	"./AI.js": 253,
	"./AL.js": 254,
	"./AM.js": 255,
	"./AO.js": 256,
	"./AR.js": 257,
	"./AS.js": 258,
	"./AT.js": 259,
	"./AU.js": 260,
	"./AW.js": 261,
	"./AX.js": 262,
	"./AZ.js": 263,
	"./BA.js": 264,
	"./BB.js": 265,
	"./BD.js": 266,
	"./BE.js": 267,
	"./BF.js": 268,
	"./BG.js": 269,
	"./BH.js": 270,
	"./BI.js": 271,
	"./BJ.js": 272,
	"./BM.js": 273,
	"./BN.js": 274,
	"./BO.js": 275,
	"./BR.js": 276,
	"./BS.js": 277,
	"./BT.js": 278,
	"./BW.js": 279,
	"./BY.js": 280,
	"./BZ.js": 281,
	"./CA.js": 282,
	"./CD.js": 283,
	"./CF.js": 284,
	"./CG.js": 285,
	"./CH.js": 286,
	"./CI.js": 287,
	"./CK.js": 288,
	"./CL.js": 289,
	"./CM.js": 290,
	"./CN.js": 291,
	"./CO.js": 292,
	"./CR.js": 293,
	"./CU.js": 294,
	"./CV.js": 295,
	"./CX.js": 296,
	"./CY.js": 297,
	"./CZ.js": 298,
	"./DE.js": 299,
	"./DJ.js": 300,
	"./DK.js": 301,
	"./DM.js": 302,
	"./DO.js": 303,
	"./DZ.js": 304,
	"./EC.js": 305,
	"./EE.js": 306,
	"./EG.js": 307,
	"./ER.js": 308,
	"./ES.js": 309,
	"./ET.js": 310,
	"./FI.js": 311,
	"./FJ.js": 312,
	"./FK.js": 313,
	"./FM.js": 314,
	"./FO.js": 315,
	"./FR.js": 316,
	"./GA.js": 317,
	"./GB.js": 318,
	"./GD.js": 319,
	"./GE.js": 320,
	"./GF.js": 321,
	"./GG.js": 322,
	"./GH.js": 323,
	"./GI.js": 324,
	"./GL.js": 325,
	"./GM.js": 326,
	"./GN.js": 327,
	"./GP.js": 328,
	"./GQ.js": 329,
	"./GR.js": 330,
	"./GT.js": 331,
	"./GU.js": 332,
	"./GW.js": 333,
	"./GY.js": 334,
	"./HK.js": 335,
	"./HN.js": 336,
	"./HR.js": 337,
	"./HT.js": 338,
	"./HU.js": 339,
	"./ID.js": 340,
	"./IE.js": 341,
	"./IL.js": 342,
	"./IM.js": 343,
	"./IN.js": 344,
	"./IQ.js": 345,
	"./IR.js": 346,
	"./IS.js": 347,
	"./IT.js": 348,
	"./JE.js": 349,
	"./JM.js": 350,
	"./JO.js": 351,
	"./JP.js": 352,
	"./KE.js": 353,
	"./KG.js": 354,
	"./KH.js": 355,
	"./KI.js": 356,
	"./KM.js": 357,
	"./KN.js": 358,
	"./KP.js": 359,
	"./KR.js": 360,
	"./KW.js": 361,
	"./KY.js": 362,
	"./KZ.js": 363,
	"./LA.js": 364,
	"./LB.js": 365,
	"./LC.js": 366,
	"./LI.js": 367,
	"./LK.js": 368,
	"./LR.js": 369,
	"./LS.js": 370,
	"./LT.js": 371,
	"./LU.js": 372,
	"./LV.js": 373,
	"./LY.js": 374,
	"./MA.js": 375,
	"./MC.js": 376,
	"./MD.js": 377,
	"./ME.js": 378,
	"./MG.js": 379,
	"./MH.js": 380,
	"./MK.js": 381,
	"./ML.js": 382,
	"./MM.js": 383,
	"./MN.js": 384,
	"./MO.js": 385,
	"./MP.js": 386,
	"./MQ.js": 387,
	"./MR.js": 388,
	"./MS.js": 389,
	"./MT.js": 390,
	"./MU.js": 391,
	"./MV.js": 392,
	"./MW.js": 393,
	"./MX.js": 394,
	"./MY.js": 395,
	"./MZ.js": 396,
	"./NA.js": 397,
	"./NC.js": 398,
	"./NE.js": 399,
	"./NF.js": 400,
	"./NG.js": 401,
	"./NI.js": 402,
	"./NL.js": 403,
	"./NO.js": 404,
	"./NP.js": 405,
	"./NR.js": 406,
	"./NU.js": 407,
	"./NZ.js": 408,
	"./OM.js": 409,
	"./PA.js": 410,
	"./PE.js": 411,
	"./PF.js": 412,
	"./PG.js": 413,
	"./PH.js": 414,
	"./PK.js": 415,
	"./PL.js": 416,
	"./PM.js": 417,
	"./PN.js": 418,
	"./PR.js": 419,
	"./PS.js": 420,
	"./PT.js": 421,
	"./PW.js": 422,
	"./PY.js": 423,
	"./QA.js": 424,
	"./RE.js": 425,
	"./RO.js": 426,
	"./RS.js": 427,
	"./RU.js": 428,
	"./RW.js": 429,
	"./SA.js": 430,
	"./SB.js": 431,
	"./SC.js": 432,
	"./SD.js": 433,
	"./SE.js": 434,
	"./SG.js": 435,
	"./SH.js": 436,
	"./SI.js": 437,
	"./SK.js": 438,
	"./SL.js": 439,
	"./SM.js": 440,
	"./SN.js": 441,
	"./SO.js": 442,
	"./SR.js": 443,
	"./ST.js": 444,
	"./SV.js": 445,
	"./SY.js": 446,
	"./SZ.js": 447,
	"./TC.js": 448,
	"./TD.js": 449,
	"./TG.js": 450,
	"./TH.js": 451,
	"./TJ.js": 452,
	"./TK.js": 453,
	"./TL.js": 454,
	"./TM.js": 455,
	"./TN.js": 456,
	"./TO.js": 457,
	"./TR.js": 458,
	"./TT.js": 459,
	"./TV.js": 460,
	"./TW.js": 461,
	"./TZ.js": 462,
	"./UA.js": 463,
	"./UG.js": 464,
	"./US.js": 465,
	"./UY.js": 466,
	"./UZ.js": 467,
	"./VA.js": 468,
	"./VC.js": 469,
	"./VE.js": 470,
	"./VG.js": 471,
	"./VI.js": 472,
	"./VN.js": 473,
	"./VU.js": 474,
	"./WF.js": 475,
	"./WS.js": 476,
	"./YE.js": 477,
	"./YT.js": 478,
	"./ZA.js": 479,
	"./ZM.js": 480,
	"./ZW.js": 481,
	"./alt-af.js": 482,
	"./alt-an.js": 483,
	"./alt-as.js": 484,
	"./alt-eu.js": 485,
	"./alt-na.js": 486,
	"./alt-oc.js": 487,
	"./alt-sa.js": 488,
	"./alt-ww.js": 489
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 248;

/***/ }),
/* 249 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.01671,"5":0.01671,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.01114,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01114,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00557,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.01671,"73":0,"74":0,"75":0,"76":0,"77":0.00557,"78":0.12256,"79":0,"80":0.00557,"81":0.00557,"82":0,"83":0.02228,"84":0.03343,"85":0.06128,"86":0.08357,"87":1.76044,"88":0.88022,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01671,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.37326,"50":0,"51":0,"52":0,"53":0.01671,"54":0,"55":0,"56":0,"57":0.00557,"58":0.03343,"59":0,"60":0,"61":0,"62":0.01114,"63":0.01671,"64":0,"65":0.01114,"66":0,"67":0.00557,"68":0.01671,"69":0,"70":0.01114,"71":0,"72":0,"73":0.13928,"74":0.00557,"75":0.05014,"76":0,"77":0.01671,"78":0.00557,"79":0.01114,"80":0.18941,"81":0.05014,"83":0.05014,"84":0.02228,"85":0.05571,"86":0.07799,"87":0.1337,"88":0.47911,"89":11.35927,"90":5.20889,"91":0,"92":0.01114,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00557,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00557,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.01114,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.14485,"74":0.12813,"75":0.38997,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.03743,"9.0-9.2":0.01497,"9.3":0.54896,"10.0-10.2":0.01747,"10.3":0.4217,"11.0-11.2":0.01747,"11.3-11.4":0.12476,"12.0-12.1":0.24454,"12.2-12.4":0.25452,"13.0-13.1":0.10979,"13.2":0.00749,"13.3":0.10979,"13.4-13.7":0.74609,"14.0-14.4":21.03533,"14.5":0.27448},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.05014,"14":4.36209,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00557,"10.1":0.01671,"11.1":0.06128,"12.1":0.12256,"13.1":0.51253,"14.1":0.05571},B:{"12":0,"13":0,"14":0.01114,"15":0.02228,"16":0,"17":0,"18":0.03343,"79":0,"80":0,"81":0,"83":0,"84":0.00557,"85":0.00557,"86":0.00557,"87":0.00557,"88":0.01114,"89":1.12534,"90":0.46239},P:{"4":0.10443,"5.0-5.4":0,"6.2-6.4":0.01044,"7.2-7.4":0,"8.2":0,"9.2":0.01044,"10.1":0,"11.1-11.2":0.03133,"12.0":0.03133,"13.0":1.09653,"14.0":0.69969},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00803,"4.2-4.3":0.09369,"4.4":0,"4.4.3-4.4.4":0.29714},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01147,"9":0,"10":0,"11":0.18352,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":42.12587},S:{"2.5":0},R:{_:"0"},M:{"0":0.39861},Q:{"10.4":0.00443},O:{"0":0.01772},H:{"0":0.1803}};


/***/ }),
/* 250 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00829,"34":0.00415,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00415,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00415,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01244,"79":0,"80":0.00415,"81":0.00415,"82":0.00415,"83":0,"84":0.00829,"85":0.00829,"86":0.02074,"87":0.34005,"88":0.10368,"89":0.00415,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00415,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00415,"35":0.26956,"36":0,"37":0,"38":0.01244,"39":0,"40":0,"41":0,"42":0,"43":0.00415,"44":0,"45":0,"46":0,"47":0.00415,"48":0,"49":0.0705,"50":0,"51":0,"52":0,"53":0.00415,"54":0,"55":0.00415,"56":0.00415,"57":0,"58":0,"59":0,"60":0.00415,"61":0.03732,"62":0,"63":0.00415,"64":0.00415,"65":0.00829,"66":0,"67":0.00829,"68":0.00829,"69":0.00829,"70":0.00415,"71":0.00829,"72":0.00829,"73":0.00415,"74":0.00415,"75":0.01244,"76":0.01659,"77":0.00415,"78":0.01244,"79":0.02074,"80":0.01659,"81":0.02488,"83":0.03732,"84":0.02903,"85":0.02488,"86":0.04976,"87":0.23223,"88":0.20735,"89":8.03274,"90":3.1144,"91":0.01244,"92":0.00415,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00415,"37":0.00415,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00415,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01244,"55":0.03318,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.02074,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.10368,"74":0.04976,"75":0.1327,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00429,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03646,"6.0-6.1":0,"7.0-7.1":0.04718,"8.1-8.4":0.01287,"9.0-9.2":0.00858,"9.3":0.24663,"10.0-10.2":0.03431,"10.3":0.13511,"11.0-11.2":0.178,"11.3-11.4":0.07292,"12.0-12.1":0.06219,"12.2-12.4":0.3174,"13.0-13.1":0.06648,"13.2":0.04075,"13.3":0.20374,"13.4-13.7":0.9908,"14.0-14.4":17.7271,"14.5":0.3367},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00415,"12":0.00415,"13":0.02903,"14":1.32289,_:"0","3.1":0,"3.2":0,"5.1":0.00829,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00829,"11.1":0.01659,"12.1":0.03732,"13.1":0.19076,"14.1":0.02488},B:{"12":0,"13":0.00415,"14":0.00415,"15":0.00829,"16":0.00829,"17":0.00829,"18":0.04562,"79":0,"80":0,"81":0,"83":0,"84":0.00415,"85":0.00415,"86":0,"87":0.00829,"88":0.00829,"89":0.7672,"90":0.3442},P:{"4":0.21555,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.04106,"8.2":0,"9.2":0.05132,"10.1":0.06159,"11.1-11.2":0.15397,"12.0":0.08212,"13.0":1.8784,"14.0":0.97512},I:{"0":0,"3":0,"4":0.00132,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00265,"4.2-4.3":0.00662,"4.4":0,"4.4.3-4.4.4":0.086},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.19906,"5.5":0},J:{"7":0,"10":0.00585},N:{"10":0,"11":0},L:{"0":48.95177},S:{"2.5":0},R:{_:"0"},M:{"0":0.10535},Q:{"10.4":0.02341},O:{"0":5.13308},H:{"0":1.14704}};


/***/ }),
/* 251 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.0027,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.0027,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.0027,"30":0,"31":0,"32":0,"33":0.0027,"34":0,"35":0,"36":0,"37":0,"38":0.0027,"39":0,"40":0.0027,"41":0,"42":0,"43":0.00541,"44":0,"45":0,"46":0,"47":0.0027,"48":0,"49":0,"50":0.0027,"51":0,"52":0.0027,"53":0,"54":0,"55":0,"56":0.0027,"57":0.0027,"58":0.0027,"59":0,"60":0,"61":0,"62":0,"63":0.0027,"64":0,"65":0,"66":0,"67":0,"68":0.00811,"69":0,"70":0.00541,"71":0,"72":0.01352,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01622,"79":0,"80":0,"81":0.0027,"82":0.0027,"83":0.0027,"84":0.00541,"85":0.00541,"86":0.02703,"87":0.48113,"88":0.13785,"89":0.00541,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00541,"35":0,"36":0,"37":0.0027,"38":0,"39":0,"40":0.00541,"41":0.0027,"42":0,"43":0.01892,"44":0,"45":0,"46":0.0027,"47":0,"48":0.0027,"49":0.01352,"50":0,"51":0,"52":0.00541,"53":0,"54":0,"55":0.00541,"56":0.00541,"57":0.0027,"58":0.00541,"59":0,"60":0,"61":0.0027,"62":0.00811,"63":0.0027,"64":0.00541,"65":0.0027,"66":0.0027,"67":0.0027,"68":0,"69":0.02703,"70":0.05136,"71":0.0027,"72":0.00541,"73":0.0027,"74":0.0027,"75":0.0027,"76":0.0027,"77":0.0027,"78":0.00541,"79":0.02973,"80":0.01352,"81":0.01892,"83":0.01081,"84":0.03514,"85":0.01622,"86":0.01622,"87":0.14326,"88":0.07298,"89":3.10304,"90":1.14607,"91":0.0027,"92":0.01352,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.0027,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00541,"51":0.0027,"52":0,"53":0,"54":0.04055,"55":0.04325,"56":0,"57":0,"58":0,"60":0.0027,"62":0,"63":0.0027,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0027,"74":0.03514,"75":0.16488,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01892},G:{"8":0.01191,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00217,"5.0-5.1":0.00108,"6.0-6.1":0,"7.0-7.1":0.01191,"8.1-8.4":0.00866,"9.0-9.2":0.00541,"9.3":0.05521,"10.0-10.2":0.01732,"10.3":0.12557,"11.0-11.2":0.07794,"11.3-11.4":0.21542,"12.0-12.1":0.19052,"12.2-12.4":0.54343,"13.0-13.1":0.25872,"13.2":0.07145,"13.3":0.31501,"13.4-13.7":0.80215,"14.0-14.4":7.26699,"14.5":0.1115},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0027,"13":0.02703,"14":0.0892,_:"0","3.1":0,"3.2":0,"5.1":0.03514,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.0027,"13.1":0.02973,"14.1":0.0027},B:{"12":0.00541,"13":0.0027,"14":0.00541,"15":0.0027,"16":0.01081,"17":0.00541,"18":0.04865,"79":0,"80":0,"81":0,"83":0,"84":0.00811,"85":0.0027,"86":0,"87":0.0027,"88":0.00811,"89":0.273,"90":0.11893},P:{"4":1.42915,"5.0-5.4":0.29187,"6.2-6.4":0.26168,"7.2-7.4":0.61393,"8.2":0.08052,"9.2":0.51329,"10.1":0.11071,"11.1-11.2":0.46296,"12.0":0.32206,"13.0":1.97263,"14.0":0.44284},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00993,"4.2-4.3":0.04371,"4.4":0,"4.4.3-4.4.4":0.44798},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.0027,"9":0.00541,"10":0,"11":0.30814,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":69.50508},S:{"2.5":0},R:{_:"0"},M:{"0":0.13135},Q:{"10.4":0},O:{"0":2.10883},H:{"0":1.33331}};


/***/ }),
/* 252 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00695,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00348,"53":0,"54":0,"55":0.00348,"56":0,"57":0,"58":0.00348,"59":0,"60":0,"61":0,"62":0.00348,"63":0.00695,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01043,"79":0,"80":0,"81":0,"82":0,"83":0.00348,"84":0.0556,"85":0.00348,"86":0.03823,"87":0.46913,"88":0.11468,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.01043,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.13205,"50":0,"51":0,"52":0.00348,"53":0.01043,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00348,"66":0,"67":0.00348,"68":0,"69":0,"70":0.00348,"71":0,"72":0,"73":0,"74":0.10773,"75":0.0139,"76":0.00695,"77":0.00695,"78":0.00695,"79":0,"80":0.0139,"81":0.0139,"83":0.00695,"84":0.02085,"85":0.00348,"86":0.01043,"87":0.13553,"88":0.0834,"89":3.9615,"90":1.51858,"91":0.0139,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.01043,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0417,"74":0.04518,"75":0.4309,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00773,"6.0-6.1":0,"7.0-7.1":0.02125,"8.1-8.4":0.02125,"9.0-9.2":0.00773,"9.3":0.12751,"10.0-10.2":0.01739,"10.3":0.1816,"11.0-11.2":0.01739,"11.3-11.4":0.02898,"12.0-12.1":0.03671,"12.2-12.4":0.22024,"13.0-13.1":0.02511,"13.2":0.00773,"13.3":0.12944,"13.4-13.7":1.10118,"14.0-14.4":16.10238,"14.5":0.29365},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.04865,"14":1.0286,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.11468,"10.1":0,"11.1":0.00348,"12.1":0.03128,"13.1":0.10773,"14.1":0.00695},B:{"12":0,"13":0.00348,"14":0.00348,"15":0.00695,"16":0.00348,"17":0.01043,"18":0.0417,"79":0,"80":0.00348,"81":0,"83":0,"84":0.01043,"85":0,"86":0.00348,"87":0.01043,"88":0.01738,"89":1.10853,"90":0.49693},P:{"4":0.07379,"5.0-5.4":0.01054,"6.2-6.4":0,"7.2-7.4":0.23191,"8.2":0,"9.2":0.09487,"10.1":0.02108,"11.1-11.2":0.18974,"12.0":0.13704,"13.0":3.30997,"14.0":1.6339},I:{"0":0,"3":0,"4":0.55149,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.01818,"4.4":0,"4.4.3-4.4.4":0.17575},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.09383,"5.5":0},J:{"7":0,"10":0.00653},N:{"10":0,"11":0},L:{"0":61.84865},S:{"2.5":0.00653},R:{_:"0"},M:{"0":0.3132},Q:{"10.4":0},O:{"0":0.14355},H:{"0":0.10502}};


/***/ }),
/* 253 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0071,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0.00355,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01065,"79":0,"80":0.00355,"81":0.00355,"82":0,"83":0.00355,"84":0.00355,"85":0.0071,"86":0.02131,"87":0.29828,"88":0.10298,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.0071,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00355,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0071,"50":0,"51":0,"52":0,"53":0.0142,"54":0,"55":0.00355,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.0071,"64":0,"65":0.00355,"66":0,"67":0,"68":0,"69":0,"70":0.00355,"71":0.00355,"72":0.00355,"73":0,"74":0.21661,"75":0.0071,"76":0.02841,"77":0,"78":0,"79":0.00355,"80":0,"81":0.0142,"83":0.00355,"84":0.04616,"85":0.01065,"86":0.01776,"87":0.05682,"88":0.12073,"89":4.40324,"90":1.89268,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00355,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01776,"74":0.03906,"75":0.09588,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.05222,"6.0-6.1":0,"7.0-7.1":0.09082,"8.1-8.4":0.07266,"9.0-9.2":0.06585,"9.3":0.10899,"10.0-10.2":0.00454,"10.3":0.08628,"11.0-11.2":0.10672,"11.3-11.4":0.06585,"12.0-12.1":0.04087,"12.2-12.4":0.71751,"13.0-13.1":0.01135,"13.2":0.01589,"13.3":0.27928,"13.4-13.7":0.59944,"14.0-14.4":19.34105,"14.5":0.13851},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0071,"13":0.09233,"14":1.0582,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.18465,"10.1":0.00355,"11.1":0.0071,"12.1":0.01776,"13.1":0.09588,"14.1":0.01065},B:{"12":0,"13":0.08167,"14":0,"15":0.00355,"16":0.0071,"17":0.01065,"18":0.06747,"79":0,"80":0.00355,"81":0,"83":0,"84":0,"85":0.00355,"86":0,"87":0,"88":0.00355,"89":1.26771,"90":0.68534},P:{"4":0.83366,"5.0-5.4":0.01042,"6.2-6.4":0,"7.2-7.4":0.15631,"8.2":0,"9.2":0.06252,"10.1":0.01042,"11.1-11.2":0.51061,"12.0":0.26052,"13.0":3.58472,"14.0":1.27133},I:{"0":0,"3":0,"4":0.00842,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00842,"4.2-4.3":0.04629,"4.4":0,"4.4.3-4.4.4":0.51757},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00355,"9":0,"10":0,"11":0.07102,"5.5":0},J:{"7":0,"10":0.05159},N:{"10":0,"11":0},L:{"0":56.18057},S:{"2.5":0},R:{_:"0"},M:{"0":0.12898},Q:{"10.4":0.0129},O:{"0":0.07094},H:{"0":0.37244}};


/***/ }),
/* 254 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00178,"33":0.00714,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00357,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00357,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00535,"79":0,"80":0,"81":0.00178,"82":0.00178,"83":0.00178,"84":0.00178,"85":0,"86":0.00714,"87":0.12666,"88":0.0339,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00178,"39":0,"40":0,"41":0.00178,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0339,"50":0,"51":0,"52":0,"53":0.00535,"54":0,"55":0,"56":0,"57":0,"58":0.00178,"59":0,"60":0,"61":0.00714,"62":0,"63":0.00178,"64":0,"65":0.00178,"66":0.00178,"67":0,"68":0.00357,"69":0,"70":0.00178,"71":0,"72":0.00178,"73":0,"74":0.00357,"75":0.00535,"76":0.00178,"77":0.00178,"78":0.00357,"79":0.00357,"80":0.00357,"81":0.00535,"83":0.00714,"84":0.00892,"85":0.00892,"86":0.02141,"87":0.02676,"88":0.04817,"89":1.71264,"90":0.62975,"91":0.00178,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00357,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00892,"74":0.01784,"75":0.04103,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.04334,"7.0-7.1":0.04768,"8.1-8.4":0.00867,"9.0-9.2":0.00433,"9.3":0.14303,"10.0-10.2":0.06068,"10.3":0.33807,"11.0-11.2":0.17337,"11.3-11.4":0.31207,"12.0-12.1":0.16904,"12.2-12.4":1.34361,"13.0-13.1":0.18204,"13.2":0.09969,"13.3":0.69348,"13.4-13.7":2.21046,"14.0-14.4":33.87206,"14.5":0.23405},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00357,"14":0.06422,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00178,"12.1":0.00178,"13.1":0.00714,"14.1":0.00178},B:{"12":0,"13":0,"14":0.00178,"15":0.00178,"16":0,"17":0.00178,"18":0.00357,"79":0,"80":0,"81":0,"83":0,"84":0.00178,"85":0,"86":0,"87":0,"88":0.00178,"89":0.09812,"90":0.0446},P:{"4":0.16357,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.07156,"8.2":0.01022,"9.2":0.04089,"10.1":0.04089,"11.1-11.2":0.19424,"12.0":0.09201,"13.0":1.74816,"14.0":0.77696},I:{"0":0,"3":0,"4":0.00096,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00481,"4.2-4.3":0.0125,"4.4":0,"4.4.3-4.4.4":0.09135},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00178,"9":0,"10":0,"11":0.01427,"5.5":0},J:{"7":0,"10":0.00822},N:{"10":0,"11":0},L:{"0":52.71934},S:{"2.5":0},R:{_:"0"},M:{"0":0.10681},Q:{"10.4":0.00822},O:{"0":0.03286},H:{"0":0.1089}};


/***/ }),
/* 255 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00683,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.01366,"43":0.01366,"44":0,"45":0,"46":0,"47":0.00683,"48":0.00683,"49":0,"50":0,"51":0,"52":12.12653,"53":0,"54":0,"55":0,"56":0.00683,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00683,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02731,"79":0,"80":0,"81":0.00683,"82":0,"83":0.01366,"84":0.01366,"85":0.02731,"86":0.11608,"87":0.77156,"88":0.48479,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01366,"23":0.00683,"24":0.00683,"25":0.00683,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00683,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00683,"47":0,"48":0,"49":1.3656,"50":0,"51":0,"52":0,"53":0.00683,"54":0,"55":0.00683,"56":0,"57":0,"58":0.00683,"59":0,"60":0,"61":0,"62":0,"63":0.00683,"64":0,"65":0.02048,"66":0,"67":0.02048,"68":0,"69":0.00683,"70":0.00683,"71":0.01366,"72":0.00683,"73":0.00683,"74":0.00683,"75":0.02048,"76":0.02731,"77":0.01366,"78":0.01366,"79":0.06145,"80":0.02731,"81":0.0478,"83":0.02731,"84":0.04097,"85":0.06828,"86":0.09559,"87":0.2936,"88":0.50527,"89":17.45237,"90":7.81123,"91":0.02731,"92":0.01366,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.01366,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00683,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.02048,"71":0,"72":0,"73":0.16387,"74":0.20484,"75":0.65549,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00575,"6.0-6.1":0.01294,"7.0-7.1":0.03452,"8.1-8.4":0,"9.0-9.2":0.00431,"9.3":0.27759,"10.0-10.2":0.0187,"10.3":0.19848,"11.0-11.2":0.07191,"11.3-11.4":0.105,"12.0-12.1":0.07623,"12.2-12.4":0.41135,"13.0-13.1":0.05753,"13.2":0.02014,"13.3":0.16109,"13.4-13.7":0.64435,"14.0-14.4":10.88067,"14.5":0.21287},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00683,"13":0.01366,"14":0.91495,_:"0","3.1":0,"3.2":0,"5.1":0.17753,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.02048,"12.1":0.01366,"13.1":0.2185,"14.1":0.04097},B:{"12":0,"13":0,"14":0.00683,"15":0.00683,"16":0,"17":0.00683,"18":0.01366,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.00683,"86":0.03414,"87":0,"88":0.00683,"89":0.54624,"90":0.2185},P:{"4":0.06092,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.05077,"8.2":0.01015,"9.2":0.03046,"10.1":0.04062,"11.1-11.2":0.14216,"12.0":0.09139,"13.0":0.93417,"14.0":0.40616},I:{"0":0,"3":0,"4":0.00167,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00201,"4.2-4.3":0.0117,"4.4":0,"4.4.3-4.4.4":0.04145},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00683,"9":0,"10":0.00683,"11":0.07511,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":36.56657},S:{"2.5":0},R:{_:"0"},M:{"0":0.15543},Q:{"10.4":0},O:{"0":0.1364},H:{"0":0.18919}};


/***/ }),
/* 256 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00501,"33":0,"34":0,"35":0.00501,"36":0,"37":0,"38":0.00501,"39":0,"40":0,"41":0.01001,"42":0,"43":0.00501,"44":0,"45":0,"46":0,"47":0.00501,"48":0,"49":0,"50":0,"51":0,"52":0.05506,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.02503,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.07508,"69":0,"70":0,"71":0.00501,"72":0.00501,"73":0,"74":0,"75":0.00501,"76":0.00501,"77":0,"78":0.02503,"79":0,"80":0,"81":0.00501,"82":0.00501,"83":0.00501,"84":0.02503,"85":0.01001,"86":0.06507,"87":0.67568,"88":0.29029,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00501,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00501,"26":0.01502,"27":0,"28":0.01001,"29":0,"30":0,"31":0,"32":0,"33":0.00501,"34":0,"35":0.00501,"36":0,"37":0,"38":0.00501,"39":0.01001,"40":0.06006,"41":0,"42":0.05506,"43":0.04505,"44":0,"45":0,"46":0.02002,"47":0.00501,"48":0.00501,"49":0.03504,"50":0.00501,"51":0,"52":0,"53":0.00501,"54":0.00501,"55":0.01001,"56":0.00501,"57":0.00501,"58":0.01502,"59":0.00501,"60":0,"61":0,"62":0.00501,"63":0.07007,"64":0,"65":0.02503,"66":0.01001,"67":0.01001,"68":0.00501,"69":0.02503,"70":0.01001,"71":0.03003,"72":0.01502,"73":0.01001,"74":0.01001,"75":0.02002,"76":0.00501,"77":0.01502,"78":0.01001,"79":0.0951,"80":0.07508,"81":0.05506,"83":0.02002,"84":0.02503,"85":0.04004,"86":0.13514,"87":0.34535,"88":0.20521,"89":9.27927,"90":3.40841,"91":0.00501,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00501,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00501,"35":0,"36":0.00501,"37":0,"38":0,"39":0.01001,"40":0,"41":0,"42":0.00501,"43":0,"44":0,"45":0.00501,"46":0.00501,"47":0.00501,"48":0,"49":0,"50":0,"51":0.00501,"52":0,"53":0,"54":0.01001,"55":0.02002,"56":0,"57":0,"58":0,"60":0.01001,"62":0,"63":0.00501,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00501,"73":0.08008,"74":0.19019,"75":0.68068,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01502},G:{"8":0.0013,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02202,"6.0-6.1":0.01813,"7.0-7.1":0.35489,"8.1-8.4":0.0557,"9.0-9.2":0.02072,"9.3":1.26285,"10.0-10.2":0.0557,"10.3":0.46758,"11.0-11.2":0.13082,"11.3-11.4":0.11528,"12.0-12.1":0.08419,"12.2-12.4":0.71886,"13.0-13.1":0.04922,"13.2":0.04404,"13.3":0.3523,"13.4-13.7":0.66446,"14.0-14.4":6.92303,"14.5":0.10103},E:{"4":0,"5":0,"6":0,"7":0,"8":0.05005,"9":0,"10":0,"11":0.00501,"12":0,"13":0.01001,"14":0.36537,_:"0","3.1":0,"3.2":0,"5.1":0.01502,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00501,"11.1":0.07007,"12.1":0.02002,"13.1":0.11512,"14.1":0.00501},B:{"12":0.05005,"13":0.02503,"14":0.06507,"15":0.08509,"16":0.05506,"17":0.04004,"18":0.29029,"79":0,"80":0,"81":0,"83":0.00501,"84":0.01502,"85":0.01502,"86":0.00501,"87":0.02002,"88":0.01502,"89":1.85185,"90":0.63063},P:{"4":1.12482,"5.0-5.4":0.0409,"6.2-6.4":0.05113,"7.2-7.4":0.17384,"8.2":0.03068,"9.2":0.13293,"10.1":0.11248,"11.1-11.2":0.12271,"12.0":0.17384,"13.0":0.95098,"14.0":0.33745},I:{"0":0,"3":0,"4":0.00446,"2.1":0,"2.2":0,"2.3":0,"4.1":0.1236,"4.2-4.3":0.24764,"4.4":0,"4.4.3-4.4.4":0.40916},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.66567,"5.5":0},J:{"7":0,"10":0.01499},N:{"10":0,"11":0},L:{"0":54.44061},S:{"2.5":0.02498},R:{_:"0"},M:{"0":0.14486},Q:{"10.4":0.16484},O:{"0":0.55445},H:{"0":3.44267}};


/***/ }),
/* 257 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00423,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00423,"49":0,"50":0,"51":0,"52":0.0338,"53":0.00423,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0.00845,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.0169,"67":0,"68":0.00845,"69":0,"70":0,"71":0,"72":0.00423,"73":0.00423,"74":0,"75":0.00423,"76":0,"77":0.00423,"78":0.02113,"79":0.00423,"80":0.00423,"81":0.00423,"82":0.00423,"83":0.00423,"84":0.01268,"85":0.0169,"86":0.02535,"87":0.5408,"88":0.22815,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00423,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00423,"33":0,"34":0.00423,"35":0,"36":0,"37":0,"38":0.01268,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.19858,"50":0,"51":0,"52":0,"53":0.00423,"54":0,"55":0,"56":0,"57":0,"58":0.00423,"59":0,"60":0,"61":0.02113,"62":0.00423,"63":0.00845,"64":0,"65":0.00423,"66":0.02535,"67":0.00423,"68":0.00423,"69":0.00423,"70":0.00845,"71":0.00423,"72":0.00423,"73":0.00423,"74":0.00845,"75":0.00845,"76":0.00845,"77":0.00845,"78":0.01268,"79":0.0338,"80":0.02535,"81":0.02535,"83":0.02113,"84":0.02535,"85":0.02113,"86":0.04648,"87":0.11408,"88":0.169,"89":9.4133,"90":4.15318,"91":0.00423,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00423,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00423,"55":0.01268,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00423,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.27463,"74":0.05493,"75":0.21548,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00193,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02831,"6.0-6.1":0.00193,"7.0-7.1":0.00836,"8.1-8.4":0.00643,"9.0-9.2":0.00322,"9.3":0.09008,"10.0-10.2":0.0045,"10.3":0.05276,"11.0-11.2":0.01287,"11.3-11.4":0.07271,"12.0-12.1":0.01995,"12.2-12.4":0.09265,"13.0-13.1":0.02252,"13.2":0.00708,"13.3":0.06306,"13.4-13.7":0.2786,"14.0-14.4":5.23233,"14.5":0.05598},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00845,"14":0.21548,_:"0","3.1":0,"3.2":0,"5.1":0.13098,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00423,"11.1":0.01268,"12.1":0.01268,"13.1":0.04648,"14.1":0.00423},B:{"12":0,"13":0.00423,"14":0.00423,"15":0.0169,"16":0,"17":0.00845,"18":0.0169,"79":0,"80":0,"81":0,"83":0,"84":0.00423,"85":0.00423,"86":0.00423,"87":0.00423,"88":0.00423,"89":0.46475,"90":0.23238},P:{"4":0.22331,"5.0-5.4":0.01015,"6.2-6.4":0,"7.2-7.4":0.13196,"8.2":0.0203,"9.2":0.0609,"10.1":0.0406,"11.1-11.2":0.19286,"12.0":0.10151,"13.0":1.77634,"14.0":0.75114},I:{"0":0,"3":0,"4":0.00053,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00742,"4.2-4.3":0.00901,"4.4":0,"4.4.3-4.4.4":0.0853},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00439,"10":0,"11":0.10546,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":71.09875},S:{"2.5":0},R:{_:"0"},M:{"0":0.14438},Q:{"10.4":0.00578},O:{"0":0.04043},H:{"0":0.20776}};


/***/ }),
/* 258 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0.00529,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01057,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00529,"63":0,"64":0,"65":0.00529,"66":0,"67":0.01057,"68":0,"69":0,"70":0.00529,"71":0,"72":0,"73":0.00529,"74":0,"75":0,"76":0,"77":0,"78":0.01586,"79":0.00529,"80":0,"81":0.01057,"82":0,"83":0,"84":0.01057,"85":0.00529,"86":0.05286,"87":0.54446,"88":0.20087,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00529,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00529,"48":0.00529,"49":0.08458,"50":0,"51":0,"52":0,"53":0.02114,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.01586,"66":0,"67":0.01057,"68":0.00529,"69":0,"70":0,"71":0.00529,"72":0.00529,"73":0.00529,"74":0,"75":0.10572,"76":0.01586,"77":0.28544,"78":0,"79":0.01586,"80":0.01586,"81":0.02114,"83":0.00529,"84":0.037,"85":0.01586,"86":0.037,"87":0.35416,"88":0.66075,"89":11.90407,"90":3.28789,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01586,"74":0.05815,"75":0.16387,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.04264,"8.1-8.4":0.2665,"9.0-9.2":0.00533,"9.3":0.07728,"10.0-10.2":0.01066,"10.3":0.77284,"11.0-11.2":0.13058,"11.3-11.4":0.11992,"12.0-12.1":0.01332,"12.2-12.4":0.06929,"13.0-13.1":0.02398,"13.2":0.00533,"13.3":0.14391,"13.4-13.7":3.36317,"14.0-14.4":17.40747,"14.5":1.56966},E:{"4":0.00529,"5":0,"6":0,"7":0,"8":0,"9":0.00529,"10":0,"11":0,"12":0,"13":0.05286,"14":0.81404,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.04229,"11.1":0.03172,"12.1":0.037,"13.1":0.37531,"14.1":0.01586},B:{"12":0,"13":0,"14":0,"15":0.00529,"16":0.02643,"17":0.03172,"18":0.38059,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.37002,"86":0.02114,"87":0,"88":0.02643,"89":2.74343,"90":1.25278},P:{"4":0.11553,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.21006,"8.2":0,"9.2":0.26257,"10.1":0.0105,"11.1-11.2":0.26257,"12.0":0.3676,"13.0":0.79821,"14.0":0.59866},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.07792,"4.4":0,"4.4.3-4.4.4":0.56596},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00541,"7":0.01083,"8":0.03249,"9":0.01083,"10":0.00541,"11":1.05037,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":44.7588},S:{"2.5":0.24041},R:{_:"0"},M:{"0":0.01414},Q:{"10.4":0.08485},O:{"0":0.07071},H:{"0":0.1205}};


/***/ }),
/* 259 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02316,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01158,"49":0,"50":0,"51":0,"52":0.04632,"53":0,"54":0,"55":0,"56":0.00579,"57":0,"58":0,"59":0,"60":0.04053,"61":0.00579,"62":0.00579,"63":0,"64":0,"65":0.00579,"66":0.04632,"67":0.00579,"68":0.04053,"69":0.00579,"70":0,"71":0,"72":0.01158,"73":0,"74":0.00579,"75":0,"76":0.01158,"77":0.00579,"78":0.25476,"79":0.00579,"80":0.00579,"81":0.01737,"82":0.01158,"83":0.02895,"84":0.04632,"85":0.0579,"86":0.14475,"87":3.63612,"88":1.40118,"89":0.00579,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00579,"35":0,"36":0,"37":0,"38":0.01158,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00579,"48":0.00579,"49":0.1737,"50":0,"51":0,"52":0,"53":0.04053,"54":0,"55":0.00579,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.13896,"62":0.00579,"63":0.01158,"64":0.05211,"65":0.00579,"66":0,"67":0.00579,"68":0.01737,"69":0.00579,"70":0.0579,"71":0.00579,"72":0.0579,"73":0.00579,"74":0.00579,"75":0.02895,"76":0.01158,"77":0.00579,"78":0.01158,"79":0.1158,"80":0.07527,"81":0.03474,"83":0.03474,"84":0.04053,"85":0.01737,"86":0.08106,"87":0.19686,"88":0.27792,"89":10.63623,"90":4.13406,"91":0.01158,"92":0.00579,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00579,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00579,"47":0,"48":0,"49":0.00579,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00579,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00579,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.60795,"74":0.18528,"75":0.66585,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00704,"6.0-6.1":0.00469,"7.0-7.1":0.01408,"8.1-8.4":0.03051,"9.0-9.2":0.00235,"9.3":0.25113,"10.0-10.2":0.01408,"10.3":0.26521,"11.0-11.2":0.10092,"11.3-11.4":0.12674,"12.0-12.1":0.06102,"12.2-12.4":0.36379,"13.0-13.1":0.07745,"13.2":0.05868,"13.3":0.35909,"13.4-13.7":0.84493,"14.0-14.4":19.90272,"14.5":0.30042},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00579,"9":0,"10":0,"11":0.00579,"12":0.01158,"13":0.08685,"14":2.61129,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.00579,"7.1":0,"9.1":0.01737,"10.1":0.09843,"11.1":0.08685,"12.1":0.08685,"13.1":0.38793,"14.1":0.05211},B:{"12":0,"13":0,"14":0.00579,"15":0.00579,"16":0.00579,"17":0.01158,"18":0.11001,"79":0,"80":0,"81":0.00579,"83":0.00579,"84":0.01158,"85":0.01737,"86":0.04053,"87":0.01158,"88":0.05211,"89":2.81394,"90":1.24485},P:{"4":0.23775,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.02067,"8.2":0.01034,"9.2":0.03101,"10.1":0.03101,"11.1-11.2":0.12404,"12.0":0.13438,"13.0":2.96669,"14.0":1.30245},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00533,"4.2-4.3":0.00888,"4.4":0,"4.4.3-4.4.4":0.19001},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01254,"9":0.00627,"10":0,"11":0.66442,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":35.4821},S:{"2.5":0},R:{_:"0"},M:{"0":0.53467},Q:{"10.4":0.00421},O:{"0":0.07578},H:{"0":0.23915}};


/***/ }),
/* 260 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.03359,"34":0.0056,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.0056,"48":0.0056,"49":0,"50":0,"51":0,"52":0.02239,"53":0,"54":0.0056,"55":0,"56":0.0056,"57":0,"58":0,"59":0,"60":0.0056,"61":0,"62":0,"63":0,"64":0,"65":0.0056,"66":0,"67":0.0056,"68":0.0112,"69":0,"70":0.0056,"71":0,"72":0.0056,"73":0,"74":0,"75":0.0056,"76":0,"77":0.0056,"78":0.06158,"79":0.0056,"80":0.0056,"81":0.0056,"82":0.02799,"83":0.0056,"84":0.02239,"85":0.02799,"86":0.06158,"87":1.06922,"88":0.38626,"89":0.0056,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0112,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.0112,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.0112,"35":0,"36":0,"37":0,"38":0.06718,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.0056,"48":0.0056,"49":0.17914,"50":0,"51":0,"52":0.0056,"53":0.07277,"54":0,"55":0.0056,"56":0.0056,"57":0.0056,"58":0.0056,"59":0.0112,"60":0.0112,"61":0.02799,"62":0.0056,"63":0.0112,"64":0.0112,"65":0.03359,"66":0.0112,"67":0.02799,"68":0.03919,"69":0.02799,"70":0.02799,"71":0.01679,"72":0.02799,"73":0.02799,"74":0.04478,"75":0.02799,"76":0.03359,"77":0.01679,"78":0.03359,"79":0.05598,"80":0.07277,"81":0.04478,"83":0.06158,"84":0.05038,"85":0.05038,"86":0.24071,"87":0.38066,"88":0.75573,"89":11.15681,"90":3.98018,"91":0.0112,"92":0.0056,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.0112,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0112,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.0056,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0056,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.06158,"74":0.04478,"75":0.11756,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00788,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03151,"6.0-6.1":0.05514,"7.0-7.1":0.09059,"8.1-8.4":0.14967,"9.0-9.2":0.07089,"9.3":0.86648,"10.0-10.2":0.09059,"10.3":0.79953,"11.0-11.2":0.26388,"11.3-11.4":0.29539,"12.0-12.1":0.30721,"12.2-12.4":1.06735,"13.0-13.1":0.14573,"13.2":0.07089,"13.3":0.50414,"13.4-13.7":1.56754,"14.0-14.4":30.50017,"14.5":0.26782},E:{"4":0,"5":0.0056,"6":0,"7":0,"8":0,"9":0,"10":0.0056,"11":0.0112,"12":0.02799,"13":0.15674,"14":4.24888,_:"0","3.1":0,"3.2":0,"5.1":0.0056,"6.1":0,"7.1":0,"9.1":0.0112,"10.1":0.03919,"11.1":0.08957,"12.1":0.16234,"13.1":0.63257,"14.1":0.05598},B:{"12":0,"13":0,"14":0.0056,"15":0.0112,"16":0.0112,"17":0.0112,"18":0.08957,"79":0,"80":0.0056,"81":0,"83":0,"84":0.0112,"85":0.0056,"86":0.0112,"87":0.0112,"88":0.02799,"89":1.88093,"90":0.8341},P:{"4":0.287,"5.0-5.4":0.01063,"6.2-6.4":0,"7.2-7.4":0.01063,"8.2":0.01063,"9.2":0.04252,"10.1":0.03189,"11.1-11.2":0.09567,"12.0":0.1063,"13.0":2.0515,"14.0":0.96729},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00658,"4.2-4.3":0.01645,"4.4":0,"4.4.3-4.4.4":0.09376},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.01092,"7":0,"8":0,"9":0,"10":0,"11":0.65524,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":26.76154},S:{"2.5":0},R:{_:"0"},M:{"0":0.38297},Q:{"10.4":0.03962},O:{"0":0.15847},H:{"0":0.20838}};


/***/ }),
/* 261 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0387,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00774,"49":0,"50":0,"51":0,"52":0.00387,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0.00387,"77":0,"78":0.01935,"79":0,"80":0,"81":0,"82":0.00387,"83":0,"84":0.00387,"85":0.00774,"86":0.01548,"87":0.47214,"88":0.15093,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.03483,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.05418,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00387,"56":0,"57":0,"58":0.00387,"59":0,"60":0.00387,"61":0,"62":0,"63":0.01935,"64":0,"65":0.00387,"66":0,"67":0.00774,"68":0.00387,"69":0,"70":0.01935,"71":0,"72":0,"73":0,"74":0,"75":0.00387,"76":0.02322,"77":0.00387,"78":0.00387,"79":0.00387,"80":0.00387,"81":0.01935,"83":0.02709,"84":0.02709,"85":0.01161,"86":0.04257,"87":0.1161,"88":0.13932,"89":5.87466,"90":1.68732,"91":0.00774,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00387,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02709,"74":0.02709,"75":0.06192,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00551,"6.0-6.1":0,"7.0-7.1":0.00826,"8.1-8.4":0,"9.0-9.2":0.01652,"9.3":0.5122,"10.0-10.2":0.09914,"10.3":0.39654,"11.0-11.2":0.11841,"11.3-11.4":0.0716,"12.0-12.1":0.0716,"12.2-12.4":0.41857,"13.0-13.1":0.02754,"13.2":0.00551,"13.3":0.21204,"13.4-13.7":0.93353,"14.0-14.4":22.68291,"14.5":0.48191},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.01548,"11":0,"12":0.00774,"13":0.03096,"14":1.55961,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01161,"11.1":0.04257,"12.1":0.08127,"13.1":0.1935,"14.1":0.01548},B:{"12":0,"13":0,"14":0.01161,"15":0.00387,"16":0.01161,"17":0.01935,"18":0.15093,"79":0,"80":0.00387,"81":0,"83":0,"84":0.03096,"85":0.03483,"86":0.01548,"87":0.0387,"88":0.01935,"89":1.69506,"90":0.55728},P:{"4":0.2082,"5.0-5.4":0,"6.2-6.4":0.02082,"7.2-7.4":0.13533,"8.2":0.03123,"9.2":0.19779,"10.1":0.11451,"11.1-11.2":0.51009,"12.0":0.3123,"13.0":7.55768,"14.0":3.12301},I:{"0":0,"3":0,"4":0.00857,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.05357,"4.4":0,"4.4.3-4.4.4":0.16071},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.47601,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":42.12319},S:{"2.5":0},R:{_:"0"},M:{"0":0.32489},Q:{"10.4":0.01226},O:{"0":0.01839},H:{"0":0.12187}};


/***/ }),
/* 262 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.07135,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.03243,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.00649,"58":0,"59":0,"60":0,"61":0.02594,"62":0,"63":0,"64":0,"65":0.00649,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.10378,"79":0,"80":0,"81":0,"82":0,"83":0.00649,"84":0.00649,"85":0.14269,"86":0.07135,"87":1.16748,"88":0.66806,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.03892,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.05837,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00649,"73":0,"74":0,"75":0.00649,"76":0.70049,"77":0,"78":0,"79":0.22701,"80":0.02594,"81":0.00649,"83":0,"84":0.03892,"85":0.00649,"86":0.00649,"87":0.0454,"88":0.16215,"89":13.01092,"90":6.19413,"91":0.07135,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.11675,"74":0.14269,"75":0.15566,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00776,"7.0-7.1":0,"8.1-8.4":0.00518,"9.0-9.2":0.00776,"9.3":0.18891,"10.0-10.2":0.04658,"10.3":1.13344,"11.0-11.2":0.08281,"11.3-11.4":0.05434,"12.0-12.1":4.01364,"12.2-12.4":0.57707,"13.0-13.1":0.42698,"13.2":0,"13.3":0.26137,"13.4-13.7":0.25619,"14.0-14.4":17.62274,"14.5":0.14233},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00649,"13":0.25944,"14":8.15939,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.0454,"10.1":0,"11.1":0.01946,"12.1":0.26593,"13.1":1.42692,"14.1":0.11026},B:{"12":0,"13":0,"14":0,"15":0,"16":0.01297,"17":0.01946,"18":0.31133,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.02594,"89":2.97707,"90":1.24531},P:{"4":0.01094,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.02188,"8.2":0,"9.2":0.01094,"10.1":0,"11.1-11.2":0.01094,"12.0":0.16413,"13.0":1.28018,"14.0":0.80969},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0311,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.05998},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.16864,"5.5":0},J:{"7":0,"10":0.00351},N:{"10":0,"11":0},L:{"0":31.35439},S:{"2.5":0},R:{_:"0"},M:{"0":0.3022},Q:{"10.4":0},O:{"0":0.16516},H:{"0":0.04658}};


/***/ }),
/* 263 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00421,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00421,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.03785,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00841,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00421,"85":0.00421,"86":0.00841,"87":0.18927,"88":0.05888,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00421,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00421,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00421,"39":0,"40":0,"41":0,"42":0.00421,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.04627,"50":0,"51":0,"52":0,"53":0.00841,"54":0,"55":0,"56":0,"57":0,"58":0.00421,"59":0,"60":0,"61":0.00841,"62":0,"63":0.00421,"64":0,"65":0.00841,"66":0.00421,"67":0.00841,"68":0.01682,"69":0.01262,"70":0.00841,"71":0.00421,"72":0.00841,"73":0.01262,"74":0.02524,"75":0.01262,"76":0.00421,"77":0.00841,"78":0.00421,"79":0.03785,"80":0.03365,"81":0.03365,"83":0.04627,"84":0.03785,"85":0.01682,"86":0.05888,"87":0.12618,"88":0.28601,"89":8.4835,"90":3.53304,"91":0.00841,"92":0.00421,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00421,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01682,"55":0.03785,"56":0,"57":0,"58":0,"60":0,"62":0.01682,"63":0.01262,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.16824,"74":0.23974,"75":0.90429,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00579,"5.0-5.1":0.01854,"6.0-6.1":0,"7.0-7.1":0.08225,"8.1-8.4":0.00232,"9.0-9.2":0.01043,"9.3":0.1089,"10.0-10.2":0.0336,"10.3":0.22358,"11.0-11.2":0.07414,"11.3-11.4":0.1031,"12.0-12.1":0.0417,"12.2-12.4":0.26645,"13.0-13.1":0.05329,"13.2":0.02317,"13.3":0.19926,"13.4-13.7":0.54795,"14.0-14.4":8.74756,"14.5":0.14944},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00841,"14":0.32386,_:"0","3.1":0,"3.2":0,"5.1":0.84541,"6.1":0,"7.1":0,"9.1":0.02103,"10.1":0.00421,"11.1":0.05888,"12.1":0.02103,"13.1":0.05888,"14.1":0.00421},B:{"12":0,"13":0,"14":0,"15":0,"16":0.00421,"17":0,"18":0.02524,"79":0,"80":0,"81":0,"83":0,"84":0.00421,"85":0,"86":0.00421,"87":0,"88":0.00421,"89":0.23133,"90":0.143},P:{"4":0.23267,"5.0-5.4":0.01012,"6.2-6.4":0.02023,"7.2-7.4":0.08093,"8.2":0,"9.2":0.07081,"10.1":0.03035,"11.1-11.2":0.20233,"12.0":0.13151,"13.0":2.63024,"14.0":1.01163},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00663,"4.2-4.3":0.01591,"4.4":0,"4.4.3-4.4.4":0.06166},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00841,"9":0,"10":0,"11":0.03365,"5.5":0},J:{"7":0,"10":0.00579},N:{"10":0,"11":0},L:{"0":64.63608},S:{"2.5":0},R:{_:"0"},M:{"0":0.05215},Q:{"10.4":0},O:{"0":0.07532},H:{"0":0.61985}};


/***/ }),
/* 264 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.01064,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01419,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.07449,"46":0,"47":0,"48":0.00355,"49":0,"50":0.01419,"51":0,"52":0.07803,"53":0,"54":0.00355,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00355,"67":0,"68":0.00709,"69":0.00355,"70":0,"71":0,"72":0.00355,"73":0,"74":0,"75":0,"76":0.00355,"77":0.00355,"78":0.01774,"79":0,"80":0,"81":0.00355,"82":0.00355,"83":0.00355,"84":0.00709,"85":0.00709,"86":0.03902,"87":0.86192,"88":0.23056,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00355,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00355,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00355,"35":0,"36":0,"37":0,"38":0.00355,"39":0,"40":0,"41":0,"42":0,"43":0.00355,"44":0,"45":0,"46":0,"47":0.00355,"48":0,"49":0.08868,"50":0.00355,"51":0,"52":0,"53":0.01774,"54":0,"55":0,"56":0.00355,"57":0,"58":0.00355,"59":0,"60":0,"61":0.03902,"62":0,"63":0.00355,"64":0.00355,"65":0.00355,"66":0.00355,"67":0.01064,"68":0.00709,"69":0.00355,"70":0.00709,"71":0.00355,"72":0.00355,"73":0.00355,"74":0.00355,"75":0.00355,"76":0.00709,"77":0.00709,"78":0.00709,"79":0.02838,"80":0.74842,"81":0.02483,"83":0.00709,"84":0.01064,"85":0.01064,"86":0.02483,"87":0.05321,"88":0.15607,"89":6.2108,"90":1.49683,"91":0.00709,"92":0.00355,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00355,"37":0,"38":0,"39":0,"40":0.00355,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00709,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00355,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.07803,"74":0.09577,"75":0.1809,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00253,"6.0-6.1":0.00422,"7.0-7.1":0.0388,"8.1-8.4":0.00337,"9.0-9.2":0,"9.3":0.15099,"10.0-10.2":0.01603,"10.3":0.19655,"11.0-11.2":0.02615,"11.3-11.4":0.06748,"12.0-12.1":0.04049,"12.2-12.4":0.16702,"13.0-13.1":0.01687,"13.2":0.0059,"13.3":0.08182,"13.4-13.7":0.29608,"14.0-14.4":6.58724,"14.5":0.03712},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00355,"9":0,"10":0,"11":0,"12":0.00709,"13":0.00709,"14":0.20218,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00709,"11.1":0.00709,"12.1":0.01064,"13.1":0.03192,"14.1":0.00355},B:{"12":0,"13":0.00355,"14":0.00355,"15":0.01419,"16":0.00355,"17":0.00355,"18":0.02128,"79":0,"80":0.00355,"81":0,"83":0,"84":0.00355,"85":0.02838,"86":0.00355,"87":0.00355,"88":0.01419,"89":0.40081,"90":0.09932},P:{"4":0.25455,"5.0-5.4":0.01018,"6.2-6.4":0,"7.2-7.4":0.05091,"8.2":0.02036,"9.2":0.10182,"10.1":0.05091,"11.1-11.2":0.25455,"12.0":0.17309,"13.0":3.7775,"14.0":0.7331},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00944,"4.2-4.3":0.03461,"4.4":0,"4.4.3-4.4.4":0.23915},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00363,"9":0,"10":0,"11":0.14889,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":71.86421},S:{"2.5":0},R:{_:"0"},M:{"0":0.2065},Q:{"10.4":0},O:{"0":0.01936},H:{"0":0.26881}};


/***/ }),
/* 265 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.01085,"5":0.01627,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00542,"16":0,"17":0.02169,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00542,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00542,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00542,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02169,"79":0.00542,"80":0.00542,"81":0.00542,"82":0.08135,"83":0,"84":0.08135,"85":0.00542,"86":0.03254,"87":0.8948,"88":0.27657,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.01085,"24":0.01085,"25":0.01085,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.02169,"35":0,"36":0,"37":0,"38":0.00542,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.03254,"50":0,"51":0,"52":0,"53":0.01627,"54":0,"55":0,"56":0.00542,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00542,"64":0,"65":0.00542,"66":0.01085,"67":0,"68":0.01627,"69":0,"70":0.00542,"71":0,"72":0,"73":0.00542,"74":0.57484,"75":0.00542,"76":0.03796,"77":0.00542,"78":0.00542,"79":0.02169,"80":0.09219,"81":0.08135,"83":0.10304,"84":0.14642,"85":0.02169,"86":0.08677,"87":0.2115,"88":0.18981,"89":11.20392,"90":4.5499,"91":0.00542,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00542,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.07592,"72":0,"73":0.18438,"74":0.05965,"75":0.19523,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0343,"6.0-6.1":0.02229,"7.0-7.1":0.24352,"8.1-8.4":0,"9.0-9.2":0.00686,"9.3":0.27439,"10.0-10.2":0.00514,"10.3":0.23838,"11.0-11.2":0.02915,"11.3-11.4":0.04287,"12.0-12.1":0.05145,"12.2-12.4":0.23323,"13.0-13.1":0.02401,"13.2":0.02058,"13.3":0.40987,"13.4-13.7":0.87977,"14.0-14.4":12.81408,"14.5":0.6654},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00542,"13":0.02712,"14":1.68113,_:"0","3.1":0,"3.2":0,"5.1":0.01627,"6.1":0,"7.1":0,"9.1":0.02169,"10.1":0.00542,"11.1":0.03254,"12.1":0.03254,"13.1":0.13558,"14.1":0.02169},B:{"12":0.00542,"13":0,"14":0.00542,"15":0,"16":0.00542,"17":0.01627,"18":0.08677,"79":0,"80":0,"81":0,"83":0.00542,"84":0.00542,"85":0.01627,"86":0.01627,"87":0.01085,"88":0.01627,"89":2.85792,"90":1.27983},P:{"4":0.16499,"5.0-5.4":0.022,"6.2-6.4":0,"7.2-7.4":0.23099,"8.2":0,"9.2":0.044,"10.1":0.022,"11.1-11.2":0.15399,"12.0":0.30798,"13.0":3.62981,"14.0":1.61692},I:{"0":0,"3":0,"4":0.03391,"2.1":0,"2.2":0,"2.3":0,"4.1":0.05086,"4.2-4.3":0.18649,"4.4":0,"4.4.3-4.4.4":2.20401},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00566,"9":0.00566,"10":0.00566,"11":0.49277,"5.5":0},J:{"7":0,"10":0.00458},N:{"10":0,"11":0},L:{"0":44.96269},S:{"2.5":0},R:{_:"0"},M:{"0":0.22427},Q:{"10.4":0.00458},O:{"0":0.07781},H:{"0":0.156}};


/***/ }),
/* 266 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00341,"34":0,"35":0,"36":0,"37":0,"38":0.00341,"39":0,"40":0.00341,"41":0.00341,"42":0,"43":0.00341,"44":0,"45":0.00341,"46":0,"47":0.00683,"48":0.00341,"49":0.00341,"50":0,"51":0.00341,"52":0.02731,"53":0,"54":0,"55":0,"56":0.00341,"57":0.00341,"58":0,"59":0,"60":0.00341,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00341,"68":0.01024,"69":0,"70":0,"71":0,"72":0.00341,"73":0,"74":0,"75":0.01024,"76":0,"77":0.00341,"78":0.01707,"79":0.00341,"80":0.00341,"81":0.00341,"82":0.00341,"83":0.00341,"84":0.01024,"85":0.01366,"86":0.02731,"87":1.03103,"88":0.49844,"89":0.04097,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00341,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00341,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00341,"41":0.00341,"42":0,"43":0.00341,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0239,"50":0.00341,"51":0,"52":0,"53":0.00341,"54":0,"55":0,"56":0.00341,"57":0.00341,"58":0.00341,"59":0,"60":0,"61":0.01024,"62":0,"63":0.00341,"64":0.00341,"65":0,"66":0,"67":0,"68":0.00341,"69":0.00341,"70":0.00341,"71":0.00683,"72":0.00341,"73":0.00683,"74":0.00683,"75":0.00341,"76":0.00683,"77":0.00341,"78":0.00341,"79":0.02048,"80":0.01024,"81":0.02731,"83":0.01707,"84":0.02048,"85":0.01707,"86":0.04097,"87":0.07169,"88":0.10242,"89":4.69766,"90":1.96988,"91":0.02048,"92":0.00683,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00683,"29":0,"30":0.00341,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.02048,"38":0.00341,"39":0,"40":0,"41":0,"42":0.00341,"43":0,"44":0,"45":0,"46":0.00683,"47":0.00341,"48":0,"49":0,"50":0.01707,"51":0.02731,"52":0,"53":0,"54":0.11949,"55":0.25264,"56":0,"57":0,"58":0,"60":0.00341,"62":0.00341,"63":0.02731,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02731,"74":0.03755,"75":0.1468,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00341},G:{"8":0,"3.2":0.00076,"4.0-4.1":0.00025,"4.2-4.3":0.00076,"5.0-5.1":0.00331,"6.0-6.1":0.00459,"7.0-7.1":0.07214,"8.1-8.4":0.00637,"9.0-9.2":0.00408,"9.3":0.04971,"10.0-10.2":0.00561,"10.3":0.14861,"11.0-11.2":0.01478,"11.3-11.4":0.01555,"12.0-12.1":0.02931,"12.2-12.4":0.13,"13.0-13.1":0.04078,"13.2":0.00688,"13.3":0.02396,"13.4-13.7":0.11165,"14.0-14.4":1.59799,"14.5":0.02778},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00341,"14":0.05462,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00683,"13.1":0.00683,"14.1":0},B:{"12":0.00341,"13":0.00341,"14":0.00683,"15":0.00683,"16":0.00341,"17":0.01707,"18":0.01024,"79":0,"80":0,"81":0,"83":0,"84":0.00341,"85":0.00341,"86":0,"87":0.00341,"88":0.00341,"89":0.24581,"90":0.11608},P:{"4":0.41629,"5.0-5.4":0.02031,"6.2-6.4":0.02031,"7.2-7.4":0.09138,"8.2":0.03046,"9.2":0.07107,"10.1":0.04061,"11.1-11.2":0.17261,"12.0":0.18276,"13.0":0.99503,"14.0":0.39598},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0069,"4.2-4.3":0.02069,"4.4":0,"4.4.3-4.4.4":0.43314},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00829,"9":0,"10":0.00415,"11":0.0456,"5.5":0},J:{"7":0,"10":0.00659},N:{"10":0,"11":0},L:{"0":73.41659},S:{"2.5":0},R:{_:"0"},M:{"0":0.19099},Q:{"10.4":0.00659},O:{"0":3.43789},H:{"0":4.05911}};


/***/ }),
/* 267 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0241,"34":0,"35":0,"36":0,"37":0,"38":0.00602,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01205,"49":0,"50":0,"51":0,"52":0.03012,"53":0,"54":0,"55":0,"56":0.04217,"57":0,"58":0,"59":0,"60":0.00602,"61":0,"62":0,"63":0,"64":0,"65":0.00602,"66":0,"67":0,"68":0.01807,"69":0,"70":0,"71":0,"72":0.00602,"73":0,"74":0,"75":0.00602,"76":0,"77":0.00602,"78":0.15662,"79":0.00602,"80":0.00602,"81":0.00602,"82":0.00602,"83":0.01205,"84":0.06024,"85":0.03614,"86":0.08434,"87":1.92768,"88":0.68674,"89":0.00602,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00602,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00602,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.1265,"50":0,"51":0,"52":0,"53":0.01205,"54":0,"55":0,"56":0,"57":0.00602,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00602,"64":0.00602,"65":0.01205,"66":0.01205,"67":0.01807,"68":0.00602,"69":0.01205,"70":0.00602,"71":0,"72":0.01205,"73":0.01205,"74":0.0241,"75":0.03614,"76":0.06024,"77":0.0241,"78":0.22891,"79":0.29518,"80":0.05422,"81":0.03614,"83":0.04819,"84":0.05422,"85":0.08434,"86":0.09036,"87":0.30722,"88":0.64457,"89":13.89737,"90":5.46377,"91":0.00602,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00602,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00602,"64":0,"65":0,"66":0,"67":0,"68":0.00602,"69":0,"70":0,"71":0.00602,"72":0.00602,"73":0.16265,"74":0.09036,"75":0.3012,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00602},G:{"8":0.00526,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00789,"6.0-6.1":0.0184,"7.0-7.1":0.07099,"8.1-8.4":0.03418,"9.0-9.2":0.02629,"9.3":0.27607,"10.0-10.2":0.02103,"10.3":0.36546,"11.0-11.2":0.09728,"11.3-11.4":0.1078,"12.0-12.1":0.11043,"12.2-12.4":0.40753,"13.0-13.1":0.09991,"13.2":0.03944,"13.3":0.29973,"13.4-13.7":1.10164,"14.0-14.4":21.68317,"14.5":0.23926},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0241,"12":0.01807,"13":0.11446,"14":3.34332,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.00602,"7.1":0,"9.1":0.00602,"10.1":0.04217,"11.1":0.07229,"12.1":0.13253,"13.1":0.55421,"14.1":0.06024},B:{"12":0,"13":0,"14":0.00602,"15":0.00602,"16":0.01205,"17":0.01205,"18":0.08434,"79":0,"80":0.00602,"81":0,"83":0.00602,"84":0.01205,"85":0.01205,"86":0.01807,"87":0.01205,"88":0.04819,"89":2.79514,"90":1.19878},P:{"4":0.09336,"5.0-5.4":0.01037,"6.2-6.4":0,"7.2-7.4":0.01037,"8.2":0,"9.2":0.01037,"10.1":0.02075,"11.1-11.2":0.08299,"12.0":0.09336,"13.0":2.73858,"14.0":1.31742},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00319,"4.2-4.3":0.01597,"4.4":0,"4.4.3-4.4.4":0.10698},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00631,"9":0,"10":0,"11":0.5238,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":32.37017},S:{"2.5":0},R:{_:"0"},M:{"0":0.28627},Q:{"10.4":0.00398},O:{"0":0.03578},H:{"0":0.1054}};


/***/ }),
/* 268 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00221,"31":0,"32":0,"33":0.00221,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00221,"44":0,"45":0,"46":0,"47":0.00221,"48":0,"49":0,"50":0,"51":0,"52":0.01328,"53":0,"54":0,"55":0,"56":0.00221,"57":0.00221,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00221,"66":0.00221,"67":0,"68":0.00664,"69":0,"70":0,"71":0,"72":0.00886,"73":0,"74":0,"75":0.00221,"76":0,"77":0.00221,"78":0.01328,"79":0.00221,"80":0.00664,"81":0.04428,"82":0.00221,"83":0.00221,"84":0.01328,"85":0.031,"86":0.031,"87":0.50258,"88":0.16826,"89":0.00221,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00664,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00221,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00221,"41":0,"42":0.00221,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00221,"49":0.01107,"50":0.00221,"51":0,"52":0,"53":0.00221,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00221,"64":0.00221,"65":0.00664,"66":0,"67":0,"68":0.00221,"69":0,"70":0.00886,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0.00221,"77":0.00886,"78":0,"79":0.00443,"80":0.00664,"81":0.01771,"83":0.00221,"84":0.03321,"85":0.00443,"86":0.00886,"87":0.04871,"88":0.04207,"89":1.27305,"90":0.54464,"91":0.00221,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00221,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00443,"25":0,"26":0.01107,"27":0.00443,"28":0.01771,"29":0,"30":0.01328,"31":0,"32":0.00443,"33":0.00221,"34":0,"35":0,"36":0,"37":0,"38":0.01107,"39":0,"40":0,"41":0,"42":0.00443,"43":0,"44":0,"45":0.00221,"46":0.05314,"47":0.00221,"48":0,"49":0,"50":0.02657,"51":0.01771,"52":0,"53":0.00221,"54":0.12177,"55":0.15277,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00886,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00221,"74":0.03764,"75":0.21476,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00664},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00204,"6.0-6.1":0.00204,"7.0-7.1":0.06395,"8.1-8.4":0,"9.0-9.2":0.00544,"9.3":0.12926,"10.0-10.2":0.00816,"10.3":0.08572,"11.0-11.2":0.27213,"11.3-11.4":0.10341,"12.0-12.1":0.10749,"12.2-12.4":0.28913,"13.0-13.1":0.07756,"13.2":0.02993,"13.3":0.20954,"13.4-13.7":0.50071,"14.0-14.4":4.51932,"14.5":0.02041},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00221,"12":0,"13":0.00221,"14":0.03985,_:"0","3.1":0,"3.2":0,"5.1":0.00886,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00221,"13.1":0.00886,"14.1":0},B:{"12":0.00886,"13":0.00443,"14":0.00221,"15":0.00443,"16":0.00221,"17":0.00664,"18":0.04428,"79":0,"80":0.00221,"81":0,"83":0,"84":0.00443,"85":0.00664,"86":0,"87":0.00443,"88":0.01107,"89":0.23026,"90":0.09299},P:{"4":0.21402,"5.0-5.4":0.04077,"6.2-6.4":0,"7.2-7.4":0.06115,"8.2":0,"9.2":0.04077,"10.1":0.02038,"11.1-11.2":0.09172,"12.0":0.07134,"13.0":0.55034,"14.0":0.16306},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00849,"4.2-4.3":0.0184,"4.4":0,"4.4.3-4.4.4":0.37075},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.04207,"5.5":0},J:{"7":0,"10":0.07786},N:{"10":0,"11":0},L:{"0":78.99689},S:{"2.5":0.02336},R:{_:"0"},M:{"0":0.19465},Q:{"10.4":0.09343},O:{"0":0.82532},H:{"0":5.67589}};


/***/ }),
/* 269 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01426,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00475,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00475,"48":0.00475,"49":0,"50":0.00475,"51":0.00475,"52":0.12833,"53":0,"54":0,"55":0,"56":0.00475,"57":0,"58":0,"59":0,"60":0.01901,"61":0.00475,"62":0.00475,"63":0.00951,"64":0,"65":0.00475,"66":0.00475,"67":0.00475,"68":0.05704,"69":0.00475,"70":0.00475,"71":0,"72":0.00951,"73":0,"74":0,"75":0.03327,"76":0.00475,"77":0.00475,"78":0.11883,"79":0.00475,"80":0.00475,"81":0.01426,"82":0.00951,"83":0.02377,"84":0.03327,"85":0.03802,"86":0.09031,"87":2.2244,"88":0.82702,"89":0.00475,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00475,"39":0,"40":0,"41":0.00475,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00475,"49":0.3137,"50":0,"51":0,"52":0,"53":0.00951,"54":0,"55":0,"56":0.00475,"57":0.01426,"58":0.00951,"59":0,"60":0,"61":0.08555,"62":0,"63":0.01901,"64":0.00475,"65":0.00475,"66":0.00951,"67":0.00951,"68":0.00475,"69":0.02852,"70":0.00951,"71":0.00951,"72":0.00475,"73":0.00951,"74":0.00951,"75":0.00951,"76":0.00951,"77":0.00951,"78":0.00951,"79":0.11407,"80":0.01901,"81":0.0713,"83":0.02852,"84":0.03802,"85":0.03327,"86":0.05704,"87":0.14259,"88":0.22339,"89":10.10963,"90":3.66456,"91":0.01426,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00475,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00475,"55":0.00475,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00475,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.20913,"74":0.1616,"75":0.51332,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00225,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00676,"6.0-6.1":0.0045,"7.0-7.1":0.04054,"8.1-8.4":0.00338,"9.0-9.2":0.0045,"9.3":0.07657,"10.0-10.2":0.01914,"10.3":0.12161,"11.0-11.2":0.03941,"11.3-11.4":0.07319,"12.0-12.1":0.04955,"12.2-12.4":0.19931,"13.0-13.1":0.03153,"13.2":0.01126,"13.3":0.10923,"13.4-13.7":0.49321,"14.0-14.4":9.35406,"14.5":0.10585},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.02377,"14":0.31845,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00951,"12.1":0.01426,"13.1":0.04278,"14.1":0.00475},B:{"12":0,"13":0,"14":0.00475,"15":0.00951,"16":0.00475,"17":0.00951,"18":0.02852,"79":0,"80":0,"81":0,"83":0,"84":0.00475,"85":0.00475,"86":0.00951,"87":0.00951,"88":0.00951,"89":0.81276,"90":0.34697},P:{"4":0.07132,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.02038,"8.2":0,"9.2":0.04075,"10.1":0.03057,"11.1-11.2":0.11208,"12.0":0.0917,"13.0":1.68114,"14.0":0.75397},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00765,"4.2-4.3":0.03635,"4.4":0,"4.4.3-4.4.4":0.26402},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00485,"10":0,"11":0.4752,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":61.86218},S:{"2.5":0},R:{_:"0"},M:{"0":0.21513},Q:{"10.4":0.00525},O:{"0":0.04198},H:{"0":0.23347}};


/***/ }),
/* 270 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00395,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0079,"53":0.00395,"54":0,"55":0,"56":0.00395,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00395,"79":0.01185,"80":0,"81":0.00395,"82":0,"83":0,"84":0.00395,"85":0.0079,"86":0.0237,"87":0.34365,"88":0.1264,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.0158,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0395,"50":0,"51":0,"52":0,"53":0.01975,"54":0,"55":0,"56":0.0079,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00395,"63":0.00395,"64":0.0079,"65":0.01185,"66":0,"67":0,"68":0.0079,"69":0.01185,"70":0,"71":0.00395,"72":0,"73":0.00395,"74":0.01975,"75":0,"76":0.00395,"77":0.01185,"78":0.00395,"79":0.0158,"80":0.0079,"81":0.0237,"83":0.0316,"84":0.0237,"85":0.01185,"86":0.03555,"87":0.0948,"88":0.15405,"89":7.663,"90":2.87955,"91":0.01185,"92":0.00395,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00395,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00395,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00395,"55":0.0079,"56":0,"57":0,"58":0,"60":0,"62":0.00395,"63":0.00395,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.05925,"74":0.01975,"75":0.02765,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00475,"6.0-6.1":0.00713,"7.0-7.1":0.04753,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.14259,"10.0-10.2":0.02139,"10.3":0.1212,"11.0-11.2":0.08318,"11.3-11.4":0.10932,"12.0-12.1":0.11407,"12.2-12.4":0.32796,"13.0-13.1":0.08318,"13.2":0.03565,"13.3":0.33984,"13.4-13.7":1.0837,"14.0-14.4":20.15061,"14.5":0.33509},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01185,"13":0.03555,"14":1.00725,_:"0","3.1":0,"3.2":0,"5.1":0.0079,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01185,"11.1":0.02765,"12.1":0.03555,"13.1":0.20145,"14.1":0.01975},B:{"12":0,"13":0.00395,"14":0.00395,"15":0.0079,"16":0.00395,"17":0.01975,"18":0.0395,"79":0,"80":0.00395,"81":0,"83":0,"84":0.00395,"85":0.00395,"86":0.0158,"87":0.00395,"88":0.01185,"89":0.9401,"90":0.4108},P:{"4":0.24519,"5.0-5.4":0.02043,"6.2-6.4":0,"7.2-7.4":0.19411,"8.2":0.01022,"9.2":0.13281,"10.1":0.04086,"11.1-11.2":0.24519,"12.0":0.27584,"13.0":2.81966,"14.0":1.13399},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00228,"4.2-4.3":0.01028,"4.4":0,"4.4.3-4.4.4":0.06509},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.2212,"5.5":0},J:{"7":0,"10":0.00605},N:{"10":0,"11":0},L:{"0":49.6228},S:{"2.5":0},R:{_:"0"},M:{"0":0.1936},Q:{"10.4":0.00605},O:{"0":2.97055},H:{"0":0.39521}};


/***/ }),
/* 271 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0.01309,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00327,"16":0,"17":0.00655,"18":0,"19":0,"20":0.00327,"21":0,"22":0,"23":0,"24":0.00327,"25":0,"26":0,"27":0,"28":0.00327,"29":0,"30":0,"31":0,"32":0.00655,"33":0.00327,"34":0,"35":0.00655,"36":0,"37":0,"38":0,"39":0,"40":0.00327,"41":0,"42":0.00655,"43":0,"44":0,"45":0,"46":0,"47":0.00327,"48":0.00327,"49":0,"50":0,"51":0,"52":0.00655,"53":0,"54":0,"55":0,"56":0.00655,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00327,"68":0.00655,"69":0.00327,"70":0,"71":0,"72":0.00327,"73":0,"74":0,"75":0,"76":0,"77":0.00327,"78":0.01309,"79":0,"80":0.01964,"81":0.02946,"82":0,"83":0,"84":0.00327,"85":0.01309,"86":0.03928,"87":0.87062,"88":0.27821,"89":0.01964,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00327,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00327,"41":0,"42":0,"43":0.00655,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01964,"50":0.00327,"51":0,"52":0,"53":0,"54":0,"55":0.00327,"56":0,"57":0,"58":0.09819,"59":0,"60":0,"61":0,"62":0.00327,"63":0.00327,"64":0.00327,"65":0.00327,"66":0.00327,"67":0,"68":0,"69":0,"70":0.00327,"71":0,"72":0,"73":0,"74":0.00327,"75":0.01637,"76":0.02946,"77":0.00655,"78":0,"79":0.04255,"80":0.01637,"81":0.06873,"83":0.02291,"84":0,"85":0.01964,"86":0.01964,"87":0.17347,"88":0.18002,"89":3.54139,"90":1.48594,"91":0.02618,"92":0.00327,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00982,"23":0.00982,"24":0.11456,"25":0,"26":0.01964,"27":0.00327,"28":0.03273,"29":0.00327,"30":0.04255,"31":0.00327,"32":0.01964,"33":0.00655,"34":0,"35":0.00327,"36":0.00655,"37":0.01309,"38":0.00327,"39":0,"40":0,"41":0,"42":0.00655,"43":0,"44":0,"45":0.00655,"46":0.04255,"47":0.15383,"48":0,"49":0,"50":0.02946,"51":0.05891,"52":0,"53":0.00327,"54":0.29457,"55":0.63824,"56":0,"57":0,"58":0,"60":0,"62":0.00327,"63":0.00655,"64":0,"65":0,"66":0,"67":0,"68":0.01637,"69":0,"70":0.00327,"71":0,"72":0.00327,"73":0.01637,"74":0.0851,"75":0.48113,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.04582},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00126,"6.0-6.1":0.00717,"7.0-7.1":0.02318,"8.1-8.4":0.00126,"9.0-9.2":0.00126,"9.3":0.08304,"10.0-10.2":0,"10.3":0.09357,"11.0-11.2":0.04974,"11.3-11.4":0.06449,"12.0-12.1":0.07166,"12.2-12.4":0.28578,"13.0-13.1":0.10959,"13.2":0.04089,"13.3":0.19094,"13.4-13.7":0.43205,"14.0-14.4":2.37098,"14.5":0.12856},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.1571,_:"0","3.1":0,"3.2":0,"5.1":0.17347,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00655,"12.1":0.00327,"13.1":0.02291,"14.1":0.00982},B:{"12":0.036,"13":0.00982,"14":0.00327,"15":0.01964,"16":0,"17":0.01309,"18":0.07201,"79":0,"80":0.00327,"81":0.00327,"83":0,"84":0.00655,"85":0.02291,"86":0,"87":0,"88":0.00327,"89":0.43531,"90":0.25202},P:{"4":0.20348,"5.0-5.4":0.0407,"6.2-6.4":0.0407,"7.2-7.4":0.08139,"8.2":0,"9.2":0.07122,"10.1":0.05087,"11.1-11.2":0.08139,"12.0":0.05087,"13.0":0.47817,"14.0":0.13226},I:{"0":0,"3":0,"4":0.00059,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00499,"4.2-4.3":0.00675,"4.4":0,"4.4.3-4.4.4":0.10658},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.0074,"11":0.0777,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":62.26495},S:{"2.5":0.00673},R:{_:"0"},M:{"0":0.10091},Q:{"10.4":0.15472},O:{"0":0.43053},H:{"0":15.56508}};


/***/ }),
/* 272 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00428,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00428,"44":0,"45":0.00428,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01284,"53":0,"54":0,"55":0,"56":0.00428,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00428,"66":0.00856,"67":0,"68":0.00428,"69":0,"70":0,"71":0,"72":0.00856,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.0214,"79":0.00856,"80":0.00428,"81":0.00428,"82":0.01712,"83":0.00428,"84":0.01284,"85":0.06419,"86":0.04707,"87":0.74883,"88":0.2439,"89":0.00428,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00856,"25":0,"26":0,"27":0,"28":0.00428,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00428,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00428,"44":0.00428,"45":0,"46":0.00428,"47":0.00428,"48":0,"49":0.01712,"50":0.00428,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00428,"57":0.00428,"58":0.00428,"59":0.00428,"60":0.00428,"61":0.01712,"62":0.00428,"63":0.02995,"64":0.01284,"65":0.00428,"66":0.00428,"67":0.00856,"68":0.00428,"69":0.06846,"70":0.01712,"71":0.32093,"72":0.01712,"73":0.01284,"74":0.02567,"75":0.02995,"76":0.01284,"77":0.05563,"78":0.00856,"79":0.19683,"80":0.02567,"81":0.85152,"83":0.04707,"84":0.14121,"85":0.11125,"86":0.0813,"87":0.36372,"88":0.34232,"89":6.23022,"90":2.3235,"91":0.01284,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00856,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01712,"25":0,"26":0.01712,"27":0.01284,"28":0.01284,"29":0.00428,"30":0.02995,"31":0.00428,"32":0.0214,"33":0.00856,"34":0,"35":0.03423,"36":0,"37":0,"38":0.01712,"39":0,"40":0,"41":0,"42":0.00856,"43":0,"44":0,"45":0,"46":0.02995,"47":0.01284,"48":0,"49":0,"50":0.07274,"51":0.13265,"52":0.00428,"53":0,"54":0.15404,"55":0.21395,"56":0,"57":0.00856,"58":0,"60":0.01284,"62":0.00428,"63":0.00428,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00428,"71":0,"72":0.00856,"73":0.05563,"74":0.09414,"75":0.47925,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.02995},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00195,"7.0-7.1":0.03707,"8.1-8.4":0.00195,"9.0-9.2":0.0039,"9.3":0.12485,"10.0-10.2":0.01561,"10.3":0.15119,"11.0-11.2":0.05755,"11.3-11.4":0.09657,"12.0-12.1":0.1112,"12.2-12.4":1.37535,"13.0-13.1":0.1151,"13.2":0.01951,"13.3":0.19801,"13.4-13.7":0.86618,"14.0-14.4":5.21755,"14.5":0.01561},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00856,"14":0.1626,_:"0","3.1":0,"3.2":0,"5.1":0.07702,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00428,"12.1":0.01712,"13.1":0.02567,"14.1":0},B:{"12":0.00428,"13":0,"14":0.00428,"15":0.00428,"16":0.00428,"17":0.00428,"18":0.02995,"79":0,"80":0,"81":0,"83":0,"84":0.00428,"85":0.00428,"86":0.00856,"87":0.00428,"88":0.00856,"89":0.81729,"90":0.184},P:{"4":0.06179,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.03089,"8.2":0,"9.2":0.0206,"10.1":0.0103,"11.1-11.2":0.07208,"12.0":0.04119,"13.0":0.52519,"14.0":0.11328},I:{"0":0,"3":0,"4":0.01999,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00113,"4.2-4.3":0.00338,"4.4":0,"4.4.3-4.4.4":0.05406},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00998,"11":0.10983,"5.5":0},J:{"7":0,"10":0.01716},N:{"10":0,"11":0},L:{"0":65.34469},S:{"2.5":0.05149},R:{_:"0"},M:{"0":0.10298},Q:{"10.4":0.02288},O:{"0":0.95541},H:{"0":5.4596}};


/***/ }),
/* 273 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00574,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01723,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.05743,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.1206,"79":0,"80":0,"81":0.18952,"82":0.00574,"83":0,"84":0.00574,"85":0.00574,"86":0.06317,"87":0.55133,"88":0.13209,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0402,"50":0,"51":0,"52":0,"53":0.00574,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.15506,"62":0,"63":0.00574,"64":0,"65":0.01149,"66":0.00574,"67":0.00574,"68":0,"69":0,"70":0.16655,"71":0.01723,"72":0,"73":0.01149,"74":0.1206,"75":0,"76":0.0402,"77":0.07466,"78":0.01723,"79":0,"80":0.01149,"81":0.04594,"83":0.00574,"84":0.05169,"85":0.62599,"86":0.17803,"87":0.1608,"88":0.32161,"89":11.10122,"90":4.02584,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00574,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.20675,"74":0.06892,"75":0.20101,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.01619,"9.0-9.2":0.14162,"9.3":0.30753,"10.0-10.2":0,"10.3":0.51389,"11.0-11.2":0.05665,"11.3-11.4":0.09711,"12.0-12.1":0.16186,"12.2-12.4":0.21041,"13.0-13.1":0.10521,"13.2":0.03237,"13.3":0.64742,"13.4-13.7":1.76019,"14.0-14.4":33.96148,"14.5":0.28325},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00574,"11":0,"12":0.00574,"13":0.32735,"14":5.11127,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01149,"10.1":0.3733,"11.1":0.07466,"12.1":0.21249,"13.1":0.84422,"14.1":0.11486},B:{"12":0,"13":0,"14":0,"15":0.00574,"16":0.01149,"17":0.00574,"18":0.16655,"79":0,"80":0.00574,"81":0,"83":0,"84":0,"85":0.17229,"86":0.00574,"87":0,"88":0.02872,"89":2.46949,"90":1.36683},P:{"4":0.09454,"5.0-5.4":0.02101,"6.2-6.4":0,"7.2-7.4":0.06302,"8.2":0.02101,"9.2":0.07353,"10.1":0.02101,"11.1-11.2":0.12605,"12.0":0.2521,"13.0":2.19537,"14.0":1.33403},I:{"0":0,"3":0,"4":0.04159,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.02376,"4.4":0,"4.4.3-4.4.4":0.3624},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.59727,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":22.74476},S:{"2.5":0},R:{_:"0"},M:{"0":0.34482},Q:{"10.4":0},O:{"0":0.25542},H:{"0":0.04433}};


/***/ }),
/* 274 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00858,"33":0.02574,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00429,"44":0.00429,"45":0,"46":0,"47":0.00429,"48":0.00429,"49":0,"50":0,"51":0,"52":0.02574,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00429,"67":0,"68":0.00429,"69":0,"70":0,"71":0,"72":0.00858,"73":0.00429,"74":0,"75":0,"76":0.00429,"77":0,"78":0.02574,"79":0.02145,"80":0.00858,"81":0.02574,"82":0,"83":0.00429,"84":0.00429,"85":0.00858,"86":0.05577,"87":0.82368,"88":0.33891,"89":0.00858,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.03861,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00429,"47":0.01716,"48":0,"49":0.30888,"50":0.00429,"51":0,"52":0,"53":0.01287,"54":0,"55":0.02145,"56":0.00429,"57":0.00429,"58":0,"59":0,"60":0.00858,"61":0,"62":0,"63":0.00429,"64":0,"65":0.02145,"66":0.00429,"67":0.01716,"68":0.03432,"69":0.00429,"70":0.00429,"71":0.00429,"72":0.01287,"73":0.02574,"74":0.03432,"75":0.00429,"76":0,"77":0.00429,"78":0,"79":0.02145,"80":0.04719,"81":0.05577,"83":0.03003,"84":0.06435,"85":0.03861,"86":0.04719,"87":0.18876,"88":0.23166,"89":7.86786,"90":2.94723,"91":0.04719,"92":0.00858,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00858,"27":0,"28":0.01287,"29":0,"30":0,"31":0,"32":0.00429,"33":0,"34":0,"35":0,"36":0.00858,"37":0.01287,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01287,"47":0.00429,"48":0,"49":0,"50":0.01287,"51":0.00858,"52":0,"53":0,"54":0.05148,"55":0.27885,"56":0,"57":0,"58":0,"60":0.03432,"62":0,"63":0.01287,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.11154,"74":0.0429,"75":0.18447,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0.0066,"4.2-4.3":0,"5.0-5.1":0.0066,"6.0-6.1":0.07704,"7.0-7.1":0.19149,"8.1-8.4":0.01761,"9.0-9.2":0.06823,"9.3":0.87381,"10.0-10.2":0.05503,"10.3":0.54145,"11.0-11.2":0.13426,"11.3-11.4":0.17828,"12.0-12.1":0.13426,"12.2-12.4":0.6339,"13.0-13.1":0.08804,"13.2":0.09024,"13.3":0.30154,"13.4-13.7":0.96405,"14.0-14.4":15.17168,"14.5":0.33896},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00429,"12":0.00858,"13":0.07722,"14":1.25697,_:"0","3.1":0,"3.2":0,"5.1":0.00858,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00858,"11.1":0.03003,"12.1":0.07722,"13.1":0.15015,"14.1":0.01287},B:{"12":0.00429,"13":0,"14":0.00858,"15":0.00429,"16":0.00429,"17":0.01287,"18":0.06864,"79":0,"80":0,"81":0,"83":0,"84":0.01287,"85":0,"86":0.00429,"87":0.00429,"88":0.00858,"89":0.71214,"90":0.37323},P:{"4":0.48034,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.05337,"8.2":0,"9.2":0.11742,"10.1":0.03202,"11.1-11.2":0.06405,"12.0":0.07472,"13.0":1.39833,"14.0":0.64046},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00414,"4.2-4.3":0.01655,"4.4":0,"4.4.3-4.4.4":0.17373},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.01062,"10":0,"11":0.10092,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":51.02981},S:{"2.5":0},R:{_:"0"},M:{"0":0.27979},Q:{"10.4":0.00571},O:{"0":2.35823},H:{"0":2.64347}};


/***/ }),
/* 275 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00414,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00414,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00414,"44":0,"45":0,"46":0,"47":0,"48":0.00414,"49":0,"50":0,"51":0,"52":0.0207,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00414,"61":0.00414,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00414,"68":0.01242,"69":0.00414,"70":0,"71":0.00414,"72":0.00828,"73":0,"74":0.00414,"75":0,"76":0.00414,"77":0,"78":0.0207,"79":0.00414,"80":0.00828,"81":0.00828,"82":0.00414,"83":0.00828,"84":0.01242,"85":0.0207,"86":0.02897,"87":0.74502,"88":0.30629,"89":0.00414,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00414,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00414,"49":0.05381,"50":0,"51":0,"52":0,"53":0.01242,"54":0,"55":0,"56":0,"57":0,"58":0.00414,"59":0,"60":0,"61":0,"62":0.00414,"63":0.00828,"64":0.00414,"65":0.01656,"66":0.00414,"67":0.00828,"68":0.00828,"69":0.00828,"70":0.0207,"71":0.00414,"72":0.00828,"73":0.00828,"74":0.00828,"75":0.00828,"76":0.01242,"77":0.00828,"78":0.00828,"79":0.03311,"80":0.02897,"81":0.03311,"83":0.04967,"84":0.04139,"85":0.03725,"86":0.05795,"87":0.12831,"88":0.21937,"89":8.129,"90":3.61335,"91":0.00414,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00414,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00414,"52":0,"53":0,"54":0.0207,"55":0.03311,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00414,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00414,"72":0.00414,"73":0.19867,"74":0.08278,"75":0.31456,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00111,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00483,"6.0-6.1":0.00334,"7.0-7.1":0.02638,"8.1-8.4":0.00074,"9.0-9.2":0.0078,"9.3":0.07133,"10.0-10.2":0.00297,"10.3":0.03492,"11.0-11.2":0.01486,"11.3-11.4":0.03047,"12.0-12.1":0.00706,"12.2-12.4":0.06316,"13.0-13.1":0.00855,"13.2":0.00334,"13.3":0.07096,"13.4-13.7":0.18837,"14.0-14.4":2.9522,"14.5":0.04161},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00414,"13":0.00414,"14":0.19867,_:"0","3.1":0,"3.2":0,"5.1":0.62499,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00828,"12.1":0.01242,"13.1":0.03725,"14.1":0.00414},B:{"12":0,"13":0,"14":0,"15":0.00414,"16":0.00414,"17":0.00828,"18":0.0207,"79":0,"80":0.00414,"81":0,"83":0,"84":0.00828,"85":0.00414,"86":0.00414,"87":0.00414,"88":0.00414,"89":0.43873,"90":0.20695},P:{"4":0.64216,"5.0-5.4":0.02039,"6.2-6.4":0.04077,"7.2-7.4":0.51985,"8.2":0.02039,"9.2":0.13251,"10.1":0.06116,"11.1-11.2":0.50965,"12.0":0.24463,"13.0":2.41575,"14.0":0.78486},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01034,"4.2-4.3":0.03232,"4.4":0,"4.4.3-4.4.4":0.1939},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00455,"9":0,"10":0,"11":0.08651,"5.5":0},J:{"7":0,"10":0.07033},N:{"10":0,"11":0},L:{"0":70.68746},S:{"2.5":0},R:{_:"0"},M:{"0":0.1348},Q:{"10.4":0.00586},O:{"0":0.32822},H:{"0":0.52714}};


/***/ }),
/* 276 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00529,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00529,"34":0,"35":0,"36":0,"37":0,"38":0.01058,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01587,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00529,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00529,"67":0.00529,"68":0.01058,"69":0,"70":0,"71":0,"72":0.00529,"73":0,"74":0,"75":0,"76":0,"77":0.00529,"78":0.04231,"79":0.00529,"80":0.00529,"81":0.00529,"82":0.00529,"83":0.01058,"84":0.02116,"85":0.01587,"86":0.03173,"87":0.78806,"88":0.32792,"89":0.00529,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00529,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00529,"39":0,"40":0,"41":0,"42":0.00529,"43":0.00529,"44":0,"45":0,"46":0,"47":0.00529,"48":0,"49":0.06347,"50":0,"51":0,"52":0,"53":0.02116,"54":0,"55":0.00529,"56":0.00529,"57":0,"58":0.00529,"59":0.00529,"60":0,"61":0.11107,"62":0,"63":0.01587,"64":0,"65":0.00529,"66":0.00529,"67":0.00529,"68":0.01058,"69":0.00529,"70":0.00529,"71":0.00529,"72":0.00529,"73":0.01587,"74":0.01058,"75":0.02116,"76":0.01587,"77":0.01058,"78":0.01587,"79":0.03702,"80":0.03173,"81":0.03702,"83":0.0476,"84":0.07934,"85":0.07405,"86":0.10578,"87":0.22214,"88":0.22743,"89":14.21154,"90":6.442,"91":0.02645,"92":0.01058,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00529,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.01058,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00529,"64":0,"65":0,"66":0,"67":0,"68":0.00529,"69":0,"70":0,"71":0.00529,"72":0.00529,"73":1.0102,"74":0.11107,"75":0.49188,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00093,"3.2":0.00093,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01211,"6.0-6.1":0.00466,"7.0-7.1":0.00559,"8.1-8.4":0.00279,"9.0-9.2":0.00186,"9.3":0.0745,"10.0-10.2":0.00652,"10.3":0.08102,"11.0-11.2":0.01676,"11.3-11.4":0.06985,"12.0-12.1":0.02515,"12.2-12.4":0.10896,"13.0-13.1":0.02794,"13.2":0.01024,"13.3":0.09592,"13.4-13.7":0.40512,"14.0-14.4":7.80806,"14.5":0.08195},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.01058,"14":0.3385,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00529,"11.1":0.01058,"12.1":0.01587,"13.1":0.07934,"14.1":0.01058},B:{"12":0,"13":0,"14":0.00529,"15":0.00529,"16":0.00529,"17":0.00529,"18":0.05289,"79":0,"80":0.00529,"81":0,"83":0,"84":0.01058,"85":0.00529,"86":0.00529,"87":0.00529,"88":0.00529,"89":1.13185,"90":0.54477},P:{"4":0.13169,"5.0-5.4":0.01013,"6.2-6.4":0,"7.2-7.4":0.16208,"8.2":0,"9.2":0.05065,"10.1":0.02026,"11.1-11.2":0.16208,"12.0":0.07091,"13.0":1.53981,"14.0":0.74964},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.009,"4.2-4.3":0.01543,"4.4":0,"4.4.3-4.4.4":0.08615},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01142,"9":0.00571,"10":0.00571,"11":0.11995,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":58.24779},S:{"2.5":0},R:{_:"0"},M:{"0":0.1272},Q:{"10.4":0.00471},O:{"0":0.14604},H:{"0":0.18286}};


/***/ }),
/* 277 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02297,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00459,"46":0,"47":0,"48":0.01837,"49":0,"50":0,"51":0,"52":0.00919,"53":0.00459,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00459,"64":0,"65":0,"66":0,"67":0,"68":0.00459,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.03674,"79":0.00459,"80":0,"81":0.00459,"82":0,"83":0.03215,"84":0,"85":0.00919,"86":0.02756,"87":0.43634,"88":0.18372,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.07349,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00459,"59":0,"60":0,"61":0,"62":0,"63":0.00459,"64":0,"65":0.01837,"66":0,"67":0.00459,"68":0,"69":0,"70":0.00459,"71":0.00459,"72":0.00919,"73":0,"74":0.22506,"75":0.02756,"76":0.1286,"77":0.01837,"78":0.00919,"79":0.01837,"80":0.02297,"81":0.00919,"83":0.02297,"84":0.01378,"85":0.01837,"86":0.02297,"87":0.16076,"88":0.22506,"89":7.44066,"90":2.76039,"91":0.01378,"92":0.00459,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.03674,"74":0.02756,"75":0.07808,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.01703,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.01135,"7.0-7.1":0.00284,"8.1-8.4":0.01135,"9.0-9.2":0.01135,"9.3":0.28378,"10.0-10.2":0.00851,"10.3":0.26675,"11.0-11.2":0.15324,"11.3-11.4":0.04824,"12.0-12.1":0.15324,"12.2-12.4":0.68959,"13.0-13.1":0.0823,"13.2":0.03122,"13.3":0.37743,"13.4-13.7":0.96201,"14.0-14.4":23.84036,"14.5":0.26392},E:{"4":0,"5":0,"6":0,"7":0.00459,"8":0,"9":0,"10":0,"11":0,"12":0.00459,"13":0.03674,"14":2.09441,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00919,"11.1":0.02756,"12.1":0.0689,"13.1":0.3307,"14.1":0.03215},B:{"12":0,"13":0.02756,"14":0.01378,"15":0.03215,"16":0.01837,"17":0.05052,"18":0.16535,"79":0,"80":0.00459,"81":0,"83":0,"84":0,"85":0.00919,"86":0.01837,"87":0.00919,"88":0.01378,"89":2.03929,"90":0.95994},P:{"4":0.06309,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.2208,"8.2":0.01051,"9.2":0.24183,"10.1":0.04206,"11.1-11.2":0.78858,"12.0":0.21029,"13.0":4.43707,"14.0":2.14493},I:{"0":0,"3":0,"4":0.0662,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.0331,"4.4":0,"4.4.3-4.4.4":0.74476},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.28017,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":41.1729},S:{"2.5":0},R:{_:"0"},M:{"0":0.12977},Q:{"10.4":0},O:{"0":0.00541},H:{"0":0.03071}};


/***/ }),
/* 278 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00518,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00259,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01036,"79":0.00259,"80":0,"81":0.00259,"82":0,"83":0.00259,"84":0.00259,"85":0.01036,"86":0.01296,"87":0.114,"88":0.05959,"89":0.00518,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00259,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00259,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00259,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.07514,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00518,"56":0.00259,"57":0,"58":0,"59":0,"60":0.00259,"61":0,"62":0,"63":0.00259,"64":0,"65":0.00518,"66":0.00259,"67":0.00259,"68":0,"69":0.00259,"70":0,"71":0,"72":0,"73":0,"74":0.00259,"75":0.00777,"76":0.00259,"77":0.00259,"78":0.00518,"79":0.00259,"80":0.01814,"81":0.00259,"83":0.01036,"84":0.00518,"85":0.00777,"86":0.02073,"87":0.1166,"88":0.0855,"89":3.24393,"90":1.09599,"91":0.01296,"92":0.00518,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00259,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00259,"38":0,"39":0,"40":0.00259,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00259,"47":0.00259,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00518,"55":0.00777,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00259,"74":0.01814,"75":0.04923,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.01853,"8.1-8.4":0.00081,"9.0-9.2":0.00161,"9.3":0.02901,"10.0-10.2":0.03384,"10.3":0.02659,"11.0-11.2":0.05318,"11.3-11.4":0.09669,"12.0-12.1":0.06204,"12.2-12.4":0.1837,"13.0-13.1":0.06768,"13.2":0.0282,"13.3":0.27636,"13.4-13.7":0.53581,"14.0-14.4":6.03003,"14.5":0.06123},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00518,"13":0.00777,"14":0.13473,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00259,"11.1":0.00259,"12.1":0.01296,"13.1":0.04146,"14.1":0.00259},B:{"12":0.00518,"13":0.00518,"14":0.00259,"15":0.03627,"16":0.01036,"17":0.00259,"18":0.02073,"79":0,"80":0,"81":0.00259,"83":0,"84":0.00518,"85":0.00777,"86":0.00518,"87":0.00259,"88":0.00518,"89":0.26428,"90":0.08291},P:{"4":0.46662,"5.0-5.4":0,"6.2-6.4":0.06086,"7.2-7.4":0.22317,"8.2":0.01014,"9.2":0.46662,"10.1":0.03043,"11.1-11.2":0.28403,"12.0":0.15216,"13.0":1.6129,"14.0":0.37533},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00414,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.03104},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.02332,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":75.31406},S:{"2.5":0},R:{_:"0"},M:{"0":0.03705},Q:{"10.4":0},O:{"0":4.97885},H:{"0":0.28057}};


/***/ }),
/* 279 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00864,"30":0,"31":0,"32":0.00432,"33":0.00432,"34":0.00864,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00432,"41":0,"42":0,"43":0.00432,"44":0,"45":0,"46":0,"47":0.02159,"48":0,"49":0.01295,"50":0,"51":0,"52":0.01727,"53":0,"54":0,"55":0,"56":0.00432,"57":0.00432,"58":0,"59":0,"60":0.00432,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00432,"68":0.00432,"69":0.00432,"70":0,"71":0,"72":0.00864,"73":0,"74":0.00864,"75":0.00432,"76":0,"77":0,"78":0.03886,"79":0,"80":0.00432,"81":0.00432,"82":0.00864,"83":0.00864,"84":0.01295,"85":0.02591,"86":0.03454,"87":0.93269,"88":0.34976,"89":0.01727,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00864,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00432,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00432,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.01295,"41":0,"42":0.00432,"43":0.03023,"44":0,"45":0,"46":0.00432,"47":0,"48":0,"49":0.02591,"50":0.00432,"51":0,"52":0,"53":0.00432,"54":0,"55":0.00432,"56":0,"57":0.00432,"58":0.00432,"59":0,"60":0,"61":0.00432,"62":0.00864,"63":0.00432,"64":0,"65":0.00432,"66":0,"67":0.05182,"68":0.00432,"69":0.00432,"70":0.00432,"71":0.02159,"72":0.00432,"73":0.00432,"74":0.01295,"75":0.02159,"76":0.01727,"77":0.01295,"78":0.01727,"79":0.03023,"80":0.03023,"81":0.18136,"83":0.02591,"84":0.03454,"85":0.01727,"86":0.07341,"87":0.1684,"88":0.37567,"89":7.43991,"90":2.8542,"91":0.00432,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00432,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.00432,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00432,"43":0,"44":0.00432,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.02159,"51":0.00864,"52":0,"53":0,"54":0.03886,"55":0.12954,"56":0,"57":0,"58":0,"60":0.00432,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01727,"74":0.1209,"75":0.28931,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00067,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00734,"6.0-6.1":0.01668,"7.0-7.1":0.33954,"8.1-8.4":0,"9.0-9.2":0.00133,"9.3":0.11941,"10.0-10.2":0.00067,"10.3":0.07204,"11.0-11.2":0.03269,"11.3-11.4":0.09206,"12.0-12.1":0.03069,"12.2-12.4":0.20613,"13.0-13.1":0.03469,"13.2":0.004,"13.3":0.07538,"13.4-13.7":0.31219,"14.0-14.4":4.57018,"14.5":0.03002},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.02159,"13":0.00432,"14":0.34976,_:"0","3.1":0,"3.2":0,"5.1":0.06909,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00432,"11.1":0.01295,"12.1":0.01295,"13.1":0.03023,"14.1":0.00432},B:{"12":0.04318,"13":0.01727,"14":0.0475,"15":0.02159,"16":0.03454,"17":0.03886,"18":0.14681,"79":0,"80":0.00432,"81":0,"83":0,"84":0.00432,"85":0.00864,"86":0.00864,"87":0.00864,"88":0.01727,"89":1.09245,"90":0.46634},P:{"4":0.45074,"5.0-5.4":0,"6.2-6.4":0.02049,"7.2-7.4":0.68636,"8.2":0.01024,"9.2":0.14342,"10.1":0.02049,"11.1-11.2":0.52245,"12.0":0.11269,"13.0":3.90301,"14.0":0.47123},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00586,"4.2-4.3":0.00753,"4.4":0,"4.4.3-4.4.4":0.20092},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00592,"9":0.00592,"10":0,"11":0.65744,"5.5":0},J:{"7":0,"10":0.01705},N:{"10":0,"11":0},L:{"0":64.80648},S:{"2.5":0.02273},R:{_:"0"},M:{"0":0.16478},Q:{"10.4":0.03977},O:{"0":0.93753},H:{"0":0.90373}};


/***/ }),
/* 280 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.00647,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00647,"46":0,"47":0,"48":0.00647,"49":0,"50":0.01294,"51":0.00647,"52":0.12942,"53":0.01294,"54":0,"55":0,"56":0.00647,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00647,"67":0.01294,"68":0.01941,"69":0,"70":0.01294,"71":0,"72":0.02588,"73":0,"74":0,"75":0.00647,"76":0,"77":0.01294,"78":0.08412,"79":0.02588,"80":0.01294,"81":0.01294,"82":0.00647,"83":0.01941,"84":0.02588,"85":0.01294,"86":0.07765,"87":1.37185,"88":0.57592,"89":0.00647,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00647,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00647,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.43356,"50":0.00647,"51":0.00647,"52":0,"53":0.03883,"54":0,"55":0,"56":0.01294,"57":0.02588,"58":0.03236,"59":0.00647,"60":0,"61":0.01294,"62":0.00647,"63":0.00647,"64":0.00647,"65":0,"66":0.00647,"67":0.00647,"68":0.00647,"69":0.01294,"70":0.01941,"71":0.02588,"72":0.01294,"73":0.03883,"74":0.01294,"75":0.01294,"76":0.01294,"77":0.01294,"78":0.01294,"79":1.72776,"80":0.06471,"81":0.05177,"83":0.10354,"84":0.07765,"85":0.07765,"86":0.47238,"87":0.70534,"88":0.85417,"89":15.06449,"90":5.98568,"91":0.03236,"92":0.01294,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.11001,"37":0,"38":0,"39":0.00647,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00647,"51":0,"52":0,"53":0,"54":0.01294,"55":0.03236,"56":0,"57":0,"58":0,"60":0.00647,"62":0.00647,"63":0.02588,"64":0,"65":0,"66":0,"67":0,"68":0.00647,"69":0,"70":0.00647,"71":0.02588,"72":0.01941,"73":0.75711,"74":0.88653,"75":2.94431,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.14236},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00344,"6.0-6.1":0.00516,"7.0-7.1":0.0043,"8.1-8.4":0.00344,"9.0-9.2":0.00258,"9.3":0.05763,"10.0-10.2":0.02838,"10.3":0.06709,"11.0-11.2":0.07311,"11.3-11.4":0.05849,"12.0-12.1":0.08085,"12.2-12.4":0.21846,"13.0-13.1":0.07311,"13.2":0.02752,"13.3":0.11783,"13.4-13.7":0.50229,"14.0-14.4":6.64073,"14.5":0.11353},E:{"4":0,"5":0,"6":0,"7":0.01294,"8":0.00647,"9":0,"10":0.00647,"11":0,"12":0,"13":0.02588,"14":1.18419,_:"0","3.1":0,"3.2":0,"5.1":0.16825,"6.1":0,"7.1":0,"9.1":0.00647,"10.1":0.01294,"11.1":0.02588,"12.1":0.03236,"13.1":0.18119,"14.1":0.02588},B:{"12":0,"13":0,"14":0.00647,"15":0.00647,"16":0.00647,"17":0.00647,"18":0.03883,"79":0,"80":0,"81":0,"83":0.01294,"84":0.00647,"85":0.00647,"86":0.01941,"87":0,"88":0.05824,"89":0.6471,"90":0.34296},P:{"4":0.05185,"5.0-5.4":0.01037,"6.2-6.4":0.1763,"7.2-7.4":0,"8.2":0,"9.2":0.02074,"10.1":0.01037,"11.1-11.2":0.05185,"12.0":0.13482,"13.0":0.87112,"14.0":0.36297},I:{"0":0,"3":0,"4":0.00118,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00588,"4.2-4.3":0.02118,"4.4":0,"4.4.3-4.4.4":0.05824},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00747,"9":0,"10":0,"11":0.28373,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":42.98866},S:{"2.5":0},R:{_:"0"},M:{"0":0.09881},Q:{"10.4":0.00353},O:{"0":0.19057},H:{"0":1.05577}};


/***/ }),
/* 281 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.00514,"15":0.00514,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00514,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00514,"53":0,"54":0,"55":0,"56":0.01029,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00514,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.01029,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01543,"79":0,"80":0,"81":0.37544,"82":0.01543,"83":0.01029,"84":0.00514,"85":0.00514,"86":0.13372,"87":1.03374,"88":0.41144,"89":0.00514,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00514,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.10286,"50":0.00514,"51":0,"52":0,"53":0,"54":0,"55":0.02572,"56":0,"57":0,"58":0,"59":0,"60":0.00514,"61":0,"62":0,"63":0,"64":0,"65":0.00514,"66":0,"67":0,"68":0,"69":0,"70":0.01029,"71":0.00514,"72":0.01029,"73":0.00514,"74":0.144,"75":0.04114,"76":0.06686,"77":0.00514,"78":0.00514,"79":0.03086,"80":0.036,"81":0.04114,"83":0.09772,"84":0.02057,"85":0.036,"86":0.05143,"87":0.04629,"88":0.26229,"89":9.13911,"90":4.34584,"91":0.00514,"92":0.01029,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.02057,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.19029,"74":0.24686,"75":0.69945,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.04578,"6.0-6.1":0.00848,"7.0-7.1":0.12376,"8.1-8.4":0,"9.0-9.2":0.12207,"9.3":0.25092,"10.0-10.2":0,"10.3":0.33908,"11.0-11.2":0.02543,"11.3-11.4":0.12546,"12.0-12.1":0.03221,"12.2-12.4":0.20345,"13.0-13.1":0.0729,"13.2":0.03391,"13.3":0.1848,"13.4-13.7":0.39333,"14.0-14.4":13.96145,"14.5":0.20514},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00514,"12":0.04629,"13":0.01029,"14":1.53776,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00514,"11.1":0.11829,"12.1":0.02057,"13.1":0.19543,"14.1":0.02057},B:{"12":0.00514,"13":0,"14":0.00514,"15":0.00514,"16":0.01029,"17":0.00514,"18":0.4063,"79":0,"80":0,"81":0,"83":0.00514,"84":0.00514,"85":0.00514,"86":0.00514,"87":0.00514,"88":0.02572,"89":1.96977,"90":1.08003},P:{"4":0.10975,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.18658,"8.2":0,"9.2":0.06585,"10.1":0.01098,"11.1-11.2":0.12073,"12.0":0.0439,"13.0":2.28284,"14.0":1.1524},I:{"0":0,"3":0,"4":0.15265,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03053,"4.2-4.3":0.07633,"4.4":0,"4.4.3-4.4.4":2.16769},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00551,"11":0.07163,"5.5":0},J:{"7":0,"10":0.00486},N:{"10":0,"11":0},L:{"0":51.1675},S:{"2.5":0},R:{_:"0"},M:{"0":0.20399},Q:{"10.4":0.05343},O:{"0":0.136},H:{"0":0.14715}};


/***/ }),
/* 282 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.03736,"34":0,"35":0,"36":0,"37":0,"38":0.01245,"39":0,"40":0,"41":0,"42":0,"43":0.01245,"44":0.03114,"45":0.00623,"46":0,"47":0,"48":0.00623,"49":0,"50":0,"51":0,"52":0.03736,"53":0,"54":0,"55":0.01245,"56":0.01245,"57":0.00623,"58":0,"59":0,"60":0.01245,"61":0,"62":0,"63":0.27399,"64":0,"65":0,"66":0.00623,"67":0,"68":0.01868,"69":0,"70":0.01245,"71":0,"72":0.00623,"73":0,"74":0,"75":0,"76":0.00623,"77":0.00623,"78":0.09341,"79":0.00623,"80":0.00623,"81":0.01245,"82":0.04359,"83":0.01245,"84":0.01868,"85":0.02491,"86":0.08095,"87":1.76847,"88":0.57288,"89":0.00623,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00623,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00623,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01245,"48":0.09341,"49":0.21172,"50":0,"51":0,"52":0,"53":0.01245,"54":0,"55":0,"56":0.01868,"57":0,"58":0.00623,"59":0.00623,"60":0.00623,"61":0.08095,"62":0.00623,"63":0.00623,"64":0.00623,"65":0.01868,"66":0.01245,"67":0.02491,"68":0.29267,"69":0.02491,"70":0.28644,"71":0.00623,"72":0.01868,"73":0.02491,"74":0.02491,"75":0.02491,"76":0.18058,"77":0.01245,"78":0.02491,"79":1.38239,"80":0.0685,"81":0.04982,"83":1.29522,"84":0.08718,"85":0.08095,"86":0.17436,"87":0.2989,"88":0.65384,"89":12.62213,"90":4.94424,"91":0.01245,"92":0.00623,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00623,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00623,"43":0.00623,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00623,"53":0,"54":0,"55":0.00623,"56":0.00623,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00623,"72":0,"73":0.07472,"74":0.0685,"75":0.18681,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00342,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01368,"6.0-6.1":0.03078,"7.0-7.1":0.06157,"8.1-8.4":0.07525,"9.0-9.2":0.03762,"9.3":0.62933,"10.0-10.2":0.07183,"10.3":0.57461,"11.0-11.2":0.21206,"11.3-11.4":0.17785,"12.0-12.1":0.16417,"12.2-12.4":0.67038,"13.0-13.1":0.09919,"13.2":0.06499,"13.3":0.35229,"13.4-13.7":1.29287,"14.0-14.4":27.4341,"14.5":0.37965},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00623,"9":0.01245,"10":0.00623,"11":0.01245,"12":0.01868,"13":0.09963,"14":3.8981,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01245,"10.1":0.03736,"11.1":0.09963,"12.1":0.13699,"13.1":0.57288,"14.1":0.08095},B:{"12":0.00623,"13":0.00623,"14":0.00623,"15":0.00623,"16":0.00623,"17":0.29267,"18":0.09963,"79":0,"80":0,"81":0,"83":0,"84":0.00623,"85":0.01245,"86":0.01245,"87":0.01245,"88":0.02491,"89":2.29776,"90":1.09595},P:{"4":0.11657,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02119,"10.1":0.02119,"11.1-11.2":0.05299,"12.0":0.05299,"13.0":2.02403,"14.0":1.14448},I:{"0":0,"3":0,"4":0.00526,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01052,"4.2-4.3":0.0526,"4.4":0,"4.4.3-4.4.4":0.22616},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00775,"7":0,"8":0.00775,"9":0.03098,"10":0,"11":0.58868,"5.5":0},J:{"7":0,"10":0.01509},N:{"10":0,"11":0},L:{"0":24.13023},S:{"2.5":0},R:{_:"0"},M:{"0":0.35466},Q:{"10.4":0.02264},O:{"0":0.13583},H:{"0":0.12859}};


/***/ }),
/* 283 */
/***/ ((module) => {

module.exports={C:{"17":0.00172,"27":0.00516,"29":0.01205,"31":0.00516,"32":0.00172,"33":0.00172,"34":0.00344,"38":0.00172,"41":0.00344,"43":0.00516,"45":0.00344,"47":0.00344,"52":0.01205,"54":0.00172,"56":0.00172,"60":0.00688,"65":0.00172,"66":0.00344,"68":0.00516,"69":0.00172,"70":0.00344,"72":0.00861,"75":0.00172,"77":0.00172,"78":0.07056,"80":0.00344,"81":0.00688,"83":0.00344,"84":0.01205,"85":0.01377,"86":0.04819,"87":0.89664,"88":0.30462,"89":0.00344,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 19 20 21 22 23 24 25 26 28 30 35 36 37 39 40 42 44 46 48 49 50 51 53 55 57 58 59 61 62 63 64 67 71 73 74 76 79 82 90 3.5 3.6"},D:{"11":0.00516,"24":0.00172,"25":0.00344,"26":0.00172,"31":0.00688,"33":0.00861,"34":0.00172,"37":0.00344,"38":0.00861,"40":0.00172,"42":0.00172,"43":0.01549,"48":0.00172,"49":0.02065,"50":0.00344,"55":0.00344,"57":0.00344,"58":0.00344,"63":0.0327,"64":0.03614,"65":0.00516,"67":0.00172,"69":0.00344,"70":0.00172,"72":0.00688,"73":0.00344,"74":0.01033,"75":0.00688,"76":0.01549,"77":0.01033,"78":0.00516,"79":0.03442,"80":0.02065,"81":0.01893,"83":0.01721,"84":0.03614,"85":0.02065,"86":0.0327,"87":0.14456,"88":0.21685,"89":3.76211,"90":1.34066,"91":0.00344,"92":0.00172,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 27 28 29 30 32 35 36 39 41 44 45 46 47 51 52 53 54 56 59 60 61 62 66 68 71 93"},F:{"29":0.00344,"34":0.00344,"35":0.00344,"36":0.00861,"40":0.00172,"42":0.00861,"45":0.00172,"47":0.00344,"58":0.00172,"60":0.00688,"62":0.00172,"63":0.01721,"68":0.00344,"70":0.00172,"71":0.00516,"72":0.00344,"73":0.02237,"74":0.33904,"75":0.77101,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 33 37 38 39 41 43 44 46 48 49 50 51 52 53 54 55 56 57 64 65 66 67 69 9.5-9.6 10.5 10.6 11.1 11.6","10.0-10.1":0,"11.5":0.00344,"12.1":0.00172},G:{"8":0.0049,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0035,"6.0-6.1":0,"7.0-7.1":0.11611,"8.1-8.4":0.0035,"9.0-9.2":0.01189,"9.3":0.07205,"10.0-10.2":0.0028,"10.3":0.10352,"11.0-11.2":0.06645,"11.3-11.4":0.10213,"12.0-12.1":0.05386,"12.2-12.4":0.77713,"13.0-13.1":0.06295,"13.2":0.05036,"13.3":0.56589,"13.4-13.7":0.77223,"14.0-14.4":3.36034,"14.5":0.02168},E:{"4":0,"8":0.00172,"11":0.00172,"12":0.00688,"13":0.0413,"14":0.32871,_:"0 5 6 7 9 10 3.1 3.2 6.1 7.1 9.1","5.1":0.04647,"10.1":0.00344,"11.1":0.00516,"12.1":0.01033,"13.1":0.05335,"14.1":0.00861},B:{"12":0.05679,"13":0.02065,"14":0.01377,"15":0.03614,"16":0.01721,"17":0.02409,"18":0.10498,"80":0.00172,"81":0.00344,"83":0.00344,"84":0.01377,"85":0.02065,"86":0.01549,"87":0.01205,"88":0.01893,"89":0.71077,"90":0.29085,_:"79"},P:{"4":0.49182,"5.0-5.4":0.06148,"6.2-6.4":0.04013,"7.2-7.4":0.14345,"8.2":0.01003,"9.2":0.09222,"10.1":0.01025,"11.1-11.2":0.11271,"12.0":0.16394,"13.0":0.8402,"14.0":0.15369},I:{"0":0,"3":0,"4":0.00236,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0059,"4.2-4.3":0.04839,"4.4":0,"4.4.3-4.4.4":0.21656},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.00937,"11":0.59986,_:"6 7 9 10 5.5"},J:{"7":0,"10":0.10763},N:{"10":0,"11":0.01542},L:{"0":47.28867},S:{"2.5":0.26493},R:{_:"0"},M:{"0":0.53814},Q:{"10.4":0.05795},O:{"0":1.55645},H:{"0":28.38148}};


/***/ }),
/* 284 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.00218,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.00436,"28":0,"29":0,"30":0.0109,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00218,"44":0,"45":0,"46":0.00436,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.04576,"53":0.00218,"54":0,"55":0,"56":0.00654,"57":0,"58":0,"59":0,"60":0.00436,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.13728,"69":0,"70":0,"71":0,"72":0.01307,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.05883,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00436,"85":0.0109,"86":0.01961,"87":0.25712,"88":0.07191,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00218,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00654,"41":0,"42":0,"43":0,"44":0.00872,"45":0,"46":0,"47":0.00218,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.28545,"57":0,"58":0.00436,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00654,"70":0.01307,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.00218,"78":0,"79":0.00218,"80":0.00218,"81":0.03051,"83":0.00436,"84":0.00654,"85":0,"86":0.06755,"87":0.01743,"88":0.02833,"89":1.18102,"90":0.26802,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0.00218,"15":0,"16":0.03704,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.01307,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00436,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00654,"52":0,"53":0.00218,"54":0.02397,"55":0.00654,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.03269,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00436,"74":0.02397,"75":0.06973,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.06101},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01377,"6.0-6.1":0,"7.0-7.1":0.00936,"8.1-8.4":0,"9.0-9.2":0.00936,"9.3":0.00441,"10.0-10.2":0.00441,"10.3":0.04187,"11.0-11.2":0.32832,"11.3-11.4":0.02314,"12.0-12.1":0.09255,"12.2-12.4":0.12009,"13.0-13.1":0.02314,"13.2":0.00441,"13.3":0.25395,"13.4-13.7":0.5685,"14.0-14.4":3.59116,"14.5":0.01377},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.06973,_:"0","3.1":0,"3.2":0,"5.1":0.00218,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0.00654,"14.1":0},B:{"12":0,"13":0.03704,"14":0.01743,"15":0.01307,"16":0.0109,"17":0.00218,"18":0.01961,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.00218,"86":0,"87":0.13946,"88":0.00436,"89":0.14381,"90":0.01743},P:{"4":0.17029,"5.0-5.4":0.01002,"6.2-6.4":0.02003,"7.2-7.4":0.09015,"8.2":0,"9.2":0.09015,"10.1":1.19201,"11.1-11.2":0.0601,"12.0":0.03005,"13.0":0.82139,"14.0":0.1202},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.1973,"4.4":0,"4.4.3-4.4.4":3.76184},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.03051,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":69.31197},S:{"2.5":0.09385},R:{_:"0"},M:{"0":0.09385},Q:{"10.4":0.01564},O:{"0":0.4849},H:{"0":11.07701}};


/***/ }),
/* 285 */
/***/ ((module) => {

module.exports={C:{"21":0.00377,"42":0.00753,"43":0.0113,"49":0.04895,"52":0.06777,"56":0.0113,"61":0.00377,"68":0.00377,"69":0.0113,"70":0.04518,"72":0.05648,"76":0.00377,"78":0.1506,"81":0.00753,"82":0.00753,"83":0.00753,"84":0.01506,"85":0.01883,"86":0.06777,"87":1.92392,"88":0.59111,"89":0.01506,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 44 45 46 47 48 50 51 53 54 55 57 58 59 60 62 63 64 65 66 67 71 73 74 75 77 79 80 90 3.5 3.6"},D:{"21":0.00377,"28":0.00753,"40":0.0113,"42":0.07154,"43":0.04895,"49":0.02259,"50":0.00377,"56":0.00753,"60":0.00753,"62":0.00753,"63":0.0113,"64":0.02259,"65":0.00753,"66":0.05271,"69":0.00753,"73":0.00753,"74":0.00377,"75":0.02259,"77":0.00753,"78":0.00377,"79":0.03012,"80":0.0113,"81":0.03012,"83":0.00753,"84":0.02636,"85":0.0753,"86":0.18072,"87":0.48945,"88":0.25602,"89":9.4125,"90":2.92164,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 41 44 45 46 47 48 51 52 53 54 55 57 58 59 61 67 68 70 71 72 76 91 92 93"},F:{"42":0.00753,"43":0.00377,"44":0.00377,"70":0.00377,"73":0.0113,"74":0.61746,"75":2.3343,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00992,"6.0-6.1":0.00229,"7.0-7.1":0.38299,"8.1-8.4":0.17547,"9.0-9.2":0,"9.3":0.03509,"10.0-10.2":0.00763,"10.3":0.69732,"11.0-11.2":0.07248,"11.3-11.4":0.04883,"12.0-12.1":0.14343,"12.2-12.4":0.74767,"13.0-13.1":0.05035,"13.2":0.04501,"13.3":0.10986,"13.4-13.7":0.19684,"14.0-14.4":3.3363,"14.5":0.02289},E:{"4":0,"10":0.00377,"12":0.00753,"13":0.00377,"14":0.47816,_:"0 5 6 7 8 9 11 3.1 3.2 5.1 6.1 9.1 14.1","7.1":0.04142,"10.1":0.0113,"11.1":0.0113,"12.1":0.0113,"13.1":0.33132},B:{"12":0.03389,"13":0.00753,"14":0.01506,"16":0.0753,"17":0.02259,"18":0.11295,"84":0.02259,"85":0.01506,"86":0.04518,"87":0.10919,"88":0.0113,"89":2.53385,"90":1.46835,_:"15 79 80 81 83"},P:{"4":0.70379,"5.0-5.4":0.01035,"6.2-6.4":0.0414,"7.2-7.4":0.0621,"8.2":0.03105,"9.2":0.0207,"10.1":0.0207,"11.1-11.2":0.11385,"12.0":0.0621,"13.0":1.40758,"14.0":0.207},I:{"0":0,"3":0,"4":0.00076,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01618,"4.2-4.3":0.07221,"4.4":0,"4.4.3-4.4.4":0.25372},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.01203,"11":0.39083,_:"6 7 9 10 5.5"},J:{"7":0,"10":0.17455},N:{"10":0,"11":0.01542},L:{"0":57.89668},S:{"2.5":1.07848},R:{_:"0"},M:{"0":1.86397},Q:{"10.4":0.07481},O:{"0":1.5398},H:{"0":1.93584}};


/***/ }),
/* 286 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00573,"32":0,"33":0.06304,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.02292,"49":0,"50":0,"51":0,"52":0.02866,"53":0,"54":0.00573,"55":0,"56":0,"57":0.01146,"58":0,"59":0,"60":0.00573,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00573,"68":0.04585,"69":0,"70":0.04012,"71":0.01719,"72":0.01146,"73":0.00573,"74":0.00573,"75":0.00573,"76":0.01146,"77":0.00573,"78":0.2579,"79":0.00573,"80":0.01146,"81":0.01146,"82":0.01719,"83":0.02292,"84":0.04012,"85":0.06304,"86":0.17766,"87":2.76807,"88":1.06597,"89":0.00573,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00573,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01146,"39":0,"40":0,"41":0.00573,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.14901,"50":0,"51":0,"52":0.06877,"53":0.01719,"54":0,"55":0,"56":0,"57":0.00573,"58":0,"59":0,"60":0.01146,"61":0.04012,"62":0,"63":0.01719,"64":0.00573,"65":0.01146,"66":0.02866,"67":0.01719,"68":0.00573,"69":0.00573,"70":0.01146,"71":0.00573,"72":0.00573,"73":0.00573,"74":0.00573,"75":0.01146,"76":0.01146,"77":0.01146,"78":0.01146,"79":0.03439,"80":0.03439,"81":0.03439,"83":0.04012,"84":0.08023,"85":0.05158,"86":0.08023,"87":0.20059,"88":0.32094,"89":9.17533,"90":3.55322,"91":0.00573,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00573,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00573,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.20632,"74":0.12035,"75":0.38971,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01491,"6.0-6.1":0.00745,"7.0-7.1":0.04099,"8.1-8.4":0.04472,"9.0-9.2":0.23103,"9.3":0.72291,"10.0-10.2":0.04844,"10.3":0.39872,"11.0-11.2":0.09689,"11.3-11.4":0.21613,"12.0-12.1":0.1416,"12.2-12.4":0.47697,"13.0-13.1":0.15278,"13.2":0.08571,"13.3":0.35028,"13.4-13.7":1.43465,"14.0-14.4":31.15603,"14.5":0.39499},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00573,"9":0,"10":0.03439,"11":0.02292,"12":0.02866,"13":0.13181,"14":4.73954,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01146,"10.1":0.04585,"11.1":0.12608,"12.1":0.2579,"13.1":0.88831,"14.1":0.11462},B:{"12":0,"13":0,"14":0.00573,"15":0.00573,"16":0.01146,"17":0.01719,"18":0.12035,"79":0,"80":0.00573,"81":0.00573,"83":0.00573,"84":0.00573,"85":0.02292,"86":0.02866,"87":0.02866,"88":0.05158,"89":3.04316,"90":1.35252},P:{"4":0.1464,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.01046,"9.2":0.04183,"10.1":0.03137,"11.1-11.2":0.06274,"12.0":0.1464,"13.0":2.82341,"14.0":1.29668},I:{"0":0,"3":0,"4":0.00239,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00358,"4.2-4.3":0.00716,"4.4":0,"4.4.3-4.4.4":0.10261},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.01214,"10":0,"11":0.60681,"5.5":0},J:{"7":0,"10":0.00427},N:{"10":0,"11":0},L:{"0":23.66508},S:{"2.5":0},R:{_:"0"},M:{"0":0.60193},Q:{"10.4":0.03842},O:{"0":0.08111},H:{"0":0.23846}};


/***/ }),
/* 287 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.01175,"33":0.00783,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00392,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.04307,"53":0,"54":0,"55":0,"56":0,"57":0.04698,"58":0,"59":0,"60":0.00392,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01175,"69":0,"70":0,"71":0,"72":0.00392,"73":0,"74":0,"75":0.00392,"76":0,"77":0.00392,"78":0.02349,"79":0,"80":0,"81":0.00392,"82":0,"83":0.00392,"84":0.03132,"85":0.03524,"86":0.06264,"87":0.73602,"88":0.26622,"89":0.00392,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00392,"30":0,"31":0.00392,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00392,"41":0,"42":0,"43":0.00783,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.09788,"50":0.00392,"51":0.00392,"52":0,"53":0.00392,"54":0,"55":0.00392,"56":0.00392,"57":0,"58":0.00392,"59":0.00392,"60":0,"61":0.00783,"62":0.00392,"63":0.00783,"64":0.00783,"65":0.00783,"66":0.03524,"67":0.00783,"68":0.00783,"69":0.04698,"70":0.02349,"71":0.01175,"72":0.00783,"73":0.01566,"74":0.02349,"75":0.02741,"76":0.02349,"77":0.02349,"78":0.03524,"79":0.03132,"80":0.0509,"81":0.06264,"83":0.06264,"84":0.07047,"85":0.06656,"86":0.13311,"87":0.38759,"88":0.25448,"89":5.52407,"90":2.39207,"91":0.01958,"92":0.01175,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00392,"25":0,"26":0.00392,"27":0.00392,"28":0.00783,"29":0,"30":0.00783,"31":0,"32":0.00392,"33":0.00392,"34":0.00392,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.01958,"43":0,"44":0,"45":0,"46":0.00392,"47":0,"48":0,"49":0,"50":0.00783,"51":0.03915,"52":0,"53":0.00783,"54":0.05873,"55":0.09788,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00392,"68":0,"69":0,"70":0.00392,"71":0,"72":0,"73":0.02741,"74":0.10571,"75":0.4424,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00392},G:{"8":0.00344,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00172,"7.0-7.1":0.01892,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.22363,"10.0-10.2":0.0172,"10.3":0.56595,"11.0-11.2":0.66744,"11.3-11.4":0.25459,"12.0-12.1":0.19266,"12.2-12.4":1.40713,"13.0-13.1":0.11353,"13.2":0.09461,"13.3":0.42317,"13.4-13.7":1.09405,"14.0-14.4":10.27307,"14.5":0.09633},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00392,"12":0,"13":0.00783,"14":0.18401,_:"0","3.1":0,"3.2":0,"5.1":0.01175,"6.1":0,"7.1":0.00392,"9.1":0.00392,"10.1":0,"11.1":0.00392,"12.1":0.00783,"13.1":0.03132,"14.1":0.00783},B:{"12":0.00392,"13":0,"14":0.00783,"15":0.01175,"16":0.01175,"17":0.00783,"18":0.0509,"79":0,"80":0,"81":0,"83":0,"84":0.00392,"85":0.01566,"86":0.00392,"87":0.00392,"88":0.01175,"89":0.80649,"90":0.30929},P:{"4":0.09156,"5.0-5.4":0.01017,"6.2-6.4":0.01017,"7.2-7.4":0.20347,"8.2":0.01017,"9.2":0.07121,"10.1":0,"11.1-11.2":0.20347,"12.0":0.14243,"13.0":0.9563,"14.0":0.25433},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00326,"4.2-4.3":0.00761,"4.4":0,"4.4.3-4.4.4":0.15002},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.1566,"5.5":0},J:{"7":0,"10":0.06085},N:{"10":0,"11":0},L:{"0":64.12525},S:{"2.5":0.04868},R:{_:"0"},M:{"0":0.22515},Q:{"10.4":0.00609},O:{"0":0.49897},H:{"0":2.07392}};


/***/ }),
/* 288 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.04362,"32":0,"33":0.03569,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00397,"79":0,"80":0.00397,"81":0,"82":0,"83":0,"84":0.01586,"85":0.0912,"86":0.05551,"87":0.78507,"88":0.28945,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00793,"47":0,"48":0,"49":0.88816,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.03965,"56":0.00397,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.05155,"66":0.00397,"67":0.02776,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.01586,"75":0,"76":0,"77":0,"78":0.01586,"79":0.00793,"80":0,"81":0.00793,"83":0.0119,"84":0,"85":0.02379,"86":0.03172,"87":0.05155,"88":0.06741,"89":6.92686,"90":3.34646,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00397,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.03965,"75":0.22204,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.03337,"10.0-10.2":0.00834,"10.3":0.02086,"11.0-11.2":0.16129,"11.3-11.4":0.03337,"12.0-12.1":0.25445,"12.2-12.4":0.58956,"13.0-13.1":0.16547,"13.2":0.0723,"13.3":0.41992,"13.4-13.7":0.9483,"14.0-14.4":10.65094,"14.5":0.2767},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.04362,"14":0.35289,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00397,"12.1":0.01586,"13.1":0.11102,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0.01586,"16":0,"17":0.00793,"18":0.03965,"79":0,"80":0,"81":0,"83":0,"84":0.02776,"85":0,"86":0,"87":0,"88":0.00397,"89":0.68595,"90":0.27359},P:{"4":0.0306,"5.0-5.4":0,"6.2-6.4":0.0102,"7.2-7.4":0.06121,"8.2":0,"9.2":0.5917,"10.1":0.46928,"11.1-11.2":0.56109,"12.0":0.33665,"13.0":4.10106,"14.0":1.71388},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00112,"4.2-4.3":0.00186,"4.4":0,"4.4.3-4.4.4":0.02082},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.2498,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.23275},S:{"2.5":0},R:{_:"0"},M:{"0":0.35003},Q:{"10.4":0},O:{"0":0.36814},H:{"0":0.10284}};


/***/ }),
/* 289 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00394,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00788,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00788,"67":0,"68":0.00788,"69":0,"70":0,"71":0,"72":0,"73":0.00394,"74":0,"75":0,"76":0,"77":0,"78":0.0197,"79":0,"80":0,"81":0.00394,"82":0.00394,"83":0.00394,"84":0.01182,"85":0.00394,"86":0.01576,"87":0.40188,"88":0.16154,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00788,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0394,"50":0,"51":0,"52":0,"53":0.01182,"54":0,"55":0,"56":0.00394,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00394,"64":0,"65":0.00394,"66":0,"67":0.00788,"68":0.00394,"69":0,"70":0.00394,"71":0.00394,"72":0.00788,"73":0.00394,"74":0.00394,"75":0.00394,"76":0.00394,"77":0.00394,"78":0.00394,"79":0.00788,"80":0.03152,"81":0.01576,"83":0.02364,"84":0.0197,"85":0.01576,"86":0.0394,"87":0.10638,"88":0.12214,"89":8.00214,"90":3.21504,"91":0.00394,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00394,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.53584,"74":0.07092,"75":0.26004,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00309,"6.0-6.1":0.00206,"7.0-7.1":0.00515,"8.1-8.4":0.00825,"9.0-9.2":0.00103,"9.3":0.08143,"10.0-10.2":0.00618,"10.3":0.04844,"11.0-11.2":0.0268,"11.3-11.4":0.05463,"12.0-12.1":0.04638,"12.2-12.4":0.22779,"13.0-13.1":0.03401,"13.2":0.01546,"13.3":0.14327,"13.4-13.7":0.53082,"14.0-14.4":8.30032,"14.5":0.09895},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00394,"12":0.00394,"13":0.01576,"14":0.44522,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00394,"11.1":0.00788,"12.1":0.0197,"13.1":0.0985,"14.1":0.01182},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00394,"18":0.01576,"79":0,"80":0.00394,"81":0,"83":0,"84":0.00394,"85":0.00394,"86":0,"87":0.00394,"88":0.00394,"89":0.49644,"90":0.24034},P:{"4":0.09297,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.05165,"8.2":0,"9.2":0.07231,"10.1":0.02066,"11.1-11.2":0.35122,"12.0":0.09297,"13.0":1.27061,"14.0":0.49585},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02695,"4.2-4.3":0.0539,"4.4":0,"4.4.3-4.4.4":0.5031},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00443,"9":0.00443,"10":0,"11":0.06206,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":71.08406},S:{"2.5":0},R:{_:"0"},M:{"0":0.13332},Q:{"10.4":0},O:{"0":0.03636},H:{"0":0.13196}};


/***/ }),
/* 290 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00312,"33":0.00312,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00312,"44":0.00312,"45":0.00312,"46":0,"47":0.00623,"48":0.00312,"49":0.00312,"50":0.00312,"51":0,"52":0.04364,"53":0,"54":0,"55":0,"56":0.00312,"57":0.00312,"58":0,"59":0,"60":0.00312,"61":0,"62":0,"63":0.00312,"64":0,"65":0.00312,"66":0,"67":0.00623,"68":0.07793,"69":0.00312,"70":0,"71":0,"72":0.01247,"73":0,"74":0,"75":0,"76":0,"77":0.00312,"78":0.02805,"79":0.01247,"80":0.00312,"81":0.00623,"82":0.00623,"83":0.01247,"84":0.01247,"85":0.01559,"86":0.05299,"87":0.70133,"88":0.26183,"89":0.03117,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00312,"30":0.00312,"31":0,"32":0.00623,"33":0.00623,"34":0,"35":0,"36":0,"37":0,"38":0.00312,"39":0,"40":0.00623,"41":0,"42":0,"43":0.00312,"44":0,"45":0,"46":0.01247,"47":0,"48":0,"49":0.03117,"50":0.00312,"51":0,"52":0,"53":0.00312,"54":0,"55":0.00312,"56":0.00623,"57":0,"58":0.00312,"59":0,"60":0.00312,"61":0,"62":0.00312,"63":0.00623,"64":0.00312,"65":0.00312,"66":0.00312,"67":0,"68":0.0187,"69":0.00935,"70":0.00312,"71":0.00312,"72":0.00312,"73":0.00312,"74":0.00312,"75":0.00623,"76":0.00312,"77":0.01559,"78":0.00312,"79":0.03117,"80":0.01559,"81":0.04676,"83":0.01247,"84":0.01559,"85":0.03429,"86":0.04052,"87":0.11845,"88":0.12156,"89":2.73049,"90":1.02238,"91":0.00623,"92":0.00312,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00312,"25":0,"26":0.00312,"27":0.00312,"28":0.00623,"29":0,"30":0.0187,"31":0,"32":0.00623,"33":0.00312,"34":0,"35":0,"36":0,"37":0.00623,"38":0.00623,"39":0,"40":0,"41":0,"42":0.0187,"43":0,"44":0,"45":0.00935,"46":0.00623,"47":0.00623,"48":0,"49":0,"50":0.03117,"51":0.06234,"52":0,"53":0,"54":0.18079,"55":0.21196,"56":0,"57":0,"58":0,"60":0.00312,"62":0.00312,"63":0.00312,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.06546,"74":0.11221,"75":0.32729,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.02182},G:{"8":0.00295,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00295,"5.0-5.1":0.00589,"6.0-6.1":0,"7.0-7.1":0.04346,"8.1-8.4":0.00074,"9.0-9.2":0.0081,"9.3":0.16056,"10.0-10.2":0.02136,"10.3":0.21875,"11.0-11.2":0.12005,"11.3-11.4":0.12226,"12.0-12.1":0.2077,"12.2-12.4":0.75789,"13.0-13.1":0.15688,"13.2":0.05524,"13.3":0.2843,"13.4-13.7":0.7763,"14.0-14.4":3.79091,"14.5":0.01915},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00312,"14":0.06234,_:"0","3.1":0,"3.2":0,"5.1":0.03117,"6.1":0,"7.1":0,"9.1":0.00312,"10.1":0,"11.1":0.00312,"12.1":0.00623,"13.1":0.01559,"14.1":0},B:{"12":0.01247,"13":0.00935,"14":0.03429,"15":0.0187,"16":0.01247,"17":0.00623,"18":0.03117,"79":0,"80":0,"81":0,"83":0,"84":0.00623,"85":0.00935,"86":0.00312,"87":0.00312,"88":0.0187,"89":0.32729,"90":0.20261},P:{"4":0.38201,"5.0-5.4":0.05162,"6.2-6.4":0.01032,"7.2-7.4":0.13422,"8.2":0,"9.2":0.12389,"10.1":0.03097,"11.1-11.2":0.14454,"12.0":0.14454,"13.0":0.78466,"14.0":0.13422},I:{"0":0,"3":0,"4":0.01095,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00692,"4.2-4.3":0.02536,"4.4":0,"4.4.3-4.4.4":0.25534},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00761,"9":0,"10":0,"11":0.18253,"5.5":0},J:{"7":0,"10":0.04818},N:{"10":0,"11":0.08948},L:{"0":73.26628},S:{"2.5":0.12389},R:{_:"0"},M:{"0":0.31662},Q:{"10.4":0.06883},O:{"0":1.14946},H:{"0":5.31737}};


/***/ }),
/* 291 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01147,"34":0,"35":0,"36":0.01147,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.64626,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0153,"53":0.00382,"54":0.00382,"55":0.00382,"56":0.00382,"57":0.00382,"58":0.00382,"59":0.00382,"60":0.00382,"61":0.00382,"62":0,"63":0,"64":0,"65":0,"66":0.00382,"67":0.00382,"68":0.00765,"69":0.00382,"70":0,"71":0,"72":0.00382,"73":0,"74":0,"75":0.05354,"76":0,"77":0,"78":0.0153,"79":0.00382,"80":0.02294,"81":0.00382,"82":0.00765,"83":0.00382,"84":0.00765,"85":0.00765,"86":0.01912,"87":0.26003,"88":0.09178,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00765,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.00382,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00382,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00765,"41":0.00382,"42":0.00382,"43":0.00382,"44":0,"45":0.0153,"46":0,"47":0.0153,"48":0.05354,"49":0.14531,"50":0.00382,"51":0.00382,"52":0,"53":0.00382,"54":0.01147,"55":0.03824,"56":0.00765,"57":0.05354,"58":0.01147,"59":0.01912,"60":0.00382,"61":0.00382,"62":0.06501,"63":0.03442,"64":0.00382,"65":0.02677,"66":0.00382,"67":0.30974,"68":0.01147,"69":0.41682,"70":0.20267,"71":0.0153,"72":0.2868,"73":0.04206,"74":0.8451,"75":0.1109,"76":0.02294,"77":0.01147,"78":0.17208,"79":0.09178,"80":0.06118,"81":0.03442,"83":0.13002,"84":0.06118,"85":0.05736,"86":0.13766,"87":0.13002,"88":0.23326,"89":1.1472,"90":0.37858,"91":0.0153,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00382,"74":0.01147,"75":0.01912,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00392,"3.2":0.00261,"4.0-4.1":0.00914,"4.2-4.3":0.08485,"5.0-5.1":0.01958,"6.0-6.1":0.03394,"7.0-7.1":0.0235,"8.1-8.4":0.06266,"9.0-9.2":0.15535,"9.3":0.14882,"10.0-10.2":0.45168,"10.3":0.47387,"11.0-11.2":0.92425,"11.3-11.4":0.20495,"12.0-12.1":0.25848,"12.2-12.4":0.53262,"13.0-13.1":0.11227,"13.2":0.06527,"13.3":0.34202,"13.4-13.7":2.04823,"14.0-14.4":6.71647,"14.5":0.11618},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.00382,"10":0,"11":0.00382,"12":0.00382,"13":0.01912,"14":0.23709,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00382,"11.1":0.00765,"12.1":0.01147,"13.1":0.0803,"14.1":0.00765},B:{"12":0,"13":0,"14":0.00382,"15":0.00382,"16":0.00765,"17":0.01147,"18":0.0956,"79":0,"80":0,"81":0,"83":0,"84":0.00382,"85":0.00382,"86":0.00765,"87":0.00765,"88":0.01147,"89":0.6692,"90":0.34034},P:{"4":0.01059,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.03176,"10.1":0,"11.1-11.2":0,"12.0":0.01059,"13.0":0.28586,"14.0":0.10587},I:{"0":0,"3":0.02583,"4":0.0904,"2.1":0.02583,"2.2":0.05166,"2.3":0.01291,"4.1":0.21955,"4.2-4.3":0.11623,"4.4":0,"4.4.3-4.4.4":0.60698},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.27669,"9":0.27669,"10":0.07905,"11":3.59692,"5.5":0},J:{"7":0,"10":0.03706},N:{"10":0,"11":0},L:{"0":42.74445},S:{"2.5":0},R:{_:"0"},M:{"0":0.1791},Q:{"10.4":5.404},O:{"0":15.01386},H:{"0":0.0994}};


/***/ }),
/* 292 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00544,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00544,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00544,"51":0,"52":0.00544,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.03262,"67":0,"68":0.01087,"69":0,"70":0,"71":0,"72":0,"73":0.00544,"74":0,"75":0,"76":0,"77":0,"78":0.02718,"79":0.00544,"80":0,"81":0.00544,"82":0.00544,"83":0,"84":0.01087,"85":0.01087,"86":0.02174,"87":0.52729,"88":0.22288,"89":0.00544,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00544,"23":0,"24":0.00544,"25":0,"26":0.00544,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01631,"39":0.00544,"40":0,"41":0,"42":0.01087,"43":0,"44":0,"45":0,"46":0,"47":0.00544,"48":0,"49":0.04892,"50":0,"51":0,"52":0,"53":0.02174,"54":0,"55":0,"56":0,"57":0,"58":0.00544,"59":0,"60":0,"61":0,"62":0.00544,"63":0.01087,"64":0,"65":0.01087,"66":0.00544,"67":0.00544,"68":0.01087,"69":0.01087,"70":0.01087,"71":0.00544,"72":0.01087,"73":0.00544,"74":0.01087,"75":0.01631,"76":0.01631,"77":0.01631,"78":0.01631,"79":0.18482,"80":0.03805,"81":0.17395,"83":0.04349,"84":0.0598,"85":0.04349,"86":0.11416,"87":0.22288,"88":0.35878,"89":15.73722,"90":7.19726,"91":0.01087,"92":0.00544,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00544,"55":0.00544,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.57622,"74":0.08698,"75":0.38596,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00075,"4.0-4.1":0.00075,"4.2-4.3":0,"5.0-5.1":0.00674,"6.0-6.1":0.01422,"7.0-7.1":0.02246,"8.1-8.4":0.00674,"9.0-9.2":0.00225,"9.3":0.10779,"10.0-10.2":0.00749,"10.3":0.07036,"11.0-11.2":0.01123,"11.3-11.4":0.02246,"12.0-12.1":0.01422,"12.2-12.4":0.11527,"13.0-13.1":0.02021,"13.2":0.00749,"13.3":0.0786,"13.4-13.7":0.28145,"14.0-14.4":6.11402,"14.5":0.07785},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00544,"13":0.02718,"14":0.6034,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00544,"11.1":0.01087,"12.1":0.02174,"13.1":0.1359,"14.1":0.01631},B:{"12":0,"13":0,"14":0,"15":0.00544,"16":0,"17":0.00544,"18":0.03262,"79":0,"80":0,"81":0,"83":0,"84":0.00544,"85":0.00544,"86":0.00544,"87":0.00544,"88":0.00544,"89":0.84802,"90":0.44575},P:{"4":0.20297,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.07104,"8.2":0,"9.2":0.03045,"10.1":0.0203,"11.1-11.2":0.10149,"12.0":0.06089,"13.0":0.79158,"14.0":0.3552},I:{"0":0,"3":0,"4":0.00191,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00859,"4.2-4.3":0.021,"4.4":0,"4.4.3-4.4.4":0.12025},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00544,"10":0,"11":0.07067,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":60.93783},S:{"2.5":0.00456},R:{_:"0"},M:{"0":0.13236},Q:{"10.4":0},O:{"0":0.0502},H:{"0":0.12531}};


/***/ }),
/* 293 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01407,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00469,"51":0,"52":0.02345,"53":0,"54":0,"55":0,"56":0.00469,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.18287,"67":0.09847,"68":0.00469,"69":0,"70":0,"71":0,"72":0.00469,"73":0.02813,"74":0,"75":0,"76":0,"77":0,"78":0.09378,"79":0,"80":0.00469,"81":0.00469,"82":0,"83":0.00469,"84":0.00938,"85":0.00938,"86":0.0422,"87":0.81589,"88":0.3423,"89":0.00469,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00469,"39":0,"40":0,"41":0.00469,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.07502,"49":0.05158,"50":0,"51":0,"52":0,"53":0.00469,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.12191,"62":0,"63":0.00469,"64":0,"65":0.01876,"66":0,"67":0.00469,"68":0,"69":0.00469,"70":0.00469,"71":0,"72":0,"73":0.00469,"74":0.00938,"75":0.01407,"76":0.00469,"77":0.00469,"78":0.00938,"79":0.01407,"80":0.01407,"81":0.02813,"83":0.03282,"84":0.01876,"85":0.01876,"86":0.07502,"87":0.1266,"88":0.24852,"89":9.79063,"90":4.36077,"91":0.00469,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00469,"29":0.00469,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00469,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00469,"55":0.01876,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00469,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00469,"72":0,"73":0.3845,"74":0.05158,"75":0.25321,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00153,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01833,"6.0-6.1":0.01833,"7.0-7.1":0.05194,"8.1-8.4":0.00458,"9.0-9.2":0.00917,"9.3":0.12068,"10.0-10.2":0.00306,"10.3":0.07791,"11.0-11.2":0.02139,"11.3-11.4":0.05041,"12.0-12.1":0.0275,"12.2-12.4":0.18332,"13.0-13.1":0.03972,"13.2":0.00764,"13.3":0.15429,"13.4-13.7":0.44912,"14.0-14.4":13.13759,"14.5":0.20623},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00469,"13":0.03282,"14":1.35043,_:"0","3.1":0,"3.2":0,"5.1":0.17818,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00469,"11.1":0.02813,"12.1":0.03282,"13.1":0.24852,"14.1":0.0422},B:{"12":0.00469,"13":0,"14":0.00469,"15":0,"16":0,"17":0.00469,"18":0.02345,"79":0,"80":0,"81":0,"83":0,"84":0.00469,"85":0.00469,"86":0.00469,"87":0.00469,"88":0.00938,"89":1.0222,"90":0.46421},P:{"4":0.13373,"5.0-5.4":0,"6.2-6.4":0.01029,"7.2-7.4":0.07201,"8.2":0,"9.2":0.11316,"10.1":0.02057,"11.1-11.2":0.26747,"12.0":0.10287,"13.0":1.99572,"14.0":0.87441},I:{"0":0,"3":0,"4":0.01817,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00606,"4.2-4.3":0.02625,"4.4":0,"4.4.3-4.4.4":0.20799},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.10785,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.55266},S:{"2.5":0},R:{_:"0"},M:{"0":0.40895},Q:{"10.4":0.00531},O:{"0":0.06373},H:{"0":0.25643}};


/***/ }),
/* 294 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00331,"19":0,"20":0,"21":0.00331,"22":0,"23":0,"24":0.00331,"25":0,"26":0.00331,"27":0,"28":0,"29":0.00331,"30":0,"31":0.00331,"32":0.00331,"33":0.01324,"34":0.02318,"35":0.00662,"36":0.00331,"37":0.00662,"38":0.00993,"39":0.01656,"40":0.01324,"41":0.00662,"42":0.00331,"43":0.02649,"44":0.00662,"45":0.01987,"46":0.00662,"47":0.01987,"48":0.00662,"49":0.01324,"50":0.03642,"51":0.00331,"52":0.11257,"53":0.01324,"54":0.04967,"55":0.00993,"56":0.02649,"57":0.09271,"58":0.0298,"59":0.03642,"60":0.03311,"61":0.03642,"62":0.03642,"63":0.01656,"64":0.02318,"65":0.02318,"66":0.03311,"67":0.03642,"68":0.16555,"69":0.0298,"70":0.01987,"71":0.0298,"72":0.09602,"73":0.01324,"74":0.02649,"75":0.01324,"76":0.00993,"77":0.02318,"78":0.10595,"79":0.01656,"80":0.04304,"81":0.04967,"82":0.03973,"83":0.07946,"84":0.12582,"85":0.16886,"86":0.25495,"87":2.19519,"88":0.79795,"89":0.01324,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00331,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00331,"38":0,"39":0,"40":0.01324,"41":0,"42":0,"43":0.00331,"44":0.00331,"45":0,"46":0,"47":0,"48":0,"49":0.00662,"50":0,"51":0.07284,"52":0.00331,"53":0.00662,"54":0.00331,"55":0.00331,"56":0.01656,"57":0,"58":0.00331,"59":0.00331,"60":0.00331,"61":0.00331,"62":0.00662,"63":0.00662,"64":0.00331,"65":0,"66":0,"67":0.01987,"68":0.00662,"69":0.00331,"70":0.00662,"71":0.00993,"72":0.01324,"73":0.01656,"74":0.01656,"75":0.02318,"76":0.01324,"77":0.01324,"78":0.00662,"79":0.02649,"80":0.09271,"81":0.02649,"83":0.04967,"84":0.03642,"85":0.04635,"86":0.06953,"87":0.46685,"88":0.19866,"89":1.84092,"90":0.56287,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.00331,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00331,"30":0,"31":0.00331,"32":0,"33":0.00331,"34":0,"35":0,"36":0.00331,"37":0,"38":0.00331,"39":0,"40":0,"41":0,"42":0.00331,"43":0,"44":0.00331,"45":0.00331,"46":0.00662,"47":0.00331,"48":0,"49":0,"50":0.00993,"51":0.00331,"52":0,"53":0,"54":0.01656,"55":0.01987,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00331,"64":0.00331,"65":0,"66":0,"67":0,"68":0.00331,"69":0.00331,"70":0,"71":0.00331,"72":0.00331,"73":0.0298,"74":0.07615,"75":0.20859,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00331},G:{"8":0.00317,"3.2":0.00079,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00475,"6.0-6.1":0.00238,"7.0-7.1":0.05781,"8.1-8.4":0.0293,"9.0-9.2":0.00792,"9.3":0.09028,"10.0-10.2":0.06731,"10.3":0.29221,"11.0-11.2":0.14413,"11.3-11.4":0.08157,"12.0-12.1":0.30251,"12.2-12.4":0.93287,"13.0-13.1":0.12433,"13.2":0.12354,"13.3":0.52345,"13.4-13.7":0.75389,"14.0-14.4":3.88984,"14.5":0.0388},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00662,"14":0.02318,_:"0","3.1":0,"3.2":0,"5.1":0.29137,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00331,"12.1":0.00331,"13.1":0.00662,"14.1":0},B:{"12":0.00662,"13":0.0298,"14":0.00662,"15":0.00993,"16":0.01656,"17":0.01324,"18":0.04635,"79":0,"80":0,"81":0.00331,"83":0,"84":0.01656,"85":0.01324,"86":0.00331,"87":0.00993,"88":0.01987,"89":0.23839,"90":0.0596},P:{"4":0.71657,"5.0-5.4":0.06056,"6.2-6.4":0.03028,"7.2-7.4":0.29268,"8.2":0.04037,"9.2":0.22204,"10.1":0.19176,"11.1-11.2":0.22204,"12.0":0.22204,"13.0":1.28175,"14.0":0.15139},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0066,"4.2-4.3":0.06189,"4.4":0,"4.4.3-4.4.4":0.36144},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.06622,"5.5":0},J:{"7":0,"10":0.00669},N:{"10":0,"11":0},L:{"0":73.81257},S:{"2.5":0},R:{_:"0"},M:{"0":1.11037},Q:{"10.4":0.01338},O:{"0":0.26087},H:{"0":1.18422}};


/***/ }),
/* 295 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00891,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01337,"53":0,"54":0.00446,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.00446,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00446,"69":0,"70":0,"71":0,"72":0.00446,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.17824,"79":0,"80":0.00446,"81":0,"82":0,"83":0,"84":0,"85":0.00446,"86":0.02228,"87":0.53918,"88":0.22726,"89":0.00446,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00446,"39":0,"40":0.01782,"41":0,"42":0.00891,"43":0.00891,"44":0.00446,"45":0,"46":0,"47":0,"48":0,"49":0.05793,"50":0.00446,"51":0,"52":0,"53":0.00446,"54":0.00891,"55":0.02228,"56":0.00446,"57":0,"58":0.00446,"59":0,"60":0.00891,"61":0,"62":0.00446,"63":0.02228,"64":0,"65":0.04902,"66":0,"67":0,"68":0.00891,"69":0,"70":0.01782,"71":0.01337,"72":0.00446,"73":0.02228,"74":0.02228,"75":0.0401,"76":0.01337,"77":0.01337,"78":0.00446,"79":0.03565,"80":0.02228,"81":0.47679,"83":0.03119,"84":0.02674,"85":0.02228,"86":0.03119,"87":0.09358,"88":0.29855,"89":8.07427,"90":3.88118,"91":0.01782,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.01782,"38":0,"39":0,"40":0.00891,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00446,"73":0.06238,"74":0.10249,"75":0.49907,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00446},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00298,"6.0-6.1":0.02385,"7.0-7.1":0.53364,"8.1-8.4":0.00596,"9.0-9.2":0.00696,"9.3":0.84667,"10.0-10.2":0.07453,"10.3":0.48991,"11.0-11.2":0.23055,"11.3-11.4":0.05962,"12.0-12.1":0.14509,"12.2-12.4":0.62407,"13.0-13.1":0.02882,"13.2":0.01391,"13.3":0.14509,"13.4-13.7":0.78009,"14.0-14.4":5.07105,"14.5":0.1113},E:{"4":0,"5":0,"6":0,"7":0,"8":0.01337,"9":0,"10":0,"11":0,"12":0,"13":0.00446,"14":0.3342,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00446,"11.1":0.00891,"12.1":0.05347,"13.1":0.13814,"14.1":0.00446},B:{"12":0.01782,"13":0.00446,"14":0.01782,"15":0.05793,"16":0.00446,"17":0.00446,"18":0.07575,"79":0,"80":0,"81":0,"83":0,"84":0.00891,"85":0.00891,"86":0.00446,"87":0.03119,"88":0.02228,"89":0.90457,"90":0.61938},P:{"4":0.65422,"5.0-5.4":0.11244,"6.2-6.4":0.04089,"7.2-7.4":0.19422,"8.2":0.01022,"9.2":0.12267,"10.1":0.14311,"11.1-11.2":0.76666,"12.0":0.35778,"13.0":1.38,"14.0":0.276},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00471,"4.2-4.3":0.01884,"4.4":0,"4.4.3-4.4.4":0.32567},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.38322,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":65.2252},S:{"2.5":0},R:{_:"0"},M:{"0":0.05544},Q:{"10.4":0.00554},O:{"0":0.26611},H:{"0":0.37266}};


/***/ }),
/* 296 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.73883,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":2.94545,"86":0,"87":23.52419,"88":0,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":4.41325,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":11.02327,"90":53.66825,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.73883,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":0,"14.0-14.4":0,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0,"14.0":0},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":2.9578},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 297 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00505,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01011,"34":0,"35":0,"36":0.00505,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00505,"44":0,"45":0,"46":0,"47":0.00505,"48":0,"49":0,"50":0,"51":0,"52":0.03538,"53":0.00505,"54":0,"55":0,"56":0.00505,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00505,"66":0,"67":0,"68":0.01011,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.00505,"78":0.05054,"79":0.01011,"80":0,"81":0.00505,"82":0,"83":0.01011,"84":0.01011,"85":0.01516,"86":0.02527,"87":0.84402,"88":0.27797,"89":0.00505,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.01011,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01011,"39":0,"40":0,"41":0,"42":0.96531,"43":0,"44":0,"45":0,"46":0,"47":0.01011,"48":0,"49":0.19711,"50":0,"51":0,"52":0,"53":0.02527,"54":0.00505,"55":0,"56":0.00505,"57":0,"58":0,"59":0,"60":0,"61":0.00505,"62":0,"63":0.00505,"64":0,"65":0.00505,"66":0,"67":0,"68":0.00505,"69":0.01011,"70":0.80359,"71":0.01011,"72":0.02022,"73":0.00505,"74":0.03538,"75":0.01011,"76":0.00505,"77":0.00505,"78":0.03032,"79":0.01516,"80":0.01011,"81":0.02022,"83":0.02527,"84":0.11119,"85":0.03538,"86":0.03538,"87":0.14657,"88":0.20216,"89":11.89712,"90":3.9775,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00505,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01011,"55":0.03538,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00505,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.12635,"74":0.07076,"75":0.19205,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00563,"6.0-6.1":0.0075,"7.0-7.1":0.02438,"8.1-8.4":0.00375,"9.0-9.2":0.00938,"9.3":0.32072,"10.0-10.2":0.03939,"10.3":0.26445,"11.0-11.2":0.16692,"11.3-11.4":0.08252,"12.0-12.1":0.0844,"12.2-12.4":0.3451,"13.0-13.1":0.06752,"13.2":0.02438,"13.3":0.17818,"13.4-13.7":0.96215,"14.0-14.4":15.34937,"14.5":0.1763},E:{"4":0,"5":0.00505,"6":0,"7":0,"8":0,"9":0,"10":0.00505,"11":0,"12":0.00505,"13":0.05054,"14":1.24834,_:"0","3.1":0,"3.2":0,"5.1":0.00505,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00505,"11.1":0.01516,"12.1":0.23754,"13.1":0.19205,"14.1":0.02022},B:{"12":0,"13":0.00505,"14":0.00505,"15":0.00505,"16":0.00505,"17":0.00505,"18":0.03538,"79":0,"80":0,"81":0,"83":0,"84":0.00505,"85":0.00505,"86":0.01011,"87":0,"88":0.01011,"89":1.4505,"90":0.47002},P:{"4":0.08247,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02062,"10.1":0.02062,"11.1-11.2":0.08247,"12.0":0.08247,"13.0":2.68014,"14.0":1.19576},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.02674,"4.4":0,"4.4.3-4.4.4":0.21391},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.27292,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":48.43299},S:{"2.5":0},R:{_:"0"},M:{"0":0.18795},Q:{"10.4":0.02968},O:{"0":0.94469},H:{"0":0.37929}};


/***/ }),
/* 298 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.00643,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01286,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00643,"49":0,"50":0,"51":0,"52":0.09648,"53":0,"54":0,"55":0,"56":0.0193,"57":0,"58":0,"59":0,"60":0.00643,"61":0.00643,"62":0,"63":0,"64":0,"65":0,"66":0.00643,"67":0,"68":0.02573,"69":0.00643,"70":0,"71":0.00643,"72":0.01286,"73":0,"74":0,"75":0,"76":0.00643,"77":0.01286,"78":0.17366,"79":0.01286,"80":0.00643,"81":0.01286,"82":0.03859,"83":0.03859,"84":0.03859,"85":0.09005,"86":0.13507,"87":3.24816,"88":1.22208,"89":0.00643,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00643,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00643,"39":0,"40":0,"41":0,"42":0.00643,"43":0.00643,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.13507,"50":0.00643,"51":0,"52":0,"53":0.03216,"54":0,"55":0,"56":0.00643,"57":0.00643,"58":0.00643,"59":0.00643,"60":0,"61":0.00643,"62":0.01286,"63":0.00643,"64":0,"65":0.00643,"66":0.00643,"67":0.01286,"68":0.01286,"69":0.00643,"70":0.0193,"71":0.01286,"72":0.01286,"73":0.01286,"74":0.00643,"75":0.01286,"76":0.01286,"77":0.01286,"78":0.0193,"79":0.08362,"80":0.03216,"81":0.07075,"83":0.05146,"84":0.08362,"85":0.05146,"86":0.12221,"87":0.27658,"88":0.47597,"89":17.39856,"90":6.48346,"91":0.00643,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00643,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00643,"53":0,"54":0.00643,"55":0.01286,"56":0,"57":0,"58":0,"60":0.00643,"62":0,"63":0.01286,"64":0,"65":0,"66":0,"67":0,"68":0.00643,"69":0,"70":0,"71":0,"72":0.00643,"73":0.45024,"74":0.41165,"75":1.35715,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.04502},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00426,"6.0-6.1":0.01705,"7.0-7.1":0.00994,"8.1-8.4":0.00568,"9.0-9.2":0.0071,"9.3":0.13211,"10.0-10.2":0.00852,"10.3":0.10512,"11.0-11.2":0.02983,"11.3-11.4":0.03409,"12.0-12.1":0.03978,"12.2-12.4":0.16052,"13.0-13.1":0.0554,"13.2":0.01989,"13.3":0.14774,"13.4-13.7":0.48015,"14.0-14.4":12.19542,"14.5":0.21734},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01286,"13":0.06432,"14":1.64659,_:"0","3.1":0,"3.2":0,"5.1":0.01286,"6.1":0,"7.1":0,"9.1":0.00643,"10.1":0.00643,"11.1":0.02573,"12.1":0.04502,"13.1":0.21226,"14.1":0.03859},B:{"12":0.00643,"13":0.00643,"14":0.00643,"15":0.01286,"16":0.00643,"17":0.0193,"18":0.09005,"79":0,"80":0.00643,"81":0,"83":0.00643,"84":0.00643,"85":0.00643,"86":0.0193,"87":0.01286,"88":0.02573,"89":2.95229,"90":1.29926},P:{"4":0.09138,"5.0-5.4":0.01015,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02031,"10.1":0.02031,"11.1-11.2":0.06092,"12.0":0.09138,"13.0":1.27938,"14.0":0.59907},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00606,"4.2-4.3":0.02577,"4.4":0,"4.4.3-4.4.4":0.16672},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.02641,"11":0.7197,"5.5":0},J:{"7":0,"10":0.00357},N:{"10":0,"11":0},L:{"0":40.19338},S:{"2.5":0},R:{_:"0"},M:{"0":0.35323},Q:{"10.4":0.01427},O:{"0":0.14272},H:{"0":0.3986}};


/***/ }),
/* 299 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.03991,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.0057,"46":0,"47":0,"48":0.0114,"49":0.0057,"50":0.0057,"51":0.0114,"52":0.09692,"53":0.0114,"54":0.0057,"55":0.0057,"56":0.03991,"57":0.0057,"58":0,"59":0.0057,"60":0.0114,"61":0.0057,"62":0.0057,"63":0.0057,"64":0,"65":0.0057,"66":0.0057,"67":0.0057,"68":0.05131,"69":0.0057,"70":0.0057,"71":0.0057,"72":0.0171,"73":0.0057,"74":0.0057,"75":0.0057,"76":0.0057,"77":0.05131,"78":0.24514,"79":0.07981,"80":0.0228,"81":0.02851,"82":0.03421,"83":0.04561,"84":0.05701,"85":0.06271,"86":0.18813,"87":3.91089,"88":1.54497,"89":0.0057,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.0057,"39":0,"40":0,"41":0.0057,"42":0,"43":0,"44":0,"45":0,"46":0.0057,"47":0.0057,"48":0,"49":0.13682,"50":0,"51":0.0114,"52":0,"53":0.0114,"54":0,"55":0,"56":0.0057,"57":0,"58":0.0057,"59":0.0057,"60":0.02851,"61":0.03421,"62":0,"63":0.0057,"64":0.0057,"65":0.13112,"66":0.02851,"67":0.0057,"68":0.02851,"69":0.06271,"70":0.0114,"71":0.03421,"72":0.0228,"73":0.0114,"74":0.0114,"75":0.87225,"76":0.0171,"77":0.0114,"78":0.12542,"79":0.03421,"80":0.18243,"81":0.05131,"83":0.09692,"84":0.14253,"85":0.15393,"86":0.19383,"87":0.24514,"88":0.33066,"89":8.04981,"90":3.33509,"91":0.0114,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.0057,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0057,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.0057,"55":0.0114,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0114,"64":0,"65":0,"66":0,"67":0,"68":0.0057,"69":0.0057,"70":0.0057,"71":0.0114,"72":0.0114,"73":0.88366,"74":0.23374,"75":0.78104,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.0057},G:{"8":0.00709,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01654,"6.0-6.1":0.01182,"7.0-7.1":0.02127,"8.1-8.4":0.02127,"9.0-9.2":0.1347,"9.3":0.27884,"10.0-10.2":0.04254,"10.3":0.25758,"11.0-11.2":0.08034,"11.3-11.4":0.11343,"12.0-12.1":0.07562,"12.2-12.4":0.29539,"13.0-13.1":0.0638,"13.2":0.03072,"13.3":0.18432,"13.4-13.7":0.74201,"14.0-14.4":20.01058,"14.5":0.34737},E:{"4":0,"5":0,"6":0,"7":0.0057,"8":0.0057,"9":0,"10":0,"11":0.0057,"12":0.0114,"13":0.06841,"14":2.79349,_:"0","3.1":0,"3.2":0,"5.1":0.0057,"6.1":0,"7.1":0,"9.1":0.0057,"10.1":0.0114,"11.1":0.05131,"12.1":0.06841,"13.1":0.34776,"14.1":0.07411},B:{"12":0.0228,"13":0.0057,"14":0.0057,"15":0.0057,"16":0.0057,"17":0.0171,"18":0.09122,"79":0,"80":0,"81":0.0057,"83":0.0057,"84":0.0114,"85":0.0171,"86":0.0228,"87":0.0171,"88":0.03991,"89":2.55975,"90":1.19151},P:{"4":0.17622,"5.0-5.4":0.02073,"6.2-6.4":0,"7.2-7.4":0.0311,"8.2":0.01037,"9.2":0.05183,"10.1":0.0311,"11.1-11.2":0.11402,"12.0":0.10366,"13.0":3.13043,"14.0":1.52375},I:{"0":0,"3":0,"4":0.01132,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01132,"4.2-4.3":0.04073,"4.4":0,"4.4.3-4.4.4":0.25346},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.1557,"7":0.01198,"8":0.01198,"9":0.01198,"10":0.00599,"11":0.51501,"5.5":0},J:{"7":0,"10":0.0043},N:{"10":0.02923,"11":0.04385},L:{"0":35.07262},S:{"2.5":0},R:{_:"0"},M:{"0":0.79102},Q:{"10.4":0.0086},O:{"0":0.19775},H:{"0":0.41921}};


/***/ }),
/* 300 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00244,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00487,"53":0,"54":0,"55":0,"56":0.00244,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00487,"69":0,"70":0,"71":0,"72":0.00731,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00244,"79":0,"80":0,"81":0,"82":0.00244,"83":0,"84":0.01461,"85":0.00731,"86":0.01461,"87":0.38717,"88":0.10958,"89":0,"90":0.00244,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00244,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00244,"47":0,"48":0,"49":0.01461,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00244,"57":0,"58":0,"59":0.0901,"60":0,"61":0,"62":0,"63":0.00244,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.01218,"73":0.00731,"74":0.00487,"75":0,"76":0,"77":0.02922,"78":0.00244,"79":0.00487,"80":0.01218,"81":0.01218,"83":0.01948,"84":0.00244,"85":0.00974,"86":0.02192,"87":0.06088,"88":0.05601,"89":2.86113,"90":0.9253,"91":0.00487,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00244,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00487,"52":0,"53":0,"54":0.01218,"55":0.03166,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00244,"73":0,"74":0.02435,"75":0.0974,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00307,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00102,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0.00511,"9.3":0.02353,"10.0-10.2":0.00102,"10.3":0.25878,"11.0-11.2":0.21173,"11.3-11.4":0.23219,"12.0-12.1":0.12786,"12.2-12.4":0.36925,"13.0-13.1":0.18207,"13.2":0.00307,"13.3":0.34368,"13.4-13.7":1.12309,"14.0-14.4":6.82755,"14.5":0.18105},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00244,"14":0.07792,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0.00487,"9.1":0,"10.1":0.00244,"11.1":0,"12.1":0.00731,"13.1":0.06331,"14.1":0},B:{"12":0.00731,"13":0.00244,"14":0.00244,"15":0.00974,"16":0,"17":0.00487,"18":0.0414,"79":0,"80":0,"81":0,"83":0,"84":0.00244,"85":0.00487,"86":0,"87":0.00487,"88":0.01461,"89":0.23863,"90":0.0901},P:{"4":1.0203,"5.0-5.4":0.06061,"6.2-6.4":0.08082,"7.2-7.4":0.80816,"8.2":0.05051,"9.2":0.25255,"10.1":0.18184,"11.1-11.2":0.58591,"12.0":0.69703,"13.0":5.45505,"14.0":0.80816},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.02728,"4.4":0,"4.4.3-4.4.4":0.09168},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.06818,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":67.76823},S:{"2.5":0},R:{_:"0"},M:{"0":0.11348},Q:{"10.4":1.55839},O:{"0":1.04397},H:{"0":0.60877}};


/***/ }),
/* 301 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00679,"32":0,"33":0.02714,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00679,"48":0.00679,"49":0,"50":0,"51":0,"52":0.02036,"53":0,"54":0,"55":0,"56":0.06107,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00679,"66":0,"67":0,"68":0,"69":0,"70":0.01357,"71":0,"72":0.00679,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.05428,"79":0,"80":0,"81":0.00679,"82":0.03393,"83":0.01357,"84":0.01357,"85":0.02036,"86":0.08821,"87":1.24844,"88":0.46817,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00679,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.08142,"50":0,"51":0,"52":0.02036,"53":0.00679,"54":0,"55":0,"56":0,"57":0.00679,"58":0.00679,"59":0.00679,"60":0,"61":0.14249,"62":0.00679,"63":0.00679,"64":0,"65":0.01357,"66":0.01357,"67":0.02036,"68":0.00679,"69":0.25783,"70":0.02036,"71":0.01357,"72":0.01357,"73":0.00679,"74":0.01357,"75":0.02036,"76":0.06107,"77":0.01357,"78":0.01357,"79":0.03393,"80":0.05428,"81":0.05428,"83":0.05428,"84":0.12892,"85":0.05428,"86":0.1832,"87":0.50209,"88":0.98383,"89":20.95887,"90":7.44315,"91":0.00679,"92":0.00679,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00679,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.3189,"74":0.06785,"75":0.23748,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00338,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00338,"7.0-7.1":0.03046,"8.1-8.4":0.02707,"9.0-9.2":0.07445,"9.3":0.24365,"10.0-10.2":0.03046,"10.3":0.3384,"11.0-11.2":0.08798,"11.3-11.4":0.11844,"12.0-12.1":0.09137,"12.2-12.4":0.4433,"13.0-13.1":0.07445,"13.2":0.03046,"13.3":0.27749,"13.4-13.7":0.97459,"14.0-14.4":29.36957,"14.5":0.29441},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00679,"9":0,"10":0,"11":0.00679,"12":0.02714,"13":0.14927,"14":5.24481,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.03393,"11.1":0.09499,"12.1":0.14927,"13.1":0.79385,"14.1":0.10856},B:{"12":0,"13":0,"14":0,"15":0.00679,"16":0.00679,"17":0.01357,"18":0.05428,"79":0,"80":0.00679,"81":0,"83":0,"84":0.00679,"85":0.01357,"86":0.00679,"87":0.02036,"88":0.04071,"89":2.31369,"90":1.03132},P:{"4":0.05169,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02068,"10.1":0.01034,"11.1-11.2":0.03101,"12.0":0.04135,"13.0":1.06482,"14.0":0.50656},I:{"0":0,"3":0,"4":0.00483,"2.1":0,"2.2":0,"2.3":0.00645,"4.1":0.01773,"4.2-4.3":0.02256,"4.4":0,"4.4.3-4.4.4":0.0838},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0.00689,"8":0,"9":0,"10":0.02066,"11":0.42704,"5.5":0},J:{"7":0,"10":0.00322},N:{"10":0,"11":0},L:{"0":18.93644},S:{"2.5":0},R:{_:"0"},M:{"0":0.22184},Q:{"10.4":0.01929},O:{"0":0.02572},H:{"0":0.08827}};


/***/ }),
/* 302 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00579,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0.00579,"83":0,"84":0,"85":0,"86":0.10426,"87":0.78771,"88":0.2143,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.02896,"39":0.00579,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00579,"48":0,"49":0.02317,"50":0,"51":0,"52":0,"53":0.00579,"54":0,"55":0,"56":0,"57":0,"58":0.00579,"59":0,"60":0,"61":0,"62":0,"63":0.01158,"64":0,"65":0.01738,"66":0,"67":0,"68":0,"69":0.00579,"70":0,"71":0.00579,"72":0,"73":0.3649,"74":0.19114,"75":0.05792,"76":0.45178,"77":0.02896,"78":0,"79":0.27802,"80":0.01158,"81":0.06371,"83":0.02317,"84":0.17955,"85":0.02896,"86":0.15059,"87":0.12163,"88":0.59078,"89":13.19997,"90":5.16646,"91":0.01158,"92":0.00579,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0.01158,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.08688,"74":0.02896,"75":0.16218,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00193,"6.0-6.1":0,"7.0-7.1":0.01351,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.08203,"10.0-10.2":0.00772,"10.3":0.02316,"11.0-11.2":0.05597,"11.3-11.4":0.0579,"12.0-12.1":0.00965,"12.2-12.4":0.12643,"13.0-13.1":0.00965,"13.2":0,"13.3":0.11677,"13.4-13.7":0.27505,"14.0-14.4":8.20701,"14.5":0.06756},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.01738,"14":1.05994,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00579,"11.1":0.00579,"12.1":0.08688,"13.1":0.24326,"14.1":0.04054},B:{"12":0,"13":0,"14":0.00579,"15":0.01158,"16":0.00579,"17":0.08688,"18":0.08688,"79":0,"80":0.00579,"81":0,"83":0,"84":0,"85":0.00579,"86":0,"87":0,"88":0.00579,"89":3.04659,"90":1.0136},P:{"4":0.10861,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.10861,"8.2":0.01086,"9.2":0.03258,"10.1":0.01086,"11.1-11.2":0.06517,"12.0":0.05431,"13.0":3.09544,"14.0":1.33593},I:{"0":0,"3":0,"4":0.18457,"2.1":0,"2.2":0,"2.3":0,"4.1":0.06152,"4.2-4.3":0.01758,"4.4":0,"4.4.3-4.4.4":2.46099},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.75296,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":48.75758},S:{"2.5":0},R:{_:"0"},M:{"0":0.12624},Q:{"10.4":0},O:{"0":1.70003},H:{"0":0.02789}};


/***/ }),
/* 303 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00482,"16":0,"17":0.00482,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00482,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00482,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.25054,"67":0,"68":0.00482,"69":0,"70":0,"71":0,"72":0,"73":0.01927,"74":0,"75":0,"76":0,"77":0,"78":0.02409,"79":0.00482,"80":0.00482,"81":0.00964,"82":0.00482,"83":0.00964,"84":0.02409,"85":0.01445,"86":0.02891,"87":0.53962,"88":0.4288,"89":0.07227,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00482,"24":0.00482,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00964,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00482,"49":0.17827,"50":0,"51":0,"52":0,"53":0.00964,"54":0.00482,"55":0.00482,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00482,"63":0.00482,"64":0.00964,"65":0.00482,"66":0.00482,"67":0.00482,"68":0.00964,"69":0.00482,"70":0.00482,"71":0,"72":0.00482,"73":0.00482,"74":0.01445,"75":0.01927,"76":0.01927,"77":0.00964,"78":0.01445,"79":0.02891,"80":0.03854,"81":0.02891,"83":0.07709,"84":0.09636,"85":0.11081,"86":0.106,"87":0.36135,"88":0.31317,"89":10.36834,"90":4.32175,"91":0.00964,"92":0.00482,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00482,"55":0.00964,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00482,"69":0,"70":0.00964,"71":0,"72":0.00482,"73":0.41435,"74":0.10118,"75":0.34208,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00408,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02448,"6.0-6.1":0.0102,"7.0-7.1":0.07955,"8.1-8.4":0.01836,"9.0-9.2":0.00204,"9.3":0.17747,"10.0-10.2":0.01632,"10.3":0.16931,"11.0-11.2":0.0612,"11.3-11.4":0.07139,"12.0-12.1":0.07343,"12.2-12.4":0.41409,"13.0-13.1":0.05712,"13.2":0.03264,"13.3":0.23662,"13.4-13.7":1.15048,"14.0-14.4":16.27597,"14.5":0.28354},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00482,"12":0.00482,"13":0.03373,"14":0.80461,_:"0","3.1":0,"3.2":0,"5.1":0.43362,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00482,"11.1":0.01445,"12.1":0.02409,"13.1":0.15418,"14.1":0.01927},B:{"12":0.00482,"13":0.00482,"14":0.00482,"15":0.00482,"16":0.00482,"17":0.00964,"18":0.16381,"79":0,"80":0,"81":0,"83":0,"84":0.00482,"85":0.00482,"86":0.01445,"87":0.00482,"88":0.00964,"89":0.84315,"90":0.42398},P:{"4":0.14585,"5.0-5.4":0.01042,"6.2-6.4":0.02084,"7.2-7.4":0.05209,"8.2":0,"9.2":0.04167,"10.1":0.01042,"11.1-11.2":0.15627,"12.0":0.06251,"13.0":1.0418,"14.0":0.45839},I:{"0":0,"3":0,"4":0.02938,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02351,"4.2-4.3":0.0764,"4.4":0,"4.4.3-4.4.4":0.82277},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01569,"9":0.00523,"10":0.00523,"11":0.15693,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":53.80261},S:{"2.5":0},R:{_:"0"},M:{"0":0.6633},Q:{"10.4":0},O:{"0":0.06218},H:{"0":0.17171}};


/***/ }),
/* 304 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00435,"16":0,"17":0.00435,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00435,"34":0,"35":0,"36":0,"37":0.0087,"38":0.00435,"39":0,"40":0,"41":0,"42":0,"43":0.00435,"44":0,"45":0,"46":0,"47":0.00435,"48":0.0087,"49":0,"50":0,"51":0,"52":0.09139,"53":0.00435,"54":0,"55":0,"56":0.00435,"57":0.00435,"58":0,"59":0,"60":0.00435,"61":0,"62":0.00435,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.02176,"69":0,"70":0,"71":0,"72":0.0087,"73":0,"74":0,"75":0,"76":0.00435,"77":0.00435,"78":0.04787,"79":0.00435,"80":0.00435,"81":0.0087,"82":0.00435,"83":0.0087,"84":0.02176,"85":0.02611,"86":0.04787,"87":1.01402,"88":0.3351,"89":0.00435,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00435,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00435,"23":0,"24":0.00435,"25":0,"26":0.00435,"27":0,"28":0,"29":0,"30":0.00435,"31":0.00435,"32":0.00435,"33":0.0087,"34":0.00435,"35":0,"36":0,"37":0,"38":0.01306,"39":0.00435,"40":0.01741,"41":0,"42":0.00435,"43":0.14797,"44":0,"45":0,"46":0,"47":0.00435,"48":0.00435,"49":0.13926,"50":0.0087,"51":0.00435,"52":0.00435,"53":0.01306,"54":0.00435,"55":0.00435,"56":0.01741,"57":0.00435,"58":0.0087,"59":0,"60":0.01306,"61":0.02176,"62":0.00435,"63":0.02176,"64":0.0087,"65":0.0087,"66":0.00435,"67":0.0087,"68":0.01306,"69":0.01741,"70":0.0087,"71":0.01306,"72":0.01306,"73":0.0087,"74":0.01741,"75":0.01306,"76":0.01741,"77":0.01741,"78":0.0087,"79":0.04352,"80":0.03046,"81":0.08269,"83":0.03917,"84":0.03482,"85":0.05658,"86":0.12621,"87":0.28288,"88":0.29158,"89":7.96416,"90":2.78528,"91":0.0087,"92":0.00435,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00435,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00435,"37":0.01306,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00435,"52":0,"53":0,"54":0.0087,"55":0.01306,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00435,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00435,"72":0.00435,"73":0.15232,"74":0.20019,"75":0.57882,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00089,"3.2":0.00089,"4.0-4.1":0.00059,"4.2-4.3":0.0003,"5.0-5.1":0.0204,"6.0-6.1":0.00828,"7.0-7.1":0.11085,"8.1-8.4":0.0068,"9.0-9.2":0.00562,"9.3":0.10759,"10.0-10.2":0.00443,"10.3":0.07597,"11.0-11.2":0.01714,"11.3-11.4":0.02749,"12.0-12.1":0.04138,"12.2-12.4":0.12149,"13.0-13.1":0.02365,"13.2":0.01596,"13.3":0.06562,"13.4-13.7":0.19893,"14.0-14.4":1.81786,"14.5":0.02631},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.01306,"14":0.07398,_:"0","3.1":0,"3.2":0,"5.1":0.03482,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00435,"12.1":0.00435,"13.1":0.01306,"14.1":0},B:{"12":0.00435,"13":0.00435,"14":0.00435,"15":0.00435,"16":0.0087,"17":0.0087,"18":0.02611,"79":0,"80":0,"81":0,"83":0,"84":0.0087,"85":0.00435,"86":0.00435,"87":0.00435,"88":0.0087,"89":0.4352,"90":0.18278},P:{"4":0.20404,"5.0-5.4":0.0102,"6.2-6.4":0.03061,"7.2-7.4":0.15303,"8.2":0.0204,"9.2":0.10202,"10.1":0.04081,"11.1-11.2":0.18364,"12.0":0.16323,"13.0":1.33648,"14.0":0.33667},I:{"0":0,"3":0,"4":0.00501,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01102,"4.2-4.3":0.03205,"4.4":0,"4.4.3-4.4.4":0.24036},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01119,"9":0.01119,"10":0,"11":0.13429,"5.5":0},J:{"7":0,"10":0.00565},N:{"10":0,"11":0},L:{"0":74.76496},S:{"2.5":0},R:{_:"0"},M:{"0":0.17509},Q:{"10.4":0.01694},O:{"0":0.57045},H:{"0":0.62027}};


/***/ }),
/* 305 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.0059,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01179,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.0059,"48":0,"49":0,"50":0,"51":0.0059,"52":0.02358,"53":0,"54":0,"55":0,"56":0.0059,"57":0,"58":0,"59":0,"60":0.0059,"61":0.0059,"62":0,"63":0,"64":0.0059,"65":0.0059,"66":0.03537,"67":0,"68":0.01179,"69":0,"70":0.0059,"71":0,"72":0.01179,"73":0.01179,"74":0,"75":0,"76":0.0059,"77":0.0059,"78":0.05306,"79":0.0059,"80":0.0059,"81":0.01179,"82":0.01179,"83":0.01179,"84":0.03537,"85":0.02358,"86":0.04716,"87":1.55628,"88":0.63077,"89":0.0059,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01179,"23":0.0059,"24":0.0059,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.03537,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01179,"48":0.01179,"49":0.05306,"50":0,"51":0,"52":0,"53":0.04127,"54":0,"55":0.02948,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.01179,"62":0.0059,"63":0.08253,"64":0.0059,"65":0.01769,"66":0.0059,"67":0.0059,"68":0.01179,"69":0.0059,"70":0.0059,"71":0.01179,"72":0.0059,"73":0.0059,"74":0.01769,"75":0.02948,"76":0.01769,"77":0.01179,"78":0.01769,"79":0.03537,"80":0.03537,"81":0.04127,"83":0.04716,"84":0.04716,"85":0.04127,"86":0.08843,"87":0.24759,"88":0.3537,"89":17.36078,"90":7.84625,"91":0.0059,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0059,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.0059,"70":0,"71":0,"72":0,"73":0.5895,"74":0.12969,"75":0.52466,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0378,"6.0-6.1":0.02147,"7.0-7.1":0.01718,"8.1-8.4":0.00258,"9.0-9.2":0.00344,"9.3":0.12971,"10.0-10.2":0.00601,"10.3":0.10909,"11.0-11.2":0.03178,"11.3-11.4":0.02147,"12.0-12.1":0.0146,"12.2-12.4":0.1151,"13.0-13.1":0.02491,"13.2":0.01117,"13.3":0.0713,"13.4-13.7":0.31009,"14.0-14.4":6.93545,"14.5":0.14775},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0059,"13":0.02358,"14":0.80762,_:"0","3.1":0,"3.2":0,"5.1":0.45392,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0059,"11.1":0.02358,"12.1":0.03537,"13.1":0.17096,"14.1":0.03537},B:{"12":0,"13":0,"14":0.0059,"15":0.0059,"16":0.0059,"17":0.0059,"18":0.03537,"79":0,"80":0,"81":0,"83":0,"84":0.0059,"85":0.0059,"86":0,"87":0.01179,"88":0.01769,"89":0.99626,"90":0.53645},P:{"4":0.24432,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.1018,"8.2":0.01018,"9.2":0.06108,"10.1":0.03054,"11.1-11.2":0.19342,"12.0":0.12216,"13.0":1.59824,"14.0":0.67187},I:{"0":0,"3":0,"4":0.00363,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00908,"4.2-4.3":0.03816,"4.4":0,"4.4.3-4.4.4":0.24166},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.12969,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":52.19267},S:{"2.5":0},R:{_:"0"},M:{"0":0.1601},Q:{"10.4":0.00411},O:{"0":0.06979},H:{"0":0.18266}};


/***/ }),
/* 306 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01545,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0309,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00773,"61":0,"62":0,"63":0,"64":0,"65":0.00773,"66":0.00773,"67":0,"68":0.10044,"69":0,"70":0,"71":0,"72":0.00773,"73":0,"74":0,"75":0,"76":0.00773,"77":0.00773,"78":0.09271,"79":0,"80":0,"81":0.00773,"82":0.08499,"83":0.00773,"84":0.07726,"85":0.0309,"86":0.19315,"87":1.9624,"88":0.71852,"89":0.00773,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00773,"35":0,"36":0,"37":0,"38":0.00773,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.10044,"50":0,"51":0,"52":0,"53":0.00773,"54":0,"55":0,"56":0.00773,"57":0,"58":0,"59":0.00773,"60":0.01545,"61":0,"62":0,"63":0.00773,"64":0,"65":0.02318,"66":0.00773,"67":0.00773,"68":0.01545,"69":0.67216,"70":0.00773,"71":0.00773,"72":0.01545,"73":0.00773,"74":0.00773,"75":0.01545,"76":0.02318,"77":0.00773,"78":0.05408,"79":0.10044,"80":0.03863,"81":0.0309,"83":0.06181,"84":0.07726,"85":0.04636,"86":7.3706,"87":8.18183,"88":0.47901,"89":21.12288,"90":8.10457,"91":0.00773,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00773,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.01545,"70":0,"71":0,"72":0,"73":0.68761,"74":0.39403,"75":1.52975,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00422,"6.0-6.1":0.06185,"7.0-7.1":0.00422,"8.1-8.4":0.05201,"9.0-9.2":0,"9.3":0.04639,"10.0-10.2":0.01968,"10.3":0.13635,"11.0-11.2":0.04498,"11.3-11.4":0.03795,"12.0-12.1":0.06326,"12.2-12.4":0.14057,"13.0-13.1":0.06326,"13.2":0.0239,"13.3":0.14057,"13.4-13.7":0.55103,"14.0-14.4":12.12826,"14.5":0.22632},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01545,"13":0.06181,"14":2.04739,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00773,"11.1":0.04636,"12.1":0.12362,"13.1":0.4172,"14.1":0.06181},B:{"12":0,"13":0,"14":0,"15":0.00773,"16":0,"17":0.00773,"18":0.03863,"79":0,"80":0.00773,"81":0,"83":0,"84":0.00773,"85":0.00773,"86":0.00773,"87":0.00773,"88":0.01545,"89":1.76153,"90":0.71079},P:{"4":0.05133,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01027,"8.2":0.01027,"9.2":0.01027,"10.1":0.01027,"11.1-11.2":0.06159,"12.0":0.06159,"13.0":1.04708,"14.0":0.53381},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00611,"4.2-4.3":0.00713,"4.4":0,"4.4.3-4.4.4":0.06722},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00788,"11":0.38615,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":23.31566},S:{"2.5":0},R:{_:"0"},M:{"0":0.20921},Q:{"10.4":0},O:{"0":0.05912},H:{"0":0.14855}};


/***/ }),
/* 307 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00215,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00429,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00215,"48":0,"49":0,"50":0,"51":0,"52":0.0236,"53":0,"54":0.00215,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00215,"67":0.00429,"68":0.00215,"69":0,"70":0,"71":0,"72":0.00215,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01073,"79":0,"80":0,"81":0.00215,"82":0,"83":0.00215,"84":0.00429,"85":0.00429,"86":0.01073,"87":0.25097,"88":0.08366,"89":0.00215,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00429,"27":0,"28":0,"29":0,"30":0,"31":0.00215,"32":0,"33":0.00429,"34":0,"35":0,"36":0,"37":0,"38":0.00429,"39":0,"40":0.00644,"41":0,"42":0,"43":0.05792,"44":0,"45":0,"46":0.00215,"47":0.00429,"48":0,"49":0.01502,"50":0,"51":0.00215,"52":0,"53":0.0236,"54":0,"55":0,"56":0,"57":0,"58":0.00215,"59":0,"60":0,"61":0.00429,"62":0,"63":0.00644,"64":0,"65":0.00215,"66":0,"67":0.00215,"68":0.01931,"69":0.00215,"70":0.00215,"71":0.00215,"72":0.00215,"73":0.00215,"74":0.00644,"75":0.00215,"76":0.00429,"77":0.00215,"78":0.00215,"79":0.01502,"80":0.00858,"81":0.02789,"83":0.01287,"84":0.01073,"85":0.01073,"86":0.0236,"87":0.0429,"88":0.06006,"89":2.2115,"90":0.72716,"91":0.00215,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00215,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00429,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0.00215,"63":0.00215,"64":0.00429,"65":0,"66":0,"67":0,"68":0.00215,"69":0.00215,"70":0.00429,"71":0.00858,"72":0.01931,"73":0.01931,"74":0.00858,"75":0.00644,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01042,"6.0-6.1":0.00261,"7.0-7.1":0.05473,"8.1-8.4":0.00261,"9.0-9.2":0.03388,"9.3":0.17462,"10.0-10.2":0.05212,"10.3":0.28929,"11.0-11.2":0.06516,"11.3-11.4":0.1251,"12.0-12.1":0.13552,"12.2-12.4":0.56555,"13.0-13.1":0.05994,"13.2":0.03909,"13.3":0.23456,"13.4-13.7":0.90957,"14.0-14.4":20.9984,"14.5":0.07558},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00429,"14":0.05792,_:"0","3.1":0,"3.2":0,"5.1":0.08151,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00215,"12.1":0.00215,"13.1":0.01073,"14.1":0.00215},B:{"12":0,"13":0,"14":0.00215,"15":0.00215,"16":0,"17":0.00215,"18":0.00644,"79":0,"80":0,"81":0,"83":0,"84":0.00215,"85":0.00215,"86":0,"87":0,"88":0.00215,"89":0.12441,"90":0.05148},P:{"4":0.4346,"5.0-5.4":0,"6.2-6.4":0.01035,"7.2-7.4":0.07243,"8.2":0.01035,"9.2":0.08278,"10.1":0.03104,"11.1-11.2":0.20695,"12.0":0.12417,"13.0":1.33486,"14.0":0.49669},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00753,"4.2-4.3":0.02885,"4.4":0,"4.4.3-4.4.4":0.62085},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00232,"9":0,"10":0,"11":0.02556,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":66.59927},S:{"2.5":0},R:{_:"0"},M:{"0":0.14139},Q:{"10.4":0},O:{"0":0.40061},H:{"0":0.37927}};


/***/ }),
/* 308 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00174,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00348,"35":0.00174,"36":0,"37":0,"38":0.00174,"39":0,"40":0,"41":0.00174,"42":0.00174,"43":0.00174,"44":0.00174,"45":0,"46":0,"47":0.00174,"48":0.00174,"49":0,"50":0,"51":0,"52":0.00348,"53":0,"54":0,"55":0,"56":0.00174,"57":0.00174,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00348,"69":0,"70":0,"71":0,"72":0.00174,"73":0.00174,"74":0,"75":0,"76":0,"77":0,"78":0.02433,"79":0,"80":0,"81":0.00174,"82":0,"83":0,"84":0.00174,"85":0.00521,"86":0.04693,"87":0.14078,"88":0.05735,"89":0.00174,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01217,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00521,"31":0,"32":0.00348,"33":0.00348,"34":0,"35":0,"36":0,"37":0.01043,"38":0.00174,"39":0,"40":0.00869,"41":0,"42":0,"43":0.01912,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00174,"50":0.00348,"51":0,"52":0.00174,"53":0.00174,"54":0.00521,"55":0.00174,"56":0.00174,"57":0.00521,"58":0.00348,"59":0.00174,"60":0,"61":0,"62":0,"63":0.00348,"64":0.00695,"65":0.00174,"66":0,"67":0.00174,"68":0,"69":0.00174,"70":0.00174,"71":0,"72":0,"73":0.00348,"74":0.00348,"75":0.00174,"76":0.00174,"77":0,"78":0.00348,"79":0.02433,"80":0.00869,"81":0.00695,"83":0.01043,"84":0.00521,"85":0.00348,"86":0.01043,"87":0.03824,"88":0.02781,"89":0.8829,"90":0.36498,"91":0.00174,"92":0,"93":0},F:{"9":0,"11":0.00695,"12":0,"15":0.00174,"16":0,"17":0,"18":0.00174,"19":0.00174,"20":0.00695,"21":0.00174,"22":0.00174,"23":0.01043,"24":0,"25":0,"26":0,"27":0.00174,"28":0.00348,"29":0.00174,"30":0.00348,"31":0,"32":0.00174,"33":0.00174,"34":0,"35":0,"36":0,"37":0.00174,"38":0,"39":0,"40":0,"41":0,"42":0.00695,"43":0,"44":0.00174,"45":0,"46":0,"47":0.00521,"48":0,"49":0,"50":0.00348,"51":0.01564,"52":0,"53":0.00521,"54":0.01738,"55":0.01738,"56":0,"57":0,"58":0,"60":0,"62":0.00348,"63":0.00348,"64":0,"65":0,"66":0,"67":0.00174,"68":0,"69":0,"70":0.00174,"71":0,"72":0,"73":0.00695,"74":0.04345,"75":0.14947,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.15294},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00176,"7.0-7.1":0.10328,"8.1-8.4":0.02048,"9.0-9.2":0.07197,"9.3":0.06641,"10.0-10.2":0.00351,"10.3":0.24167,"11.0-11.2":0.0711,"11.3-11.4":0.02779,"12.0-12.1":0.02896,"12.2-12.4":0.25308,"13.0-13.1":0.02019,"13.2":0.01521,"13.3":0.07461,"13.4-13.7":0.15536,"14.0-14.4":1.58664,"14.5":0.01755},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00174,"14":0.03128,_:"0","3.1":0,"3.2":0,"5.1":0.00174,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00521,"13.1":0.00521,"14.1":0},B:{"12":0.00695,"13":0.00695,"14":0.00521,"15":0.00174,"16":0.00348,"17":0.00695,"18":0.02086,"79":0,"80":0,"81":0,"83":0,"84":0.00174,"85":0.00174,"86":0,"87":0.00174,"88":0.00174,"89":0.11297,"90":0.04693},P:{"4":0.54018,"5.0-5.4":0.08154,"6.2-6.4":0.04077,"7.2-7.4":0.39749,"8.2":0.01019,"9.2":0.07134,"10.1":0.03058,"11.1-11.2":0.15288,"12.0":0.08154,"13.0":0.8969,"14.0":0.18346},I:{"0":0,"3":0,"4":0.00057,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01061,"4.2-4.3":0.15051,"4.4":0,"4.4.3-4.4.4":0.36352},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01564,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":55.31942},S:{"2.5":0},R:{_:"0"},M:{"0":0.07436},Q:{"10.4":0.2396},O:{"0":1.1732},H:{"0":27.07951}};


/***/ }),
/* 309 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00978,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00489,"46":0,"47":0,"48":0.00978,"49":0,"50":0,"51":0,"52":0.05381,"53":0.00489,"54":0,"55":0,"56":0.00489,"57":0,"58":0,"59":0,"60":0.01468,"61":0,"62":0,"63":0.00489,"64":0.00489,"65":0,"66":0.00978,"67":0.00489,"68":0.01468,"69":0.00489,"70":0,"71":0,"72":0.00489,"73":0.00489,"74":0,"75":0.00489,"76":0.00489,"77":0.00489,"78":0.09784,"79":0.00489,"80":0.00978,"81":0.00489,"82":0.00978,"83":0.00489,"84":0.03424,"85":0.01957,"86":0.05381,"87":1.17408,"88":0.46963,"89":0.00489,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00489,"35":0,"36":0,"37":0,"38":0.00978,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.15654,"50":0.00489,"51":0,"52":0.00489,"53":0.02935,"54":0.01957,"55":0,"56":0.00489,"57":0.00489,"58":0.00489,"59":0,"60":0,"61":0.08316,"62":0,"63":0.00489,"64":0.00489,"65":0.00978,"66":0.00978,"67":0.00978,"68":0.01468,"69":0.00978,"70":0.01468,"71":0.00489,"72":0.00489,"73":0.00978,"74":0.01468,"75":0.03424,"76":0.02446,"77":0.01468,"78":0.01468,"79":0.03424,"80":0.02446,"81":0.03914,"83":0.03424,"84":0.04892,"85":0.03914,"86":0.08316,"87":0.14676,"88":0.28374,"89":10.27809,"90":4.2805,"91":0.00489,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00489,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00489,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00489,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.1859,"74":0.08316,"75":0.27395,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.0015,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0075,"6.0-6.1":0.006,"7.0-7.1":0.0165,"8.1-8.4":0.021,"9.0-9.2":0.0075,"9.3":0.23548,"10.0-10.2":0.051,"10.3":0.23098,"11.0-11.2":0.05999,"11.3-11.4":0.06299,"12.0-12.1":0.05999,"12.2-12.4":0.25048,"13.0-13.1":0.07499,"13.2":0.027,"13.3":0.20998,"13.4-13.7":0.64345,"14.0-14.4":12.13247,"14.5":0.15299},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00489,"12":0.00489,"13":0.05381,"14":1.54098,_:"0","3.1":0,"3.2":0,"5.1":0.00978,"6.1":0,"7.1":0,"9.1":0.00489,"10.1":0.01468,"11.1":0.03914,"12.1":0.05381,"13.1":0.27395,"14.1":0.02446},B:{"12":0,"13":0,"14":0.00489,"15":0.00489,"16":0.00489,"17":0.00489,"18":0.03424,"79":0,"80":0,"81":0.00489,"83":0,"84":0.00489,"85":0.00489,"86":0.00978,"87":0.00978,"88":0.01468,"89":1.09581,"90":0.52344},P:{"4":0.16723,"5.0-5.4":0.01045,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.03136,"10.1":0.0209,"11.1-11.2":0.12542,"12.0":0.09407,"13.0":1.83955,"14.0":0.87797},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02341,"4.2-4.3":0.02536,"4.4":0,"4.4.3-4.4.4":0.15994},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00543,"10":0,"11":0.29299,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.18721},S:{"2.5":0},R:{_:"0"},M:{"0":0.27583},Q:{"10.4":0.01532},O:{"0":0.07662},H:{"0":0.22245}};


/***/ }),
/* 310 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.0046,"21":0,"22":0,"23":0,"24":0,"25":0.0046,"26":0,"27":0.0046,"28":0,"29":0.0092,"30":0.0046,"31":0.0046,"32":0.0046,"33":0.01379,"34":0.0092,"35":0.01379,"36":0.0046,"37":0.01379,"38":0.0046,"39":0,"40":0.0046,"41":0.0046,"42":0.0046,"43":0.01379,"44":0.01839,"45":0.0046,"46":0.0046,"47":0.05518,"48":0.0092,"49":0.0046,"50":0,"51":0,"52":0.2345,"53":0,"54":0.0046,"55":0.0046,"56":0.0092,"57":0.0046,"58":0.0046,"59":0,"60":0.0046,"61":0.01839,"62":0.0046,"63":0,"64":0,"65":0.0046,"66":0.01839,"67":0.0092,"68":0.03678,"69":0.0046,"70":0.0046,"71":0,"72":0.03219,"73":0,"74":0.0092,"75":0,"76":0.0046,"77":0.0092,"78":0.06897,"79":0.0092,"80":0.0046,"81":0.01379,"82":0.0046,"83":0.0092,"84":0.02299,"85":0.04138,"86":0.07817,"87":1.41159,"88":0.59774,"89":0.05058,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0046,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.0046,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02759,"34":0.0046,"35":0.04138,"36":0,"37":0.0092,"38":0.0092,"39":0.0046,"40":0.12415,"41":0,"42":0.0092,"43":0.2207,"44":0,"45":0.0046,"46":0.0046,"47":0,"48":0.0092,"49":0.01839,"50":0.0046,"51":0.01379,"52":0,"53":0.02759,"54":0,"55":0.0046,"56":0,"57":0.0046,"58":0.01839,"59":0,"60":0.0092,"61":0.0046,"62":0,"63":0.05518,"64":0.0046,"65":0.01379,"66":0,"67":0.01839,"68":0.0092,"69":0.01839,"70":0.01379,"71":0.0092,"72":0.0046,"73":0.0092,"74":0.01379,"75":0.0092,"76":0.0092,"77":0.03678,"78":0.02759,"79":0.11035,"80":0.03678,"81":0.06437,"83":0.02759,"84":0.03678,"85":0.03219,"86":0.08736,"87":0.24369,"88":0.2391,"89":7.15449,"90":3.55425,"91":0.03678,"92":0.0092,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.0046,"19":0,"20":0.0046,"21":0,"22":0,"23":0.0046,"24":0,"25":0,"26":0,"27":0,"28":0.0046,"29":0,"30":0.0046,"31":0,"32":0,"33":0.0046,"34":0,"35":0,"36":0,"37":0.0046,"38":0,"39":0,"40":0,"41":0,"42":0.0046,"43":0.0092,"44":0,"45":0.0046,"46":0,"47":0,"48":0,"49":0,"50":0.0046,"51":0.0046,"52":0,"53":0.0046,"54":0.03219,"55":0.05058,"56":0,"57":0,"58":0,"60":0,"62":0.0046,"63":0.01379,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.0046,"72":0.0046,"73":0.05058,"74":0.35405,"75":1.26905,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.16553},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00104,"5.0-5.1":0.00468,"6.0-6.1":0.01145,"7.0-7.1":0.30597,"8.1-8.4":0.01665,"9.0-9.2":0.05568,"9.3":0.22479,"10.0-10.2":0.02862,"10.3":0.87992,"11.0-11.2":0.07493,"11.3-11.4":0.09002,"12.0-12.1":0.06609,"12.2-12.4":0.28776,"13.0-13.1":0.04943,"13.2":0.051,"13.3":0.0843,"13.4-13.7":0.2685,"14.0-14.4":2.24847,"14.5":0.03122},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0046,"14":0.11495,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.0046,"12.1":0.01379,"13.1":0.05058,"14.1":0.0046},B:{"12":0.06897,"13":0.02299,"14":0.01839,"15":0.03678,"16":0.02759,"17":0.05058,"18":0.11955,"79":0,"80":0,"81":0.0046,"83":0.0046,"84":0.01379,"85":0.01839,"86":0.0046,"87":0.01379,"88":0.03219,"89":1.10812,"90":0.38623},P:{"4":0.5514,"5.0-5.4":0.04084,"6.2-6.4":0.05106,"7.2-7.4":0.19401,"8.2":0.01021,"9.2":0.12253,"10.1":0.03063,"11.1-11.2":0.19401,"12.0":0.11232,"13.0":0.92921,"14.0":0.2757},I:{"0":0,"3":0,"4":0.00486,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00707,"4.2-4.3":0.13744,"4.4":0,"4.4.3-4.4.4":0.44901},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01104,"9":0.00552,"10":0,"11":0.17656,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":53.02593},S:{"2.5":0},R:{_:"0"},M:{"0":0.11884},Q:{"10.4":0.04862},O:{"0":1.85829},H:{"0":9.7887}};


/***/ }),
/* 311 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02477,"34":0,"35":0,"36":0,"37":0.02477,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.00619,"45":0,"46":0,"47":0,"48":0.00619,"49":0,"50":0,"51":0,"52":0.05573,"53":0,"54":0.01858,"55":0.02477,"56":0.00619,"57":0,"58":0,"59":0.01238,"60":0.00619,"61":0,"62":0,"63":0,"64":0,"65":0.00619,"66":0.00619,"67":0,"68":0.03715,"69":0,"70":0,"71":0,"72":0.01238,"73":0,"74":0.00619,"75":0,"76":0,"77":0.00619,"78":0.24768,"79":0.03715,"80":0.02477,"81":0.04334,"82":0.03096,"83":0.03096,"84":0.06811,"85":0.04334,"86":0.19195,"87":2.66875,"88":1.02168,"89":0.01238,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00619,"39":0,"40":0,"41":0.00619,"42":0.00619,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.03096,"49":0.1548,"50":0,"51":0,"52":0.05573,"53":0.04334,"54":0,"55":0,"56":0.00619,"57":0,"58":0,"59":0.03715,"60":0.17338,"61":0.06192,"62":0.00619,"63":0.00619,"64":0.16718,"65":0.00619,"66":0.06192,"67":0.02477,"68":0.01238,"69":0.17957,"70":0.17957,"71":0.00619,"72":0.18576,"73":0.00619,"74":0.00619,"75":0.02477,"76":0.02477,"77":0.01238,"78":0.20434,"79":0.3839,"80":0.21053,"81":0.05573,"83":0.12384,"84":0.21672,"85":0.28483,"86":0.48917,"87":0.47059,"88":1.65326,"89":13.83293,"90":5.29416,"91":0.00619,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00619,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00619,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00619,"64":0,"65":0,"66":0,"67":0,"68":0.01238,"69":0.00619,"70":0.00619,"71":0.01238,"72":0.00619,"73":0.24768,"74":0.13003,"75":0.37771,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00206,"5.0-5.1":0.00206,"6.0-6.1":0.00617,"7.0-7.1":0.00411,"8.1-8.4":0.03907,"9.0-9.2":0.15628,"9.3":0.16656,"10.0-10.2":0.01851,"10.3":0.26115,"11.0-11.2":0.05963,"11.3-11.4":0.19535,"12.0-12.1":0.14394,"12.2-12.4":0.35368,"13.0-13.1":0.07814,"13.2":0.04318,"13.3":0.28582,"13.4-13.7":1.11655,"14.0-14.4":16.65987,"14.5":0.22825},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00619,"12":0.02477,"13":0.12384,"14":2.67494,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.03096,"11.1":0.0743,"12.1":0.08669,"13.1":0.40867,"14.1":0.04954},B:{"12":0,"13":0,"14":0.00619,"15":0,"16":0,"17":0.01238,"18":0.09288,"79":0,"80":0,"81":0.01238,"83":0.00619,"84":0.01858,"85":0.01858,"86":0.01858,"87":0.01238,"88":0.03096,"89":1.64707,"90":0.74304},P:{"4":0.10352,"5.0-5.4":0.03106,"6.2-6.4":0,"7.2-7.4":0.01035,"8.2":0.01035,"9.2":0.05176,"10.1":0.03106,"11.1-11.2":0.13457,"12.0":0.18633,"13.0":1.66663,"14.0":0.64181},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00483,"4.2-4.3":0.02256,"4.4":0,"4.4.3-4.4.4":0.09023},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00662,"7":0,"8":0.05298,"9":0.01987,"10":0.04635,"11":0.34434,"5.5":0},J:{"7":0,"10":0.00381},N:{"10":0.00762,"11":0},L:{"0":36.61635},S:{"2.5":0.00762},R:{_:"0"},M:{"0":0.5255},Q:{"10.4":0.00762},O:{"0":0.0952},H:{"0":0.36052}};


/***/ }),
/* 312 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00377,"31":0,"32":0,"33":0.00377,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01132,"48":0,"49":0,"50":0,"51":0,"52":0.00377,"53":0,"54":0,"55":0,"56":0.00754,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.06035,"66":0,"67":0,"68":0.00754,"69":0,"70":0,"71":0,"72":0.00377,"73":0.00377,"74":0,"75":0,"76":0.00377,"77":0,"78":0.02263,"79":0,"80":0.01509,"81":0.00377,"82":0,"83":0.00377,"84":0.01132,"85":0.1622,"86":0.01886,"87":0.60352,"88":0.24895,"89":0.00377,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.08298,"40":0,"41":0,"42":0,"43":0.00377,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00377,"50":0,"51":0,"52":0,"53":0.00754,"54":0,"55":0,"56":0,"57":0,"58":0.01509,"59":0,"60":0,"61":0,"62":0,"63":0.00377,"64":0,"65":0.00754,"66":0,"67":0.00377,"68":0.00377,"69":0.00754,"70":0.00377,"71":0,"72":0,"73":0,"74":0.00377,"75":0.00377,"76":0.01886,"77":0.01132,"78":0.00377,"79":0.04526,"80":0.02263,"81":0.01886,"83":0.01132,"84":0.01509,"85":0.03395,"86":0.04904,"87":0.06412,"88":0.13202,"89":5.86923,"90":2.48198,"91":0.00377,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00754,"52":0,"53":0,"54":0.01132,"55":0.04526,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00754,"74":0.0679,"75":0.19992,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.02094,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01424,"6.0-6.1":0.00251,"7.0-7.1":0.01508,"8.1-8.4":0.00586,"9.0-9.2":0.01424,"9.3":0.29904,"10.0-10.2":0.12314,"10.3":0.17507,"11.0-11.2":0.15915,"11.3-11.4":0.03937,"12.0-12.1":0.03016,"12.2-12.4":0.42804,"13.0-13.1":0.04272,"13.2":0.01089,"13.3":0.24795,"13.4-13.7":0.57044,"14.0-14.4":5.33669,"14.5":0.08963},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.03018,"14":0.27536,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00377,"12.1":0.01509,"13.1":0.05281,"14.1":0.00377},B:{"12":0.00754,"13":0.01132,"14":0.01509,"15":0.01132,"16":0.02263,"17":0.03018,"18":0.07544,"79":0,"80":0.00754,"81":0,"83":0,"84":0.03018,"85":0.01132,"86":0.01509,"87":0.10184,"88":0.01886,"89":0.8223,"90":0.33948},P:{"4":0.85137,"5.0-5.4":0.03077,"6.2-6.4":0.09232,"7.2-7.4":1.3745,"8.2":0.01026,"9.2":0.37953,"10.1":0.12309,"11.1-11.2":1.63094,"12.0":0.40004,"13.0":3.02595,"14.0":0.94369},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00335,"4.2-4.3":0.0067,"4.4":0,"4.4.3-4.4.4":0.14899},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0.00782,"8":0,"9":0,"10":0.00782,"11":0.41437,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":63.45096},S:{"2.5":0},R:{_:"0"},M:{"0":0.11833},Q:{"10.4":0.11833},O:{"0":2.03656},H:{"0":0.39505}};


/***/ }),
/* 313 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0238,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00476,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0.00476,"60":0,"61":0,"62":0.01428,"63":0,"64":0,"65":0,"66":0,"67":0.00476,"68":0,"69":0.00952,"70":0,"71":0.00476,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.0238,"79":0,"80":0,"81":0.01904,"82":0.00952,"83":0,"84":0.04759,"85":0.00476,"86":0.02855,"87":2.83636,"88":1.83697,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00476,"47":0,"48":0,"49":0.05235,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.01428,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.06187,"79":0,"80":0,"81":0.04759,"83":0,"84":0.0238,"85":0,"86":0.05235,"87":0.00476,"88":0.17608,"89":7.0576,"90":2.34143,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.05235,"74":0.05711,"75":0.39976,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.35498,"10.0-10.2":0,"10.3":0.12743,"11.0-11.2":0.02731,"11.3-11.4":0.01517,"12.0-12.1":11.51715,"12.2-12.4":0.38229,"13.0-13.1":0,"13.2":0.15474,"13.3":0.06978,"13.4-13.7":0.46724,"14.0-14.4":16.21382,"14.5":0.11226},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00952,"9":0.0238,"10":0,"11":0,"12":0,"13":0.35217,"14":1.38011,_:"0","3.1":0,"3.2":0,"5.1":0.00952,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00476,"11.1":0.01428,"12.1":0.0809,"13.1":0.15229,"14.1":0.00952},B:{"12":0,"13":0.00952,"14":0.03807,"15":0.01904,"16":0.01904,"17":0.06187,"18":0.33789,"79":0,"80":0.01428,"81":0,"83":0.00476,"84":0.03331,"85":0.00476,"86":0.03331,"87":0.00476,"88":0.00952,"89":2.24149,"90":0.80427},P:{"4":0.01058,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01058,"8.2":0,"9.2":0.07403,"10.1":0,"11.1-11.2":0.22208,"12.0":0.01058,"13.0":5.15007,"14.0":0.47588},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.82331},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.31409,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":39.42238},S:{"2.5":0},R:{_:"0"},M:{"0":0.24109},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 314 */
/***/ ((module) => {

module.exports={C:{"43":0.01148,"47":0.01723,"48":0.00574,"56":0.00574,"66":0.20097,"68":0.00574,"72":0.01148,"77":0.00574,"78":0.16078,"82":0.12058,"84":0.02871,"86":0.48233,"87":2.80784,"88":1.21156,"89":0.10336,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 46 49 50 51 52 53 54 55 57 58 59 60 61 62 63 64 65 67 69 70 71 73 74 75 76 79 80 81 83 85 90 3.5 3.6"},D:{"49":0.11484,"65":0.01148,"67":0.04019,"72":0.00574,"74":0.00574,"76":0.02297,"78":0.02297,"80":0.00574,"81":0.04019,"83":0.00574,"84":0.01723,"85":0.02297,"86":0.00574,"87":0.04019,"88":0.41917,"89":17.65091,"90":6.49994,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 66 68 69 70 71 73 75 77 79 91 92 93"},F:{"51":0.00574,"74":0.06316,"75":1.4355,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 73 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.00588,"9.0-9.2":0,"9.3":0.0403,"10.0-10.2":0,"10.3":0.02351,"11.0-11.2":0.05205,"11.3-11.4":0.01763,"12.0-12.1":0.01763,"12.2-12.4":0.05793,"13.0-13.1":0.03442,"13.2":0,"13.3":0.08647,"13.4-13.7":0.81016,"14.0-14.4":5.66946,"14.5":0.00588},E:{"4":0,"12":0.01723,"13":0.00574,"14":1.93505,_:"0 5 6 7 8 9 10 11 3.1 3.2 5.1 6.1 7.1 9.1 10.1","11.1":0.04019,"12.1":0.12058,"13.1":0.57994,"14.1":0.00574},B:{"15":0.03445,"16":0.05168,"17":0.03445,"18":2.80784,"80":0.01723,"84":0.00574,"86":0.06316,"87":0.01148,"88":0.02871,"89":10.35857,"90":5.07019,_:"12 13 14 79 81 83 85"},P:{"4":0.02113,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01056,"8.2":0,"9.2":0.05282,"10.1":0.01056,"11.1-11.2":0.45429,"12.0":0.02113,"13.0":0.70784,"14.0":1.24665},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.0014,"4.4":0,"4.4.3-4.4.4":0.01989},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"11":0.18374,_:"6 7 8 9 10 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":33.47025},S:{"2.5":0},R:{_:"0"},M:{"0":0.02129},Q:{"10.4":0},O:{"0":0.08516},H:{"0":3.51117}};


/***/ }),
/* 315 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00635,"31":0,"32":0,"33":0.0127,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.0127,"69":0,"70":0,"71":0,"72":0,"73":0.00635,"74":0,"75":0,"76":0,"77":0,"78":0.27309,"79":0,"80":0,"81":0,"82":0,"83":0.00635,"84":0.00635,"85":0.01905,"86":0.08256,"87":0.88914,"88":0.38106,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0254,"50":0,"51":0,"52":0,"53":0.0127,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00635,"66":0,"67":0.0127,"68":0.00635,"69":0,"70":0,"71":0.06986,"72":0.00635,"73":0.0127,"74":0,"75":0.10162,"76":0.0127,"77":0,"78":0,"79":0.05081,"80":0.01905,"81":0.0127,"83":0.00635,"84":0.0254,"85":0.17148,"86":0.07621,"87":0.09527,"88":0.89549,"89":18.93233,"90":5.82387,"91":0.01905,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00635,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00635,"70":0,"71":0,"72":0,"73":0.44457,"74":0.0127,"75":0.18418,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.01663,"8.1-8.4":0.02494,"9.0-9.2":0,"9.3":0.59021,"10.0-10.2":0.07066,"10.3":0.73984,"11.0-11.2":0.59021,"11.3-11.4":0.31173,"12.0-12.1":0.21613,"12.2-12.4":0.78557,"13.0-13.1":0.11222,"13.2":0.24523,"13.3":0.88532,"13.4-13.7":4.28528,"14.0-14.4":30.89476,"14.5":0.14963},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00635,"11":0,"12":0.04446,"13":0.0254,"14":4.00113,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0127,"11.1":0.16513,"12.1":0.08256,"13.1":0.98441,"14.1":0.07621},B:{"12":0,"13":0,"14":0,"15":0.00635,"16":0,"17":0.0127,"18":0.03811,"79":0,"80":0,"81":0,"83":0,"84":0.00635,"85":0.01905,"86":0.0127,"87":0,"88":0.10162,"89":2.59756,"90":1.00346},P:{"4":0.06227,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.07264,"10.1":0.02076,"11.1-11.2":0,"12.0":0.14529,"13.0":2.08591,"14.0":0.53964},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00198,"4.4":0,"4.4.3-4.4.4":0.06342},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00635,"10":0,"11":0.78117,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":15.94589},S:{"2.5":0},R:{_:"0"},M:{"0":0.13501},Q:{"10.4":0},O:{"0":0.01095},H:{"0":0.03455}};


/***/ }),
/* 316 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.00539,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00539,"12":0.00539,"13":0,"14":0,"15":0,"16":0,"17":0.00539,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02695,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.01078,"46":0,"47":0,"48":0.02695,"49":0,"50":0.00539,"51":0,"52":0.07546,"53":0,"54":0.00539,"55":0.00539,"56":0.01617,"57":0.00539,"58":0,"59":0.01617,"60":0.02156,"61":0.00539,"62":0.00539,"63":0.00539,"64":0,"65":0.00539,"66":0.00539,"67":0.00539,"68":0.0539,"69":0.00539,"70":0.00539,"71":0,"72":0.01078,"73":0,"74":0.00539,"75":0.00539,"76":0.00539,"77":0.04312,"78":0.28567,"79":0.01617,"80":0.01617,"81":0.03773,"82":0.02695,"83":0.02156,"84":0.04312,"85":0.04312,"86":0.11319,"87":2.56025,"88":0.96481,"89":0.00539,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00539,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00539,"39":0,"40":0,"41":0.00539,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00539,"49":0.26411,"50":0,"51":0.00539,"52":0.02695,"53":0.00539,"54":0.11319,"55":0.00539,"56":0.00539,"57":0.00539,"58":0.01078,"59":0.00539,"60":0.04312,"61":0.04851,"62":0,"63":0.01078,"64":0.02156,"65":0.01078,"66":0.05929,"67":0.01617,"68":0.00539,"69":0.01078,"70":0.01617,"71":0.01617,"72":0.01617,"73":0.00539,"74":0.01617,"75":0.0539,"76":0.01617,"77":0.01617,"78":0.03773,"79":0.04312,"80":0.04851,"81":0.04851,"83":0.08085,"84":0.15092,"85":0.17787,"86":0.2156,"87":0.30184,"88":0.31262,"89":9.61037,"90":3.92392,"91":0.01078,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00539,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00539,"47":0,"48":0,"49":0,"50":0,"51":0.00539,"52":0,"53":0,"54":0.01078,"55":0.02156,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00539,"64":0,"65":0,"66":0,"67":0,"68":0.00539,"69":0.00539,"70":0.00539,"71":0.01078,"72":0.00539,"73":0.18865,"74":0.09702,"75":0.31262,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.01753,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00751,"6.0-6.1":0.01753,"7.0-7.1":0.03256,"8.1-8.4":0.04007,"9.0-9.2":0.16781,"9.3":0.6036,"10.0-10.2":0.06261,"10.3":0.34814,"11.0-11.2":0.11772,"11.3-11.4":0.19035,"12.0-12.1":0.12272,"12.2-12.4":0.52095,"13.0-13.1":0.13274,"13.2":0.05761,"13.3":0.35815,"13.4-13.7":1.22474,"14.0-14.4":19.5933,"14.5":0.24545},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01078,"12":0.02156,"13":0.08624,"14":2.21529,_:"0","3.1":0,"3.2":0,"5.1":0.00539,"6.1":0,"7.1":0,"9.1":0.01078,"10.1":0.03234,"11.1":0.09702,"12.1":0.13475,"13.1":0.45276,"14.1":0.04312},B:{"12":0,"13":0.00539,"14":0.00539,"15":0.01078,"16":0.01617,"17":0.02156,"18":0.08624,"79":0,"80":0.00539,"81":0,"83":0.00539,"84":0.01078,"85":0.01617,"86":0.02156,"87":0.01617,"88":0.02156,"89":1.81643,"90":0.81389},P:{"4":0.10496,"5.0-5.4":0.02099,"6.2-6.4":0,"7.2-7.4":0.03149,"8.2":0.0105,"9.2":0.07347,"10.1":0.04198,"11.1-11.2":0.13644,"12.0":0.12595,"13.0":2.34053,"14.0":0.94461},I:{"0":0,"3":0,"4":0.00417,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00973,"4.2-4.3":0.01668,"4.4":0,"4.4.3-4.4.4":0.14176},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.01779,"7":0,"8":0.01779,"9":0.01186,"10":0.01186,"11":0.41503,"5.5":0},J:{"7":0,"10":0.00461},N:{"10":0,"11":0},L:{"0":40.0873},S:{"2.5":0},R:{_:"0"},M:{"0":0.56242},Q:{"10.4":0.01383},O:{"0":0.56703},H:{"0":0.38844}};


/***/ }),
/* 317 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.01918,"31":0,"32":0,"33":0.00384,"34":0,"35":0.00384,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00384,"44":0,"45":0,"46":0,"47":0.14957,"48":0.00384,"49":0,"50":0,"51":0,"52":0.03452,"53":0,"54":0.02685,"55":0,"56":0,"57":0,"58":0.00384,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00384,"69":0,"70":0.01151,"71":0.01151,"72":0.00767,"73":0,"74":0,"75":0.00384,"76":0,"77":0.00767,"78":0.0767,"79":0,"80":0,"81":0.00384,"82":0,"83":0,"84":0.01151,"85":0.00384,"86":0.11505,"87":0.70181,"88":0.24928,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01534,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00384,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.06136,"50":0,"51":0,"52":0,"53":0.03835,"54":0,"55":0,"56":0.00384,"57":0.00384,"58":0.00384,"59":0,"60":0.00384,"61":0,"62":0,"63":0.01151,"64":0.00384,"65":0.00767,"66":0.00384,"67":0.00767,"68":0.00767,"69":0.27229,"70":0.00384,"71":0.00767,"72":0.00384,"73":0.03068,"74":0.03068,"75":0.00767,"76":0.02301,"77":0.01151,"78":0.00384,"79":0.02301,"80":0.01534,"81":0.06903,"83":0.02685,"84":0.01151,"85":0.01151,"86":0.01534,"87":0.12656,"88":0.17258,"89":5.13123,"90":2.29333,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00384,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00384,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00767,"55":0.03452,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00384,"64":0,"65":0,"66":0,"67":0,"68":0.00767,"69":0,"70":0.00384,"71":0,"72":0,"73":0.01918,"74":0.23777,"75":0.68647,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01151},G:{"8":0.00078,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01404,"6.0-6.1":0,"7.0-7.1":0.05848,"8.1-8.4":0,"9.0-9.2":0.03431,"9.3":0.07798,"10.0-10.2":0.00312,"10.3":0.18168,"11.0-11.2":0.14426,"11.3-11.4":0.01014,"12.0-12.1":0.04834,"12.2-12.4":0.45694,"13.0-13.1":0.04523,"13.2":0.0039,"13.3":0.07876,"13.4-13.7":0.26746,"14.0-14.4":4.83761,"14.5":0.30644},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00384,"11":0,"12":0.00384,"13":0.08054,"14":0.19175,_:"0","3.1":0,"3.2":0,"5.1":0.04219,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00384,"11.1":0.01534,"12.1":0.01151,"13.1":0.04602,"14.1":0.07287},B:{"12":0.00767,"13":0.01534,"14":0.00767,"15":0.02301,"16":0.00384,"17":0.01534,"18":0.0767,"79":0,"80":0,"81":0.00384,"83":0,"84":0.00384,"85":0.01151,"86":0,"87":0.00767,"88":0.00384,"89":0.70181,"90":0.45637},P:{"4":0.63798,"5.0-5.4":0.01013,"6.2-6.4":0.07089,"7.2-7.4":0.41519,"8.2":0.02025,"9.2":0.09114,"10.1":0.02025,"11.1-11.2":0.18228,"12.0":0.47595,"13.0":3.01776,"14.0":0.95191},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00318,"4.2-4.3":0.01431,"4.4":0,"4.4.3-4.4.4":0.74567},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.16491,"5.5":0},J:{"7":0,"10":0.06782},N:{"10":0,"11":0},L:{"0":65.41386},S:{"2.5":0.0185},R:{_:"0"},M:{"0":0.36374},Q:{"10.4":0.5117},O:{"0":0.99873},H:{"0":2.28796}};


/***/ }),
/* 318 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02528,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00506,"49":0,"50":0,"51":0,"52":0.02022,"53":0,"54":0,"55":0,"56":0.01517,"57":0,"58":0,"59":0.00506,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00506,"66":0,"67":0,"68":0.01011,"69":0,"70":0,"71":0,"72":0.00506,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.07584,"79":0.00506,"80":0.00506,"81":0.00506,"82":0.02022,"83":0.00506,"84":0.01517,"85":0.01517,"86":0.0455,"87":0.79885,"88":0.30336,"89":0.00506,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00506,"35":0,"36":0,"37":0,"38":0.00506,"39":0,"40":0.10618,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.09606,"50":0,"51":0,"52":0,"53":0.01011,"54":0,"55":0,"56":0,"57":0,"58":0.00506,"59":0.00506,"60":0.01011,"61":0.02022,"62":0,"63":0.01011,"64":0.00506,"65":0.01517,"66":0.03034,"67":0.01011,"68":0.00506,"69":0.03539,"70":0.01011,"71":0.02528,"72":0.01517,"73":0.00506,"74":0.01517,"75":0.02022,"76":0.04045,"77":0.01517,"78":0.01517,"79":0.02528,"80":0.03539,"81":0.03539,"83":0.07584,"84":0.0455,"85":0.0455,"86":0.06573,"87":0.28314,"88":0.38931,"89":8.95923,"90":3.39763,"91":0.00506,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00506,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00506,"55":0.00506,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00506,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.13651,"74":0.06067,"75":0.1719,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00506},G:{"8":0.0079,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01185,"6.0-6.1":0.0158,"7.0-7.1":0.02765,"8.1-8.4":0.05135,"9.0-9.2":0.01975,"9.3":0.65966,"10.0-10.2":0.0474,"10.3":0.63991,"11.0-11.2":0.0948,"11.3-11.4":0.1659,"12.0-12.1":0.1185,"12.2-12.4":0.5293,"13.0-13.1":0.0948,"13.2":0.0316,"13.3":0.3081,"13.4-13.7":1.23241,"14.0-14.4":32.7221,"14.5":0.3318},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00506,"12":0.01517,"13":0.09101,"14":3.34202,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00506,"10.1":0.02022,"11.1":0.06067,"12.1":0.09606,"13.1":0.4247,"14.1":0.05562},B:{"12":0,"13":0,"14":0.00506,"15":0.01011,"16":0.00506,"17":0.01517,"18":0.15674,"79":0,"80":0.00506,"81":0,"83":0,"84":0.00506,"85":0.01011,"86":0.00506,"87":0.00506,"88":0.02022,"89":2.18925,"90":0.94547},P:{"4":0.07511,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01073,"8.2":0,"9.2":0.04292,"10.1":0.02146,"11.1-11.2":0.1073,"12.0":0.09657,"13.0":2.75755,"14.0":1.36268},I:{"0":0,"3":0,"4":0.1497,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01576,"4.2-4.3":0.04202,"4.4":0,"4.4.3-4.4.4":0.36768},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.0055,"9":0,"10":0,"11":0.3737,"5.5":0},J:{"7":0,"10":0.00494},N:{"10":0,"11":0},L:{"0":30.69354},S:{"2.5":0},R:{_:"0"},M:{"0":0.34114},Q:{"10.4":0.00989},O:{"0":0.16315},H:{"0":0.18255}};


/***/ }),
/* 319 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.10672,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0.01601,"86":0.17075,"87":0.34684,"88":0.24546,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01601,"49":0.00534,"50":0.13874,"51":0,"52":0,"53":0.02134,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.01601,"64":0,"65":0.00534,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.01067,"72":0,"73":0.00534,"74":0.2668,"75":0.02134,"76":0.02668,"77":0.00534,"78":0,"79":0.02134,"80":0.02668,"81":0.06937,"83":0.00534,"84":0.01601,"85":0.04269,"86":0.03735,"87":0.0747,"88":0.43222,"89":8.78306,"90":3.41504,"91":0.01067,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00534,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00534,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00534,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.03735,"74":0.03202,"75":0.11739,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.05469,"6.0-6.1":0,"7.0-7.1":0.51231,"8.1-8.4":0.00112,"9.0-9.2":0.04911,"9.3":0.30471,"10.0-10.2":0.00112,"10.3":0.37391,"11.0-11.2":0.01339,"11.3-11.4":0.01451,"12.0-12.1":0.00446,"12.2-12.4":0.12166,"13.0-13.1":0.00335,"13.2":0.01116,"13.3":0.0759,"13.4-13.7":0.31475,"14.0-14.4":8.37327,"14.5":0.14287},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.06403,"11":0,"12":0,"13":0.01067,"14":1.39803,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00534,"11.1":0.0587,"12.1":0.02134,"13.1":0.37886,"14.1":0.00534},B:{"12":0,"13":0.00534,"14":0.00534,"15":0.02668,"16":0,"17":0.00534,"18":0.04269,"79":0,"80":0.00534,"81":0,"83":0.01067,"84":0.00534,"85":0.00534,"86":0.00534,"87":0.01601,"88":0.08538,"89":5.87494,"90":2.14507},P:{"4":0.05499,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.85779,"8.2":0,"9.2":0.04399,"10.1":0.011,"11.1-11.2":0.28593,"12.0":0.19795,"13.0":2.38642,"14.0":1.2317},I:{"0":0,"3":0,"4":0.16739,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0279,"4.2-4.3":0.0837,"4.4":0,"4.4.3-4.4.4":2.14818},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.01355,"10":0,"11":0.33863,"5.5":0},J:{"7":0,"10":0.00466},N:{"10":0,"11":0},L:{"0":53.84169},S:{"2.5":0},R:{_:"0"},M:{"0":0.07462},Q:{"10.4":0.00466},O:{"0":0.09328},H:{"0":0.07506}};


/***/ }),
/* 320 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00469,"34":0.00469,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00937,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00469,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00937,"79":0.00469,"80":0,"81":0.00469,"82":0,"83":0.00469,"84":0.00937,"85":0.00937,"86":0.01406,"87":0.45913,"88":0.20614,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00469,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00469,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00937,"48":0,"49":0.13587,"50":0.00469,"51":0,"52":0,"53":0.00937,"54":0,"55":0,"56":0.00937,"57":0,"58":0,"59":0.00469,"60":0,"61":0.00469,"62":0.00469,"63":0.02343,"64":0.00469,"65":0.00469,"66":0,"67":0.00469,"68":0.02343,"69":0.00469,"70":0.00469,"71":0.01874,"72":0.00469,"73":0.00469,"74":0.00469,"75":0.01406,"76":0.01406,"77":0.00469,"78":0.00937,"79":0.06091,"80":0.0328,"81":0.03748,"83":0.02343,"84":0.02811,"85":0.02811,"86":0.10776,"87":0.21551,"88":0.28579,"89":10.40539,"90":4.10406,"91":0.01874,"92":0.00469,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00469,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00469,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01406,"47":0,"48":0.00937,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00469,"55":0.00937,"56":0.00469,"57":0.00937,"58":0,"60":0.02343,"62":0,"63":0.00469,"64":0,"65":0,"66":0,"67":0.00469,"68":0,"69":0,"70":0.00469,"71":0,"72":0.00469,"73":0.28579,"74":0.37012,"75":1.37271,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.08838,"6.0-6.1":0.00647,"7.0-7.1":0.27808,"8.1-8.4":0.02371,"9.0-9.2":0.01078,"9.3":0.35783,"10.0-10.2":0.0388,"10.3":0.27161,"11.0-11.2":0.16598,"11.3-11.4":0.15305,"12.0-12.1":0.08838,"12.2-12.4":0.73076,"13.0-13.1":0.09485,"13.2":0.03018,"13.3":0.35999,"13.4-13.7":1.07134,"14.0-14.4":15.6994,"14.5":0.20478},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00937,"14":0.3139,_:"0","3.1":0,"3.2":0,"5.1":0.02811,"6.1":0,"7.1":0,"9.1":0.01874,"10.1":0,"11.1":0.00937,"12.1":0.01874,"13.1":0.04685,"14.1":0.00469},B:{"12":0.00469,"13":0.04217,"14":0.08902,"15":0.00937,"16":0.05154,"17":0.00469,"18":0.11244,"79":0,"80":0,"81":0,"83":0,"84":0.00937,"85":0.00469,"86":0.00937,"87":0.01406,"88":0.01874,"89":0.80114,"90":0.35606},P:{"4":0.26944,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.05181,"8.2":0.01036,"9.2":0.04145,"10.1":0.02073,"11.1-11.2":0.13472,"12.0":0.12435,"13.0":0.98448,"14.0":0.42488},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03155,"4.2-4.3":0.15249,"4.4":0,"4.4.3-4.4.4":0.54159},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00469,"9":0,"10":0,"11":0.0937,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":54.34183},S:{"2.5":0},R:{_:"0"},M:{"0":0.06378},Q:{"10.4":0},O:{"0":0.2126},H:{"0":0.35726}};


/***/ }),
/* 321 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00489,"34":0.00489,"35":0,"36":0,"37":0,"38":0.00489,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00489,"50":0,"51":0,"52":0.01466,"53":0,"54":0.00489,"55":0,"56":0,"57":0.04399,"58":0.00489,"59":0,"60":0.02444,"61":0,"62":0,"63":0,"64":0.00489,"65":0,"66":0,"67":0,"68":0.05377,"69":0,"70":0,"71":0,"72":0.00489,"73":0,"74":0.00489,"75":0,"76":0,"77":0.00978,"78":0.06354,"79":0.00489,"80":0,"81":0.00489,"82":0.00978,"83":0.00489,"84":0.04399,"85":0.02444,"86":0.0391,"87":1.63259,"88":0.60611,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00978,"48":0.01955,"49":0.29328,"50":0,"51":0,"52":0,"53":0.00978,"54":0,"55":0,"56":0,"57":0.07332,"58":0.00489,"59":0.00489,"60":0,"61":0,"62":0,"63":0.15153,"64":0,"65":0.00489,"66":0.00978,"67":0.01955,"68":0.00978,"69":0.3275,"70":0.00489,"71":0.00489,"72":0.00489,"73":0,"74":0,"75":0,"76":0.06843,"77":0,"78":0,"79":0.00978,"80":0.00489,"81":0.01466,"83":0.01466,"84":0.01466,"85":0.01466,"86":0.04888,"87":0.05377,"88":2.10673,"89":6.76988,"90":2.37557,"91":0.01955,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00489,"37":0,"38":0,"39":0,"40":0.00489,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00489,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00489,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00489,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00489,"70":0,"71":0,"72":0,"73":0.14175,"74":0.10265,"75":0.49369,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.00193,"9.0-9.2":0,"9.3":0.46117,"10.0-10.2":0,"10.3":1.71925,"11.0-11.2":0.06754,"11.3-11.4":0.0193,"12.0-12.1":0.09069,"12.2-12.4":0.15823,"13.0-13.1":0.16208,"13.2":0.00579,"13.3":0.35504,"13.4-13.7":0.7371,"14.0-14.4":14.55288,"14.5":0.3261},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00489,"12":0,"13":0.04399,"14":1.85255,_:"0","3.1":0,"3.2":0,"5.1":0.06354,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01466,"11.1":0.04399,"12.1":0.1613,"13.1":0.29328,"14.1":0.08798},B:{"12":0,"13":0,"14":0.00978,"15":0.00489,"16":0.00489,"17":0.02933,"18":0.04888,"79":0,"80":0.00489,"81":0.00978,"83":0,"84":0,"85":0.00978,"86":0.00489,"87":0.01955,"88":0.0391,"89":2.41467,"90":0.90428},P:{"4":0.11498,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.08362,"8.2":0,"9.2":0.05226,"10.1":0,"11.1-11.2":0.30312,"12.0":0.12543,"13.0":2.44584,"14.0":1.08704},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00268,"4.2-4.3":0.03211,"4.4":0,"4.4.3-4.4.4":0.15253},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00542,"7":0,"8":0.01627,"9":0.00542,"10":0.01085,"11":0.30909,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":51.6483},S:{"2.5":0},R:{_:"0"},M:{"0":0.56232},Q:{"10.4":0.01022},O:{"0":0.06646},H:{"0":0.05808}};


/***/ }),
/* 322 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02374,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00594,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00594,"52":0.01781,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.05342,"74":0,"75":0,"76":0,"77":0,"78":0.04749,"79":0,"80":0,"81":0,"82":0,"83":0.04155,"84":0.00594,"85":0,"86":0.01781,"87":0.80136,"88":0.28493,"89":0.02374,"90":0.01187,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.04155,"50":0,"51":0,"52":0,"53":0.00594,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.01187,"66":0,"67":0.02968,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.01187,"75":0.00594,"76":0.10091,"77":0.0653,"78":0,"79":0.01187,"80":0.02374,"81":0.01187,"83":0.01187,"84":0.02374,"85":0.05342,"86":0.01187,"87":0.07717,"88":0.35022,"89":9.30171,"90":4.2383,"91":0.03562,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0831,"74":0.01781,"75":0.05342,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.07242,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.50244,"9.0-9.2":0.01358,"9.3":1.79701,"10.0-10.2":0.01811,"10.3":1.35342,"11.0-11.2":0.12221,"11.3-11.4":0.086,"12.0-12.1":0.18559,"12.2-12.4":0.62918,"13.0-13.1":0.24443,"13.2":0.02716,"13.3":0.34401,"13.4-13.7":1.70648,"14.0-14.4":34.45104,"14.5":0.29422},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.10685,"12":0,"13":0.02968,"14":8.73779,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.02374,"10.1":0.03562,"11.1":0.25525,"12.1":0.07123,"13.1":0.63515,"14.1":0.07123},B:{"12":0,"13":0,"14":0,"15":0.00594,"16":0,"17":0.04155,"18":0.11872,"79":0,"80":0.01187,"81":0.00594,"83":0,"84":0,"85":0.01187,"86":0,"87":0,"88":0.00594,"89":2.5881,"90":1.18126},P:{"4":0.03379,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.01126,"10.1":0,"11.1-11.2":0.03379,"12.0":0.07885,"13.0":2.21919,"14.0":1.22787},I:{"0":0,"3":0,"4":0.23485,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.49747},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00594,"10":0,"11":1.28811,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":19.95326},S:{"2.5":0},R:{_:"0"},M:{"0":0.28042},Q:{"10.4":0},O:{"0":0},H:{"0":0.05387}};


/***/ }),
/* 323 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00268,"31":0,"32":0.00268,"33":0.01073,"34":0,"35":0,"36":0,"37":0,"38":0.00268,"39":0,"40":0,"41":0,"42":0,"43":0.00268,"44":0,"45":0.00268,"46":0,"47":0.00268,"48":0.00268,"49":0.00268,"50":0.00268,"51":0,"52":0.00805,"53":0,"54":0,"55":0,"56":0.00268,"57":0,"58":0,"59":0,"60":0,"61":0.00268,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00268,"68":0.01073,"69":0.00268,"70":0,"71":0,"72":0.00537,"73":0,"74":0,"75":0,"76":0.00268,"77":0.00268,"78":0.02146,"79":0.00268,"80":0.00537,"81":0.00537,"82":0.00537,"83":0.00537,"84":0.01342,"85":0.01878,"86":0.03756,"87":0.39708,"88":0.16366,"89":0.01073,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00268,"41":0,"42":0,"43":0.00268,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01073,"50":0.00537,"51":0,"52":0,"53":0,"54":0,"55":0.00268,"56":0,"57":0,"58":0.00268,"59":0,"60":0.00268,"61":0.00268,"62":0,"63":0.00805,"64":0.00268,"65":0.00805,"66":0.00268,"67":0.00268,"68":0.00537,"69":0.00537,"70":0.00805,"71":0.00268,"72":0.00268,"73":0.00268,"74":0.00537,"75":0.00537,"76":0.00537,"77":0.01073,"78":0.00537,"79":0.0161,"80":0.01878,"81":0.02146,"83":0.02146,"84":0.01878,"85":0.01342,"86":0.02683,"87":0.08049,"88":0.12878,"89":2.34494,"90":0.90954,"91":0.00537,"92":0.00268,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00268,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00268,"24":0.02683,"25":0,"26":0.02415,"27":0.05098,"28":0.02415,"29":0.00268,"30":0.02683,"31":0.01342,"32":0.02146,"33":0.0161,"34":0,"35":0.00537,"36":0.00268,"37":0.00268,"38":0.02146,"39":0,"40":0,"41":0,"42":0.04561,"43":0,"44":0.00268,"45":0.01073,"46":0.05903,"47":0.04025,"48":0,"49":0,"50":0.13952,"51":0.16635,"52":0,"53":0,"54":0.88271,"55":0.85588,"56":0,"57":0,"58":0,"60":0.00268,"62":0.01073,"63":0.02146,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02146,"74":0.09927,"75":0.2683,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.02146},G:{"8":0.0093,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00775,"6.0-6.1":0.0093,"7.0-7.1":0.02169,"8.1-8.4":0.0062,"9.0-9.2":0.00775,"9.3":0.11931,"10.0-10.2":0.0124,"10.3":0.29284,"11.0-11.2":1.06135,"11.3-11.4":0.16269,"12.0-12.1":0.1317,"12.2-12.4":0.90486,"13.0-13.1":0.18283,"13.2":0.08367,"13.3":0.43849,"13.4-13.7":1.14192,"14.0-14.4":9.50258,"14.5":0.09606},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00268,"12":0.00268,"13":0.01342,"14":0.13415,_:"0","3.1":0,"3.2":0,"5.1":0.00805,"6.1":0,"7.1":0,"9.1":0.00268,"10.1":0.00268,"11.1":0.00537,"12.1":0.00537,"13.1":0.02415,"14.1":0.00268},B:{"12":0.01073,"13":0.00537,"14":0.00268,"15":0.01073,"16":0.00537,"17":0.00805,"18":0.03756,"79":0,"80":0.00268,"81":0.00268,"83":0.00268,"84":0.00805,"85":0.01342,"86":0.00268,"87":0.00537,"88":0.01342,"89":0.32464,"90":0.12878},P:{"4":0.24267,"5.0-5.4":0.04045,"6.2-6.4":0.03033,"7.2-7.4":0.12134,"8.2":0,"9.2":0.08089,"10.1":0.02022,"11.1-11.2":0.22245,"12.0":0.14156,"13.0":0.89992,"14.0":0.21234},I:{"0":0,"3":0,"4":0.00163,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0049,"4.2-4.3":0.02041,"4.4":0,"4.4.3-4.4.4":0.13062},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.04025,"5.5":0},J:{"7":0,"10":0.02927},N:{"10":0,"11":0.02195},L:{"0":53.80406},S:{"2.5":0.00732},R:{_:"0"},M:{"0":0.28536},Q:{"10.4":0.02927},O:{"0":2.6268},H:{"0":14.55418}};


/***/ }),
/* 324 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00699,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02798,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00699,"53":0,"54":0,"55":0,"56":0.01399,"57":0,"58":0.00699,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.00699,"65":0,"66":0,"67":0,"68":0.05595,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.01399,"76":0.00699,"77":0,"78":0.02098,"79":0,"80":0.04196,"81":0.01399,"82":0.01399,"83":0.05595,"84":0.03497,"85":0.00699,"86":0.00699,"87":0.44762,"88":0.20283,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00699,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01399,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.02098,"61":0,"62":0.01399,"63":0.06994,"64":0,"65":0.00699,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.02798,"75":0,"76":0,"77":0,"78":0.04896,"79":0.02798,"80":0.03497,"81":0.02098,"83":0.01399,"84":0.8113,"85":0.09792,"86":0.04196,"87":0.28675,"88":2.66471,"89":19.49927,"90":11.13445,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.01399,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.07693,"74":0.01399,"75":0.05595,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.04923,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0.00259,"9.3":0.24876,"10.0-10.2":0.01555,"10.3":0.13993,"11.0-11.2":0.04146,"11.3-11.4":0.03109,"12.0-12.1":0.03109,"12.2-12.4":0.13474,"13.0-13.1":0.10106,"13.2":0.0285,"13.3":0.15547,"13.4-13.7":0.81105,"14.0-14.4":22.62384,"14.5":0.10624},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01399,"13":0.01399,"14":6.30159,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.03497,"11.1":0.03497,"12.1":0.04196,"13.1":0.36369,"14.1":0.03497},B:{"12":0.00699,"13":0,"14":0,"15":0,"16":0,"17":0.01399,"18":0.08393,"79":0,"80":0,"81":0,"83":0,"84":0.03497,"85":0,"86":0.00699,"87":0,"88":0,"89":2.336,"90":0.97916},P:{"4":0.13417,"5.0-5.4":0.01032,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.01032,"10.1":0.02064,"11.1-11.2":0.0516,"12.0":0.03096,"13.0":1.74424,"14.0":1.02177},I:{"0":0,"3":0,"4":0.00624,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.02184,"4.4":0,"4.4.3-4.4.4":0.15285},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.20982,"5.5":0},J:{"7":0,"10":0.00301},N:{"10":0,"11":0},L:{"0":22.25511},S:{"2.5":0},R:{_:"0"},M:{"0":0.24649},Q:{"10.4":0},O:{"0":0.37876},H:{"0":0.11099}};


/***/ }),
/* 325 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0125,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.0125,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00625,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.13748,"79":0,"80":0,"81":0.01875,"82":0,"83":0,"84":0,"85":0.025,"86":0.05624,"87":1.82471,"88":0.55616,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.04374,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00625,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.0125,"57":0,"58":0,"59":0.0125,"60":0,"61":0,"62":0,"63":0.04374,"64":0,"65":0,"66":0,"67":0.04999,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0.0125,"77":0.00625,"78":0.0125,"79":0.03125,"80":0.13123,"81":0.08749,"83":0.01875,"84":0.01875,"85":0.03125,"86":0.04374,"87":0.06874,"88":0.81862,"89":14.45394,"90":5.23666,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.04374,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.47492,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.0125,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0125,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.11248,"74":0.06249,"75":0.16872,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.13636,"8.1-8.4":0.00889,"9.0-9.2":2.11951,"9.3":0.83891,"10.0-10.2":0,"10.3":0.23715,"11.0-11.2":0.05632,"11.3-11.4":0.0415,"12.0-12.1":0.00593,"12.2-12.4":0.30533,"13.0-13.1":0.00889,"13.2":0.00889,"13.3":0.08004,"13.4-13.7":0.42983,"14.0-14.4":24.61599,"14.5":0.39129},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.025,"13":0.76863,"14":5.74283,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.03749,"10.1":0.06249,"11.1":0.01875,"12.1":0.05624,"13.1":0.92485,"14.1":0.04374},B:{"12":0,"13":0,"14":0.12498,"15":0.03749,"16":0,"17":0.0125,"18":0.03749,"79":0,"80":0.0125,"81":0,"83":0,"84":0,"85":0.00625,"86":0,"87":0.00625,"88":0.0125,"89":2.54959,"90":0.93735},P:{"4":0.06379,"5.0-5.4":0.01063,"6.2-6.4":0,"7.2-7.4":0.02126,"8.2":0.06379,"9.2":0.01063,"10.1":0.01063,"11.1-11.2":0.03189,"12.0":0.05316,"13.0":2.68967,"14.0":1.08437},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.007,"4.4":0,"4.4.3-4.4.4":0.043},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.89986,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":22.82996},S:{"2.5":0},R:{_:"0"},M:{"0":0.29633},Q:{"10.4":0},O:{"0":2.01804},H:{"0":0.27344}};


/***/ }),
/* 326 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.00313,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00313,"34":0.00626,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00626,"44":0.00313,"45":0,"46":0,"47":0.00313,"48":0,"49":0,"50":0,"51":0,"52":0.0094,"53":0,"54":0,"55":0,"56":0.0094,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00626,"69":0,"70":0,"71":0,"72":0.0094,"73":0.00313,"74":0,"75":0,"76":0,"77":0,"78":0.00626,"79":0,"80":0,"81":0.00313,"82":0.00313,"83":0,"84":0.31946,"85":0.0094,"86":0.02192,"87":0.64206,"88":0.43848,"89":0.03132,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00313,"26":0,"27":0,"28":0,"29":0.00313,"30":0.00313,"31":0,"32":0,"33":0,"34":0,"35":0.00313,"36":0,"37":0,"38":0.00626,"39":0.00313,"40":0,"41":0,"42":0,"43":0.00313,"44":0,"45":0,"46":0.00626,"47":0.00313,"48":0,"49":0.04072,"50":0,"51":0.00626,"52":0,"53":0,"54":0,"55":0.00313,"56":0,"57":0,"58":0,"59":0,"60":0.00313,"61":0,"62":0,"63":0.00626,"64":0.00313,"65":0.00313,"66":0,"67":0,"68":0,"69":0.00626,"70":0.00313,"71":0.00313,"72":0.00626,"73":0,"74":0.00313,"75":0.0094,"76":0.01253,"77":0.00313,"78":0.00313,"79":0.02192,"80":0.05951,"81":0.02506,"83":0.00313,"84":0.00626,"85":0.00626,"86":0.01253,"87":1.22774,"88":0.13154,"89":2.48368,"90":0.88322,"91":0,"92":0.00313,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00313,"27":0.00313,"28":0.00313,"29":0,"30":0,"31":0,"32":0.00313,"33":0,"34":0,"35":0,"36":0,"37":0.00313,"38":0.00313,"39":0,"40":0,"41":0,"42":0.00313,"43":0,"44":0,"45":0,"46":0.0094,"47":0.00313,"48":0,"49":0,"50":0.02819,"51":0.0094,"52":0,"53":0,"54":0.18479,"55":0.1566,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0094,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00313,"72":0.00313,"73":0,"74":0.03758,"75":0.17852,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.02192},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0229,"6.0-6.1":0,"7.0-7.1":0.12406,"8.1-8.4":0.01336,"9.0-9.2":0.01336,"9.3":0.77109,"10.0-10.2":0.07825,"10.3":0.41608,"11.0-11.2":0.20422,"11.3-11.4":0.0878,"12.0-12.1":0.14124,"12.2-12.4":1.82275,"13.0-13.1":0.1985,"13.2":0.1546,"13.3":1.2597,"13.4-13.7":1.6777,"14.0-14.4":10.42691,"14.5":0.19277},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.34765,"14":0.17226,_:"0","3.1":0,"3.2":0,"5.1":0.01566,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.03445,"12.1":0.00626,"13.1":0.05638,"14.1":0.00313},B:{"12":0.01253,"13":0.00313,"14":0,"15":0.0094,"16":0.02819,"17":0.02506,"18":0.05638,"79":0,"80":0,"81":0,"83":0,"84":0.00626,"85":0.00626,"86":0,"87":0.00313,"88":0.01566,"89":0.37897,"90":0.12215},P:{"4":0.66239,"5.0-5.4":0.02038,"6.2-6.4":0.02038,"7.2-7.4":0.44839,"8.2":0.03057,"9.2":0.08153,"10.1":0.03057,"11.1-11.2":0.25477,"12.0":0.27515,"13.0":1.6407,"14.0":0.62163},I:{"0":0,"3":0,"4":0.00166,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01164,"4.2-4.3":0.07939,"4.4":0,"4.4.3-4.4.4":0.175},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.24743,"5.5":0},J:{"7":0,"10":0.16483},N:{"10":0,"11":0},L:{"0":62.18712},S:{"2.5":0},R:{_:"0"},M:{"0":0.06868},Q:{"10.4":0.00687},O:{"0":1.29805},H:{"0":2.91948}};


/***/ }),
/* 327 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00127,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00127,"39":0,"40":0.00127,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00253,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.00127,"65":0,"66":0,"67":0,"68":0.0038,"69":0,"70":0,"71":0,"72":0.00127,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00127,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.0038,"85":0.00127,"86":0.0038,"87":0.07849,"88":0.03671,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.02026,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00633,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.0038,"41":0,"42":0.00127,"43":0.00127,"44":0,"45":0,"46":0,"47":0,"48":0.00253,"49":0.00253,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0038,"56":0.00127,"57":0,"58":0,"59":0,"60":0.05064,"61":0,"62":0,"63":0.00127,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.01139,"70":0.00127,"71":0,"72":0.01393,"73":0,"74":0.00127,"75":0.01013,"76":0.00127,"77":0,"78":0,"79":0.00127,"80":0.00127,"81":0.01013,"83":0.0038,"84":0.00127,"85":0.00127,"86":0.0076,"87":0.00633,"88":0.02026,"89":0.35195,"90":0.13673,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.00127,"21":0,"22":0,"23":0.00127,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.0038,"38":0.00253,"39":0,"40":0,"41":0,"42":0.00127,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00253,"51":0.00506,"52":0,"53":0.00127,"54":0.01519,"55":0.07849,"56":0,"57":0,"58":0,"60":0,"62":0.00127,"63":0.00506,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00127,"74":0.00633,"75":0.03418,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01266},G:{"8":0.0017,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.0017,"7.0-7.1":0.09522,"8.1-8.4":0.0068,"9.0-9.2":0,"9.3":0.10458,"10.0-10.2":0.0102,"10.3":0.24401,"11.0-11.2":0.66232,"11.3-11.4":0.14114,"12.0-12.1":0.16919,"12.2-12.4":1.05342,"13.0-13.1":0.21936,"13.2":0.06292,"13.3":0.26782,"13.4-13.7":0.79155,"14.0-14.4":4.21027,"14.5":0.03401},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00127,"13":0,"14":0.02279,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00127,"11.1":0,"12.1":0.00253,"13.1":0.00253,"14.1":0.00127},B:{"12":0.0038,"13":0.00633,"14":0.00127,"15":0.00253,"16":0.00127,"17":0.00253,"18":0.0076,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.00127,"86":0.00127,"87":0.00253,"88":0.01139,"89":0.09495,"90":0.02785},P:{"4":1.2603,"5.0-5.4":0.03049,"6.2-6.4":0.05082,"7.2-7.4":0.41671,"8.2":0.02033,"9.2":0.19311,"10.1":0.04065,"11.1-11.2":0.43704,"12.0":0.23376,"13.0":0.61998,"14.0":0.1118},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00418,"4.2-4.3":0.00684,"4.4":0,"4.4.3-4.4.4":0.20796},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01772,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0.00873},L:{"0":75.38558},S:{"2.5":0.30569},R:{_:"0"},M:{"0":0.06987},Q:{"10.4":0.07861},O:{"0":0.64632},H:{"0":8.43416}};


/***/ }),
/* 328 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00971,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00971,"49":0,"50":0.00485,"51":0,"52":0.00971,"53":0,"54":0,"55":0,"56":0.00485,"57":0,"58":0,"59":0,"60":0.00971,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01456,"69":0,"70":0,"71":0,"72":0.00485,"73":0,"74":0,"75":0,"76":0.02427,"77":0.00485,"78":0.13588,"79":0.00485,"80":0,"81":0.00971,"82":0,"83":0.00485,"84":0.02427,"85":0.01941,"86":0.06794,"87":1.40737,"88":0.53383,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00485,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00971,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0825,"50":0,"51":0,"52":0,"53":0.00971,"54":0,"55":0.00485,"56":0.00485,"57":0,"58":0.00485,"59":0,"60":0,"61":0,"62":0,"63":0.00485,"64":0,"65":0.04368,"66":0.00485,"67":0.03397,"68":0.00485,"69":0,"70":0,"71":0.00485,"72":0,"73":0,"74":0.01456,"75":0.00971,"76":0.01456,"77":0,"78":0,"79":0.00485,"80":0.00971,"81":0.02912,"83":0.00971,"84":0.02912,"85":0.03397,"86":0.01941,"87":0.10677,"88":0.51442,"89":8.5801,"90":2.84871,"91":0.00971,"92":0.00485,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.08735,"74":0.05824,"75":0.30089,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00923,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.00692,"9.0-9.2":0.02999,"9.3":1.68153,"10.0-10.2":0.03691,"10.3":0.11072,"11.0-11.2":0.1407,"11.3-11.4":0.06689,"12.0-12.1":0.09227,"12.2-12.4":0.50977,"13.0-13.1":0.25604,"13.2":0.02307,"13.3":0.22605,"13.4-13.7":0.86268,"14.0-14.4":17.81642,"14.5":0.35753},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00485,"12":0.02427,"13":0.05824,"14":2.04311,_:"0","3.1":0,"3.2":0,"5.1":0.00485,"6.1":0,"7.1":0,"9.1":0,"10.1":0.04368,"11.1":0.06794,"12.1":0.16015,"13.1":0.52412,"14.1":0.02427},B:{"12":0.00485,"13":0,"14":0.00485,"15":0.01456,"16":0.02427,"17":0.02427,"18":0.07765,"79":0,"80":0,"81":0,"83":0,"84":0.00485,"85":0.00971,"86":0.01456,"87":0.00485,"88":0.01456,"89":2.03341,"90":0.99487},P:{"4":0.07436,"5.0-5.4":0.01062,"6.2-6.4":0,"7.2-7.4":0.15934,"8.2":0,"9.2":0.06374,"10.1":0.01062,"11.1-11.2":0.2337,"12.0":0.78608,"13.0":2.74067,"14.0":1.24286},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00658,"4.2-4.3":0.02219,"4.4":0,"4.4.3-4.4.4":0.13315},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.2378,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":46.28307},S:{"2.5":0},R:{_:"0"},M:{"0":0.4375},Q:{"10.4":0.01544},O:{"0":0.02059},H:{"0":0.6286}};


/***/ }),
/* 329 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00517,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00517,"32":0,"33":0.00517,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.02068,"42":0,"43":0.02068,"44":0,"45":0,"46":0.00517,"47":0,"48":0,"49":0,"50":0.01034,"51":0,"52":0.01551,"53":0.00517,"54":0.00517,"55":0,"56":0.05687,"57":0.01551,"58":0,"59":0,"60":0.00517,"61":0,"62":0.01034,"63":0.01034,"64":0.00517,"65":0,"66":0,"67":0.00517,"68":0.04136,"69":0.01034,"70":0,"71":0,"72":0.03619,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02585,"79":0.00517,"80":0,"81":0.00517,"82":0,"83":0.00517,"84":0.03102,"85":0.02585,"86":0.07238,"87":3.43288,"88":0.94094,"89":0.00517,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00517,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.01034,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00517,"26":0.01551,"27":0,"28":0,"29":0,"30":0,"31":0.01034,"32":0,"33":0,"34":0.01034,"35":0,"36":0,"37":0,"38":0.01034,"39":0.00517,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00517,"47":0,"48":0.00517,"49":0.08272,"50":0,"51":0.01551,"52":0,"53":0.01034,"54":0,"55":0,"56":0.00517,"57":1.63889,"58":0.00517,"59":0,"60":0.10857,"61":0,"62":0.01034,"63":0.01551,"64":0,"65":0.03102,"66":0,"67":0.00517,"68":0.01034,"69":0.04136,"70":0.01551,"71":0,"72":0,"73":0,"74":0.00517,"75":0,"76":0.00517,"77":0,"78":0.01551,"79":0.09306,"80":0.00517,"81":0.00517,"83":0.05687,"84":0.02585,"85":0.01551,"86":0.08789,"87":0.11891,"88":0.66176,"89":7.19147,"90":3.08132,"91":0.01034,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.01034,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00517,"41":0,"42":0,"43":0,"44":0,"45":0.00517,"46":0,"47":0,"48":0.00517,"49":0.00517,"50":0.01034,"51":0.02585,"52":0,"53":0,"54":0.00517,"55":0.02068,"56":0,"57":0.00517,"58":0.01034,"60":0,"62":0,"63":0,"64":0.00517,"65":0,"66":0,"67":0,"68":0.00517,"69":0,"70":0,"71":0.00517,"72":0.02068,"73":0.00517,"74":0.03102,"75":0.0517,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00253,"7.0-7.1":0.10493,"8.1-8.4":0,"9.0-9.2":0.01391,"9.3":0.51958,"10.0-10.2":0.00253,"10.3":0.8116,"11.0-11.2":0.38557,"11.3-11.4":0.08596,"12.0-12.1":0.13653,"12.2-12.4":0.66116,"13.0-13.1":0.24146,"13.2":0.07079,"13.3":0.15296,"13.4-13.7":0.85079,"14.0-14.4":7.51045,"14.5":0.01896},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01034,"13":0.00517,"14":0.51183,_:"0","3.1":0,"3.2":0,"5.1":0.43428,"6.1":0,"7.1":0,"9.1":0,"10.1":0.03102,"11.1":0.02585,"12.1":0.00517,"13.1":0.08789,"14.1":0},B:{"12":0.22748,"13":0.00517,"14":0.24299,"15":0.02585,"16":0.01551,"17":0.04653,"18":0.06204,"79":0,"80":0,"81":0,"83":0,"84":0.04136,"85":0.02068,"86":0.00517,"87":0.02068,"88":0.01551,"89":1.87154,"90":0.7755},P:{"4":0.84265,"5.0-5.4":0.01028,"6.2-6.4":0.01028,"7.2-7.4":0.0411,"8.2":0.01028,"9.2":0.03083,"10.1":0.02055,"11.1-11.2":0.12331,"12.0":0.05138,"13.0":1.04817,"14.0":0.30829},I:{"0":0,"3":0,"4":0.00185,"2.1":0,"2.2":0,"2.3":0.00185,"4.1":0.08893,"4.2-4.3":0.61141,"4.4":0,"4.4.3-4.4.4":1.01901},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.1022,"9":0.01136,"10":0,"11":1.15826,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":56.10548},S:{"2.5":0.00483},R:{_:"0"},M:{"0":0.10626},Q:{"10.4":0.02415},O:{"0":0.65205},H:{"0":0.42984}};


/***/ }),
/* 330 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.00633,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00633,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00633,"48":0.00633,"49":0,"50":0,"51":0,"52":0.3037,"53":0,"54":0,"55":0,"56":0.00633,"57":0,"58":0,"59":0,"60":0.00633,"61":0,"62":0,"63":0,"64":0,"65":0.00633,"66":0.00633,"67":0.00633,"68":0.01898,"69":0,"70":0,"71":0,"72":0.00633,"73":0,"74":0,"75":0.00633,"76":0,"77":0.00633,"78":0.09491,"79":0.00633,"80":0.00633,"81":0.02531,"82":0.03796,"83":0.01265,"84":0.06327,"85":0.08225,"86":0.06327,"87":3.89743,"88":1.85381,"89":0.00633,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.21512,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00633,"35":0,"36":0,"37":0,"38":0.0696,"39":0,"40":0,"41":0,"42":0,"43":0.00633,"44":0,"45":0,"46":0,"47":0.03796,"48":0,"49":0.56943,"50":0,"51":0,"52":0,"53":0.01898,"54":0,"55":0,"56":0.01265,"57":0,"58":0.01898,"59":0,"60":0,"61":0.03796,"62":0,"63":0.00633,"64":0.00633,"65":0.00633,"66":0,"67":0.00633,"68":0.01265,"69":0.14552,"70":0.00633,"71":0.01898,"72":0.00633,"73":0.00633,"74":0.01265,"75":0.00633,"76":0.01265,"77":0.08858,"78":0.01265,"79":0.02531,"80":0.01265,"81":0.10123,"83":0.04429,"84":0.03164,"85":0.04429,"86":0.10123,"87":0.22145,"88":0.45554,"89":16.36162,"90":7.60505,"91":0.00633,"92":0,"93":0},F:{"9":0,"11":0,"12":0.03796,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.03164,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.18981,"32":0,"33":0,"34":0,"35":0,"36":0.00633,"37":0,"38":0,"39":0,"40":0.25941,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00633,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00633,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.20879,"74":0.15818,"75":0.66434,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00198,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0099,"6.0-6.1":0.00594,"7.0-7.1":0.29793,"8.1-8.4":0.01287,"9.0-9.2":0.00594,"9.3":0.23062,"10.0-10.2":0.02277,"10.3":0.17816,"11.0-11.2":0.04553,"11.3-11.4":0.05147,"12.0-12.1":0.04256,"12.2-12.4":0.21181,"13.0-13.1":0.03365,"13.2":0.01089,"13.3":0.10096,"13.4-13.7":0.40383,"14.0-14.4":7.43826,"14.5":0.11581},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00633,"12":0.00633,"13":0.03796,"14":0.71495,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00633,"11.1":0.03796,"12.1":0.02531,"13.1":0.13287,"14.1":0.01898},B:{"12":0,"13":0,"14":0.00633,"15":0.00633,"16":0,"17":0.00633,"18":0.02531,"79":0,"80":0.00633,"81":0,"83":0,"84":0.00633,"85":0.01265,"86":0.00633,"87":0.00633,"88":0.00633,"89":1.27805,"90":0.60107},P:{"4":0.39557,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.01041,"10.1":0.02082,"11.1-11.2":0.08328,"12.0":0.05205,"13.0":1.15547,"14.0":0.5413},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01576,"4.2-4.3":0.0725,"4.4":0,"4.4.3-4.4.4":0.65254},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.0067,"10":0,"11":0.33496,"5.5":0},J:{"7":0,"10":0.00367},N:{"10":0,"11":0},L:{"0":46.46651},S:{"2.5":0},R:{_:"0"},M:{"0":0.20569},Q:{"10.4":0.00735},O:{"0":0.11754},H:{"0":0.22255}};


/***/ }),
/* 331 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00408,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00408,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01224,"53":0,"54":0.00408,"55":0,"56":0.00408,"57":0,"58":0,"59":0,"60":0,"61":0.00408,"62":0,"63":0,"64":0,"65":0,"66":0.02448,"67":0,"68":0.00816,"69":0,"70":0,"71":0,"72":0.00408,"73":0.03264,"74":0,"75":0,"76":0,"77":0,"78":0.01224,"79":0,"80":0,"81":0,"82":0,"83":0.01224,"84":0.00408,"85":0.00816,"86":0.02856,"87":0.59976,"88":0.29376,"89":0.00408,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00408,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00408,"39":0,"40":0,"41":0,"42":0.00408,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0408,"50":0,"51":0,"52":0,"53":0.01632,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00816,"64":0,"65":0.00408,"66":0,"67":0.00408,"68":0.00408,"69":0.00408,"70":0.00408,"71":0.00816,"72":0.00816,"73":0,"74":0.01224,"75":0.01224,"76":0.01224,"77":0.00408,"78":0.01632,"79":0.01224,"80":0.01632,"81":0.02448,"83":0.0204,"84":0.02856,"85":0.01632,"86":0.0408,"87":0.15504,"88":0.13056,"89":7.7316,"90":3.7536,"91":0.00408,"92":0.00408,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00816,"55":0.01224,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00816,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.306,"74":0.05304,"75":0.2652,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00205,"5.0-5.1":0.00103,"6.0-6.1":0.0236,"7.0-7.1":0.01026,"8.1-8.4":0.00103,"9.0-9.2":0.00205,"9.3":0.10058,"10.0-10.2":0.00718,"10.3":0.08518,"11.0-11.2":0.01642,"11.3-11.4":0.0431,"12.0-12.1":0.0236,"12.2-12.4":0.13444,"13.0-13.1":0.02976,"13.2":0.01334,"13.3":0.09955,"13.4-13.7":0.34073,"14.0-14.4":8.5736,"14.5":0.20936},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00408,"13":0.01632,"14":0.56304,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.00408,"7.1":0,"9.1":0,"10.1":0.00408,"11.1":0.01224,"12.1":0.02448,"13.1":0.10608,"14.1":0.0204},B:{"12":0.00408,"13":0,"14":0.00408,"15":0.00408,"16":0,"17":0.00816,"18":0.0204,"79":0,"80":0.00408,"81":0,"83":0,"84":0.00408,"85":0.00408,"86":0,"87":0,"88":0.00408,"89":0.62016,"90":0.33456},P:{"4":0.21393,"5.0-5.4":0,"6.2-6.4":0.01019,"7.2-7.4":0.18337,"8.2":0.01019,"9.2":0.10187,"10.1":0.05094,"11.1-11.2":0.41768,"12.0":0.163,"13.0":2.03744,"14.0":0.82516},I:{"0":0,"3":0,"4":0.00226,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00452,"4.2-4.3":0.01807,"4.4":0,"4.4.3-4.4.4":0.14004},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00408,"9":0,"10":0,"11":0.05304,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":67.73496},S:{"2.5":0},R:{_:"0"},M:{"0":0.24272},Q:{"10.4":0},O:{"0":0.14208},H:{"0":0.26342}};


/***/ }),
/* 332 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0.00438,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01314,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01314,"49":0,"50":0,"51":0,"52":0.00438,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00438,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00438,"69":0,"70":0,"71":0,"72":0.02628,"73":0,"74":0.0876,"75":0,"76":0,"77":0,"78":0.02628,"79":0,"80":0,"81":0.02628,"82":0,"83":0,"84":0.01752,"85":0.00438,"86":0.0219,"87":0.57816,"88":0.15768,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00438,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01314,"50":0,"51":0,"52":0,"53":0.02628,"54":0.00876,"55":0.00438,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00876,"66":0,"67":0.00876,"68":0.01752,"69":0.00438,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.00438,"76":0.07008,"77":0,"78":0,"79":0.00876,"80":0.00438,"81":0,"83":0.00438,"84":0.00876,"85":0.03504,"86":0.02628,"87":0.16206,"88":0.20586,"89":7.1613,"90":2.4747,"91":0.05256,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00438,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00438,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00438,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.09636,"74":0.0219,"75":0.0876,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.01614,"7.0-7.1":0.00403,"8.1-8.4":0.19767,"9.0-9.2":0,"9.3":0.56075,"10.0-10.2":0,"10.3":0.62126,"11.0-11.2":0.08068,"11.3-11.4":0.20171,"12.0-12.1":0.08068,"12.2-12.4":0.28643,"13.0-13.1":0.06455,"13.2":0.03227,"13.3":0.44779,"13.4-13.7":1.94044,"14.0-14.4":34.04042,"14.5":0.3308},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00438,"9":0,"10":0.00438,"11":0.00438,"12":0.00438,"13":0.47742,"14":2.55354,_:"0","3.1":0,"3.2":0,"5.1":0.02628,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01314,"11.1":0.03066,"12.1":0.0876,"13.1":0.25404,"14.1":0.0219},B:{"12":0,"13":0,"14":0.00438,"15":0.01752,"16":0.00438,"17":0.00438,"18":0.10512,"79":0,"80":0,"81":0,"83":0,"84":0.00438,"85":0.00438,"86":0.00876,"87":0.00438,"88":0.01752,"89":1.3797,"90":0.47304},P:{"4":0.31465,"5.0-5.4":0.03146,"6.2-6.4":0,"7.2-7.4":0.09439,"8.2":0,"9.2":0.15732,"10.1":0,"11.1-11.2":0.1783,"12.0":0.08391,"13.0":3.61844,"14.0":1.95081},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.02922,"4.4":0,"4.4.3-4.4.4":0.21912},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.45552,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":32.54468},S:{"2.5":0},R:{_:"0"},M:{"0":0.26414},Q:{"10.4":0},O:{"0":0.06744},H:{"0":0.38309}};


/***/ }),
/* 333 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00727,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00242,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00242,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.01938,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00727,"69":0.00242,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00727,"85":0.00969,"86":0.02664,"87":0.37541,"88":0.07993,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00969,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01938,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00484,"41":0,"42":0,"43":0.0436,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00484,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00242,"64":0.01453,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00969,"71":0.00242,"72":0,"73":0.03391,"74":0.01211,"75":0,"76":0,"77":0,"78":0,"79":0.00484,"80":0.00242,"81":0.01453,"83":0.00242,"84":0.00242,"85":0.00242,"86":0.00484,"87":0.00727,"88":0.00969,"89":1.69056,"90":1.19889,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00484,"74":0.01938,"75":0.21556,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00484},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00164,"7.0-7.1":0.03609,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.01531,"10.0-10.2":1.04772,"10.3":0.03773,"11.0-11.2":1.66837,"11.3-11.4":0.12468,"12.0-12.1":0.18155,"12.2-12.4":0.09023,"13.0-13.1":0.02078,"13.2":0.00547,"13.3":0.14546,"13.4-13.7":0.10171,"14.0-14.4":1.84608,"14.5":0.02679},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00484,"14":0.10657,_:"0","3.1":0,"3.2":0,"5.1":0.02422,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01938,"11.1":0,"12.1":0.00484,"13.1":0.0218,"14.1":0.00242},B:{"12":0.00484,"13":0.01211,"14":0.00242,"15":0.00484,"16":0.00484,"17":0,"18":0.02422,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.00242,"89":0.22282,"90":0.08477},P:{"4":0.72812,"5.0-5.4":0.02023,"6.2-6.4":0.02023,"7.2-7.4":0.66744,"8.2":0,"9.2":0.22248,"10.1":0.04045,"11.1-11.2":0.33372,"12.0":0.14158,"13.0":0.62699,"14.0":0.13147},I:{"0":0,"3":0,"4":0.00084,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00169,"4.2-4.3":0.00169,"4.4":0,"4.4.3-4.4.4":0.49094},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00606,"11":0.03028,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":79.11817},S:{"2.5":0.29554},R:{_:"0"},M:{"0":0.05305},Q:{"10.4":0},O:{"0":0.11367},H:{"0":4.79965}};


/***/ }),
/* 334 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00389,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00389,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.00778,"76":0,"77":0,"78":0.00389,"79":0,"80":0,"81":0.00389,"82":0,"83":0,"84":0.00389,"85":0.00778,"86":0.01167,"87":0.33843,"88":0.17116,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00389,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00389,"39":0.00389,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.06224,"50":0,"51":0,"52":0,"53":0.00389,"54":0,"55":0,"56":0,"57":0,"58":0.00389,"59":0,"60":0,"61":0,"62":0,"63":0.00778,"64":0,"65":0.00389,"66":0.00389,"67":0.05057,"68":0.01945,"69":0,"70":0,"71":0,"72":0.00389,"73":0,"74":0.06224,"75":0.00778,"76":0.01167,"77":0.00778,"78":0.00389,"79":0.01556,"80":0.00389,"81":0.03501,"83":0.00778,"84":0.01945,"85":0.04668,"86":0.10892,"87":0.12837,"88":0.1556,"89":5.04922,"90":2.35734,"91":0.01167,"92":0.00389,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00389,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00778,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01167,"55":0.03112,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.06224,"74":0.12448,"75":0.22562,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00389},G:{"8":0,"3.2":0.00842,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.04349,"6.0-6.1":0.0014,"7.0-7.1":0.42926,"8.1-8.4":0.04349,"9.0-9.2":0,"9.3":0.12345,"10.0-10.2":0.02946,"10.3":0.18517,"11.0-11.2":0.03928,"11.3-11.4":0.07295,"12.0-12.1":0.01964,"12.2-12.4":0.24549,"13.0-13.1":0.02665,"13.2":0.0014,"13.3":0.07856,"13.4-13.7":0.37736,"14.0-14.4":10.9868,"14.5":0.2006},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00389,"13":0.00778,"14":0.42401,_:"0","3.1":0,"3.2":0,"5.1":0.00778,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00389,"11.1":0.00778,"12.1":0.00389,"13.1":0.29953,"14.1":0.00778},B:{"12":0.00389,"13":0.00778,"14":0.00389,"15":0.01167,"16":0.01167,"17":0.01167,"18":0.10114,"79":0,"80":0.00778,"81":0,"83":0,"84":0.00389,"85":0.01167,"86":0.00389,"87":0.02723,"88":0.00778,"89":1.34205,"90":0.61462},P:{"4":0.24599,"5.0-5.4":0.01118,"6.2-6.4":0.01118,"7.2-7.4":0.123,"8.2":0.01118,"9.2":0.10063,"10.1":0.10063,"11.1-11.2":0.35781,"12.0":0.11182,"13.0":3.07492,"14.0":1.50951},I:{"0":0,"3":0,"4":0.10319,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.12383,"4.4":0,"4.4.3-4.4.4":2.76544},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00889,"11":0.11559,"5.5":0},J:{"7":0,"10":0.00611},N:{"10":0,"11":0},L:{"0":61.31124},S:{"2.5":0},R:{_:"0"},M:{"0":0.07943},Q:{"10.4":0.04888},O:{"0":1.48473},H:{"0":0.37021}};


/***/ }),
/* 335 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0221,"34":0.01657,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01657,"53":0,"54":0,"55":0,"56":0.00552,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00552,"68":0.01657,"69":0,"70":0,"71":0,"72":0.00552,"73":0,"74":0.00552,"75":0,"76":0,"77":0,"78":0.03314,"79":0,"80":0.00552,"81":0.00552,"82":0,"83":0.00552,"84":0.01657,"85":0.0221,"86":0.04419,"87":0.70155,"88":0.26515,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01657,"23":0,"24":0,"25":0,"26":0.01105,"27":0,"28":0,"29":0,"30":0.00552,"31":0,"32":0,"33":0,"34":0.04972,"35":0,"36":0,"37":0,"38":0.11048,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00552,"47":0,"48":0.00552,"49":0.08286,"50":0,"51":0,"52":0,"53":0.19334,"54":0.00552,"55":0.01657,"56":0.01105,"57":0.00552,"58":0.00552,"59":0,"60":0.00552,"61":0.01105,"62":0.01657,"63":0.01105,"64":0.01105,"65":0.0221,"66":0.00552,"67":0.0221,"68":0.09391,"69":0.02762,"70":0.01657,"71":0.0221,"72":0.0221,"73":0.0221,"74":0.0221,"75":0.03314,"76":0.01657,"77":0.01657,"78":0.03314,"79":0.05524,"80":0.05524,"81":0.04419,"83":0.10496,"84":0.07734,"85":0.04972,"86":0.38668,"87":0.38668,"88":0.65183,"89":11.74955,"90":4.04357,"91":0.04972,"92":0.00552,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.0221,"37":0,"38":0,"39":0,"40":0.00552,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.03314,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01105,"74":0.0221,"75":0.07734,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00638,"5.0-5.1":0.05745,"6.0-6.1":0.03192,"7.0-7.1":0.06384,"8.1-8.4":0.07022,"9.0-9.2":0.04788,"9.3":0.49154,"10.0-10.2":0.07341,"10.3":0.34152,"11.0-11.2":0.15321,"11.3-11.4":0.19151,"12.0-12.1":0.20747,"12.2-12.4":0.68943,"13.0-13.1":0.21385,"13.2":0.07022,"13.3":0.47558,"13.4-13.7":1.5959,"14.0-14.4":25.66849,"14.5":0.27769},E:{"4":0,"5":0,"6":0,"7":0,"8":0.01105,"9":0,"10":0,"11":0.01105,"12":0.01657,"13":0.13258,"14":3.51879,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00552,"10.1":0.0221,"11.1":0.04419,"12.1":0.07734,"13.1":0.46402,"14.1":0.03867},B:{"12":0.00552,"13":0,"14":0,"15":0,"16":0.00552,"17":0.01105,"18":0.04419,"79":0,"80":0,"81":0,"83":0,"84":0.00552,"85":0.00552,"86":0.00552,"87":0.00552,"88":0.01105,"89":1.38652,"90":0.65736},P:{"4":0.90438,"5.0-5.4":0.01077,"6.2-6.4":0,"7.2-7.4":0.0323,"8.2":0.01077,"9.2":0.0646,"10.1":0.0323,"11.1-11.2":0.11843,"12.0":0.1292,"13.0":3.14378,"14.0":1.58266},I:{"0":0,"3":0,"4":0.00345,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0069,"4.2-4.3":0.02414,"4.4":0,"4.4.3-4.4.4":0.15865},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00748,"10":0,"11":1.1139,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":30.40467},S:{"2.5":0},R:{_:"0"},M:{"0":0.2238},Q:{"10.4":0.12533},O:{"0":0.56398},H:{"0":0.08475}};


/***/ }),
/* 336 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00455,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00909,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00455,"73":0.03636,"74":0,"75":0,"76":0,"77":0,"78":0.00909,"79":0,"80":0.00455,"81":0.00455,"82":0,"83":0,"84":0.00455,"85":0.00909,"86":0.01364,"87":0.49995,"88":0.24089,"89":0.00455,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00455,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00909,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00455,"49":0.03636,"50":0.00455,"51":0,"52":0,"53":0.04545,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00455,"63":0.00909,"64":0.00455,"65":0.00455,"66":0.00455,"67":0.01364,"68":0.01364,"69":0.03636,"70":0.00909,"71":0,"72":0.00455,"73":0.00909,"74":0.01364,"75":0.02273,"76":0.03182,"77":0.00455,"78":0.02273,"79":0.01364,"80":0.02273,"81":0.02727,"83":0.05,"84":0.09545,"85":0.03636,"86":0.05454,"87":0.13635,"88":0.22725,"89":8.85366,"90":4.12686,"91":0.00455,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00455,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00455,"52":0,"53":0,"54":0.01364,"55":0.01818,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.34088,"74":0.06363,"75":0.29543,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00266,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0093,"6.0-6.1":0.00266,"7.0-7.1":0.04918,"8.1-8.4":0.00399,"9.0-9.2":0.01462,"9.3":0.14489,"10.0-10.2":0.01196,"10.3":0.12894,"11.0-11.2":0.04918,"11.3-11.4":0.07045,"12.0-12.1":0.02924,"12.2-12.4":0.19939,"13.0-13.1":0.05051,"13.2":0.01329,"13.3":0.10501,"13.4-13.7":0.45992,"14.0-14.4":11.01291,"14.5":0.23395},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00455,"13":0.03182,"14":0.59085,_:"0","3.1":0,"3.2":0,"5.1":0.55449,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00909,"11.1":0.01818,"12.1":0.01818,"13.1":0.10908,"14.1":0.01818},B:{"12":0.00455,"13":0.00455,"14":0,"15":0.00909,"16":0.00455,"17":0.00909,"18":0.06363,"79":0,"80":0.00455,"81":0,"83":0,"84":0.00909,"85":0.00455,"86":0,"87":0.00455,"88":0.00455,"89":0.83628,"90":0.40905},P:{"4":0.27714,"5.0-5.4":0.02053,"6.2-6.4":0.01026,"7.2-7.4":0.16423,"8.2":0.01026,"9.2":0.09238,"10.1":0.04106,"11.1-11.2":0.34899,"12.0":0.39005,"13.0":2.16578,"14.0":0.72877},I:{"0":0,"3":0,"4":0.00883,"2.1":0,"2.2":0,"2.3":0,"4.1":0.05005,"4.2-4.3":0.03533,"4.4":0,"4.4.3-4.4.4":0.37393},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00499,"10":0,"11":0.19954,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":61.10054},S:{"2.5":0},R:{_:"0"},M:{"0":0.09274},Q:{"10.4":0.01091},O:{"0":0.20729},H:{"0":0.29954}};


/***/ }),
/* 337 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00514,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00514,"49":0,"50":0,"51":0,"52":0.06164,"53":0,"54":0,"55":0,"56":0.00514,"57":0.00514,"58":0,"59":0,"60":0,"61":0.00514,"62":0,"63":0.01027,"64":0,"65":0,"66":0.00514,"67":0,"68":0.02569,"69":0,"70":0,"71":0,"72":0.01541,"73":0,"74":0,"75":0.00514,"76":0,"77":0.00514,"78":0.10274,"79":0.00514,"80":0.00514,"81":0.01027,"82":0.00514,"83":0.01541,"84":0.04623,"85":0.05137,"86":0.13356,"87":2.38357,"88":0.83733,"89":0.00514,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00514,"34":0,"35":0,"36":0,"37":0,"38":0.00514,"39":0,"40":0.00514,"41":0,"42":0,"43":0.01027,"44":0,"45":0,"46":0,"47":0.00514,"48":0,"49":0.12329,"50":0,"51":0,"52":0,"53":0.03082,"54":0,"55":0,"56":0,"57":0,"58":0.00514,"59":0,"60":0,"61":0,"62":0.00514,"63":0.01027,"64":0.00514,"65":0.00514,"66":0.01027,"67":0.00514,"68":0.01027,"69":0.00514,"70":0.00514,"71":0.00514,"72":0.01027,"73":0.00514,"74":0.01027,"75":0.05651,"76":0.00514,"77":0.12843,"78":0.01027,"79":0.02569,"80":0.02055,"81":0.1798,"83":0.03596,"84":0.02055,"85":0.02569,"86":0.06164,"87":0.12329,"88":0.38528,"89":11.7175,"90":4.46919,"91":0.00514,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00514,"33":0,"34":0,"35":0,"36":0.01027,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00514,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00514,"55":0.00514,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.01027,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00514,"70":0.00514,"71":0,"72":0.00514,"73":0.15925,"74":0.20034,"75":0.72945,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00207,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01861,"6.0-6.1":0.00207,"7.0-7.1":0.00827,"8.1-8.4":0.01344,"9.0-9.2":0.0031,"9.3":0.33403,"10.0-10.2":0.01034,"10.3":0.16857,"11.0-11.2":0.04964,"11.3-11.4":0.04964,"12.0-12.1":0.06205,"12.2-12.4":0.23475,"13.0-13.1":0.03413,"13.2":0.01448,"13.3":0.12617,"13.4-13.7":0.44675,"14.0-14.4":8.24633,"14.5":0.07342},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00514,"9":0,"10":0,"11":0,"12":0.00514,"13":0.01027,"14":0.54966,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00514,"11.1":0.01541,"12.1":0.03082,"13.1":0.08733,"14.1":0.01027},B:{"12":0,"13":0,"14":0,"15":0.01027,"16":0.01027,"17":0.01541,"18":0.0411,"79":0,"80":0,"81":0,"83":0,"84":0.00514,"85":0.00514,"86":0.01027,"87":0.01027,"88":0.03082,"89":0.96576,"90":0.42637},P:{"4":0.18539,"5.0-5.4":0.0103,"6.2-6.4":0,"7.2-7.4":0.0103,"8.2":0.0206,"9.2":0.0618,"10.1":0.0618,"11.1-11.2":0.20599,"12.0":0.14419,"13.0":2.97649,"14.0":1.3904},I:{"0":0,"3":0,"4":0.00432,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00539,"4.2-4.3":0.01726,"4.4":0,"4.4.3-4.4.4":0.09385},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00514,"9":0,"10":0,"11":0.35959,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":55.87879},S:{"2.5":0},R:{_:"0"},M:{"0":0.27719},Q:{"10.4":0},O:{"0":0.05836},H:{"0":0.39594}};


/***/ }),
/* 338 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00726,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00182,"49":0,"50":0,"51":0,"52":0.00363,"53":0,"54":0,"55":0,"56":0.00182,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00182,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02542,"79":0.00182,"80":0,"81":0,"82":0,"83":0,"84":0.00182,"85":0.00182,"86":0.0345,"87":0.0908,"88":0.03269,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00182,"43":0.00182,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00545,"50":0.00182,"51":0,"52":0,"53":0.00182,"54":0,"55":0.00182,"56":0.00545,"57":0.00363,"58":0.00182,"59":0,"60":0.02906,"61":0,"62":0.00182,"63":0.00363,"64":0.00182,"65":0.00363,"66":0.00182,"67":0.00182,"68":0.00182,"69":0.00363,"70":0.00545,"71":0,"72":0.00182,"73":0.00182,"74":0.00363,"75":0.00726,"76":0.00908,"77":0.00182,"78":0.00182,"79":0.00908,"80":0.00726,"81":0.01271,"83":0.00182,"84":0.00363,"85":0.00363,"86":0.00908,"87":0.03269,"88":0.03814,"89":1.10594,"90":0.40134,"91":0.00182,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00182,"25":0,"26":0,"27":0,"28":0.00908,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01453,"47":0,"48":0,"49":0,"50":0.00363,"51":0.00545,"52":0,"53":0,"54":0.04903,"55":0.05993,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00182,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00726,"74":0.03087,"75":0.11441,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00182},G:{"8":0.00456,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00683,"6.0-6.1":0.00228,"7.0-7.1":0.0672,"8.1-8.4":0.00683,"9.0-9.2":0.04214,"9.3":0.16401,"10.0-10.2":0.02164,"10.3":0.28131,"11.0-11.2":0.09795,"11.3-11.4":0.22551,"12.0-12.1":0.23917,"12.2-12.4":1.2756,"13.0-13.1":0.17653,"13.2":0.04214,"13.3":0.42026,"13.4-13.7":1.03187,"14.0-14.4":6.2994,"14.5":0.08314},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00726,"12":0,"13":0.00726,"14":0.12712,_:"0","3.1":0,"3.2":0,"5.1":0.02906,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00182,"11.1":0.00545,"12.1":0.00726,"13.1":0.01998,"14.1":0.00545},B:{"12":0.0109,"13":0.00545,"14":0.00363,"15":0.01271,"16":0.00545,"17":0.0109,"18":0.01816,"79":0,"80":0.00182,"81":0,"83":0,"84":0.00545,"85":0.00363,"86":0.00182,"87":0.00182,"88":0.00363,"89":0.21429,"90":0.08172},P:{"4":0.52971,"5.0-5.4":0.20373,"6.2-6.4":0.04075,"7.2-7.4":0.33616,"8.2":0.07131,"9.2":0.25467,"10.1":0.04075,"11.1-11.2":0.44822,"12.0":0.14261,"13.0":1.07979,"14.0":0.22411},I:{"0":0,"3":0,"4":0.00079,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00753,"4.2-4.3":0.01427,"4.4":0,"4.4.3-4.4.4":0.14909},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.03269,"5.5":0},J:{"7":0,"10":0.01637},N:{"10":0,"11":0},L:{"0":80.19748},S:{"2.5":0.00818},R:{_:"0"},M:{"0":0.11458},Q:{"10.4":0},O:{"0":0.28644},H:{"0":1.45664}};


/***/ }),
/* 339 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01507,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.01004,"51":0,"52":0.08537,"53":0,"54":0,"55":0,"56":0.00502,"57":0.00502,"58":0,"59":0,"60":0.00502,"61":0,"62":0,"63":0.00502,"64":0,"65":0,"66":0.00502,"67":0,"68":0.01507,"69":0.00502,"70":0,"71":0,"72":0.01004,"73":0,"74":0.01004,"75":0,"76":0.00502,"77":0.00502,"78":0.06026,"79":0.00502,"80":0.00502,"81":0.01004,"82":0.01004,"83":0.01004,"84":0.05022,"85":0.457,"86":0.27621,"87":2.38043,"88":0.88387,"89":0.00502,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01004,"25":0,"26":0.00502,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01004,"34":0.01004,"35":0,"36":0,"37":0.01004,"38":0.02511,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.29128,"50":0,"51":0,"52":0,"53":0.07533,"54":0,"55":0,"56":0,"57":0,"58":0.00502,"59":0,"60":0,"61":0.01004,"62":0,"63":0,"64":0.00502,"65":0.00502,"66":0.01507,"67":0.00502,"68":0.04018,"69":0.00502,"70":0.01004,"71":0.00502,"72":0.00502,"73":0.00502,"74":0.00502,"75":0.00502,"76":0.00502,"77":0.00502,"78":0.01004,"79":0.02009,"80":0.02009,"81":0.03013,"83":0.05022,"84":0.02009,"85":0.02009,"86":0.03515,"87":0.15568,"88":0.21595,"89":10.92285,"90":4.27874,"91":0.00502,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00502,"37":0,"38":0,"39":0,"40":0.00502,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00502,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00502,"55":0.01507,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00502,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.26114,"74":0.2059,"75":0.64282,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00577,"6.0-6.1":0.00144,"7.0-7.1":0.01732,"8.1-8.4":0.08372,"9.0-9.2":0.00144,"9.3":0.09815,"10.0-10.2":0.01299,"10.3":0.09238,"11.0-11.2":0.04763,"11.3-11.4":0.04475,"12.0-12.1":0.05196,"12.2-12.4":0.17898,"13.0-13.1":0.0332,"13.2":0.01732,"13.3":0.12558,"13.4-13.7":0.50808,"14.0-14.4":12.33254,"14.5":0.27569},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00502,"13":0.03013,"14":0.6629,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00502,"11.1":0.01507,"12.1":0.02009,"13.1":0.0904,"14.1":0.01507},B:{"12":0.01004,"13":0,"14":0.00502,"15":0.01004,"16":0,"17":0.01004,"18":0.05022,"79":0,"80":0,"81":0,"83":0,"84":0.00502,"85":0.00502,"86":0.00502,"87":0.01004,"88":0.01004,"89":1.02449,"90":0.44696},P:{"4":0.40927,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02046,"10.1":0.03069,"11.1-11.2":0.10232,"12.0":0.07162,"13.0":1.67799,"14.0":0.82876},I:{"0":0,"3":0,"4":0,"2.1":0.01028,"2.2":0,"2.3":0,"4.1":0.01285,"4.2-4.3":0.03599,"4.4":0,"4.4.3-4.4.4":0.21079},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.15066,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":55.26309},S:{"2.5":0},R:{_:"0"},M:{"0":0.32357},Q:{"10.4":0},O:{"0":0.04978},H:{"0":0.40059}};


/***/ }),
/* 340 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00358,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00358,"34":0,"35":0,"36":0.0143,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00358,"48":0.00358,"49":0,"50":0,"51":0,"52":0.01073,"53":0,"54":0,"55":0,"56":0.00358,"57":0,"58":0,"59":0,"60":0.00358,"61":0,"62":0.00358,"63":0,"64":0.01073,"65":0,"66":0.00358,"67":0,"68":0.00715,"69":0.00358,"70":0.00358,"71":0,"72":0.01073,"73":0,"74":0.00358,"75":0,"76":0,"77":0.00358,"78":0.0143,"79":0.00358,"80":0.00358,"81":0.00715,"82":0.00715,"83":0.00715,"84":0.0143,"85":0.01788,"86":0.03218,"87":0.7579,"88":0.32533,"89":0.0143,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00358,"25":0.00358,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0143,"50":0,"51":0,"52":0,"53":0.00358,"54":0,"55":0.00358,"56":0,"57":0,"58":0.00358,"59":0,"60":0.00358,"61":0.02503,"62":0.00358,"63":0.01073,"64":0.00358,"65":0.00358,"66":0.00358,"67":0.00358,"68":0.00358,"69":0.00358,"70":0.00715,"71":0.02145,"72":0.00358,"73":0.00358,"74":0.01073,"75":0.00715,"76":0.00715,"77":0.00715,"78":0.01073,"79":0.03575,"80":0.02503,"81":0.01788,"83":0.02503,"84":0.02503,"85":0.02503,"86":0.03933,"87":0.1001,"88":0.11798,"89":5.94165,"90":2.08065,"91":0.00715,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.0286,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00358,"47":0.00358,"48":0,"49":0,"50":0.01073,"51":0.01073,"52":0,"53":0,"54":0.05005,"55":0.1001,"56":0,"57":0.01073,"58":0,"60":0,"62":0,"63":0.00358,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0286,"74":0.03933,"75":0.12513,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00141,"5.0-5.1":0.00141,"6.0-6.1":0.03312,"7.0-7.1":0.00141,"8.1-8.4":0.00141,"9.0-9.2":0.00282,"9.3":0.03383,"10.0-10.2":0.00916,"10.3":0.05497,"11.0-11.2":0.02819,"11.3-11.4":0.03665,"12.0-12.1":0.05286,"12.2-12.4":0.26428,"13.0-13.1":0.05426,"13.2":0.02326,"13.3":0.1783,"13.4-13.7":0.42707,"14.0-14.4":5.24255,"14.5":0.0895},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00358,"13":0.01073,"14":0.16803,_:"0","3.1":0,"3.2":0,"5.1":0.51123,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00358,"11.1":0.00715,"12.1":0.01073,"13.1":0.05005,"14.1":0.00358},B:{"12":0.00358,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00715,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.00358,"86":0.00358,"87":0.00358,"88":0.00715,"89":0.33605,"90":0.15015},P:{"4":0.49451,"5.0-5.4":0.00989,"6.2-6.4":0.02967,"7.2-7.4":0.07912,"8.2":0.02967,"9.2":0.10879,"10.1":0.05934,"11.1-11.2":0.22747,"12.0":0.16813,"13.0":1.07803,"14.0":0.35605},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00413,"4.2-4.3":0.02687,"4.4":0,"4.4.3-4.4.4":0.14469},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00409,"9":0,"10":0,"11":0.02451,"5.5":0},J:{"7":0,"10":0.00643},N:{"10":0,"11":0.01928},L:{"0":73.55755},S:{"2.5":0},R:{_:"0"},M:{"0":0.11565},Q:{"10.4":0},O:{"0":1.63838},H:{"0":1.25305}};


/***/ }),
/* 341 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01223,"34":0,"35":0,"36":0,"37":0,"38":0.00815,"39":0,"40":0,"41":0,"42":0,"43":0.00815,"44":0.02853,"45":0.00815,"46":0,"47":0,"48":0.00408,"49":0,"50":0,"51":0,"52":0.00815,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00408,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.00408,"78":0.06114,"79":0.00815,"80":0.00408,"81":0,"82":0.04484,"83":0,"84":0.00815,"85":0.00815,"86":0.02446,"87":0.55434,"88":0.19157,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.02038,"38":0.00408,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00815,"48":0.07744,"49":0.05706,"50":0,"51":0,"52":0,"53":0.00815,"54":0,"55":0.00408,"56":0,"57":0,"58":0,"59":0.00408,"60":0,"61":0.06522,"62":0,"63":0,"64":0,"65":0.0163,"66":0,"67":0.00408,"68":0.00815,"69":0.00408,"70":0.00408,"71":0.00815,"72":0.00408,"73":0.00408,"74":0.0163,"75":0.02038,"76":0.02038,"77":0.01223,"78":0.02446,"79":0.0163,"80":0.0163,"81":0.03668,"83":0.0163,"84":0.02038,"85":0.03261,"86":0.06929,"87":0.10598,"88":0.44021,"89":6.37894,"90":2.55973,"91":0.00408,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00408,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04891,"74":0.02853,"75":0.08967,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00829,"6.0-6.1":0.00415,"7.0-7.1":0.19902,"8.1-8.4":0.02488,"9.0-9.2":0.02073,"9.3":0.35658,"10.0-10.2":0.03317,"10.3":0.38975,"11.0-11.2":0.09122,"11.3-11.4":0.15341,"12.0-12.1":0.12024,"12.2-12.4":0.64682,"13.0-13.1":0.08293,"13.2":0.23219,"13.3":0.43536,"13.4-13.7":1.71243,"14.0-14.4":34.45998,"14.5":0.22805},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00408,"9":0.01223,"10":0,"11":0.00408,"12":0.00408,"13":0.08967,"14":2.22142,_:"0","3.1":0,"3.2":0,"5.1":0.00408,"6.1":0,"7.1":0,"9.1":0.00408,"10.1":0.01223,"11.1":0.02853,"12.1":0.03261,"13.1":0.27309,"14.1":0.02038},B:{"12":0.00408,"13":0.00408,"14":0,"15":0.00408,"16":0.00408,"17":0.00815,"18":0.06114,"79":0,"80":0.00408,"81":0,"83":0,"84":0,"85":0.00408,"86":0.00408,"87":0.00408,"88":0.01223,"89":0.94563,"90":0.39537},P:{"4":0.04164,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01041,"8.2":0,"9.2":0.05205,"10.1":0.04164,"11.1-11.2":0.18738,"12.0":0.09369,"13.0":2.42553,"14.0":1.09305},I:{"0":0,"3":0,"4":0.01593,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00796,"4.2-4.3":0.02389,"4.4":0,"4.4.3-4.4.4":0.28672},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.01401,"10":0.00467,"11":0.2055,"5.5":0},J:{"7":0,"10":0.00592},N:{"10":0,"11":0},L:{"0":38.23544},S:{"2.5":0},R:{_:"0"},M:{"0":0.33767},Q:{"10.4":0.0237},O:{"0":0.04147},H:{"0":0.12899}};


/***/ }),
/* 342 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00437,"25":0.00873,"26":0.01747,"27":0.00437,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00873,"34":0,"35":0,"36":0.00437,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00437,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0131,"53":0,"54":0,"55":0,"56":0.00437,"57":0,"58":0,"59":0.00437,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.0131,"67":0,"68":0.00437,"69":0,"70":0,"71":0,"72":0.00437,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.0262,"79":0.08297,"80":0.0131,"81":0.00437,"82":0.00437,"83":0.00437,"84":0.00873,"85":0.00873,"86":0.03057,"87":0.50221,"88":0.17468,"89":0.00437,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00437,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.0262,"32":0.00437,"33":0,"34":0.00437,"35":0,"36":0,"37":0,"38":0.01747,"39":0,"40":0,"41":0.00437,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00437,"49":0.06114,"50":0,"51":0,"52":0,"53":0.02184,"54":0,"55":0,"56":0.00437,"57":0.00437,"58":0.00437,"59":0,"60":0.0262,"61":0.00873,"62":0.00437,"63":0.00437,"64":0.00437,"65":0.00437,"66":0,"67":0.00437,"68":0.0131,"69":0.0262,"70":0.00437,"71":0.00873,"72":0.00873,"73":0.01747,"74":0.00873,"75":0.0131,"76":0.0131,"77":0.00437,"78":0.00873,"79":0.03494,"80":0.13974,"81":0.03057,"83":0.02184,"84":0.04367,"85":0.0262,"86":0.04804,"87":0.12664,"88":0.23145,"89":9.82575,"90":3.60714,"91":0.00437,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00437,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00437,"64":0,"65":0,"66":0,"67":0,"68":0.00437,"69":0,"70":0,"71":0,"72":0,"73":0.07861,"74":0.05677,"75":0.16595,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00437},G:{"8":0.00551,"3.2":0.00551,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01837,"6.0-6.1":0.01102,"7.0-7.1":0.06428,"8.1-8.4":0.04041,"9.0-9.2":0.01102,"9.3":0.2057,"10.0-10.2":0.03673,"10.3":0.17815,"11.0-11.2":0.06428,"11.3-11.4":0.1102,"12.0-12.1":0.11203,"12.2-12.4":0.36181,"13.0-13.1":0.07346,"13.2":0.03857,"13.3":0.26631,"13.4-13.7":0.74934,"14.0-14.4":15.2071,"14.5":0.21488},E:{"4":0,"5":0,"6":0,"7":0.00437,"8":0.06551,"9":0,"10":0,"11":0,"12":0,"13":0.02184,"14":0.51967,_:"0","3.1":0,"3.2":0,"5.1":0.0131,"6.1":0.00437,"7.1":0,"9.1":0,"10.1":0.00437,"11.1":0.00873,"12.1":0.02184,"13.1":0.05677,"14.1":0.00873},B:{"12":0,"13":0,"14":0.00437,"15":0.00437,"16":0.00437,"17":0.00437,"18":0.04367,"79":0,"80":0,"81":0,"83":0.00437,"84":0.00873,"85":0.00437,"86":0.00873,"87":0.00873,"88":0.00873,"89":0.72492,"90":0.30132},P:{"4":0.11248,"5.0-5.4":0.02045,"6.2-6.4":0.01023,"7.2-7.4":0.0409,"8.2":0.0409,"9.2":0.19428,"10.1":0.09203,"11.1-11.2":0.32721,"12.0":0.27609,"13.0":3.79362,"14.0":1.78945},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00813,"4.2-4.3":0.02032,"4.4":0,"4.4.3-4.4.4":0.1158},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00437,"10":0.00437,"11":0.31879,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":53.22931},S:{"2.5":0},R:{_:"0"},M:{"0":0.18589},Q:{"10.4":0.01127},O:{"0":0.09013},H:{"0":0.24532}};


/***/ }),
/* 343 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.01089,"31":0,"32":0,"33":0.02178,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00544,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.17965,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00544,"69":0,"70":0.00544,"71":0,"72":0.01633,"73":0.01089,"74":0,"75":0,"76":0,"77":0,"78":0.01633,"79":0.01633,"80":0.00544,"81":0.00544,"82":0,"83":0.00544,"84":0,"85":0.01089,"86":0.06533,"87":1.21946,"88":0.4573,"89":0.00544,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.30486,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.01089,"66":0.00544,"67":0.07622,"68":0,"69":0,"70":0,"71":0.01089,"72":0.05444,"73":0,"74":0.00544,"75":0.05444,"76":0.01089,"77":0.03811,"78":0.03266,"79":0.03266,"80":0.03266,"81":0.02722,"83":0.03266,"84":0.01633,"85":0.02722,"86":0.0871,"87":0.21232,"88":0.47907,"89":8.96627,"90":3.84346,"91":0.00544,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00544,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.03811,"74":0.30486,"75":0.25587,"9.5-9.6":0.00544,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00894,"6.0-6.1":0.00894,"7.0-7.1":0.0134,"8.1-8.4":0.02681,"9.0-9.2":0,"9.3":1.45215,"10.0-10.2":0.01787,"10.3":1.05001,"11.0-11.2":0.12064,"11.3-11.4":0.04915,"12.0-12.1":0.0983,"12.2-12.4":0.67469,"13.0-13.1":0.07596,"13.2":0.01787,"13.3":0.37532,"13.4-13.7":1.26002,"14.0-14.4":36.22324,"14.5":0.22341},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.02178,"12":0.01089,"13":0.13066,"14":4.69273,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01089,"10.1":0.01633,"11.1":0.1361,"12.1":0.08166,"13.1":0.72405,"14.1":0.07622},B:{"12":0,"13":0,"14":0.049,"15":0.00544,"16":0,"17":0.01089,"18":0.07622,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.00544,"86":0.00544,"87":0.00544,"88":0.01089,"89":2.37903,"90":1.21946},P:{"4":0.01086,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.02172,"9.2":0,"10.1":0.08688,"11.1-11.2":0.01086,"12.0":0.04344,"13.0":1.91127,"14.0":1.08595},I:{"0":0,"3":0,"4":0.27439,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.0093,"4.4":0,"4.4.3-4.4.4":0.3116},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.03158,"10":0,"11":0.44205,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":24.39667},S:{"2.5":0},R:{_:"0"},M:{"0":0.59684},Q:{"10.4":0},O:{"0":0.00911},H:{"0":0.09058}};


/***/ }),
/* 344 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00224,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00224,"43":0,"44":0,"45":0,"46":0,"47":0.00224,"48":0,"49":0,"50":0,"51":0,"52":0.00673,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00224,"67":0,"68":0.00449,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00673,"79":0,"80":0,"81":0.00224,"82":0.00224,"83":0.00224,"84":0.00449,"85":0.00449,"86":0.01122,"87":0.17271,"88":0.07402,"89":0.00449,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00897,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00224,"57":0,"58":0.00224,"59":0,"60":0,"61":0.00224,"62":0,"63":0.00449,"64":0.00224,"65":0,"66":0,"67":0,"68":0.00224,"69":0.00224,"70":0.00673,"71":0.00897,"72":0.00224,"73":0.00224,"74":0.00449,"75":0.00224,"76":0.00224,"77":0.00224,"78":0.00449,"79":0.00673,"80":0.00897,"81":0.01122,"83":0.01346,"84":0.01122,"85":0.01122,"86":0.01794,"87":0.03365,"88":0.05832,"89":2.51665,"90":0.93533,"91":0.00449,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00224,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00897,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00224,"46":0.00224,"47":0.00224,"48":0,"49":0,"50":0.01122,"51":0.01122,"52":0.00449,"53":0,"54":0.09421,"55":0.1772,"56":0,"57":0,"58":0,"60":0,"62":0.00224,"63":0.01346,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00673,"74":0.01346,"75":0.04037,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00134,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.0008,"5.0-5.1":0.0008,"6.0-6.1":0.00107,"7.0-7.1":0.00883,"8.1-8.4":0.00053,"9.0-9.2":0.00134,"9.3":0.01819,"10.0-10.2":0.00401,"10.3":0.01739,"11.0-11.2":0.08933,"11.3-11.4":0.01953,"12.0-12.1":0.0206,"12.2-12.4":0.08987,"13.0-13.1":0.01632,"13.2":0.00936,"13.3":0.04253,"13.4-13.7":0.12732,"14.0-14.4":1.97205,"14.5":0.04413},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00224,"14":0.06729,_:"0","3.1":0,"3.2":0,"5.1":0.01122,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00224,"12.1":0.00224,"13.1":0.01122,"14.1":0.00224},B:{"12":0.00224,"13":0,"14":0,"15":0,"16":0,"17":0.00224,"18":0.00449,"79":0,"80":0,"81":0,"83":0,"84":0.00224,"85":0.00224,"86":0,"87":0.00224,"88":0.00224,"89":0.11215,"90":0.05159},P:{"4":0.42731,"5.0-5.4":0.00994,"6.2-6.4":0.03975,"7.2-7.4":0.14906,"8.2":0.01987,"9.2":0.08944,"10.1":0.03975,"11.1-11.2":0.14906,"12.0":0.08944,"13.0":0.65586,"14.0":0.16893},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00303,"4.2-4.3":0.00607,"4.4":0,"4.4.3-4.4.4":0.05763},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01346,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":81.02213},S:{"2.5":0.76794},R:{_:"0"},M:{"0":0.14738},Q:{"10.4":0},O:{"0":3.76215},H:{"0":3.05503}};


/***/ }),
/* 345 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00701,"34":0.00234,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00467,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00234,"66":0,"67":0,"68":0.00234,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00234,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00234,"85":0.00234,"86":0.00935,"87":0.1262,"88":0.06544,"89":0.00234,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01169,"39":0,"40":0.00467,"41":0,"42":0.00234,"43":0.01636,"44":0,"45":0,"46":0,"47":0.00234,"48":0,"49":0.00467,"50":0,"51":0,"52":0,"53":0.00467,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00234,"61":0.00234,"62":0,"63":0.00467,"64":0.00234,"65":0.00234,"66":0,"67":0.00234,"68":0.00234,"69":0.00234,"70":0.00467,"71":0.00467,"72":0.00234,"73":0.00234,"74":0.00234,"75":0.00467,"76":0.00234,"77":0.00234,"78":0.00234,"79":0.01636,"80":0.00467,"81":0.02103,"83":0.02103,"84":0.00935,"85":0.00701,"86":0.0187,"87":0.03272,"88":0.06777,"89":2.20379,"90":0.90676,"91":0.00234,"92":0.00234,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00467,"55":0.00467,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00234,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04908,"74":0.02571,"75":0.0818,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01318,"6.0-6.1":0.00377,"7.0-7.1":0.12614,"8.1-8.4":0,"9.0-9.2":0.00377,"9.3":0.09979,"10.0-10.2":0.02824,"10.3":0.12803,"11.0-11.2":0.05272,"11.3-11.4":0.10167,"12.0-12.1":0.08472,"12.2-12.4":0.51776,"13.0-13.1":0.05083,"13.2":0.03012,"13.3":0.23346,"13.4-13.7":0.70603,"14.0-14.4":15.08086,"14.5":0.27488},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00935,"14":0.50012,_:"0","3.1":0,"3.2":0,"5.1":0.08881,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00234,"12.1":0.00234,"13.1":0.03038,"14.1":0.00701},B:{"12":0,"13":0,"14":0,"15":0.00234,"16":0.00234,"17":0.00234,"18":0.01636,"79":0,"80":0,"81":0,"83":0,"84":0.00234,"85":0.00234,"86":0,"87":0,"88":0.00234,"89":0.18462,"90":0.09114},P:{"4":0.24887,"5.0-5.4":0.01037,"6.2-6.4":0.03111,"7.2-7.4":0.19703,"8.2":0.01037,"9.2":0.17629,"10.1":0.05185,"11.1-11.2":0.4459,"12.0":0.25924,"13.0":3.52572,"14.0":1.47251},I:{"0":0,"3":0,"4":0.00341,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00341,"4.2-4.3":0.02299,"4.4":0,"4.4.3-4.4.4":0.18732},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.07245,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":67.90879},S:{"2.5":0},R:{_:"0"},M:{"0":0.10728},Q:{"10.4":0},O:{"0":0.73565},H:{"0":0.26117}};


/***/ }),
/* 346 */
/***/ ((module) => {

module.exports={C:{"3":0.00729,"27":0.00243,"29":0.00486,"30":0.00243,"31":0.00243,"32":0.00243,"33":0.00972,"34":0.00243,"35":0.00243,"37":0.00243,"38":0.00729,"39":0.00486,"40":0.00486,"41":0.00972,"43":0.01215,"45":0.00486,"47":0.01701,"48":0.00729,"49":0.00486,"50":0.00486,"52":0.08505,"53":0.00729,"54":0.00486,"55":0.00243,"56":0.01215,"57":0.00486,"58":0.00243,"59":0.00243,"60":0.00729,"61":0.00243,"62":0.00486,"65":0.00243,"66":0.00243,"67":0.00243,"68":0.00729,"69":0.00486,"70":0.00486,"71":0.00243,"72":0.02916,"73":0.00486,"74":0.00243,"75":0.00486,"76":0.00486,"77":0.00729,"78":0.12393,"79":0.01215,"80":0.02187,"81":0.01944,"82":0.01944,"83":0.01944,"84":0.03645,"85":0.05346,"86":0.16038,"87":2.6487,"88":1.01817,"89":0.01215,_:"2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 28 36 42 44 46 51 63 64 90 3.5","3.6":0.00486},D:{"11":0.00243,"22":0.00243,"26":0.00243,"29":0.00243,"33":0.01215,"34":0.00486,"35":0.01458,"38":0.01215,"39":0.00486,"41":0.00243,"42":0.00243,"48":0.00486,"49":0.07533,"51":0.00486,"53":0.00729,"54":0.00729,"55":0.00486,"56":0.00486,"57":0.00243,"58":0.00729,"59":0.00243,"60":0.00729,"61":0.04374,"62":0.00729,"63":0.06318,"64":0.00486,"65":0.00243,"66":0.00486,"67":0.01215,"68":0.00486,"69":0.00729,"70":0.00972,"71":0.02673,"72":0.00729,"73":0.00729,"74":0.00972,"75":0.00972,"76":0.0972,"77":0.02673,"78":0.01944,"79":0.04617,"80":0.14094,"81":0.04131,"83":0.0729,"84":0.11178,"85":0.12393,"86":0.17496,"87":0.24786,"88":0.30132,"89":8.75286,"90":3.78351,"91":0.00729,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 23 24 25 27 28 30 31 32 36 37 40 43 44 45 46 47 50 52 92 93"},F:{"64":0.00486,"68":0.00729,"70":0.00486,"71":0.00486,"72":0.00729,"73":0.0486,"74":0.10206,"75":0.35235,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 65 66 67 69 9.5-9.6 10.5 10.6 11.1 11.5","10.0-10.1":0,"11.6":0.00486,"12.1":0.00729},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00227,"6.0-6.1":0.00189,"7.0-7.1":0.00831,"8.1-8.4":0.00151,"9.0-9.2":0.00529,"9.3":0.03097,"10.0-10.2":0.01964,"10.3":0.05967,"11.0-11.2":0.04909,"11.3-11.4":0.0676,"12.0-12.1":0.06156,"12.2-12.4":0.25642,"13.0-13.1":0.04645,"13.2":0.02266,"13.3":0.14237,"13.4-13.7":0.3025,"14.0-14.4":2.25002,"14.5":0.0253},E:{"4":0,"5":0.00486,"7":0.00729,"13":0.02187,"14":0.0972,_:"0 6 8 9 10 11 12 3.1 3.2 6.1 7.1 14.1","5.1":0.08262,"9.1":0.00486,"10.1":0.00243,"11.1":0.00243,"12.1":0.00486,"13.1":0.02187},B:{"12":0.00486,"13":0.00486,"14":0.00972,"15":0.00486,"16":0.00486,"17":0.00729,"18":0.06318,"81":0.00486,"84":0.01458,"85":0.00972,"86":0.00729,"87":0.00729,"88":0.00972,"89":0.32319,"90":0.14337,_:"79 80 83"},P:{"4":1.74709,"5.0-5.4":0.19188,"6.2-6.4":0.16158,"7.2-7.4":1.03008,"8.2":0.17168,"9.2":0.93919,"10.1":0.41405,"11.1-11.2":1.74709,"12.0":1.08057,"13.0":5.56443,"14.0":0.97958},I:{"0":0,"3":0,"4":0.00105,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00418,"4.2-4.3":0.0408,"4.4":0,"4.4.3-4.4.4":0.13565},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.02935,"9":0.01223,"10":0.00734,"11":2.15266,_:"6 7 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0.01928},L:{"0":58.36712},S:{"2.5":0},R:{_:"0"},M:{"0":0.80242},Q:{"10.4":0},O:{"0":0.12112},H:{"0":0.43001}};


/***/ }),
/* 347 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01318,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.04612,"49":0,"50":0,"51":0,"52":0.03295,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00659,"73":0,"74":0,"75":0,"76":0.01977,"77":0.00659,"78":0.07907,"79":0.00659,"80":0,"81":0,"82":0,"83":0.01977,"84":0.01977,"85":0.01977,"86":0.0593,"87":2.10848,"88":0.82363,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.01318,"35":0,"36":0,"37":0,"38":0.00659,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.13178,"50":0,"51":0,"52":0.00659,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00659,"61":0.01318,"62":0,"63":0.00659,"64":0,"65":0.01318,"66":0.01977,"67":0.02636,"68":0,"69":0,"70":0.00659,"71":0,"72":0,"73":0.00659,"74":0.00659,"75":0.00659,"76":0.01977,"77":0.01318,"78":0.03295,"79":0.03295,"80":0.01318,"81":0.03295,"83":0.03953,"84":0.06589,"85":0.03295,"86":0.11201,"87":0.36898,"88":0.98176,"89":18.06704,"90":6.33203,"91":0.00659,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.32286,"74":0.16473,"75":0.481,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01103,"6.0-6.1":0,"7.0-7.1":0.00551,"8.1-8.4":0.12683,"9.0-9.2":0,"9.3":0.12131,"10.0-10.2":0,"10.3":0.2123,"11.0-11.2":0.07444,"11.3-11.4":0.0579,"12.0-12.1":0.14888,"12.2-12.4":0.37221,"13.0-13.1":0.06341,"13.2":0.18197,"13.3":0.17921,"13.4-13.7":0.81335,"14.0-14.4":24.2295,"14.5":0.3281},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00659,"12":0.00659,"13":0.09884,"14":5.73243,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00659,"10.1":0.01318,"11.1":0.23062,"12.1":0.25697,"13.1":0.97517,"14.1":0.24379},B:{"12":0,"13":0,"14":0,"15":0.00659,"16":0.01318,"17":0.01318,"18":0.07907,"79":0,"80":0.00659,"81":0,"83":0,"84":0.00659,"85":0.00659,"86":0.03295,"87":0.01977,"88":0.01318,"89":2.06895,"90":0.98835},P:{"4":0.05126,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01025,"8.2":0.01025,"9.2":0.0205,"10.1":0.03076,"11.1-11.2":0.05126,"12.0":0.19478,"13.0":2.21439,"14.0":1.13795},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0095,"4.2-4.3":0.02089,"4.4":0,"4.4.3-4.4.4":0.07597},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.17131,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":24.36874},S:{"2.5":0},R:{_:"0"},M:{"0":0.2183},Q:{"10.4":0},O:{"0":0.00682},H:{"0":0.08719}};


/***/ }),
/* 348 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0103,"34":0.00515,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00515,"49":0,"50":0,"51":0,"52":0.03604,"53":0,"54":0.00515,"55":0.00515,"56":0.0103,"57":0,"58":0,"59":0.00515,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00515,"67":0,"68":0.01545,"69":0,"70":0,"71":0,"72":0.00515,"73":0,"74":0,"75":0,"76":0,"77":0.00515,"78":0.20596,"79":0.00515,"80":0.00515,"81":0.0103,"82":0.10813,"83":0.00515,"84":0.0103,"85":0.02575,"86":0.04119,"87":2.79076,"88":1.72492,"89":0.00515,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.0103,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00515,"35":0.00515,"36":0,"37":0,"38":0.0206,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.10298,"50":0.08753,"51":0,"52":0.00515,"53":0.21111,"54":0,"55":0.00515,"56":0.0103,"57":0,"58":0,"59":0.00515,"60":0.01545,"61":0.02575,"62":0.00515,"63":0.0103,"64":0.00515,"65":0.0103,"66":0.03604,"67":0.0103,"68":0.05149,"69":0.05149,"70":0.01545,"71":0.00515,"72":0.00515,"73":0.0103,"74":0.01545,"75":0.0103,"76":0.0103,"77":0.01545,"78":0.0103,"79":0.0206,"80":0.0206,"81":0.05664,"83":0.03604,"84":0.03604,"85":0.03089,"86":0.05664,"87":0.16477,"88":0.16477,"89":9.87063,"90":4.17584,"91":0.00515,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00515,"37":0,"38":0,"39":0,"40":0.00515,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0103,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00515,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00515,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.12873,"74":0.05664,"75":0.24715,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00587,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00587,"6.0-6.1":0.00587,"7.0-7.1":0.02642,"8.1-8.4":0.01321,"9.0-9.2":0.02202,"9.3":0.2378,"10.0-10.2":0.0367,"10.3":0.24221,"11.0-11.2":0.10569,"11.3-11.4":0.10863,"12.0-12.1":0.08367,"12.2-12.4":0.23487,"13.0-13.1":0.08367,"13.2":0.03523,"13.3":0.17615,"13.4-13.7":0.58276,"14.0-14.4":11.88428,"14.5":0.18055},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00515,"12":0.0103,"13":0.05664,"14":1.71977,_:"0","3.1":0,"3.2":0,"5.1":0.00515,"6.1":0,"7.1":0,"9.1":0.00515,"10.1":0.01545,"11.1":0.05149,"12.1":0.05664,"13.1":0.2729,"14.1":0.03604},B:{"12":0,"13":0,"14":0,"15":0.00515,"16":0,"17":0.00515,"18":0.08753,"79":0,"80":0,"81":0,"83":0,"84":0.00515,"85":0.00515,"86":0.00515,"87":0.00515,"88":0.00515,"89":1.09674,"90":0.47371},P:{"4":0.88701,"5.0-5.4":0.01044,"6.2-6.4":0,"7.2-7.4":0.02087,"8.2":0.01044,"9.2":0.05218,"10.1":0.05218,"11.1-11.2":0.19827,"12.0":0.13566,"13.0":1.80533,"14.0":0.76179},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00894,"4.2-4.3":0.04024,"4.4":0,"4.4.3-4.4.4":0.29955},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00557,"9":0,"10":0,"11":0.26733,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":53.09062},S:{"2.5":0},R:{_:"0"},M:{"0":0.24255},Q:{"10.4":0.02911},O:{"0":0.15523},H:{"0":0.17911}};


/***/ }),
/* 349 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00511,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01021,"49":0,"50":0,"51":0,"52":0.00511,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.01021,"66":0,"67":0,"68":0.00511,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.00511,"78":0.04085,"79":0,"80":0.00511,"81":0.00511,"82":0,"83":0.00511,"84":0.06127,"85":0.00511,"86":0.03574,"87":0.85781,"88":0.23488,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00511,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.21956,"50":0,"51":0,"52":0,"53":0.01532,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.53613,"62":0,"63":0,"64":0,"65":0.01021,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.02042,"73":0.00511,"74":0.00511,"75":0.01021,"76":0.00511,"77":0.00511,"78":0,"79":0.00511,"80":0.03574,"81":0.00511,"83":0.00511,"84":0.03064,"85":0.02553,"86":0.02042,"87":0.11744,"88":0.18892,"89":7.07181,"90":2.75724,"91":0.00511,"92":0.00511,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04085,"74":0.0817,"75":0.15829,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.01045,"7.0-7.1":0,"8.1-8.4":0.04701,"9.0-9.2":0,"9.3":0.69991,"10.0-10.2":0.03656,"10.3":0.92451,"11.0-11.2":0.03656,"11.3-11.4":0.09924,"12.0-12.1":0.04701,"12.2-12.4":0.75215,"13.0-13.1":0.05746,"13.2":0.01567,"13.3":0.48054,"13.4-13.7":1.3267,"14.0-14.4":45.04004,"14.5":0.24549},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00511,"12":0.01021,"13":0.05617,"14":6.12209,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01021,"10.1":0.01532,"11.1":0.0817,"12.1":0.0868,"13.1":0.61783,"14.1":0.0817},B:{"12":0,"13":0,"14":0,"15":0,"16":0.07659,"17":0.03064,"18":0.05617,"79":0,"80":0.02042,"81":0,"83":0,"84":0,"85":0.01021,"86":0.01532,"87":0.01021,"88":0.01532,"89":2.44067,"90":1.0212},P:{"4":0.48921,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0.04349,"12.0":0.0761,"13.0":2.38084,"14.0":1.28283},I:{"0":0,"3":0,"4":0.01021,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02553,"4.2-4.3":0.01021,"4.4":0,"4.4.3-4.4.4":0.31657},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.3421,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":19.20976},S:{"2.5":0.00489},R:{_:"0"},M:{"0":0.1615},Q:{"10.4":0},O:{"0":0.00489},H:{"0":0.0139}};


/***/ }),
/* 350 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00465,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00465,"53":0,"54":0,"55":0.00465,"56":0,"57":0,"58":0,"59":0,"60":0.0093,"61":0.00465,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00465,"68":0,"69":0,"70":0,"71":0,"72":0.00465,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02791,"79":0,"80":0,"81":0.00465,"82":0,"83":0.00465,"84":0,"85":0.00465,"86":0.02791,"87":0.40472,"88":0.13956,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00465,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01396,"34":0,"35":0,"36":0,"37":0,"38":0.00465,"39":0,"40":0,"41":0,"42":0,"43":0.0093,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.05117,"50":0,"51":0,"52":0,"53":0.02791,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00465,"64":0.00465,"65":0.0093,"66":0.00465,"67":0,"68":0.0093,"69":0.0093,"70":0.0093,"71":0.00465,"72":0.00465,"73":0.01396,"74":0.20004,"75":0.04652,"76":0.07443,"77":0.02326,"78":0.03256,"79":0.03256,"80":0.02326,"81":0.06978,"83":0.02791,"84":0.06513,"85":0.04187,"86":0.03256,"87":0.1256,"88":0.2233,"89":8.2666,"90":3.4797,"91":0.02326,"92":0.0093,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.0093,"55":0.02791,"56":0,"57":0.00465,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.12095,"74":0.09769,"75":0.2419,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00189,"3.2":0.00568,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03406,"6.0-6.1":0,"7.0-7.1":0.28001,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.1892,"10.0-10.2":0.00189,"10.3":0.16649,"11.0-11.2":0.11919,"11.3-11.4":0.05487,"12.0-12.1":0.03784,"12.2-12.4":0.24028,"13.0-13.1":0.05108,"13.2":0.01703,"13.3":0.27055,"13.4-13.7":0.67164,"14.0-14.4":15.59726,"14.5":0.21568},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00465,"13":0.01861,"14":0.74432,_:"0","3.1":0,"3.2":0,"5.1":0.04187,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0093,"11.1":0.01396,"12.1":0.01396,"13.1":0.11165,"14.1":0.0093},B:{"12":0.00465,"13":0.00465,"14":0.00465,"15":0.02326,"16":0.0093,"17":0.0093,"18":0.06978,"79":0,"80":0.00465,"81":0,"83":0,"84":0.0093,"85":0.0093,"86":0.0093,"87":0.0093,"88":0.02791,"89":1.81428,"90":0.80014},P:{"4":0.15251,"5.0-5.4":0.02179,"6.2-6.4":0,"7.2-7.4":0.1634,"8.2":0,"9.2":0.13072,"10.1":0.01089,"11.1-11.2":0.31591,"12.0":0.19609,"13.0":2.57089,"14.0":1.15472},I:{"0":0,"3":0,"4":0.02491,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01661,"4.2-4.3":0.17438,"4.4":0,"4.4.3-4.4.4":1.30366},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01467,"9":0,"10":0.00978,"11":0.16628,"5.5":0},J:{"7":0,"10":0.00535},N:{"10":0,"11":0},L:{"0":54.0088},S:{"2.5":0},R:{_:"0"},M:{"0":0.123},Q:{"10.4":0},O:{"0":0.5241},H:{"0":0.29873}};


/***/ }),
/* 351 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0028,"34":0.00841,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.0028,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0028,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.0028,"64":0,"65":0,"66":0,"67":0,"68":0.0028,"69":0.0028,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.0028,"79":0,"80":0,"81":0.00561,"82":0,"83":0,"84":0.0028,"85":0.0028,"86":0.00841,"87":0.27189,"88":0.07848,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00561,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00561,"39":0,"40":0,"41":0,"42":0,"43":0.0028,"44":0,"45":0,"46":0,"47":0.0028,"48":0,"49":0.01962,"50":0,"51":0,"52":0,"53":0.00561,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00561,"64":0.0028,"65":0.00841,"66":0.0028,"67":0,"68":0.0028,"69":0.0028,"70":0.0028,"71":0.0028,"72":0,"73":0.0028,"74":0.0028,"75":0.0028,"76":0.0028,"77":0.0028,"78":0.00561,"79":0.01121,"80":0.00841,"81":0.01682,"83":0.02803,"84":0.00841,"85":0.01121,"86":0.02523,"87":0.04765,"88":0.07568,"89":3.89897,"90":1.33983,"91":0.0028,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00561,"51":0,"52":0,"53":0,"54":0.0028,"55":0.0028,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0028,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.07848,"74":0.07568,"75":0.0897,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02569,"6.0-6.1":0.00489,"7.0-7.1":0.07464,"8.1-8.4":0,"9.0-9.2":0.00367,"9.3":0.09421,"10.0-10.2":0.01224,"10.3":0.10033,"11.0-11.2":0.04527,"11.3-11.4":0.07341,"12.0-12.1":0.05751,"12.2-12.4":0.28264,"13.0-13.1":0.06974,"13.2":0.0208,"13.3":0.11501,"13.4-13.7":0.46984,"14.0-14.4":9.69895,"14.5":0.14193},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0028,"13":0.00841,"14":0.28591,_:"0","3.1":0,"3.2":0,"5.1":0.04205,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00561,"12.1":0.00841,"13.1":0.03364,"14.1":0.00561},B:{"12":0,"13":0,"14":0,"15":0.0028,"16":0,"17":0.0028,"18":0.01121,"79":0,"80":0,"81":0,"83":0,"84":0.0028,"85":0.0028,"86":0.0028,"87":0.0028,"88":0.0028,"89":0.30833,"90":0.12894},P:{"4":0.30344,"5.0-5.4":0.02023,"6.2-6.4":0.02023,"7.2-7.4":0.14161,"8.2":0.01011,"9.2":0.13149,"10.1":0.03034,"11.1-11.2":0.39447,"12.0":0.17195,"13.0":1.94202,"14.0":0.57654},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.22741,"4.2-4.3":0.83384,"4.4":0,"4.4.3-4.4.4":8.71746},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01962,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":65.7965},S:{"2.5":0},R:{_:"0"},M:{"0":0.14394},Q:{"10.4":0},O:{"0":0.35985},H:{"0":0.25211}};


/***/ }),
/* 352 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.03476,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00497,"46":0,"47":0,"48":0.00993,"49":0,"50":0,"51":0,"52":0.02483,"53":0.00497,"54":0,"55":0,"56":0.0149,"57":0,"58":0,"59":0,"60":0.00497,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00497,"67":0.00497,"68":0.0149,"69":0,"70":0,"71":0,"72":0.00497,"73":0,"74":0,"75":0.00497,"76":0,"77":0,"78":0.05463,"79":0.00497,"80":0.00497,"81":0.00993,"82":0.00497,"83":0.00497,"84":0.0149,"85":0.02483,"86":0.04469,"87":0.91871,"88":0.33769,"89":0.00497,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00497,"44":0,"45":0,"46":0,"47":0,"48":0.00497,"49":0.12912,"50":0,"51":0,"52":0.00497,"53":0.00497,"54":0,"55":0.00497,"56":0.00993,"57":0,"58":0.00497,"59":0.00497,"60":0,"61":0.05959,"62":0.00993,"63":0.00497,"64":0.00497,"65":0.00993,"66":0.00497,"67":0.00993,"68":0.00497,"69":0.02483,"70":0.0149,"71":0.01986,"72":0.00993,"73":0.00497,"74":0.0149,"75":0.0149,"76":0.00497,"77":0.00993,"78":0.01986,"79":0.0298,"80":0.03973,"81":0.08442,"83":0.04966,"84":0.06456,"85":0.03973,"86":0.09932,"87":0.12912,"88":0.31782,"89":6.7339,"90":2.44824,"91":0.00993,"92":0.00497,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00497,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00497,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00993,"74":0.0298,"75":0.08442,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00988,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00494,"5.0-5.1":0.00988,"6.0-6.1":0.01482,"7.0-7.1":0.0494,"8.1-8.4":0.09386,"9.0-9.2":0.34087,"9.3":0.31122,"10.0-10.2":0.12844,"10.3":0.33098,"11.0-11.2":0.3211,"11.3-11.4":0.31616,"12.0-12.1":0.33592,"12.2-12.4":0.72619,"13.0-13.1":0.19266,"13.2":0.07904,"13.3":0.53353,"13.4-13.7":2.14399,"14.0-14.4":41.91652,"14.5":0.39027},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00993,"12":0.00993,"13":0.05959,"14":1.67851,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00497,"10.1":0.0149,"11.1":0.03973,"12.1":0.05463,"13.1":0.22844,"14.1":0.03476},B:{"12":0,"13":0.00497,"14":0.00497,"15":0.00497,"16":0.00497,"17":0.0149,"18":0.06952,"79":0,"80":0.00497,"81":0,"83":0.00497,"84":0.00497,"85":0.00497,"86":0.00993,"87":0.00993,"88":0.0149,"89":2.7164,"90":1.25143},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.03163,"10.1":0.01054,"11.1-11.2":0.05271,"12.0":0.04217,"13.0":0.88555,"14.0":0.43223},I:{"0":0,"3":0,"4":0.02404,"2.1":0,"2.2":0.01717,"2.3":0,"4.1":0.03435,"4.2-4.3":0.10991,"4.4":0,"4.4.3-4.4.4":0.41902},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.01117,"10":0.00559,"11":1.68161,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":27.11155},S:{"2.5":0},R:{_:"0"},M:{"0":0.29197},Q:{"10.4":0.06544},O:{"0":0.35741},H:{"0":0.11915}};


/***/ }),
/* 353 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00278,"33":0.00278,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00278,"48":0,"49":0,"50":0,"51":0,"52":0.01112,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00834,"68":0.00556,"69":0,"70":0,"71":0,"72":0.00556,"73":0,"74":0,"75":0,"76":0,"77":0.00278,"78":0.01391,"79":0.00278,"80":0.00278,"81":0.00278,"82":0.00556,"83":0.00278,"84":0.00556,"85":0.01112,"86":0.02503,"87":0.41993,"88":0.19745,"89":0.00834,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00278,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00278,"39":0.00834,"40":0.00278,"41":0,"42":0.00278,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01391,"50":0,"51":0,"52":0,"53":0.00278,"54":0,"55":0,"56":0.00278,"57":0,"58":0.00278,"59":0,"60":0,"61":0.01112,"62":0.00278,"63":0.00278,"64":0.00278,"65":0.00278,"66":0,"67":0.00556,"68":0.00556,"69":0.00556,"70":0.00278,"71":0.00278,"72":0.00278,"73":0.00278,"74":0.00556,"75":0.00278,"76":0.00278,"77":0.00278,"78":0.00278,"79":0.00834,"80":0.01112,"81":0.01669,"83":0.01112,"84":0.00834,"85":0.01112,"86":0.03059,"87":0.04728,"88":0.07231,"89":2.98958,"90":1.30707,"91":0.00556,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0.00278,"16":0.00556,"17":0,"18":0,"19":0,"20":0.00834,"21":0.00278,"22":0,"23":0.00556,"24":0.03893,"25":0.00278,"26":0.04728,"27":0.08065,"28":0.03615,"29":0.00834,"30":0.03337,"31":0.01947,"32":0.0445,"33":0.03893,"34":0,"35":0.00556,"36":0.00278,"37":0.00556,"38":0.03337,"39":0.00278,"40":0,"41":0,"42":0.01947,"43":0,"44":0.00278,"45":0.01669,"46":0.08343,"47":0.05284,"48":0,"49":0,"50":0.19467,"51":0.29201,"52":0,"53":0.00556,"54":1.23198,"55":1.054,"56":0,"57":0,"58":0,"60":0.00556,"62":0.01112,"63":0.03615,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00834,"73":0.01947,"74":0.04728,"75":0.18911,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.04728},G:{"8":0.00062,"3.2":0,"4.0-4.1":0.00062,"4.2-4.3":0,"5.0-5.1":0.00781,"6.0-6.1":0.00094,"7.0-7.1":0.03623,"8.1-8.4":0.0025,"9.0-9.2":0.00219,"9.3":0.05528,"10.0-10.2":0.00406,"10.3":0.05497,"11.0-11.2":0.0153,"11.3-11.4":0.01312,"12.0-12.1":0.01999,"12.2-12.4":0.10369,"13.0-13.1":0.01718,"13.2":0.00906,"13.3":0.10557,"13.4-13.7":0.1546,"14.0-14.4":2.21408,"14.5":0.03935},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00556,"14":0.10568,_:"0","3.1":0,"3.2":0,"5.1":0.02503,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00278,"12.1":0.00556,"13.1":0.02225,"14.1":0.00278},B:{"12":0.00278,"13":0.00278,"14":0.00278,"15":0.00278,"16":0.00278,"17":0.00278,"18":0.01669,"79":0,"80":0,"81":0,"83":0,"84":0.00278,"85":0.00278,"86":0.00278,"87":0.00278,"88":0.00556,"89":0.25307,"90":0.12236},P:{"4":0.15216,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.04058,"8.2":0,"9.2":0.02029,"10.1":0.02029,"11.1-11.2":0.08115,"12.0":0.05072,"13.0":0.59849,"14.0":0.21302},I:{"0":0,"3":0,"4":0.00082,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00205,"4.2-4.3":0.00532,"4.4":0,"4.4.3-4.4.4":0.1024},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.05284,"5.5":0},J:{"7":0,"10":0.01444},N:{"10":0,"11":0},L:{"0":47.56906},S:{"2.5":0},R:{_:"0"},M:{"0":0.15882},Q:{"10.4":0.00722},O:{"0":0.42592},H:{"0":30.17424}};


/***/ }),
/* 354 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00582,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00582,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00582,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.04073,"79":0,"80":0,"81":0,"82":0,"83":0.00582,"84":0.01746,"85":0.00582,"86":0.02328,"87":0.42479,"88":0.14548,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.11056,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00582,"57":0,"58":0,"59":0.02328,"60":0.00582,"61":0,"62":0,"63":0.00582,"64":0.00582,"65":0.00582,"66":0.00582,"67":0.00582,"68":0.00582,"69":0,"70":0,"71":0.04073,"72":0.01164,"73":0.01164,"74":0.02328,"75":0.00582,"76":0.00582,"77":0,"78":0.01746,"79":0.0291,"80":0.02328,"81":0.05237,"83":0.01746,"84":0.01746,"85":0.03491,"86":0.16293,"87":0.13966,"88":3.78817,"89":18.87684,"90":3.66597,"91":0.01164,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00582,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00582,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00582,"55":0.01164,"56":0,"57":0,"58":0,"60":0,"62":0.01164,"63":0.01746,"64":0,"65":0,"66":0,"67":0,"68":0.00582,"69":0.02328,"70":0,"71":0,"72":0.01164,"73":0.37824,"74":0.26186,"75":0.69246,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00079,"5.0-5.1":0.00236,"6.0-6.1":0,"7.0-7.1":0.00394,"8.1-8.4":0,"9.0-9.2":0.00472,"9.3":0.02205,"10.0-10.2":0.01024,"10.3":0.04173,"11.0-11.2":0.02205,"11.3-11.4":0.0189,"12.0-12.1":0.03228,"12.2-12.4":0.19056,"13.0-13.1":0.04095,"13.2":0.03228,"13.3":0.12599,"13.4-13.7":0.37246,"14.0-14.4":6.4979,"14.5":0.13544},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.01164,"14":0.76229,_:"0","3.1":0,"3.2":0,"5.1":1.26854,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00582,"13.1":0.04655,"14.1":0.00582},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.01746,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0.01746,"88":0,"89":0.31423,"90":0.15711},P:{"4":0.35409,"5.0-5.4":0.02023,"6.2-6.4":0.08093,"7.2-7.4":0.21245,"8.2":0.03035,"9.2":0.09105,"10.1":0.09105,"11.1-11.2":0.1821,"12.0":0.16187,"13.0":1.2646,"14.0":0.28327},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00112,"4.2-4.3":0.003,"4.4":0,"4.4.3-4.4.4":0.04006},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.29677,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":52.28282},S:{"2.5":0},R:{_:"0"},M:{"0":0.07944},Q:{"10.4":0.00836},O:{"0":0.64806},H:{"0":0.32062}};


/***/ }),
/* 355 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.00401,"5":0.00401,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00401,"16":0,"17":0.00401,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.20446,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.00401,"42":0,"43":0,"44":0.00401,"45":0,"46":0,"47":0.00401,"48":0.00401,"49":0,"50":0.00401,"51":0.00401,"52":0.00802,"53":0,"54":0,"55":0,"56":0.00401,"57":0.00802,"58":0,"59":0,"60":0,"61":0.01604,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00401,"68":0.00401,"69":0,"70":0.00401,"71":0.00401,"72":0.00802,"73":0,"74":0,"75":0.00401,"76":0,"77":0.00401,"78":0.02405,"79":0.02005,"80":0.00401,"81":0.00802,"82":0.01604,"83":0.01203,"84":0.01203,"85":0.02405,"86":0.02806,"87":0.58531,"88":0.30869,"89":0.01203,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00401,"24":0.00401,"25":0,"26":0,"27":0,"28":0,"29":0.00401,"30":0,"31":0,"32":0,"33":0,"34":0.00401,"35":0,"36":0,"37":0,"38":0.01604,"39":0,"40":0.00401,"41":0,"42":0,"43":0.00802,"44":0,"45":0,"46":0,"47":0.00802,"48":0,"49":0.0882,"50":0,"51":0,"52":0,"53":0.05212,"54":0,"55":0.00401,"56":0.01604,"57":0.00401,"58":0,"59":0,"60":0,"61":0.02005,"62":0,"63":0.00802,"64":0,"65":0.00401,"66":0.00401,"67":0.00401,"68":0.01604,"69":0.00802,"70":0.01604,"71":0.00401,"72":0.00401,"73":0.00401,"74":0.00401,"75":0.01604,"76":0.00401,"77":0.00401,"78":0.01604,"79":0.02005,"80":0.04009,"81":0.03207,"83":0.11626,"84":0.15234,"85":0.10423,"86":0.1764,"87":0.20045,"88":0.18041,"89":6.48255,"90":2.84238,"91":0.03207,"92":0.01604,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00401,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00401,"37":0.01604,"38":0,"39":0,"40":0.00401,"41":0,"42":0,"43":0,"44":0,"45":0.00401,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00401,"55":0.00401,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00401,"64":0,"65":0,"66":0,"67":0,"68":0.00401,"69":0.00802,"70":0.00401,"71":0.00401,"72":0.00401,"73":0.04811,"74":0.05613,"75":0.20446,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00778,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01945,"6.0-6.1":0.00389,"7.0-7.1":0.15946,"8.1-8.4":0.1478,"9.0-9.2":0.05445,"9.3":0.28004,"10.0-10.2":0.08168,"10.3":0.32282,"11.0-11.2":0.25281,"11.3-11.4":0.41616,"12.0-12.1":0.33838,"12.2-12.4":1.61409,"13.0-13.1":0.28781,"13.2":0.12446,"13.3":0.879,"13.4-13.7":2.0147,"14.0-14.4":28.45469,"14.5":0.56785},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00401,"11":0,"12":0.00401,"13":0.05613,"14":1.05838,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00401,"11.1":0.01203,"12.1":0.0441,"13.1":0.18441,"14.1":0.02405},B:{"12":0.00401,"13":0,"14":0.00401,"15":0,"16":0.00401,"17":0.00401,"18":0.06014,"79":0,"80":0.00401,"81":0,"83":0,"84":0.01203,"85":0.01604,"86":0.00401,"87":0.00401,"88":0.00401,"89":0.59734,"90":0.28464},P:{"4":0.19789,"5.0-5.4":0.01042,"6.2-6.4":0.01042,"7.2-7.4":0.02083,"8.2":0.01042,"9.2":0.03125,"10.1":0.02083,"11.1-11.2":0.05208,"12.0":0.10415,"13.0":0.99985,"14.0":0.57283},I:{"0":0,"3":0,"4":0,"2.1":0.0023,"2.2":0,"2.3":0,"4.1":0.0023,"4.2-4.3":0.00919,"4.4":0,"4.4.3-4.4.4":0.11027},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.01432,"7":0,"8":0.02148,"9":0.01432,"10":0.00716,"11":0.2434,"5.5":0},J:{"7":0,"10":0.00599},N:{"10":0,"11":0},L:{"0":42.16961},S:{"2.5":0},R:{_:"0"},M:{"0":0.65302},Q:{"10.4":0.0659},O:{"0":1.04843},H:{"0":0.726}};


/***/ }),
/* 356 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00791,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00396,"40":0,"41":0,"42":0,"43":0.01582,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00396,"52":0,"53":0,"54":0.00396,"55":0,"56":0.00791,"57":0,"58":0,"59":0.05538,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00396,"68":0.01978,"69":0,"70":0,"71":0,"72":0.05143,"73":0.04747,"74":0,"75":0,"76":0,"77":0,"78":0.01978,"79":0,"80":0,"81":0.00396,"82":0,"83":0.00791,"84":0.00396,"85":0.01187,"86":0,"87":2.9314,"88":0.80702,"89":0.04747,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.00791,"58":0,"59":0.10681,"60":0,"61":0,"62":0,"63":0.05538,"64":0,"65":0.02374,"66":0,"67":0,"68":0,"69":0.01978,"70":0.00396,"71":0.01187,"72":0.00396,"73":0,"74":0.00396,"75":0,"76":0.01187,"77":0.01187,"78":0.0356,"79":0,"80":0.00396,"81":0.02769,"83":0.09494,"84":0.17406,"85":0.0989,"86":0.01582,"87":0.08308,"88":0.89801,"89":5.75202,"90":1.38856,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00396,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.02374,"75":0.10286,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.01183,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0.1188,"9.3":0.02365,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0.01183,"12.0-12.1":0.03548,"12.2-12.4":0.05914,"13.0-13.1":0.333,"13.2":0,"13.3":0.14271,"13.4-13.7":0.19002,"14.0-14.4":1.67707,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.20571,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0.00396,"14.1":0},B:{"12":0.01582,"13":0.00791,"14":0.0356,"15":0.01978,"16":0.07912,"17":0.02374,"18":0.22154,"79":0,"80":0.01978,"81":0,"83":0.00396,"84":0.00791,"85":0.01978,"86":0.00396,"87":0.00396,"88":0.01187,"89":0.59736,"90":0.14637},P:{"4":2.25867,"5.0-5.4":0.07058,"6.2-6.4":0.04033,"7.2-7.4":2.28892,"8.2":0,"9.2":0.0605,"10.1":0.04033,"11.1-11.2":0.6655,"12.0":0.05042,"13.0":2.27884,"14.0":0.363},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.16846},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.07912,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0.01209},L:{"0":70.21255},S:{"2.5":0},R:{_:"0"},M:{"0":0.01813},Q:{"10.4":0.06648},O:{"0":0.58022},H:{"0":0.09155}};


/***/ }),
/* 357 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00229,"29":0,"30":0,"31":0,"32":0.00229,"33":0.00917,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00229,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00229,"50":0.00458,"51":0,"52":0.00688,"53":0,"54":0,"55":0,"56":0.00458,"57":0,"58":0,"59":0,"60":0,"61":0.00229,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00229,"69":0,"70":0,"71":0,"72":0.00229,"73":0,"74":0,"75":0,"76":0,"77":0.00229,"78":0.03209,"79":0,"80":0,"81":0.00458,"82":0.00229,"83":0.00229,"84":0.00229,"85":0.00458,"86":0.0275,"87":0.1994,"88":0.15586,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00229,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00229,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00229,"40":0,"41":0,"42":0,"43":0.00229,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01604,"50":0.01834,"51":0,"52":0.01604,"53":0,"54":0,"55":0.00229,"56":0.00688,"57":0,"58":0.00229,"59":0,"60":0,"61":0,"62":0.00229,"63":0.00458,"64":0.00229,"65":0.00458,"66":0,"67":0,"68":0,"69":0,"70":0.00458,"71":0.01146,"72":0.00229,"73":0.00458,"74":0.00229,"75":0.00229,"76":0,"77":0.00688,"78":0,"79":0.00229,"80":0.00458,"81":0.02063,"83":0.00229,"84":0.00229,"85":0.00917,"86":0.01834,"87":0.0298,"88":0.1444,"89":1.03598,"90":0.55466,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.00229,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.01146,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00229,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00688,"55":0.00229,"56":0,"57":0,"58":0,"60":0,"62":0.00458,"63":0,"64":0.00229,"65":0.00229,"66":0,"67":0,"68":0.00229,"69":0,"70":0,"71":0,"72":0.00917,"73":0.00229,"74":0.09856,"75":0.25441,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00229},G:{"8":0.01951,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.0874,"8.1-8.4":0.00936,"9.0-9.2":0,"9.3":0.13578,"10.0-10.2":0.00312,"10.3":0.16153,"11.0-11.2":0.18338,"11.3-11.4":0.135,"12.0-12.1":0.02575,"12.2-12.4":0.50957,"13.0-13.1":0.10379,"13.2":0.03512,"13.3":0.12252,"13.4-13.7":1.49595,"14.0-14.4":3.91818,"14.5":0.43544},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00917,"11":0,"12":0,"13":0.00458,"14":0.09856,_:"0","3.1":0,"3.2":0,"5.1":0.00229,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00229,"12.1":0.00458,"13.1":0.00917,"14.1":0},B:{"12":0.00229,"13":0.00229,"14":0.00229,"15":0.00229,"16":0.00229,"17":0,"18":0.01834,"79":0,"80":0,"81":0,"83":0.00229,"84":0.00458,"85":0.00688,"86":0,"87":0,"88":0.00917,"89":0.14669,"90":0.0298},P:{"4":0.85266,"5.0-5.4":0.02006,"6.2-6.4":0.04013,"7.2-7.4":0.50157,"8.2":0.01003,"9.2":0.21066,"10.1":0.01003,"11.1-11.2":0.36113,"12.0":0.12038,"13.0":0.54169,"14.0":0.1605},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02266,"4.2-4.3":0.07101,"4.4":0,"4.4.3-4.4.4":0.69344},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01146,"5.5":0},J:{"7":0,"10":0.2852},N:{"10":0,"11":0.01542},L:{"0":81.86326},S:{"2.5":0.03854},R:{_:"0"},M:{"0":0.07708},Q:{"10.4":0.63206},O:{"0":0.26978},H:{"0":0.73704}};


/***/ }),
/* 358 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00516,"57":0.00516,"58":0,"59":0,"60":0,"61":0.01547,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01031,"79":0,"80":0.00516,"81":0,"82":0,"83":0.00516,"84":0,"85":0,"86":0.03093,"87":0.37116,"88":0.10826,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00516,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01031,"50":0,"51":0,"52":0,"53":0,"54":0.01031,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00516,"61":0,"62":0,"63":0.00516,"64":0,"65":0.01031,"66":0,"67":0,"68":0.00516,"69":0.01547,"70":0.02062,"71":0,"72":0,"73":0,"74":0.48457,"75":0.01031,"76":0.08764,"77":0,"78":0,"79":0,"80":0,"81":0.05671,"83":0.00516,"84":0.01547,"85":0.0464,"86":0.01031,"87":0.19074,"88":0.3557,"89":10.0007,"90":4.01059,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00516,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04124,"74":0.03609,"75":0.02578,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00902,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.16778,"6.0-6.1":0,"7.0-7.1":0.05953,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.04871,"10.0-10.2":0.01263,"10.3":0.0884,"11.0-11.2":0.15334,"11.3-11.4":0.00902,"12.0-12.1":0.00902,"12.2-12.4":0.12628,"13.0-13.1":0.05051,"13.2":0.03067,"13.3":0.07938,"13.4-13.7":0.81002,"14.0-14.4":15.31453,"14.5":0.65667},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.01031,"10":0,"11":0,"12":0.00516,"13":0.0464,"14":1.44856,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.07217,"12.1":0.03093,"13.1":0.20105,"14.1":0.03609},B:{"12":0,"13":0.00516,"14":0,"15":0.00516,"16":0.00516,"17":0.03093,"18":0.06186,"79":0,"80":0.01031,"81":0.00516,"83":0,"84":0,"85":0.01031,"86":0,"87":0,"88":0.00516,"89":3.04145,"90":0.94852},P:{"4":0.04314,"5.0-5.4":0.01078,"6.2-6.4":0.01078,"7.2-7.4":0.2049,"8.2":0,"9.2":0.28039,"10.1":0.01078,"11.1-11.2":0.15098,"12.0":0.31275,"13.0":2.81472,"14.0":1.07844},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.139,"4.4":0,"4.4.3-4.4.4":2.33528},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":1.74755,"5.5":0},J:{"7":0,"10":0.00969},N:{"10":0,"11":0},L:{"0":47.82308},S:{"2.5":0},R:{_:"0"},M:{"0":0.03392},Q:{"10.4":0},O:{"0":0.03876},H:{"0":0.40365}};


/***/ }),
/* 359 */
/***/ ((module) => {

module.exports={C:{"45":0.59701,"52":7.95251,"71":0.199,"72":0.199,"77":0.199,"85":4.76844,"87":0.59701,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 73 74 75 76 78 79 80 81 82 83 84 86 88 89 90 3.5 3.6"},D:{"49":1.79104,"53":2.18904,"56":2.18904,"58":0.39801,"62":0.59701,"80":0.199,"81":1.19402,"83":0.39801,"86":0.59701,"87":3.58207,"88":8.35051,"89":27.82994,"90":1.19402,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 50 51 52 54 55 57 59 60 61 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 84 85 91 92 93"},F:{"45":0.199,"64":0.199,"65":0.199,"74":2.78606,"75":0.199,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 66 67 68 69 70 71 72 73 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.19259,"10.0-10.2":0,"10.3":0,"11.0-11.2":0.38518,"11.3-11.4":0,"12.0-12.1":0.38518,"12.2-12.4":0.19259,"13.0-13.1":0,"13.2":0,"13.3":0.77076,"13.4-13.7":0.19259,"14.0-14.4":1.15593,"14.5":0.19259},E:{"4":0,"14":0.199,_:"0 5 6 7 8 9 10 11 12 13 3.1 3.2 5.1 6.1 7.1 9.1 11.1 12.1 13.1 14.1","10.1":0.99502},B:{"89":1.39303,_:"12 13 14 15 16 17 18 79 80 81 83 84 85 86 87 88 90"},P:{"4":4.07936,"5.0-5.4":0.07058,"6.2-6.4":0.04033,"7.2-7.4":1.63174,"8.2":0,"9.2":1.42778,"10.1":0.04033,"11.1-11.2":0.6655,"12.0":0.05042,"13.0":2.27884,"14.0":0.363},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"9":0.79602,_:"6 7 8 10 11 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0.01209},L:{"0":12.44318},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0.4082},H:{"0":0}};


/***/ }),
/* 360 */
/***/ ((module) => {

module.exports={C:{"52":0.01878,"78":0.03287,"79":0.0047,"80":0.00939,"81":0.00939,"82":0.00939,"83":0.0047,"84":0.0047,"85":0.0047,"86":0.01409,"87":0.46021,"88":0.16906,"89":0.00939,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 90 3.5 3.6"},D:{"42":0.03287,"49":0.05166,"53":0.0047,"56":0.00939,"61":0.02818,"63":0.00939,"64":0.00939,"65":0.0047,"67":0.0047,"68":0.08453,"69":0.00939,"70":0.01409,"71":0.01409,"72":0.01409,"73":0.00939,"74":0.00939,"75":0.01409,"76":0.01409,"77":0.16906,"78":0.02818,"79":0.03287,"80":0.03757,"81":0.05166,"83":0.07514,"84":0.13149,"85":0.10331,"86":0.13149,"87":0.19723,"88":0.2348,"89":21.31984,"90":8.18043,"91":0.00939,"92":0.0047,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 50 51 52 54 55 57 58 59 60 62 66 93"},F:{"70":0.0047,"71":0.0047,"73":0.0047,"74":0.05166,"75":0.18314,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00119,"5.0-5.1":0.00239,"6.0-6.1":0.00119,"7.0-7.1":0.00358,"8.1-8.4":0,"9.0-9.2":0.11708,"9.3":0.01911,"10.0-10.2":0.00239,"10.3":0.01673,"11.0-11.2":0.01553,"11.3-11.4":0.01075,"12.0-12.1":0.03106,"12.2-12.4":0.10274,"13.0-13.1":0.14814,"13.2":0.01673,"13.3":0.1123,"13.4-13.7":0.34765,"14.0-14.4":10.7137,"14.5":0.18995},E:{"4":0,"8":0.01878,"12":0.0047,"13":0.02818,"14":0.92511,_:"0 5 6 7 9 10 11 3.1 3.2 5.1 6.1 7.1 9.1 10.1","11.1":0.00939,"12.1":0.02818,"13.1":0.1174,"14.1":0.02818},B:{"16":0.0047,"17":0.01409,"18":0.07044,"84":0.00939,"85":0.01409,"86":0.04226,"87":0.02818,"88":0.03287,"89":3.80376,"90":1.74222,_:"12 13 14 15 79 80 81 83"},P:{"4":0.01011,"5.0-5.4":0.04045,"6.2-6.4":0.04033,"7.2-7.4":1.63174,"8.2":0.03033,"9.2":0.08089,"10.1":0.091,"11.1-11.2":0.14156,"12.0":0.37413,"13.0":8.85778,"14.0":4.25699},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00312,"4.2-4.3":0.00156,"4.4":0,"4.4.3-4.4.4":0.02184},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"9":0.01931,"11":3.59191,_:"6 7 8 10 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0.01209},L:{"0":22.10456},S:{"2.5":0},R:{_:"0"},M:{"0":0.15909},Q:{"10.4":0.01591},O:{"0":0.12727},H:{"0":0.16066}};


/***/ }),
/* 361 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00639,"34":0.00639,"35":0,"36":0,"37":0,"38":0.0032,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.03196,"53":0.0032,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.09588,"68":0.0032,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.05753,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00639,"85":0.0032,"86":0.00959,"87":0.21413,"88":0.08629,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.0032,"35":0,"36":0,"37":0,"38":0.01278,"39":0,"40":0,"41":0,"42":0.0032,"43":0,"44":0,"45":0,"46":0,"47":0.00959,"48":0,"49":0.01278,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.0032,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.0032,"63":0.0032,"64":0.0032,"65":0.0032,"66":0,"67":0.0032,"68":0.0032,"69":0.00639,"70":0.0032,"71":0.0032,"72":0,"73":0,"74":0.0032,"75":0.0032,"76":0.0032,"77":0.0032,"78":0.00639,"79":0.00959,"80":0.00959,"81":0.01278,"83":0.02876,"84":0.01598,"85":0.01278,"86":0.02876,"87":0.05753,"88":0.10227,"89":4.3977,"90":1.77378,"91":0.00959,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.0032,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01278,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00639,"55":0.00639,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0032,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0831,"74":0.02876,"75":0.07351,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02581,"6.0-6.1":0,"7.0-7.1":0.06638,"8.1-8.4":0.02213,"9.0-9.2":0.00369,"9.3":0.24339,"10.0-10.2":0.06269,"10.3":0.16963,"11.0-11.2":0.11432,"11.3-11.4":0.17332,"12.0-12.1":0.23232,"12.2-12.4":0.79285,"13.0-13.1":0.28764,"13.2":0.1807,"13.3":0.86291,"13.4-13.7":1.92127,"14.0-14.4":30.00646,"14.5":0.51996},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0032,"13":0.03196,"14":1.05148,_:"0","3.1":0,"3.2":0,"5.1":0.0032,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0032,"11.1":0.00959,"12.1":0.02876,"13.1":0.13423,"14.1":0.02237},B:{"12":0,"13":0,"14":0,"15":0.0032,"16":0.0032,"17":0.0032,"18":0.02557,"79":0,"80":0,"81":0,"83":0.00959,"84":0.00639,"85":0.0032,"86":0.0032,"87":0.00639,"88":0.0032,"89":0.59446,"90":0.24929},P:{"4":0.34984,"5.0-5.4":0,"6.2-6.4":0.01029,"7.2-7.4":0.10289,"8.2":0.05145,"9.2":0.12347,"10.1":0.07203,"11.1-11.2":0.3807,"12.0":0.27781,"13.0":2.6032,"14.0":1.07009},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00574,"4.2-4.3":0.00574,"4.4":0,"4.4.3-4.4.4":0.06088},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.12464,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":43.93721},S:{"2.5":0},R:{_:"0"},M:{"0":0.08845},Q:{"10.4":0.02722},O:{"0":1.97316},H:{"0":0.57974}};


/***/ }),
/* 362 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.01177,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01766,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00589,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00589,"79":0,"80":0,"81":0,"82":0.00589,"83":0,"84":0,"85":0.0412,"86":0.07062,"87":0.53554,"88":0.25894,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02354,"50":0,"51":0,"52":0,"53":0.00589,"54":0,"55":0,"56":0,"57":0,"58":0.12947,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00589,"66":0,"67":0.01177,"68":0,"69":0.08828,"70":0.02354,"71":0,"72":0,"73":0,"74":0.18832,"75":0.01177,"76":0,"77":0,"78":0,"79":0.0412,"80":0.27071,"81":0.01177,"83":0.00589,"84":0.03531,"85":0.03531,"86":0.02354,"87":0.25306,"88":0.42961,"89":14.08281,"90":4.54322,"91":0.03531,"92":0.0412,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00589,"55":0.00589,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00589,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.38841,"74":0.00589,"75":0.06474,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00329,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03945,"6.0-6.1":0.04274,"7.0-7.1":0,"8.1-8.4":0.00658,"9.0-9.2":0,"9.3":0.14466,"10.0-10.2":0.00329,"10.3":2.07121,"11.0-11.2":0.01315,"11.3-11.4":0.04931,"12.0-12.1":0.18411,"12.2-12.4":0.1052,"13.0-13.1":0.00986,"13.2":0.01973,"13.3":0.78246,"13.4-13.7":0.94684,"14.0-14.4":27.24464,"14.5":0.22356},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01177,"13":0.11182,"14":4.58442,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00589,"10.1":0.01177,"11.1":0.02943,"12.1":0.07062,"13.1":0.45903,"14.1":0.0412},B:{"12":0,"13":0,"14":0,"15":0.00589,"16":0.02943,"17":0.01177,"18":0.17067,"79":0,"80":0.00589,"81":0,"83":0,"84":0,"85":0.02943,"86":0,"87":0,"88":0.19421,"89":4.07242,"90":1.06519},P:{"4":0.14567,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.03121,"8.2":0,"9.2":0.03121,"10.1":0.0104,"11.1-11.2":0.2289,"12.0":0.08324,"13.0":2.53874,"14.0":1.49827},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00555,"4.4":0,"4.4.3-4.4.4":0.36344},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00589,"9":0,"10":0,"11":0.36487,"5.5":0},J:{"7":0,"10":0.01235},N:{"10":0,"11":0},L:{"0":25.14428},S:{"2.5":0},R:{_:"0"},M:{"0":0.1358},Q:{"10.4":0},O:{"0":1.02464},H:{"0":0.05454}};


/***/ }),
/* 363 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00559,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.02794,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.11735,"53":0,"54":0,"55":0,"56":0.00559,"57":0,"58":0,"59":0,"60":0,"61":0.00559,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00559,"69":0.00559,"70":0,"71":0,"72":0.00559,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.03912,"79":0.01118,"80":0.01118,"81":0.01118,"82":0.01118,"83":0.01118,"84":0.01118,"85":0.01118,"86":0.0447,"87":0.62586,"88":0.24028,"89":0.00559,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00559,"23":0,"24":0.00559,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00559,"46":0.00559,"47":0,"48":0.00559,"49":0.13411,"50":0,"51":0,"52":0,"53":0.00559,"54":0,"55":0,"56":0,"57":0.00559,"58":0,"59":0.00559,"60":0,"61":0.03912,"62":0,"63":0.00559,"64":0.01118,"65":0.00559,"66":0.00559,"67":0.01676,"68":0.00559,"69":0.00559,"70":0.01118,"71":0.02794,"72":0.00559,"73":0.01118,"74":0.02235,"75":0.01676,"76":0.01676,"77":0.01676,"78":0.00559,"79":0.28499,"80":0.05029,"81":0.05029,"83":0.05588,"84":0.07264,"85":0.06147,"86":0.16764,"87":0.49733,"88":0.50851,"89":12.86358,"90":4.77774,"91":0.02235,"92":0.00559,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.01676,"37":0,"38":0.00559,"39":0,"40":0,"41":0,"42":0,"43":0.00559,"44":0,"45":0,"46":0.01676,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00559,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.01676,"73":0.72085,"74":0.40234,"75":1.3523,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.26822,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00857,"7.0-7.1":0.01,"8.1-8.4":0.00429,"9.0-9.2":0.01,"9.3":0.04857,"10.0-10.2":0.03714,"10.3":0.11427,"11.0-11.2":0.09428,"11.3-11.4":0.15284,"12.0-12.1":0.09999,"12.2-12.4":0.54852,"13.0-13.1":0.09999,"13.2":0.05428,"13.3":0.33997,"13.4-13.7":0.89705,"14.0-14.4":10.6775,"14.5":0.10856},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01118,"13":0.03912,"14":0.73203,_:"0","3.1":0,"3.2":0,"5.1":0.4638,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00559,"12.1":0.03353,"13.1":0.16764,"14.1":0.02235},B:{"12":0,"13":0,"14":0.00559,"15":0,"16":0.00559,"17":0.00559,"18":0.05588,"79":0,"80":0,"81":0,"83":0,"84":0.00559,"85":0.00559,"86":0.00559,"87":0.06147,"88":0.01118,"89":0.81026,"90":0.3744},P:{"4":0.1311,"5.0-5.4":0.01008,"6.2-6.4":0.02017,"7.2-7.4":0.08068,"8.2":0.01008,"9.2":0.08068,"10.1":0.04034,"11.1-11.2":0.23195,"12.0":0.16135,"13.0":1.58328,"14.0":0.54457},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00186,"4.2-4.3":0.01488,"4.4":0,"4.4.3-4.4.4":0.06326},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00985,"9":0.00985,"10":0.00985,"11":0.34484,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":48.30592},S:{"2.5":0},R:{_:"0"},M:{"0":0.12795},Q:{"10.4":0.03971},O:{"0":0.52503},H:{"0":0.23809}};


/***/ }),
/* 364 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01155,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00577,"49":0,"50":0,"51":0,"52":0.00577,"53":0,"54":0,"55":0.00289,"56":0.00289,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00577,"64":0,"65":0,"66":0,"67":0,"68":0.00289,"69":0,"70":0,"71":0,"72":0.00289,"73":0,"74":0,"75":0,"76":0.00289,"77":0,"78":0.00866,"79":0,"80":0,"81":0.00289,"82":0,"83":0.00577,"84":0.00577,"85":0.00577,"86":0.03464,"87":0.35799,"88":0.17322,"89":0.00866,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00289,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00289,"34":0,"35":0,"36":0,"37":0.00289,"38":0.00289,"39":0,"40":0.00289,"41":0,"42":0,"43":0.01155,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.05774,"50":0,"51":0,"52":0,"53":0.00577,"54":0,"55":0,"56":0.00577,"57":0,"58":0.00289,"59":0,"60":0,"61":0,"62":0.00289,"63":0.00577,"64":0.00289,"65":0.00289,"66":0,"67":0.00289,"68":0.00289,"69":0.00289,"70":0.00289,"71":0.00577,"72":0.00289,"73":0.00289,"74":0.01155,"75":0.00866,"76":0.00866,"77":0.00866,"78":0.07218,"79":0.01444,"80":0.01444,"81":0.00866,"83":0.03176,"84":0.04331,"85":0.0231,"86":0.03464,"87":0.10105,"88":0.09527,"89":2.76575,"90":1.14614,"91":0.00866,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.01155,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00289,"55":0.00577,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00866,"74":0.0231,"75":0.05485,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0.00184,"4.2-4.3":0,"5.0-5.1":0.00369,"6.0-6.1":0.0129,"7.0-7.1":0.01659,"8.1-8.4":0.00369,"9.0-9.2":0.01659,"9.3":0.14744,"10.0-10.2":0.08478,"10.3":0.26171,"11.0-11.2":0.17693,"11.3-11.4":0.25802,"12.0-12.1":0.19352,"12.2-12.4":1.58132,"13.0-13.1":0.24328,"13.2":0.10874,"13.3":0.61373,"13.4-13.7":1.585,"14.0-14.4":10.97707,"14.5":0.22854},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00577,"12":0.00577,"13":0.00866,"14":0.33489,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00289,"11.1":0.01444,"12.1":0.00577,"13.1":0.03753,"14.1":0.00577},B:{"12":0.00289,"13":0.00289,"14":0.00289,"15":0.00577,"16":0,"17":0.00289,"18":0.02887,"79":0,"80":0,"81":0,"83":0,"84":0.00577,"85":0.00577,"86":0.00289,"87":0.00289,"88":0.00577,"89":0.28293,"90":0.16167},P:{"4":1.09743,"5.0-5.4":0.02032,"6.2-6.4":0.07113,"7.2-7.4":0.30484,"8.2":0.08129,"9.2":0.30484,"10.1":0.1321,"11.1-11.2":0.43694,"12.0":0.36581,"13.0":1.76809,"14.0":0.75195},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00336,"4.2-4.3":0.02014,"4.4":0,"4.4.3-4.4.4":0.1365},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.20786,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":66.36362},S:{"2.5":0},R:{_:"0"},M:{"0":0.21339},Q:{"10.4":0.23473},O:{"0":0.96737},H:{"0":0.43098}};


/***/ }),
/* 365 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0037,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0074,"53":0,"54":0,"55":0,"56":0.0037,"57":0.0037,"58":0.0037,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.01111,"66":0,"67":0,"68":0.0037,"69":0,"70":0,"71":0,"72":0.0037,"73":0,"74":0,"75":0,"76":0,"77":0.0074,"78":0.02221,"79":0,"80":0,"81":0,"82":0.0074,"83":0.0037,"84":0.0037,"85":0.0037,"86":0.03332,"87":0.54049,"88":0.1851,"89":0.0037,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.0037,"39":0,"40":0.0037,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.04442,"50":0,"51":0,"52":0,"53":0.0037,"54":0,"55":0,"56":0,"57":0,"58":0.0037,"59":0,"60":0,"61":0,"62":0,"63":0.0074,"64":0,"65":0.04072,"66":0.0037,"67":0.0037,"68":0.0037,"69":0.0037,"70":0.0074,"71":0.0074,"72":0.0037,"73":0.0037,"74":0.0037,"75":0.0037,"76":0.0074,"77":0,"78":0.0074,"79":0.01111,"80":0.02591,"81":0.03332,"83":0.02221,"84":0.01851,"85":0.01481,"86":0.03332,"87":0.14068,"88":0.14808,"89":6.33412,"90":2.34337,"91":0.01111,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.0037,"55":0.05183,"56":0,"57":0,"58":0,"60":0.0037,"62":0,"63":0.0037,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.09625,"74":0.04072,"75":0.12587,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0067,"6.0-6.1":0.00168,"7.0-7.1":0.06869,"8.1-8.4":0.07539,"9.0-9.2":0.01675,"9.3":0.18094,"10.0-10.2":0.03016,"10.3":0.21444,"11.0-11.2":0.09214,"11.3-11.4":0.15748,"12.0-12.1":0.15078,"12.2-12.4":0.52941,"13.0-13.1":0.06534,"13.2":0.02178,"13.3":0.25465,"13.4-13.7":0.80416,"14.0-14.4":12.36906,"14.5":0.18094},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0037,"12":0.01111,"13":0.02591,"14":0.65896,_:"0","3.1":0,"3.2":0,"5.1":0.44794,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0074,"11.1":0.02221,"12.1":0.05183,"13.1":0.12957,"14.1":0.01111},B:{"12":0.0037,"13":0,"14":0.0037,"15":0.0074,"16":0.0037,"17":0.0074,"18":0.01851,"79":0,"80":0,"81":0,"83":0,"84":0.0074,"85":0.0037,"86":0.01111,"87":0.0074,"88":0.01111,"89":0.59232,"90":0.28135},P:{"4":0.32862,"5.0-5.4":0.03081,"6.2-6.4":0.01027,"7.2-7.4":0.30808,"8.2":0.01027,"9.2":0.17458,"10.1":0.06162,"11.1-11.2":0.43131,"12.0":0.27727,"13.0":4.58013,"14.0":1.84848},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00171,"4.2-4.3":0.00943,"4.4":0,"4.4.3-4.4.4":0.10588},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.0037,"9":0.0037,"10":0,"11":0.09995,"5.5":0},J:{"7":0,"10":0.0063},N:{"10":0,"11":0},L:{"0":59.61717},S:{"2.5":0},R:{_:"0"},M:{"0":0.11966},Q:{"10.4":0},O:{"0":0.28341},H:{"0":0.29813}};


/***/ }),
/* 366 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00406,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00406,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00406,"79":0.00406,"80":0,"81":0,"82":0,"83":0,"84":0.00406,"85":0.00406,"86":0.00812,"87":0.28833,"88":0.09746,"89":0.00406,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00812,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.05279,"50":0,"51":0,"52":0,"53":0.00406,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00406,"64":0,"65":0.00406,"66":0,"67":0,"68":0,"69":0.00406,"70":0,"71":0,"72":0,"73":0,"74":0.06498,"75":0.00406,"76":0.09746,"77":0.04467,"78":0,"79":0.01218,"80":0.00812,"81":0.05685,"83":0.00812,"84":0.02031,"85":0.02031,"86":0.01218,"87":0.06904,"88":0.19493,"89":6.55852,"90":2.53406,"91":0.01218,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00406,"30":0,"31":0,"32":0,"33":0.00406,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00406,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00406,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04873,"74":0.04061,"75":0.13807,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01542,"6.0-6.1":0,"7.0-7.1":0.02621,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.06014,"10.0-10.2":0.00308,"10.3":0.11873,"11.0-11.2":0.03855,"11.3-11.4":0.06939,"12.0-12.1":0.01234,"12.2-12.4":0.25906,"13.0-13.1":0.01388,"13.2":0.02467,"13.3":0.12028,"13.4-13.7":0.53045,"14.0-14.4":12.70143,"14.5":0.20663},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00406,"14":0.43453,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00406,"12.1":0.03655,"13.1":0.09746,"14.1":0.02031},B:{"12":0,"13":0.01218,"14":0,"15":0.02031,"16":0,"17":0.00406,"18":0.07716,"79":0,"80":0.00406,"81":0.00406,"83":0,"84":0.00406,"85":0.00812,"86":0,"87":0.00812,"88":0.00406,"89":1.27515,"90":0.55636},P:{"4":0.09694,"5.0-5.4":0,"6.2-6.4":0.01077,"7.2-7.4":0.73241,"8.2":0.01077,"9.2":0.15079,"10.1":0.03231,"11.1-11.2":0.4416,"12.0":0.1831,"13.0":4.83606,"14.0":3.03735},I:{"0":0,"3":0,"4":0.00951,"2.1":0,"2.2":0,"2.3":0,"4.1":0.05704,"4.2-4.3":0.12358,"4.4":0,"4.4.3-4.4.4":1.2928},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.17868,"5.5":0},J:{"7":0,"10":0.00594},N:{"10":0,"11":0},L:{"0":56.57113},S:{"2.5":0},R:{_:"0"},M:{"0":0.19005},Q:{"10.4":0},O:{"0":0.57608},H:{"0":0.11245}};


/***/ }),
/* 367 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.03719,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00744,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00744,"48":0.00744,"49":0,"50":0,"51":0,"52":0.05207,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01488,"69":0,"70":0.02231,"71":0,"72":0,"73":0,"74":0.02231,"75":0,"76":0,"77":0.3719,"78":0.17851,"79":0.01488,"80":0,"81":0.01488,"82":0,"83":0.01488,"84":0.23058,"85":0.13388,"86":0.13388,"87":4.15784,"88":1.51735,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.03719,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.71405,"50":0.09669,"51":0,"52":0,"53":0.00744,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00744,"69":0.02231,"70":0,"71":0,"72":0,"73":0.02975,"74":0.02231,"75":0.02231,"76":0,"77":0,"78":0,"79":0.05207,"80":0.01488,"81":0.08182,"83":0.01488,"84":0.13388,"85":0.02231,"86":0.07438,"87":0.10413,"88":0.33471,"89":23.40739,"90":4.71569,"91":0.01488,"92":0.02975,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00744,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.26777,"74":0.06694,"75":0.25289,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.02369,"8.1-8.4":0.02073,"9.0-9.2":0.00592,"9.3":0.05331,"10.0-10.2":0.02369,"10.3":0.18067,"11.0-11.2":0.01481,"11.3-11.4":0.04146,"12.0-12.1":0.09774,"12.2-12.4":0.23101,"13.0-13.1":0.02666,"13.2":0,"13.3":0.11255,"13.4-13.7":0.46203,"14.0-14.4":26.05133,"14.5":0.4176},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00744,"12":0.08182,"13":0.18595,"14":5.25867,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00744,"10.1":0,"11.1":0.3719,"12.1":0.05207,"13.1":1.21983,"14.1":0.03719},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.0595,"79":0.00744,"80":0,"81":0,"83":0.01488,"84":0,"85":0.01488,"86":0,"87":0.00744,"88":0.36446,"89":5.18429,"90":2.84875},P:{"4":0.04086,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0.17368,"12.0":0.01022,"13.0":1.49157,"14.0":0.756},I:{"0":0,"3":0,"4":0.00221,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00037,"4.4":0,"4.4.3-4.4.4":0.21172},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.3719,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":13.23169},S:{"2.5":0},R:{_:"0"},M:{"0":0.32281},Q:{"10.4":0.00256},O:{"0":0.00256},H:{"0":0.07519}};


/***/ }),
/* 368 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00361,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00361,"48":0.00361,"49":0,"50":0,"51":0,"52":0.00722,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00361,"66":0,"67":0,"68":0.00722,"69":0,"70":0,"71":0,"72":0.00361,"73":0,"74":0,"75":0,"76":0.00361,"77":0,"78":0.01084,"79":0,"80":0.00361,"81":0.00722,"82":0.00361,"83":0.00361,"84":0.01084,"85":0.01445,"86":0.0289,"87":0.44066,"88":0.19505,"89":0.00722,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00722,"31":0,"32":0.00361,"33":0,"34":0,"35":0.00361,"36":0,"37":0,"38":0.00361,"39":0,"40":0.00722,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00361,"47":0,"48":0,"49":0.01806,"50":0,"51":0,"52":0,"53":0.00361,"54":0,"55":0.00361,"56":0,"57":0,"58":0.00361,"59":0,"60":0.00361,"61":0.00361,"62":0.00361,"63":0.01084,"64":0.01084,"65":0.00361,"66":0.00361,"67":0.00361,"68":0.00361,"69":0.00361,"70":0.00722,"71":0.01084,"72":0.00361,"73":0.00361,"74":0.01445,"75":0.00361,"76":0.00361,"77":0.00722,"78":0.00722,"79":0.01806,"80":0.01084,"81":0.03612,"83":0.02528,"84":0.01806,"85":0.02167,"86":0.0289,"87":0.11197,"88":0.13003,"89":5.60221,"90":2.36225,"91":0.00722,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.01445,"38":0.00361,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00722,"47":0.00361,"48":0,"49":0,"50":0.01806,"51":0.0289,"52":0,"53":0,"54":0.12642,"55":0.17338,"56":0,"57":0,"58":0,"60":0,"62":0.00361,"63":0.00722,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04334,"74":0.10836,"75":0.36842,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00813,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00148,"5.0-5.1":0.00074,"6.0-6.1":0.0037,"7.0-7.1":0.01479,"8.1-8.4":0.01701,"9.0-9.2":0.01183,"9.3":0.0732,"10.0-10.2":0.02292,"10.3":0.08429,"11.0-11.2":0.09464,"11.3-11.4":0.10352,"12.0-12.1":0.0976,"12.2-12.4":0.42737,"13.0-13.1":0.08725,"13.2":0.05176,"13.3":0.20629,"13.4-13.7":0.51315,"14.0-14.4":4.85788,"14.5":0.05176},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00722,"14":0.1192,_:"0","3.1":0,"3.2":0,"5.1":0.04696,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00361,"12.1":0.00722,"13.1":0.02167,"14.1":0},B:{"12":0.00361,"13":0.00361,"14":0.00722,"15":0.00722,"16":0.00361,"17":0.00361,"18":0.02528,"79":0,"80":0.00361,"81":0,"83":0,"84":0.00722,"85":0.00722,"86":0.00361,"87":0.00722,"88":0.01445,"89":1.10888,"90":0.57431},P:{"4":1.11378,"5.0-5.4":0.0405,"6.2-6.4":0.081,"7.2-7.4":0.73915,"8.2":0.06075,"9.2":0.26326,"10.1":0.10125,"11.1-11.2":0.72902,"12.0":0.30376,"13.0":1.62004,"14.0":0.36451},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00391,"4.2-4.3":0.01117,"4.4":0,"4.4.3-4.4.4":0.13575},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.03251,"5.5":0},J:{"7":0,"10":0.00639},N:{"10":0,"11":0},L:{"0":66.93662},S:{"2.5":0},R:{_:"0"},M:{"0":0.11498},Q:{"10.4":0},O:{"0":2.42744},H:{"0":2.32838}};


/***/ }),
/* 369 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01214,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00243,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.00243,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00243,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00243,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00485,"69":0.00243,"70":0,"71":0,"72":0.00243,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00243,"79":0,"80":0,"81":0,"82":0.01699,"83":0,"84":0.00243,"85":0.00485,"86":0.01699,"87":0.19901,"88":0.07766,"89":0.00485,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00243,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00243,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00485,"50":0,"51":0,"52":0,"53":0.00243,"54":0,"55":0,"56":0.00243,"57":0.00243,"58":0,"59":0,"60":0.00485,"61":0,"62":0,"63":0.00243,"64":0.02912,"65":0.00243,"66":0,"67":0.00485,"68":0.00243,"69":0.00243,"70":0.00243,"71":0.00485,"72":0.00728,"73":0.00243,"74":0.00485,"75":0.00971,"76":0.00971,"77":0.00243,"78":0.00485,"79":0.00728,"80":0.00485,"81":0.00728,"83":0.00485,"84":0.00728,"85":0.00971,"86":0.01214,"87":0.04611,"88":0.04611,"89":1.25476,"90":0.50482,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00485,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00243,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00243,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00243,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00243,"51":0.00243,"52":0,"53":0,"54":0.01214,"55":0.01214,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00485,"74":0.04854,"75":0.09465,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.06068},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0008,"6.0-6.1":0.01366,"7.0-7.1":0.02652,"8.1-8.4":0.11734,"9.0-9.2":0,"9.3":0.1519,"10.0-10.2":0.01848,"10.3":0.0868,"11.0-11.2":0.07072,"11.3-11.4":0.06108,"12.0-12.1":0.18726,"12.2-12.4":0.56258,"13.0-13.1":0.54168,"13.2":0.04822,"13.3":0.26361,"13.4-13.7":0.71769,"14.0-14.4":4.73609,"14.5":0.02733},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00971,"14":0.11164,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00728,"11.1":0.02184,"12.1":0.00243,"13.1":0.02427,"14.1":0},B:{"12":0.01942,"13":0.01456,"14":0.01214,"15":0.01699,"16":0.01699,"17":0.01456,"18":0.04126,"79":0,"80":0.00485,"81":0,"83":0,"84":0.00728,"85":0.00728,"86":0.00243,"87":0.00728,"88":0.01214,"89":0.27911,"90":0.13591},P:{"4":0.40499,"5.0-5.4":0.10125,"6.2-6.4":0.69861,"7.2-7.4":0.14175,"8.2":0,"9.2":0.1215,"10.1":0.03037,"11.1-11.2":0.28349,"12.0":0.05062,"13.0":0.74923,"14.0":0.21262},I:{"0":0,"3":0,"4":0.00291,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00146,"4.2-4.3":0.01603,"4.4":0,"4.4.3-4.4.4":0.10784},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00291,"11":0.04077,"5.5":0},J:{"7":0,"10":0.02272},N:{"10":0,"11":0},L:{"0":73.47446},S:{"2.5":0.16661},R:{_:"0"},M:{"0":0.14389},Q:{"10.4":0.00757},O:{"0":1.30256},H:{"0":7.40622}};


/***/ }),
/* 370 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00843,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00843,"57":0,"58":0,"59":0,"60":0.00281,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00281,"67":0,"68":0.00562,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0.00281,"77":0,"78":0.00281,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0.00281,"86":0.01124,"87":0.18546,"88":0.07306,"89":0.00281,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00281,"37":0,"38":0,"39":0,"40":0.00843,"41":0,"42":0,"43":0.00281,"44":0,"45":0,"46":0.00843,"47":0,"48":0,"49":0.00281,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.06182,"56":0.01686,"57":0,"58":0,"59":0,"60":0.01405,"61":0,"62":0.00281,"63":0.00562,"64":0,"65":0,"66":0.01405,"67":0.00281,"68":0.01405,"69":0.00281,"70":0.00843,"71":0.00843,"72":0.00281,"73":0.00281,"74":0.01686,"75":0.00281,"76":0.00281,"77":0.01686,"78":0.00281,"79":0.01124,"80":0.01124,"81":0.05339,"83":0.00281,"84":0.01686,"85":0.01124,"86":0.02529,"87":0.08992,"88":0.11802,"89":1.95576,"90":0.86267,"91":0.00843,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00281,"17":0,"18":0,"19":0.00281,"20":0,"21":0.00281,"22":0,"23":0,"24":0.00281,"25":0,"26":0.00281,"27":0,"28":0.00281,"29":0,"30":0,"31":0,"32":0,"33":0.00281,"34":0,"35":0.00281,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00281,"46":0,"47":0,"48":0,"49":0,"50":0.00843,"51":0.00281,"52":0,"53":0,"54":0.01405,"55":0.01686,"56":0,"57":0,"58":0,"60":0,"62":0.00281,"63":0.00562,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00281,"74":0.03091,"75":0.10678,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.05339},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00221,"7.0-7.1":0.0032,"8.1-8.4":0.04917,"9.0-9.2":0.00197,"9.3":0.05064,"10.0-10.2":0.00885,"10.3":0.01991,"11.0-11.2":0.0826,"11.3-11.4":0.03073,"12.0-12.1":0.06982,"12.2-12.4":0.48381,"13.0-13.1":0.01868,"13.2":0.00688,"13.3":0.09539,"13.4-13.7":0.19298,"14.0-14.4":1.11857,"14.5":0.01623},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00281,"12":0,"13":0.00281,"14":0.0562,_:"0","3.1":0,"3.2":0,"5.1":0.02248,"6.1":0,"7.1":0.00281,"9.1":0,"10.1":0.00281,"11.1":0,"12.1":0,"13.1":0.00843,"14.1":0},B:{"12":0.03653,"13":0.00843,"14":0.00562,"15":0.00843,"16":0.01686,"17":0.03934,"18":0.07306,"79":0,"80":0.00562,"81":0,"83":0,"84":0.00281,"85":0.01686,"86":0.00281,"87":0.00281,"88":0.01405,"89":0.35968,"90":0.14612},P:{"4":0.90352,"5.0-5.4":0,"6.2-6.4":0.04061,"7.2-7.4":2.22327,"8.2":0.11167,"9.2":0.26395,"10.1":0.03046,"11.1-11.2":0.67003,"12.0":0.35532,"13.0":1.3299,"14.0":0.5279},I:{"0":0,"3":0,"4":0.00101,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00101,"4.2-4.3":0.0091,"4.4":0,"4.4.3-4.4.4":0.15979},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00301,"9":0,"10":0,"11":0.12344,"5.5":0},J:{"7":0,"10":0.02157},N:{"10":0,"11":0},L:{"0":72.37239},S:{"2.5":0.00719},R:{_:"0"},M:{"0":0.13661},Q:{"10.4":0.02876},O:{"0":1.04974},H:{"0":7.72598}};


/***/ }),
/* 371 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.00623,"17":0,"18":0,"19":0.00623,"20":0,"21":0.00623,"22":0.00623,"23":0,"24":0.00623,"25":0.00623,"26":0.00623,"27":0.00623,"28":0.00623,"29":0.00623,"30":0.00623,"31":0.01246,"32":0.01246,"33":0.02492,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01246,"49":0,"50":0.01246,"51":0.00623,"52":0.08721,"53":0,"54":0,"55":0,"56":0.00623,"57":0,"58":0,"59":0,"60":0.01246,"61":0,"62":0,"63":0,"64":0,"65":0.00623,"66":0.00623,"67":0,"68":0.01246,"69":0,"70":0,"71":0,"72":0.01246,"73":0,"74":0,"75":0,"76":0.01246,"77":0,"78":0.09344,"79":0.00623,"80":0.01246,"81":0.01246,"82":0.01246,"83":0.01869,"84":0.03115,"85":0.04983,"86":0.08721,"87":2.56012,"88":1.07762,"89":0.01246,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01246,"34":0,"35":0,"36":0,"37":0,"38":0.0436,"39":0,"40":0,"41":0.00623,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00623,"49":0.11212,"50":0,"51":0,"52":0,"53":0.01246,"54":0,"55":0,"56":0.01246,"57":0.00623,"58":0,"59":0.00623,"60":0.01246,"61":0.09966,"62":0,"63":0.01246,"64":0.01246,"65":0.00623,"66":0.00623,"67":0.01246,"68":0.03737,"69":0.01246,"70":0.00623,"71":0.00623,"72":0.00623,"73":0.00623,"74":0.01246,"75":0.01869,"76":0.00623,"77":0.01246,"78":0.01246,"79":0.08721,"80":0.03115,"81":0.04983,"83":0.08098,"84":0.26162,"85":0.09344,"86":0.34882,"87":0.39866,"88":0.32391,"89":16.61897,"90":7.16958,"91":0.00623,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.02492,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00623,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00623,"64":0,"65":0.01246,"66":0,"67":0,"68":0,"69":0.00623,"70":0.01246,"71":0.01246,"72":0,"73":0.95927,"74":0.33014,"75":1.15237,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00501,"6.0-6.1":0.00668,"7.0-7.1":0.00668,"8.1-8.4":0.01836,"9.0-9.2":0.03172,"9.3":0.10851,"10.0-10.2":0.01169,"10.3":0.11352,"11.0-11.2":0.03005,"11.3-11.4":0.07179,"12.0-12.1":0.07012,"12.2-12.4":0.19866,"13.0-13.1":0.03339,"13.2":0.02671,"13.3":0.14691,"13.4-13.7":0.59432,"14.0-14.4":14.72608,"14.5":0.1586},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00623,"13":0.0436,"14":1.32678,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01246,"11.1":0.03115,"12.1":0.04983,"13.1":0.25539,"14.1":0.02492},B:{"12":0,"13":0.00623,"14":0.01246,"15":0.01246,"16":0,"17":0.00623,"18":0.0436,"79":0,"80":0.00623,"81":0,"83":0,"84":0.01246,"85":0.01246,"86":0.01869,"87":0.01869,"88":0.01246,"89":1.79395,"90":0.93435},P:{"4":0.07169,"5.0-5.4":0.02048,"6.2-6.4":0,"7.2-7.4":0.01024,"8.2":0.01024,"9.2":0.03072,"10.1":0.02048,"11.1-11.2":0.07169,"12.0":0.11265,"13.0":2.35551,"14.0":1.11631},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01045,"4.2-4.3":0.01881,"4.4":0,"4.4.3-4.4.4":0.11075},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01921,"9":0.01281,"10":0.01281,"11":0.40989,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":37.8664},S:{"2.5":0},R:{_:"0"},M:{"0":0.29414},Q:{"10.4":0.03771},O:{"0":0.05657},H:{"0":0.27133}};


/***/ }),
/* 372 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.01081,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00541,"30":0,"31":0,"32":0,"33":0.08108,"34":0,"35":0,"36":0,"37":0,"38":0.01081,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.01622,"46":0,"47":0,"48":0.00541,"49":0,"50":0,"51":0,"52":0.04324,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00541,"59":0.00541,"60":0.01622,"61":0.00541,"62":0.01081,"63":0.00541,"64":0,"65":0,"66":0.00541,"67":0,"68":0.09729,"69":0,"70":0,"71":0,"72":0.00541,"73":0,"74":0,"75":0.00541,"76":0.00541,"77":0.01081,"78":0.30809,"79":0.00541,"80":0.01622,"81":0.01622,"82":0.01081,"83":0.03784,"84":0.02703,"85":0.05405,"86":0.16756,"87":2.38361,"88":0.87021,"89":0.00541,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.02162,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.02162,"49":0.24323,"50":0,"51":0,"52":0,"53":0.02162,"54":0,"55":0,"56":0,"57":0,"58":0.00541,"59":0.00541,"60":0,"61":0,"62":0,"63":0.00541,"64":0,"65":0.00541,"66":0.01622,"67":0.00541,"68":0.02162,"69":0.00541,"70":0.02703,"71":0.01081,"72":0.01081,"73":0.01081,"74":0,"75":0.02162,"76":0.04865,"77":0.11351,"78":0.04324,"79":0.03243,"80":0.05405,"81":0.06486,"83":0.19458,"84":0.02162,"85":0.05405,"86":0.29728,"87":0.32971,"88":0.37295,"89":8.48585,"90":3.03761,"91":0.00541,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01081,"55":0.01081,"56":0,"57":0,"58":0,"60":0.00541,"62":0,"63":0.00541,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.22161,"74":0.11891,"75":0.32971,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01699,"6.0-6.1":0.0068,"7.0-7.1":0,"8.1-8.4":0.0034,"9.0-9.2":0.0034,"9.3":0.46562,"10.0-10.2":0.11556,"10.3":0.29569,"11.0-11.2":0.06118,"11.3-11.4":0.13595,"12.0-12.1":0.18693,"12.2-12.4":0.38066,"13.0-13.1":0.15634,"13.2":0.03399,"13.3":0.19373,"13.4-13.7":1.49883,"14.0-14.4":28.8959,"14.5":0.61857},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00541,"12":0.01622,"13":0.12972,"14":4.68614,_:"0","3.1":0,"3.2":0,"5.1":0.01622,"6.1":0,"7.1":0,"9.1":0.00541,"10.1":0.01622,"11.1":0.08648,"12.1":0.24323,"13.1":0.57834,"14.1":0.08108},B:{"12":0,"13":0,"14":0,"15":0.00541,"16":0.01081,"17":0.01081,"18":0.09189,"79":0,"80":0,"81":0,"83":0,"84":0.00541,"85":0.01622,"86":0.01622,"87":0.01622,"88":0.09189,"89":2.02147,"90":0.88642},P:{"4":0.26992,"5.0-5.4":0.01038,"6.2-6.4":0,"7.2-7.4":0.02076,"8.2":0.01038,"9.2":0.03115,"10.1":0.03115,"11.1-11.2":0.06229,"12.0":0.18687,"13.0":2.8861,"14.0":1.21466},I:{"0":0,"3":0,"4":0.00474,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0079,"4.2-4.3":0.01421,"4.4":0,"4.4.3-4.4.4":0.10423},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01168,"9":0.01168,"10":0,"11":0.48471,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":29.03173},S:{"2.5":0},R:{_:"0"},M:{"0":0.72601},Q:{"10.4":0.05514},O:{"0":0.33544},H:{"0":0.28277}};


/***/ }),
/* 373 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.04525,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00646,"49":0,"50":0,"51":0,"52":0.07757,"53":0,"54":0,"55":0,"56":0.02586,"57":0.01293,"58":0,"59":0,"60":0.01293,"61":0.00646,"62":0,"63":0,"64":0,"65":0.00646,"66":0.00646,"67":0,"68":0.01939,"69":0.00646,"70":0,"71":0.00646,"72":0.05818,"73":0.00646,"74":0.01293,"75":0.08403,"76":0.00646,"77":0.00646,"78":0.13574,"79":0.01293,"80":0.00646,"81":0.01293,"82":0.03878,"83":0.00646,"84":0.03878,"85":0.03878,"86":0.10989,"87":3.03162,"88":1.25402,"89":0.01293,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00646,"30":0,"31":0.00646,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01293,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.02586,"47":0,"48":0,"49":0.23917,"50":0,"51":0,"52":0.00646,"53":0.02586,"54":0,"55":0,"56":0,"57":0.01293,"58":0,"59":0,"60":0,"61":0.01939,"62":0,"63":0.00646,"64":0,"65":0.00646,"66":0.00646,"67":0.01293,"68":0.01293,"69":0.03232,"70":0.01293,"71":0.01293,"72":0.01293,"73":0.00646,"74":0.01939,"75":0.01939,"76":0.05171,"77":0.05818,"78":0.02586,"79":0.0905,"80":0.03878,"81":0.03232,"83":0.0905,"84":0.18099,"85":0.05818,"86":0.20685,"87":0.31674,"88":0.52358,"89":18.79085,"90":7.53702,"91":0.01939,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00646,"33":0,"34":0,"35":0,"36":0.00646,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00646,"55":0.00646,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00646,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00646,"71":0,"72":0,"73":0.53005,"74":0.27795,"75":1.0601,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.01645,"8.1-8.4":0.00897,"9.0-9.2":0.08676,"9.3":0.07778,"10.0-10.2":0.01047,"10.3":0.14809,"11.0-11.2":0.0344,"11.3-11.4":0.05086,"12.0-12.1":0.03291,"12.2-12.4":0.17352,"13.0-13.1":0.0374,"13.2":0.02842,"13.3":0.18099,"13.4-13.7":0.81672,"14.0-14.4":12.63818,"14.5":0.23335},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00646,"12":0.00646,"13":0.0711,"14":1.67418,_:"0","3.1":0,"3.2":0,"5.1":0.00646,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01293,"11.1":0.05818,"12.1":0.08403,"13.1":0.27795,"14.1":0.05171},B:{"12":0,"13":0,"14":0,"15":0.00646,"16":0,"17":0.00646,"18":0.05171,"79":0,"80":0.00646,"81":0,"83":0,"84":0.01293,"85":0.01293,"86":0.00646,"87":0.01293,"88":0.01293,"89":1.64832,"90":0.80154},P:{"4":0.07135,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.05097,"10.1":0.04077,"11.1-11.2":0.13252,"12.0":0.18348,"13.0":2.528,"14.0":1.08052},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00604,"4.2-4.3":0.02114,"4.4":0,"4.4.3-4.4.4":0.22647},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00667,"9":0,"10":0,"11":0.20665,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":36.16355},S:{"2.5":0},R:{_:"0"},M:{"0":0.3147},Q:{"10.4":0},O:{"0":0.12022},H:{"0":0.36489}};


/***/ }),
/* 374 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00192,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00384,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00192,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00192,"68":0.00192,"69":0,"70":0,"71":0.00384,"72":0.01536,"73":0.00768,"74":0.00768,"75":0.00576,"76":0.00768,"77":0.00384,"78":0.00576,"79":0.00384,"80":0.00768,"81":0.00192,"82":0.00192,"83":0.00192,"84":0.00192,"85":0.00384,"86":0.00768,"87":0.17088,"88":0.04416,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00192,"34":0,"35":0.00192,"36":0,"37":0,"38":0.00192,"39":0,"40":0.00576,"41":0,"42":0,"43":0.00576,"44":0,"45":0,"46":0,"47":0.00192,"48":0,"49":0.00384,"50":0.00192,"51":0,"52":0,"53":0.00384,"54":0,"55":0,"56":0.00192,"57":0,"58":0.00192,"59":0,"60":0.00192,"61":0,"62":0,"63":0.00384,"64":0,"65":0.00192,"66":0.00192,"67":0.00192,"68":0.00192,"69":0.00192,"70":0.00192,"71":0.00192,"72":0.00576,"73":0.00576,"74":0.00768,"75":0.00576,"76":0.00576,"77":0.00576,"78":0.00576,"79":0.01536,"80":0.0096,"81":0.02688,"83":0.0096,"84":0.01152,"85":0.01152,"86":0.01152,"87":0.04992,"88":0.05184,"89":1.4976,"90":0.46656,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00384,"29":0,"30":0,"31":0.00384,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00192,"39":0,"40":0,"41":0,"42":0.00192,"43":0,"44":0,"45":0,"46":0.00384,"47":0.00192,"48":0,"49":0,"50":0.00768,"51":0.01152,"52":0,"53":0,"54":0.06336,"55":0.11712,"56":0,"57":0.00384,"58":0.00384,"60":0.00384,"62":0.00576,"63":0.00768,"64":0.00384,"65":0.00384,"66":0.00384,"67":0.00384,"68":0.0096,"69":0,"70":0.00384,"71":0,"72":0,"73":0.02496,"74":0.04032,"75":0.12096,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00384},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00219,"6.0-6.1":0.01203,"7.0-7.1":0.0514,"8.1-8.4":0.01203,"9.0-9.2":0.00984,"9.3":0.19355,"10.0-10.2":0.01422,"10.3":0.16622,"11.0-11.2":0.04921,"11.3-11.4":0.09951,"12.0-12.1":0.13778,"12.2-12.4":0.64518,"13.0-13.1":0.10607,"13.2":0.03499,"13.3":0.23948,"13.4-13.7":0.66049,"14.0-14.4":7.49829,"14.5":0.07545},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00384,"13":0.00768,"14":0.08064,_:"0","3.1":0,"3.2":0,"5.1":0.13632,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00192,"12.1":0.00576,"13.1":0.02304,"14.1":0.00192},B:{"12":0.00192,"13":0,"14":0.00192,"15":0.00384,"16":0.00192,"17":0.00192,"18":0.01152,"79":0.00384,"80":0.00384,"81":0.00384,"83":0.00384,"84":0.00576,"85":0.00576,"86":0,"87":0.00192,"88":0.00384,"89":0.12096,"90":0.04416},P:{"4":0.57806,"5.0-5.4":0.03042,"6.2-6.4":0.13184,"7.2-7.4":0.66934,"8.2":0.05071,"9.2":0.31439,"10.1":0.13184,"11.1-11.2":0.84174,"12.0":0.48679,"13.0":2.99173,"14.0":0.68962},I:{"0":0,"3":0,"4":0.00091,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00455,"4.2-4.3":0.0141,"4.4":0,"4.4.3-4.4.4":0.10964},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00192,"10":0,"11":0.0192,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":73.66752},S:{"2.5":0},R:{_:"0"},M:{"0":0.0808},Q:{"10.4":0},O:{"0":0.46864},H:{"0":2.88391}};


/***/ }),
/* 375 */
/***/ ((module) => {

module.exports={C:{"2":0.37309,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.3596,"16":0,"17":0,"18":0.3641,"19":0,"20":0,"21":0.36859,"22":0,"23":0.37309,"24":0,"25":0.73269,"26":0,"27":0,"28":0,"29":0,"30":0.36859,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.3596,"52":0.01798,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.0045,"66":0,"67":0,"68":0.0045,"69":0,"70":0,"71":0,"72":0.0045,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01798,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00899,"85":0.0045,"86":0.01349,"87":0.2742,"88":0.0944,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.37758,"20":0,"21":0,"22":0,"23":0,"24":1.08779,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.3641,"31":0,"32":0,"33":0.37758,"34":0,"35":0.7237,"36":0,"37":0,"38":0.0045,"39":0,"40":0,"41":0,"42":0,"43":0.0045,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.03596,"50":0,"51":0,"52":0,"53":0.0045,"54":0.36859,"55":0.3641,"56":1.86093,"57":0,"58":0,"59":0,"60":0,"61":0.01349,"62":0,"63":0.0045,"64":0,"65":0,"66":0,"67":0.0045,"68":0.00899,"69":0.0045,"70":0.0045,"71":0.0045,"72":0.0045,"73":0,"74":0.0045,"75":0.0045,"76":0.0045,"77":0.0045,"78":0.0045,"79":0.00899,"80":0.00899,"81":0.01798,"83":0.01798,"84":0.01349,"85":0.01349,"86":0.02248,"87":0.0899,"88":0.08091,"89":2.44528,"90":0.95744,"91":0.0045,"92":0.0045,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.36859,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0045,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04945,"74":0.04945,"75":0.15283,"9.5-9.6":0,"10.0-10.1":0.3596,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01155,"6.0-6.1":23.12562,"7.0-7.1":0.02598,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.05196,"10.0-10.2":3.23314,"10.3":0.04907,"11.0-11.2":0.0433,"11.3-11.4":0.03753,"12.0-12.1":0.05485,"12.2-12.4":0.23671,"13.0-13.1":0.02021,"13.2":0.01155,"13.3":0.06062,"13.4-13.7":0.21939,"14.0-14.4":1.47801,"14.5":0.01732},E:{"4":0,"5":0.37309,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.01349,"14":0.06293,_:"0","3.1":0,"3.2":0,"5.1":0.04046,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.0045,"12.1":0.0045,"13.1":0.02248,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00899,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.0045,"89":0.17531,"90":0.08091},P:{"4":0.37531,"5.0-5.4":0,"6.2-6.4":0.01104,"7.2-7.4":0.11039,"8.2":0,"9.2":0.07727,"10.1":0.03312,"11.1-11.2":0.13246,"12.0":0.09935,"13.0":0.98244,"14.0":0.29804},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01351,"4.2-4.3":1.24055,"4.4":0,"4.4.3-4.4.4":1.9919},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.36949,"9":0.74348,"10":0.71194,"11":0.02704,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":46.47093},S:{"2.5":0},R:{_:"0"},M:{"0":0.04955},Q:{"10.4":0},O:{"0":0.04404},H:{"0":0.13551}};


/***/ }),
/* 376 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00741,"30":0,"31":0,"32":0,"33":0.01482,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00741,"48":0.26676,"49":0,"50":0,"51":0,"52":0.00741,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00741,"68":0.01482,"69":0,"70":0,"71":0,"72":0.00741,"73":0,"74":0,"75":0.03705,"76":0,"77":0,"78":0.12597,"79":0.01482,"80":0,"81":0,"82":0.03705,"83":0.03705,"84":0.04446,"85":0.02223,"86":0.16302,"87":1.37826,"88":0.54834,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1.68948,"50":0,"51":0,"52":0,"53":0.00741,"54":0,"55":0,"56":0,"57":0,"58":0.01482,"59":0,"60":0,"61":0.22971,"62":0,"63":0.06669,"64":0.00741,"65":0.02223,"66":0.00741,"67":0.00741,"68":0,"69":0,"70":0.02223,"71":0.09633,"72":0.14079,"73":0.00741,"74":0.00741,"75":0.14079,"76":0.01482,"77":0.19266,"78":0.02223,"79":0.05928,"80":0.03705,"81":0.11115,"83":0.01482,"84":2.52681,"85":0.9633,"86":0.11115,"87":1.02258,"88":0.60762,"89":19.68837,"90":6.14289,"91":0.02964,"92":0.01482,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.01482,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0.00741,"66":0,"67":0,"68":0,"69":0,"70":0.04446,"71":0,"72":0,"73":0.02964,"74":0.0741,"75":0.2223,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00284,"7.0-7.1":0.02555,"8.1-8.4":0.0142,"9.0-9.2":0,"9.3":0.51106,"10.0-10.2":0.03407,"10.3":0.45995,"11.0-11.2":0.05111,"11.3-11.4":0.03123,"12.0-12.1":0.05111,"12.2-12.4":0.3549,"13.0-13.1":0.13912,"13.2":0.03691,"13.3":0.3691,"13.4-13.7":1.4622,"14.0-14.4":23.93751,"14.5":0.28676},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.02964,"13":0.11115,"14":8.88459,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00741,"10.1":0.04446,"11.1":0.38532,"12.1":0.13338,"13.1":0.87438,"14.1":0.17784},B:{"12":0,"13":0,"14":0,"15":0,"16":0.00741,"17":0,"18":0.17043,"79":0,"80":0,"81":0,"83":0,"84":0.02964,"85":0.22971,"86":0.02223,"87":0,"88":0.00741,"89":1.75617,"90":0.82251},P:{"4":0.09338,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0.85078,"13.0":0.56027,"14.0":0.23863},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00335,"4.2-4.3":0.00251,"4.4":0,"4.4.3-4.4.4":0.06118},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":1.0374,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":16.26997},S:{"2.5":0},R:{_:"0"},M:{"0":0.13468},Q:{"10.4":0},O:{"0":0.01295},H:{"0":0.07111}};


/***/ }),
/* 377 */
/***/ ((module) => {

module.exports={C:{"52":0.09409,"59":0.06272,"62":0.00523,"63":0.01045,"68":0.01045,"72":0.01045,"78":0.11499,"79":0.02614,"80":0.01568,"82":0.5227,"83":0.02614,"84":0.05227,"85":0.02091,"86":0.07841,"87":1.24403,"88":0.45998,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 60 61 64 65 66 67 69 70 71 73 74 75 76 77 81 89 90 3.5","3.6":0.01568},D:{"24":0.00523,"26":0.01045,"33":0.00523,"34":0.00523,"41":0.01045,"49":0.43907,"50":0.00523,"53":0.02091,"57":0.00523,"59":0.09409,"60":0.01045,"61":0.01045,"62":0.03136,"63":0.01045,"65":0.03659,"67":0.02091,"68":0.01045,"69":0.03136,"70":0.01568,"71":0.03136,"72":0.01568,"73":0.03136,"74":0.04704,"75":0.03136,"76":0.04182,"77":0.01568,"78":0.03136,"79":0.07318,"80":0.06272,"81":0.03659,"83":0.1934,"84":0.06795,"85":0.07841,"86":0.2718,"87":0.47566,"88":0.7945,"89":27.36857,"90":9.37201,"91":0.03136,"92":0.00523,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 25 27 28 29 30 31 32 35 36 37 38 39 40 42 43 44 45 46 47 48 51 52 54 55 56 58 64 66 93"},F:{"36":0.00523,"70":0.01568,"71":0.01045,"73":0.93041,"74":0.42861,"75":1.39038,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0.00248,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00083,"6.0-6.1":0.00413,"7.0-7.1":0.00992,"8.1-8.4":0.01074,"9.0-9.2":0.00413,"9.3":0.05371,"10.0-10.2":0.00744,"10.3":0.06032,"11.0-11.2":0.02396,"11.3-11.4":0.02644,"12.0-12.1":0.03223,"12.2-12.4":0.13552,"13.0-13.1":0.02892,"13.2":0.00909,"13.3":0.09916,"13.4-13.7":0.3768,"14.0-14.4":6.84769,"14.5":0.18014},E:{"4":0,"11":0.01568,"12":0.00523,"13":0.04704,"14":1.11858,_:"0 5 6 7 8 9 10 3.1 3.2 6.1 7.1 9.1 10.1","5.1":0.22999,"11.1":0.02091,"12.1":0.03136,"13.1":0.22476,"14.1":0.02091},B:{"18":0.04704,"84":0.00523,"85":0.01568,"86":0.01045,"88":0.01045,"89":0.99836,"90":0.38157,_:"12 13 14 15 16 17 79 80 81 83 87"},P:{"4":0.13556,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01043,"8.2":0,"9.2":0.04171,"10.1":0.04171,"11.1-11.2":0.20856,"12.0":0.10428,"13.0":1.69976,"14.0":0.63611},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0007,"4.2-4.3":0.00255,"4.4":0,"4.4.3-4.4.4":0.02062},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.00523,"9":0.01045,"11":0.40248,_:"6 7 10 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":37.34973},S:{"2.5":0},R:{_:"0"},M:{"0":0.08591},Q:{"10.4":0},O:{"0":0.16706},H:{"0":0.2169}};


/***/ }),
/* 378 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00344,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00344,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.16856,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.01376,"67":0,"68":0.00344,"69":0,"70":0.0172,"71":0,"72":0.00344,"73":0,"74":0,"75":0,"76":0.00344,"77":0.00688,"78":0.01032,"79":0,"80":0,"81":0,"82":0.00344,"83":0.00344,"84":0.00688,"85":0.00344,"86":0.03096,"87":0.76368,"88":0.258,"89":0.00688,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00344,"23":0,"24":0,"25":0,"26":0.00344,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01032,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.07224,"50":0,"51":0,"52":0,"53":0.0344,"54":0,"55":0,"56":0,"57":0.00344,"58":0,"59":0,"60":0,"61":0,"62":0.00344,"63":0.00344,"64":0,"65":0.01032,"66":0.00688,"67":0.00344,"68":0.01376,"69":0,"70":0.02064,"71":0.00344,"72":0,"73":0.00344,"74":0,"75":0,"76":0.0172,"77":0.00344,"78":0.00344,"79":0.01376,"80":0.02752,"81":0.03096,"83":0.01376,"84":0.16168,"85":0.02064,"86":0.03096,"87":0.0516,"88":0.14104,"89":5.418,"90":1.9092,"91":0.00344,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00344,"29":0,"30":0,"31":0.00344,"32":0,"33":0,"34":0,"35":0,"36":0.01032,"37":0,"38":0,"39":0,"40":0.00344,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01376,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00344,"64":0,"65":0,"66":0,"67":0.00344,"68":0.62264,"69":0,"70":0,"71":0,"72":0,"73":0.05848,"74":0.09976,"75":0.25112,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00468,"6.0-6.1":0,"7.0-7.1":0.06556,"8.1-8.4":0.00585,"9.0-9.2":0,"9.3":0.25989,"10.0-10.2":0.01522,"10.3":0.16975,"11.0-11.2":0.07141,"11.3-11.4":0.06673,"12.0-12.1":0.07141,"12.2-12.4":0.30671,"13.0-13.1":0.05619,"13.2":0.03512,"13.3":0.14633,"13.4-13.7":0.76796,"14.0-14.4":8.74956,"14.5":0.06907},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01032,"13":0.02408,"14":0.2064,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00344,"12.1":0.00344,"13.1":0.02752,"14.1":0.00344},B:{"12":0,"13":0,"14":0,"15":0.00688,"16":0,"17":0.00344,"18":0.01032,"79":0,"80":0,"81":0,"83":0,"84":0.00688,"85":0,"86":0,"87":0,"88":0.00344,"89":0.2064,"90":0.07912},P:{"4":0.29434,"5.0-5.4":0,"6.2-6.4":0.0203,"7.2-7.4":0.0812,"8.2":0.0406,"9.2":0.0812,"10.1":0.1015,"11.1-11.2":0.31464,"12.0":0.15224,"13.0":3.33923,"14.0":1.38035},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00165,"4.2-4.3":0.00606,"4.4":0,"4.4.3-4.4.4":0.07325},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.1204,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":69.28592},S:{"2.5":0},R:{_:"0"},M:{"0":0.17056},Q:{"10.4":0},O:{"0":0.01312},H:{"0":0.22358}};


/***/ }),
/* 379 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0.00635,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00635,"29":0.00635,"30":0.00635,"31":0.00635,"32":0.00635,"33":0.02542,"34":0,"35":0,"36":0.00635,"37":0,"38":0,"39":0,"40":0.01271,"41":0.00635,"42":0,"43":0.01271,"44":0.00635,"45":0,"46":0.00635,"47":0.01906,"48":0.05719,"49":0.01271,"50":0.01271,"51":0.00635,"52":0.11437,"53":0.00635,"54":0,"55":0.00635,"56":0.02542,"57":0.01271,"58":0.00635,"59":0.00635,"60":0.01271,"61":0.00635,"62":0.00635,"63":0.00635,"64":0.00635,"65":0.00635,"66":0.03177,"67":0.00635,"68":0.0826,"69":0.00635,"70":0.01906,"71":0.07625,"72":0.10166,"73":0.00635,"74":0.00635,"75":0.00635,"76":0.00635,"77":0.03177,"78":0.13979,"79":0.00635,"80":0.04448,"81":0.02542,"82":0.03812,"83":0.02542,"84":0.07625,"85":0.13979,"86":0.35582,"87":3.90771,"88":1.79183,"89":0.01906,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00635,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00635,"35":0.01271,"36":0.01271,"37":0.00635,"38":0.00635,"39":0.01906,"40":0.01271,"41":0,"42":0.01271,"43":0.02542,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.10166,"50":0.00635,"51":0.00635,"52":0,"53":0,"54":0.00635,"55":0.01906,"56":0.01906,"57":0.01271,"58":0.01906,"59":0.00635,"60":0.03812,"61":0,"62":0,"63":0.03177,"64":0.03177,"65":0.01271,"66":0.00635,"67":0.00635,"68":0.00635,"69":0.01271,"70":0.03812,"71":0.05719,"72":0.01271,"73":0.00635,"74":0.02542,"75":0.01906,"76":0.03177,"77":0.10166,"78":0.01906,"79":0.09531,"80":0.05083,"81":0.09531,"83":0.1652,"84":0.06989,"85":0.14614,"86":0.1652,"87":0.73071,"88":0.88321,"89":14.02328,"90":6.55733,"91":0.01906,"92":0.01271,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.01906,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01271,"25":0,"26":0.03812,"27":0,"28":0.01906,"29":0.01906,"30":0.00635,"31":0,"32":0.02542,"33":0.02542,"34":0,"35":0,"36":0.01271,"37":0.00635,"38":0.01271,"39":0,"40":0,"41":0,"42":0.01271,"43":0,"44":0,"45":0.00635,"46":0.03177,"47":0.01906,"48":0,"49":0,"50":0.02542,"51":0.06989,"52":0,"53":0.05083,"54":0.12708,"55":0.25416,"56":0,"57":0,"58":0,"60":0,"62":0.01271,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00635,"73":0.12073,"74":0.27958,"75":1.05476,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.05083},G:{"8":0.00211,"3.2":0.00211,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00158,"6.0-6.1":0.00105,"7.0-7.1":0.19533,"8.1-8.4":0.00737,"9.0-9.2":0.00316,"9.3":0.09793,"10.0-10.2":0.0516,"10.3":0.15268,"11.0-11.2":0.05949,"11.3-11.4":0.02369,"12.0-12.1":0.03685,"12.2-12.4":0.21586,"13.0-13.1":0.02685,"13.2":0.03001,"13.3":0.08161,"13.4-13.7":0.28536,"14.0-14.4":3.59119,"14.5":0.03633},E:{"4":0,"5":0,"6":0.01906,"7":0,"8":0,"9":0,"10":0.00635,"11":0,"12":0.00635,"13":0.03177,"14":0.35582,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00635,"11.1":0.01906,"12.1":0.05083,"13.1":0.07625,"14.1":0.01906},B:{"12":0.01271,"13":0.02542,"14":0.03812,"15":0.02542,"16":0.00635,"17":0.05083,"18":0.13979,"79":0,"80":0.00635,"81":0,"83":0,"84":0.01906,"85":0.02542,"86":0.03812,"87":0.00635,"88":0.03177,"89":1.22632,"90":0.54644},P:{"4":0.51218,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.03073,"8.2":0,"9.2":0.04097,"10.1":0,"11.1-11.2":0.04097,"12.0":0.13317,"13.0":0.90143,"14.0":0.27658},I:{"0":0,"3":0,"4":0.00286,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01477,"4.2-4.3":0.05385,"4.4":0,"4.4.3-4.4.4":0.30498},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00732,"10":0,"11":0.32944,"5.5":0},J:{"7":0,"10":0.00729},N:{"10":0,"11":0.01823},L:{"0":42.20173},S:{"2.5":0.1349},R:{_:"0"},M:{"0":0.23334},Q:{"10.4":0.03646},O:{"0":1.73914},H:{"0":5.50216}};


/***/ }),
/* 380 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01064,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01064,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00532,"79":0,"80":0,"81":0,"82":0,"83":0.01596,"84":0,"85":0.01596,"86":0.05851,"87":0.32446,"88":0.07447,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00532,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00532,"70":0,"71":0,"72":0.00532,"73":0.63296,"74":0.00532,"75":0.01064,"76":0.01064,"77":0.11702,"78":0.15957,"79":0.01596,"80":0.03191,"81":0.02128,"83":0,"84":0,"85":0.3085,"86":0,"87":0.2234,"88":0.17021,"89":14.05812,"90":4.40413,"91":0.00532,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.01064,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.04787,"75":0.01596,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.64762,"10.0-10.2":0,"10.3":0.0283,"11.0-11.2":0.01332,"11.3-11.4":0.08324,"12.0-12.1":0,"12.2-12.4":0.49113,"13.0-13.1":0.0283,"13.2":0.01332,"13.3":0.11321,"13.4-13.7":0.92731,"14.0-14.4":13.30204,"14.5":0.0283},E:{"4":0,"5":0,"6":0,"7":0,"8":0.01064,"9":0,"10":0,"11":0,"12":0,"13":0.09574,"14":0.96806,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.3085,"11.1":0.01064,"12.1":0.05319,"13.1":0.05319,"14.1":0.12234},B:{"12":0,"13":0,"14":0,"15":0,"16":0.01596,"17":0.07447,"18":0.04255,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0.10106,"87":0.03723,"88":0.04787,"89":0.87764,"90":0.51594},P:{"4":0.14922,"5.0-5.4":0.03198,"6.2-6.4":0,"7.2-7.4":0.03198,"8.2":0,"9.2":0.01066,"10.1":0,"11.1-11.2":0.42635,"12.0":0,"13.0":0.53294,"14.0":0.39437},I:{"0":0,"3":0,"4":0,"2.1":0.07745,"2.2":0,"2.3":0,"4.1":0.58084,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.46467},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.09574,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":55.17521},S:{"2.5":0},R:{_:"0"},M:{"0":0.16384},Q:{"10.4":0},O:{"0":0.32767},H:{"0":0.04875}};


/***/ }),
/* 381 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00405,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00405,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00405,"48":0,"49":0.00809,"50":0,"51":0.00809,"52":0.07285,"53":0,"54":0.00809,"55":0,"56":0.00405,"57":0.00405,"58":0,"59":0,"60":0.00405,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01214,"69":0,"70":0,"71":0,"72":0.00405,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.04452,"79":0.01214,"80":0.01214,"81":0.01214,"82":0.01214,"83":0.01214,"84":0.01619,"85":0.01619,"86":0.01619,"87":0.83368,"88":0.31971,"89":0.00405,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00405,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00405,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.02024,"48":0.00405,"49":0.18616,"50":0,"51":0,"52":0,"53":0.02024,"54":0,"55":0,"56":0,"57":0,"58":0.00405,"59":0,"60":0,"61":0,"62":0.00405,"63":0.00809,"64":0.00405,"65":0.00405,"66":0.00809,"67":0,"68":0.00809,"69":0.00809,"70":0.00405,"71":0.00405,"72":0.02428,"73":0.00809,"74":0.00809,"75":0.00809,"76":0.00405,"77":0.01214,"78":0.01214,"79":0.02024,"80":0.01619,"81":0.04452,"83":0.06475,"84":0.09308,"85":0.10118,"86":0.1295,"87":0.18616,"88":0.16593,"89":8.17494,"90":3.05144,"91":0.00405,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00405,"37":0.00809,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00405,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00405,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00405,"69":0.01214,"70":0,"71":0.00809,"72":0.00809,"73":0.17807,"74":0.06071,"75":0.2671,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00809,"6.0-6.1":0,"7.0-7.1":0.05179,"8.1-8.4":0,"9.0-9.2":0.00486,"9.3":0.10844,"10.0-10.2":0.02266,"10.3":0.1052,"11.0-11.2":0.07283,"11.3-11.4":0.11815,"12.0-12.1":0.09064,"12.2-12.4":0.30428,"13.0-13.1":0.04046,"13.2":0.02266,"13.3":0.30266,"13.4-13.7":0.7526,"14.0-14.4":13.06778,"14.5":0.10682},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00405,"14":0.21854,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.01214,"12.1":0.02024,"13.1":0.02833,"14.1":0.00405},B:{"12":0,"13":0,"14":0,"15":0.00809,"16":0,"17":0,"18":0.02428,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.01214,"86":0.01214,"87":0.00809,"88":0.00405,"89":0.42089,"90":0.18616},P:{"4":0.11313,"5.0-5.4":0.01028,"6.2-6.4":0,"7.2-7.4":0.01028,"8.2":0,"9.2":0.03085,"10.1":0.02057,"11.1-11.2":0.1337,"12.0":0.07199,"13.0":1.56325,"14.0":0.68907},I:{"0":0,"3":0,"4":0.0008,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0024,"4.2-4.3":0.01759,"4.4":0,"4.4.3-4.4.4":0.07754},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00832,"9":0.01248,"10":0.00416,"11":0.12478,"5.5":0},J:{"7":0,"10":0.00595},N:{"10":0,"11":0},L:{"0":64.74187},S:{"2.5":0},R:{_:"0"},M:{"0":0.11906},Q:{"10.4":0},O:{"0":0.02381},H:{"0":0.15217}};


/***/ }),
/* 382 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00217,"31":0,"32":0,"33":0.00434,"34":0,"35":0,"36":0,"37":0.00217,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00217,"44":0,"45":0,"46":0,"47":0.00217,"48":0,"49":0,"50":0,"51":0,"52":0.00217,"53":0,"54":0,"55":0,"56":0.00217,"57":0,"58":0,"59":0,"60":0.00217,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00217,"69":0,"70":0,"71":0,"72":0.00217,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.0152,"79":0,"80":0,"81":0,"82":0,"83":0.00217,"84":0.00217,"85":0.00434,"86":0.0152,"87":0.46046,"88":0.19114,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00217,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00217,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00217,"50":0,"51":0,"52":0,"53":0.00869,"54":0,"55":0,"56":0,"57":0,"58":0.00217,"59":0,"60":0,"61":0,"62":0,"63":0.00434,"64":0,"65":0.00217,"66":0,"67":0,"68":0,"69":0,"70":0.0152,"71":0,"72":0,"73":0.00217,"74":0.00217,"75":0,"76":0,"77":0.00217,"78":0,"79":0.00434,"80":0.00217,"81":0.01086,"83":0.00869,"84":0.06516,"85":0.00217,"86":0.00434,"87":0.0152,"88":0.05213,"89":1.27931,"90":0.51259,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00217,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00434,"74":0.02389,"75":0.06733,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00217},G:{"8":0.00347,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00347,"6.0-6.1":0.01968,"7.0-7.1":0.04746,"8.1-8.4":0.00231,"9.0-9.2":0.01505,"9.3":0.07986,"10.0-10.2":0.00579,"10.3":0.46876,"11.0-11.2":0.32408,"11.3-11.4":0.08681,"12.0-12.1":0.07755,"12.2-12.4":0.41436,"13.0-13.1":0.04167,"13.2":0.02778,"13.3":0.57872,"13.4-13.7":1.30096,"14.0-14.4":7.02104,"14.5":0.12153},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00217,"14":0.04127,_:"0","3.1":0,"3.2":0,"5.1":0.04778,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00434,"11.1":0.00217,"12.1":0.00434,"13.1":0.02172,"14.1":0},B:{"12":0.00652,"13":0.01303,"14":0.00434,"15":0.00217,"16":0.00434,"17":0.01303,"18":0.07385,"79":0,"80":0,"81":0,"83":0,"84":0.00217,"85":0.00434,"86":0,"87":0.00217,"88":0.00652,"89":0.21937,"90":0.14118},P:{"4":0.54876,"5.0-5.4":0.30487,"6.2-6.4":0.04065,"7.2-7.4":0.23373,"8.2":0.02032,"9.2":0.40649,"10.1":0.03049,"11.1-11.2":0.38617,"12.0":0.15243,"13.0":1.03655,"14.0":0.21341},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00503,"4.2-4.3":0.01846,"4.4":0,"4.4.3-4.4.4":0.56388},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00288,"10":0,"11":0.12092,"5.5":0},J:{"7":0,"10":0.03131},N:{"10":0,"11":0},L:{"0":77.98902},S:{"2.5":0.21918},R:{_:"0"},M:{"0":0.06262},Q:{"10.4":0.01566},O:{"0":0.81411},H:{"0":1.28952}};


/***/ }),
/* 383 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.01124,"5":0.00749,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00375,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00375,"23":0,"24":0,"25":0,"26":0,"27":0.00375,"28":0,"29":0.00375,"30":0.00375,"31":0,"32":0,"33":0.00375,"34":0,"35":0.00375,"36":0.00375,"37":0,"38":0,"39":0.00375,"40":0,"41":0.00375,"42":0,"43":0.00375,"44":0.00375,"45":0,"46":0,"47":0.00749,"48":0,"49":0,"50":0,"51":0,"52":0.00375,"53":0,"54":0,"55":0.00375,"56":0.00375,"57":0.01498,"58":0.01124,"59":0,"60":0.00749,"61":0.01124,"62":0.00375,"63":0,"64":0.00375,"65":0,"66":0,"67":0.00375,"68":0.00749,"69":0,"70":0.00375,"71":0.00375,"72":0.03746,"73":0,"74":0.00375,"75":0,"76":0.01498,"77":0.00375,"78":0.01873,"79":0.00749,"80":0.01124,"81":0.01124,"82":0.02622,"83":0.01498,"84":0.04121,"85":0.02248,"86":0.06368,"87":0.98894,"88":0.52819,"89":0.04495,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00375,"24":0.00375,"25":0.00375,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00375,"32":0.00375,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00749,"39":0,"40":0.00375,"41":0,"42":0.00375,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.06743,"50":0,"51":0,"52":0,"53":0.02248,"54":0,"55":0,"56":0,"57":0,"58":0.00375,"59":0,"60":0,"61":0.00375,"62":0,"63":0.01124,"64":0,"65":0.00375,"66":0,"67":0.00375,"68":0.00375,"69":0.00375,"70":0,"71":0.00375,"72":0.00749,"73":0,"74":0.00375,"75":0.00375,"76":0.00375,"77":0.00375,"78":0.00749,"79":0.04495,"80":0.01498,"81":0.01124,"83":0.0899,"84":0.01498,"85":0.02622,"86":0.04495,"87":0.05994,"88":0.20603,"89":5.31183,"90":2.25135,"91":0.01498,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00375,"37":0.01873,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00375,"47":0,"48":0,"49":0,"50":0.00375,"51":0,"52":0,"53":0,"54":0.01124,"55":0.03371,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.01498,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.05619,"74":0.04495,"75":0.12362,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00374,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00561,"6.0-6.1":0.02057,"7.0-7.1":0.01122,"8.1-8.4":0.00748,"9.0-9.2":0.02244,"9.3":0.26931,"10.0-10.2":0.02805,"10.3":0.15336,"11.0-11.2":0.06359,"11.3-11.4":0.05424,"12.0-12.1":0.04676,"12.2-12.4":0.37404,"13.0-13.1":0.07481,"13.2":0.01496,"13.3":0.20385,"13.4-13.7":0.77427,"14.0-14.4":15.28341,"14.5":0.39275},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00375,"9":0,"10":0,"11":0.00375,"12":0.01498,"13":0.02248,"14":0.87282,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.02997,"11.1":0.03746,"12.1":0.03371,"13.1":0.0974,"14.1":0.02248},B:{"12":0.00375,"13":0.00375,"14":0.00375,"15":0.00375,"16":0.00749,"17":0.00749,"18":0.03371,"79":0,"80":0,"81":0.00375,"83":0,"84":0.00749,"85":0.00749,"86":0,"87":0.00375,"88":0.01498,"89":0.6518,"90":0.34089},P:{"4":0.27944,"5.0-5.4":0,"6.2-6.4":0.03105,"7.2-7.4":0.03105,"8.2":0,"9.2":0.0207,"10.1":0.01035,"11.1-11.2":0.11384,"12.0":0.14489,"13.0":1.11775,"14.0":0.58992},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.0504,"4.4":0,"4.4.3-4.4.4":0.63464},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01698,"9":0,"10":0,"11":0.11038,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.37982},S:{"2.5":0},R:{_:"0"},M:{"0":0.29394},Q:{"10.4":0.2314},O:{"0":4.27774},H:{"0":0.84077}};


/***/ }),
/* 384 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00449,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.03146,"53":0,"54":0,"55":0,"56":0.00449,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00899,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02247,"79":0.00449,"80":0,"81":0,"82":0,"83":0.00449,"84":0.00449,"85":0.00449,"86":0.01348,"87":0.62916,"88":0.31009,"89":0.01798,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00449,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00449,"49":0.05842,"50":0,"51":0,"52":0,"53":0.00449,"54":0,"55":0,"56":0,"57":0,"58":0.00449,"59":0,"60":0,"61":0,"62":0,"63":0.02696,"64":0,"65":0.00449,"66":0,"67":0.00449,"68":0.00449,"69":0.00449,"70":0.01348,"71":0.00449,"72":0.00449,"73":0,"74":0.02247,"75":0.00899,"76":0.00449,"77":0.00449,"78":0.00449,"79":0.03146,"80":0.02696,"81":0.02247,"83":0.01798,"84":0.11235,"85":0.01348,"86":0.06741,"87":0.8224,"88":0.23369,"89":9.84186,"90":4.40861,"91":0.01348,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00449,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.17077,"74":0.12583,"75":0.35952,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00236,"7.0-7.1":0.01414,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.20744,"10.0-10.2":0.01886,"10.3":0.44788,"11.0-11.2":0.066,"11.3-11.4":0.20744,"12.0-12.1":0.12258,"12.2-12.4":1.08434,"13.0-13.1":0.14144,"13.2":0.03536,"13.3":0.45967,"13.4-13.7":1.27293,"14.0-14.4":17.29765,"14.5":0.20744},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00899,"12":0,"13":0.01798,"14":0.40895,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00449,"11.1":0.00449,"12.1":0.02247,"13.1":0.0764,"14.1":0.00449},B:{"12":0.00449,"13":0,"14":0,"15":0,"16":0.00449,"17":0.00449,"18":0.01798,"79":0,"80":0,"81":0,"83":0,"84":0.00449,"85":0.00449,"86":0,"87":0.00449,"88":0.02696,"89":0.70106,"90":0.35952},P:{"4":0.27027,"5.0-5.4":0.08008,"6.2-6.4":0.02002,"7.2-7.4":0.12012,"8.2":0.02002,"9.2":0.15015,"10.1":0.03003,"11.1-11.2":0.2002,"12.0":0.22022,"13.0":2.67264,"14.0":1.1111},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0034,"4.2-4.3":0.00632,"4.4":0,"4.4.3-4.4.4":0.06274},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.08988,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":50.97213},S:{"2.5":0},R:{_:"0"},M:{"0":0.17069},Q:{"10.4":0.02202},O:{"0":0.17069},H:{"0":0.16159}};


/***/ }),
/* 385 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.02955,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00985,"34":0.02463,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00493,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00493,"53":0,"54":0,"55":0,"56":0.0197,"57":0.00493,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00493,"74":0,"75":0.00493,"76":0,"77":0.00985,"78":0.00985,"79":0,"80":0,"81":0,"82":0,"83":0.00493,"84":0.00493,"85":0.02463,"86":0.01478,"87":0.56638,"88":0.19208,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01478,"23":0,"24":0,"25":0,"26":0.0197,"27":0,"28":0,"29":0,"30":0.00985,"31":0,"32":0,"33":0,"34":0.04925,"35":0,"36":0,"37":0,"38":0.11328,"39":0,"40":0.00493,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00493,"48":0,"49":0.09358,"50":0,"51":0,"52":0,"53":0.10343,"54":0,"55":0.00985,"56":0,"57":0.00985,"58":0.01478,"59":0.00493,"60":0,"61":0.02463,"62":0.00985,"63":0.06403,"64":0.00493,"65":0.00985,"66":0.02463,"67":0.01478,"68":0.05418,"69":0.06895,"70":0.0197,"71":0.04433,"72":0.0197,"73":0.03448,"74":0.02463,"75":0.02955,"76":0.01478,"77":0.01478,"78":0.02463,"79":0.02463,"80":0.04925,"81":0.06895,"83":0.10343,"84":0.02463,"85":0.04925,"86":0.29058,"87":0.22655,"88":0.5319,"89":8.91425,"90":3.07813,"91":0.01478,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.0197,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0197,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00493,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02955,"74":0.01478,"75":0.0394,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00468,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01871,"6.0-6.1":0.14503,"7.0-7.1":0.15439,"8.1-8.4":0.28538,"9.0-9.2":0.07018,"9.3":0.48187,"10.0-10.2":0.18714,"10.3":0.6503,"11.0-11.2":0.50995,"11.3-11.4":0.52398,"12.0-12.1":0.46316,"12.2-12.4":1.2351,"13.0-13.1":0.28538,"13.2":0.13567,"13.3":0.77661,"13.4-13.7":2.70411,"14.0-14.4":36.21079,"14.5":0.23392},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00493,"9":0,"10":0.0197,"11":0.01478,"12":0.00985,"13":0.12805,"14":3.76763,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0197,"11.1":0.02955,"12.1":0.10835,"13.1":0.44325,"14.1":0.0197},B:{"12":0,"13":0,"14":0,"15":0.00493,"16":0.00493,"17":0.00985,"18":0.0591,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.00493,"89":0.73875,"90":0.32998},P:{"4":0.67278,"5.0-5.4":0.0217,"6.2-6.4":0,"7.2-7.4":0.01085,"8.2":0,"9.2":0.04341,"10.1":0,"11.1-11.2":0.0217,"12.0":0.03255,"13.0":1.45407,"14.0":0.72704},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00293,"4.2-4.3":0.00196,"4.4":0,"4.4.3-4.4.4":0.12421},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.6895,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":26.325},S:{"2.5":0},R:{_:"0"},M:{"0":0.1624},Q:{"10.4":0.30958},O:{"0":0.80185},H:{"0":0.08168}};


/***/ }),
/* 386 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01227,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01227,"49":0,"50":0,"51":0,"52":0.01841,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0.01227,"84":0,"85":0,"86":0.10433,"87":0.71803,"88":0.23934,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0491,"50":0,"51":0,"52":0,"53":0.01841,"54":0,"55":0.00614,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.01227,"68":0.02455,"69":0,"70":0,"71":0.00614,"72":0,"73":0,"74":0,"75":0.01227,"76":0.01227,"77":0,"78":0.01841,"79":0,"80":0.01227,"81":0.01841,"83":0.02455,"84":0.0491,"85":0.02455,"86":0.01841,"87":0.15956,"88":0.7303,"89":16.13417,"90":5.77492,"91":0.01227,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.02455,"55":0.06137,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00614,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.03069,"73":0.12888,"74":0.09206,"75":0.40504,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.05446,"8.1-8.4":0,"9.0-9.2":0.20041,"9.3":0.30061,"10.0-10.2":0,"10.3":0.4422,"11.0-11.2":0.06317,"11.3-11.4":0.04792,"12.0-12.1":0.06535,"12.2-12.4":0.67529,"13.0-13.1":0.0305,"13.2":0.00436,"13.3":0.23308,"13.4-13.7":1.22641,"14.0-14.4":17.68378,"14.5":0.03485},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.14115,"14":4.4616,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01841,"11.1":0.01841,"12.1":0.38663,"13.1":0.54619,"14.1":0.00614},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.06137,"79":0,"80":0.00614,"81":0.00614,"83":0,"84":0,"85":0,"86":0,"87":0.00614,"88":0,"89":1.57107,"90":0.81008},P:{"4":0.10542,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01054,"8.2":0,"9.2":0.27408,"10.1":0.03162,"11.1-11.2":0.13704,"12.0":0.28462,"13.0":2.67755,"14.0":1.96073},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.01269,"4.4":0,"4.4.3-4.4.4":0.16074},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":2.36275,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":33.90338},S:{"2.5":0},R:{_:"0"},M:{"0":0.05795},Q:{"10.4":0},O:{"0":0.03477},H:{"0":0.22675}};


/***/ }),
/* 387 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0338,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.13038,"53":0,"54":0,"55":0,"56":0,"57":0.00483,"58":0,"59":0,"60":0.02897,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00483,"67":0,"68":0.00483,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.00483,"78":0.04346,"79":0.00483,"80":0.00483,"81":0.00483,"82":0.10624,"83":0.00483,"84":0.01932,"85":0.02415,"86":0.04346,"87":1.51148,"88":0.71952,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.10624,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.00483,"65":0.00483,"66":0,"67":0.00483,"68":0,"69":0,"70":0.00483,"71":0,"72":0.02897,"73":0,"74":0,"75":0.00483,"76":0.00966,"77":0,"78":0,"79":0.00483,"80":0.02897,"81":0.01932,"83":0.01449,"84":0.00966,"85":0.00966,"86":0.02415,"87":0.07726,"88":0.1497,"89":8.26725,"90":3.23543,"91":0.00483,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00966,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.10624,"74":0.09658,"75":0.28008,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.44408,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.01313,"9.0-9.2":0.00438,"9.3":0.48564,"10.0-10.2":0,"10.3":0.30626,"11.0-11.2":0.15969,"11.3-11.4":0.2997,"12.0-12.1":0.04594,"12.2-12.4":0.44408,"13.0-13.1":0.04594,"13.2":0.16844,"13.3":0.21657,"13.4-13.7":0.8269,"14.0-14.4":17.41306,"14.5":0.25157},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00483,"11":0.00483,"12":0.00966,"13":0.05795,"14":1.75776,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01449,"11.1":0.07726,"12.1":0.30906,"13.1":0.44427,"14.1":0.03863},B:{"12":0,"13":0,"14":0.00483,"15":0.00483,"16":0.00483,"17":0.02897,"18":0.03863,"79":0,"80":0.00483,"81":0.00483,"83":0,"84":0.00966,"85":0.00966,"86":0.00483,"87":0.00483,"88":0.01449,"89":2.02818,"90":0.9658},P:{"4":0.09439,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.07342,"8.2":0,"9.2":0.18879,"10.1":0.02098,"11.1-11.2":0.24123,"12.0":0.1783,"13.0":3.08355,"14.0":1.31103},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00327,"4.2-4.3":0.00981,"4.4":0,"4.4.3-4.4.4":0.13521},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.56016,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":48.57492},S:{"2.5":0},R:{_:"0"},M:{"0":0.31543},Q:{"10.4":0},O:{"0":0.02068},H:{"0":0.13708}};


/***/ }),
/* 388 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00355,"34":0.00177,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00177,"46":0,"47":0,"48":0,"49":0.0266,"50":0,"51":0,"52":0.00355,"53":0,"54":0,"55":0,"56":0.0195,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00177,"69":0,"70":0.00177,"71":0,"72":0.00177,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00355,"79":0,"80":0,"81":0.00709,"82":0,"83":0,"84":0.00177,"85":0.00177,"86":0.02837,"87":0.2234,"88":0.0851,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00177,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00177,"32":0,"33":0.00355,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00177,"40":0.00355,"41":0,"42":0,"43":0.00532,"44":0,"45":0,"46":0,"47":0,"48":0.00177,"49":0.01418,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00177,"57":0.03901,"58":0,"59":0,"60":0.00355,"61":0,"62":0,"63":0.00177,"64":0,"65":0.00177,"66":0,"67":0.00177,"68":0,"69":0.00177,"70":0,"71":0,"72":0.00177,"73":0.00177,"74":0.00177,"75":0.00177,"76":0.01241,"77":0,"78":0.00177,"79":0,"80":0.00355,"81":0.01064,"83":0.00355,"84":0.01418,"85":0.00532,"86":0.02837,"87":0.03369,"88":0.04787,"89":0.9716,"90":0.38474,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00177,"55":0.00709,"56":0,"57":0.00177,"58":0,"60":0,"62":0,"63":0.00355,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00887,"74":0.01773,"75":0.04433,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00119,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00238,"6.0-6.1":0,"7.0-7.1":0.02623,"8.1-8.4":0,"9.0-9.2":0.09657,"9.3":0.03577,"10.0-10.2":0.00715,"10.3":0.08941,"11.0-11.2":0.1979,"11.3-11.4":0.46137,"12.0-12.1":0.19194,"12.2-12.4":0.73795,"13.0-13.1":0.10372,"13.2":0.07153,"13.3":0.45422,"13.4-13.7":0.69861,"14.0-14.4":7.6561,"14.5":0.0608},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00177,"14":0.05496,_:"0","3.1":0,"3.2":0,"5.1":0.2234,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00177,"13.1":0.01064,"14.1":0},B:{"12":0.00177,"13":0.00355,"14":0,"15":0,"16":0,"17":0.00532,"18":0.01064,"79":0,"80":0,"81":0,"83":0,"84":0.00177,"85":0.00177,"86":0,"87":0.00177,"88":0.00177,"89":0.10638,"90":0.03546},P:{"4":1.19644,"5.0-5.4":0.1307,"6.2-6.4":0.1106,"7.2-7.4":1.3372,"8.2":0.02011,"9.2":0.40216,"10.1":0.15081,"11.1-11.2":1.04563,"12.0":0.44238,"13.0":2.84531,"14.0":0.51276},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0011,"4.2-4.3":0.00551,"4.4":0,"4.4.3-4.4.4":0.11417},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.11702,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":74.34581},S:{"2.5":0},R:{_:"0"},M:{"0":0.23858},Q:{"10.4":0.02468},O:{"0":0.41135},H:{"0":1.1839}};


/***/ }),
/* 389 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0.14163,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0.84979,"88":0.4249,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.77898,"79":0,"80":0,"81":0.56653,"83":8.02876,"84":0,"85":0,"86":0.07082,"87":0,"88":1.06224,"89":20.89072,"90":15.34937,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.70816,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0.31038,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":14.51262,"14.0-14.4":0.85433,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":7.46224,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0.07082,"14.1":0},B:{"12":0,"13":0,"14":0.63734,"15":0,"16":0,"17":0,"18":0,"79":0,"80":0,"81":0,"83":0,"84":0.07082,"85":0,"86":0,"87":0.4249,"88":0,"89":2.98312,"90":3.62047},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0.56974,"14.0":0.09496},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":2.13333,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":16.17004},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0},H:{"0":0.09021}};


/***/ }),
/* 390 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0256,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.0064,"49":0,"50":0,"51":0,"52":0.032,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.0064,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.0064,"78":0.0192,"79":0,"80":0,"81":0,"82":0.0064,"83":0,"84":0.032,"85":0.0128,"86":0.05759,"87":0.88946,"88":0.29435,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.0064,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.0064,"48":0,"49":0.14078,"50":0,"51":0,"52":0,"53":0.0064,"54":0,"55":0,"56":0.0064,"57":0,"58":0,"59":0,"60":0,"61":0.12158,"62":0,"63":0.0064,"64":0.0128,"65":0.0064,"66":0,"67":0.0064,"68":0.0128,"69":0.26236,"70":0.0064,"71":0.0064,"72":0,"73":0.07679,"74":0.05119,"75":0.03839,"76":0.0256,"77":0.12798,"78":0.032,"79":0.0192,"80":0.032,"81":0.03839,"83":0.03839,"84":0.05119,"85":0.03839,"86":0.07039,"87":0.18557,"88":0.6271,"89":19.8177,"90":7.87077,"91":0.0064,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.0064,"70":0,"71":0,"72":0.032,"73":0.40954,"74":0.07679,"75":0.25596,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02665,"6.0-6.1":0,"7.0-7.1":0.01244,"8.1-8.4":0.03731,"9.0-9.2":0,"9.3":0.29846,"10.0-10.2":0.01954,"10.3":0.44591,"11.0-11.2":0.05152,"11.3-11.4":0.12258,"12.0-12.1":0.09593,"12.2-12.4":0.24516,"13.0-13.1":0.04264,"13.2":0.01954,"13.3":0.20963,"13.4-13.7":0.87583,"14.0-14.4":14.31177,"14.5":0.23095},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0128,"12":0.032,"13":0.07679,"14":2.25245,_:"0","3.1":0,"3.2":0,"5.1":0.0064,"6.1":0,"7.1":0,"9.1":0.0128,"10.1":0.03839,"11.1":0.06399,"12.1":0.05759,"13.1":0.39674,"14.1":0.05119},B:{"12":0,"13":0,"14":0.0064,"15":0.0064,"16":0.0064,"17":0.0128,"18":0.09599,"79":0,"80":0,"81":0.0128,"83":0,"84":0.0064,"85":0.0064,"86":0.0128,"87":0.0064,"88":0.0256,"89":2.52761,"90":1.14542},P:{"4":0.15512,"5.0-5.4":0.01034,"6.2-6.4":0,"7.2-7.4":0.01034,"8.2":0,"9.2":0.03102,"10.1":0.02068,"11.1-11.2":0.08273,"12.0":0.06205,"13.0":1.86139,"14.0":0.91001},I:{"0":0,"3":0,"4":0.01039,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.03638,"4.4":0,"4.4.3-4.4.4":0.3976},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.52472,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":36.87403},S:{"2.5":0},R:{_:"0"},M:{"0":0.27368},Q:{"10.4":0.0108},O:{"0":0.21606},H:{"0":0.13296}};


/***/ }),
/* 391 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01262,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01262,"53":0,"54":0,"55":0,"56":0.00421,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01262,"69":0.00841,"70":0,"71":0,"72":0,"73":0,"74":0.00421,"75":0,"76":0,"77":0.00421,"78":0.03365,"79":0,"80":0,"81":0.00421,"82":0.00421,"83":0.00421,"84":0.01262,"85":0.00421,"86":0.05468,"87":0.84961,"88":0.37013,"89":0.00421,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.01262,"21":0,"22":0.00421,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00421,"30":0,"31":0,"32":0,"33":0,"34":0.00421,"35":0,"36":0,"37":0,"38":0.01262,"39":0.00841,"40":0.00841,"41":0,"42":0.00421,"43":0,"44":0,"45":0,"46":0.00421,"47":0,"48":0,"49":0.02103,"50":0.00421,"51":0.00421,"52":0,"53":0.03365,"54":0,"55":0.01262,"56":0.00421,"57":0,"58":0.00421,"59":0,"60":0,"61":0,"62":0,"63":0.00421,"64":0.00421,"65":0.00841,"66":0,"67":0.00421,"68":0,"69":0.00421,"70":0,"71":0.00421,"72":0,"73":0.00421,"74":0.00841,"75":0.00421,"76":0.00841,"77":0.01262,"78":0.00841,"79":0.01682,"80":0.02524,"81":0.13039,"83":0.02524,"84":0.05047,"85":0.04206,"86":0.0715,"87":0.15142,"88":0.17245,"89":7.74745,"90":3.27227,"91":0.01682,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00421,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00421,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00421,"52":0,"53":0,"54":0.02524,"55":0.05468,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00421,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0673,"74":0.10094,"75":0.36172,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00421},G:{"8":0.00085,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.10058,"6.0-6.1":0.0169,"7.0-7.1":0.08029,"8.1-8.4":0.0169,"9.0-9.2":0.00085,"9.3":0.16228,"10.0-10.2":0.00507,"10.3":0.17242,"11.0-11.2":0.02705,"11.3-11.4":0.03381,"12.0-12.1":0.06424,"12.2-12.4":0.11241,"13.0-13.1":0.02198,"13.2":0.02451,"13.3":0.0786,"13.4-13.7":0.43697,"14.0-14.4":6.37538,"14.5":0.16312},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00421,"12":0.00841,"13":0.08833,"14":0.95897,_:"0","3.1":0,"3.2":0,"5.1":0.02524,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00421,"11.1":0.03785,"12.1":0.05047,"13.1":0.15983,"14.1":0.02103},B:{"12":0.00421,"13":0.00421,"14":0.00421,"15":0.00841,"16":0.02524,"17":0.00841,"18":0.05468,"79":0,"80":0,"81":0,"83":0,"84":0.00421,"85":0.00421,"86":0,"87":0.00421,"88":0.01262,"89":0.86223,"90":0.45004},P:{"4":0.46031,"5.0-5.4":0,"6.2-6.4":0.04092,"7.2-7.4":0.21481,"8.2":0.03069,"9.2":0.11252,"10.1":0.06137,"11.1-11.2":0.30687,"12.0":0.25573,"13.0":3.18126,"14.0":1.61621},I:{"0":0,"3":0,"4":0.00239,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00479,"4.2-4.3":0.01916,"4.4":0,"4.4.3-4.4.4":0.13889},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.14721,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":63.05698},S:{"2.5":0},R:{_:"0"},M:{"0":0.30708},Q:{"10.4":0},O:{"0":1.01395},H:{"0":0.66922}};


/***/ }),
/* 392 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0083,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00553,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00277,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.24885,"69":0,"70":0.00277,"71":0,"72":0.00277,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00553,"79":0,"80":0.00277,"81":0,"82":0.01106,"83":0,"84":0.00553,"85":0.01383,"86":0.01936,"87":0.28203,"88":0.08848,"89":0.00277,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01106,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00553,"64":0.00553,"65":0,"66":0,"67":0.00277,"68":0,"69":0.00553,"70":0.00277,"71":0,"72":0,"73":0.0083,"74":0.01106,"75":0.00277,"76":0.0083,"77":0,"78":0,"79":0.0083,"80":0.00277,"81":0.01936,"83":0.01106,"84":0.01936,"85":0.00553,"86":0.01383,"87":0.04701,"88":0.08572,"89":3.97607,"90":1.41845,"91":0.00553,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.0083,"52":0,"53":0,"54":0.01106,"55":0.03042,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00553,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02212,"74":0.01383,"75":0.02212,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00251,"6.0-6.1":0,"7.0-7.1":0.00251,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.07267,"10.0-10.2":0.00752,"10.3":0.03508,"11.0-11.2":0.0877,"11.3-11.4":0.0451,"12.0-12.1":0.09021,"12.2-12.4":0.40343,"13.0-13.1":0.10775,"13.2":0.07517,"13.3":0.25809,"13.4-13.7":0.94467,"14.0-14.4":21.80268,"14.5":0.48361},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00277,"12":0,"13":0.01936,"14":0.35945,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00277,"12.1":0.01659,"13.1":0.04701,"14.1":0.0083},B:{"12":0,"13":0,"14":0,"15":0.00553,"16":0.00277,"17":0.00277,"18":0.02489,"79":0,"80":0,"81":0,"83":0,"84":0.00277,"85":0.00277,"86":0.00277,"87":0.00277,"88":0.00277,"89":0.20185,"90":0.07189},P:{"4":0.05248,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.03149,"8.2":0.0105,"9.2":0.02099,"10.1":0.05248,"11.1-11.2":0.13646,"12.0":0.14695,"13.0":1.50103,"14.0":0.60881},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.0304,"4.4":0,"4.4.3-4.4.4":0.56748},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.04701,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":62.00129},S:{"2.5":0},R:{_:"0"},M:{"0":0.33281},Q:{"10.4":0},O:{"0":1.0129},H:{"0":0.50002}};


/***/ }),
/* 393 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00315,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.00946,"28":0,"29":0.00946,"30":0,"31":0.00315,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00315,"44":0,"45":0,"46":0.00315,"47":0.01261,"48":0.00315,"49":0,"50":0,"51":0,"52":0.01261,"53":0,"54":0,"55":0,"56":0.00315,"57":0.00315,"58":0,"59":0.00315,"60":0.00315,"61":0.00315,"62":0.00315,"63":0.00315,"64":0.00315,"65":0,"66":0,"67":0.00315,"68":0.04414,"69":0.00946,"70":0,"71":0,"72":0.02207,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02838,"79":0,"80":0.00631,"81":0.00946,"82":0.01261,"83":0.00315,"84":0.00946,"85":0.01261,"86":0.05045,"87":0.67474,"88":0.27746,"89":0.01892,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00315,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00315,"24":0,"25":0,"26":0.00315,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01261,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.01261,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00631,"47":0,"48":0.00315,"49":0.00631,"50":0.00315,"51":0,"52":0,"53":0,"54":0,"55":0.01892,"56":0,"57":0.00631,"58":0.00946,"59":0.00315,"60":0.00631,"61":0.02207,"62":0.00315,"63":0.00631,"64":0.00946,"65":0.00315,"66":0,"67":0.00315,"68":0.00315,"69":0,"70":0.01577,"71":0,"72":0.00315,"73":0.00315,"74":0.01261,"75":0.00315,"76":0.01892,"77":0.00631,"78":0.00631,"79":0.02207,"80":0.01892,"81":0.03784,"83":0.02838,"84":0.00946,"85":0.01577,"86":0.03468,"87":0.08198,"88":0.15134,"89":3.00796,"90":1.19499,"91":0.00631,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00631,"25":0.00315,"26":0.11036,"27":0.00946,"28":0.02207,"29":0,"30":0.04414,"31":0,"32":0.0536,"33":0.08198,"34":0.00315,"35":0.03468,"36":0.00315,"37":0.00315,"38":0.00946,"39":0,"40":0,"41":0.01261,"42":0.02838,"43":0,"44":0.00315,"45":0.00315,"46":0.02522,"47":0.08513,"48":0.04414,"49":0,"50":0.05675,"51":0.16396,"52":0,"53":0,"54":0.1608,"55":0.26801,"56":0,"57":0,"58":0,"60":0,"62":0.00315,"63":0.01892,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00315,"73":0.01892,"74":0.09144,"75":0.33737,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.08828},G:{"8":0.00033,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00295,"5.0-5.1":0.0046,"6.0-6.1":0.01116,"7.0-7.1":0.01937,"8.1-8.4":0.00788,"9.0-9.2":0.0046,"9.3":0.05352,"10.0-10.2":0.00197,"10.3":0.05188,"11.0-11.2":0.01445,"11.3-11.4":0.0197,"12.0-12.1":0.04958,"12.2-12.4":0.13593,"13.0-13.1":0.0788,"13.2":0.022,"13.3":0.05746,"13.4-13.7":0.22031,"14.0-14.4":2.36199,"14.5":0.0174},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00946,"14":0.09144,_:"0","3.1":0,"3.2":0,"5.1":0.09459,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00315,"12.1":0.00631,"13.1":0.01261,"14.1":0.00315},B:{"12":0.02522,"13":0.00631,"14":0.01577,"15":0.02838,"16":0.01892,"17":0.02838,"18":0.12297,"79":0,"80":0.00315,"81":0.00315,"83":0,"84":0.02522,"85":0.02207,"86":0.00315,"87":0.01261,"88":0.01577,"89":0.56123,"90":0.22071},P:{"4":0.66884,"5.0-5.4":0.02058,"6.2-6.4":0.01029,"7.2-7.4":0.14406,"8.2":0.02058,"9.2":0.06174,"10.1":0.13377,"11.1-11.2":0.19551,"12.0":0.12348,"13.0":1.93449,"14.0":0.32927},I:{"0":0,"3":0,"4":0.00113,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01409,"4.2-4.3":0.01916,"4.4":0,"4.4.3-4.4.4":0.18878},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00371,"10":0,"11":0.12241,"5.5":0},J:{"7":0,"10":0.32181},N:{"10":0,"11":0.01369},L:{"0":56.97095},S:{"2.5":0.02739},R:{_:"0"},M:{"0":0.32866},Q:{"10.4":0.06847},O:{"0":5.8268},H:{"0":12.54973}};


/***/ }),
/* 394 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.35302,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00981,"34":0,"35":0,"36":0,"37":0,"38":0.01471,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01961,"53":0,"54":0,"55":0,"56":0.0049,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.01961,"67":0,"68":0.0049,"69":0,"70":0,"71":0,"72":0.0049,"73":0.0049,"74":0,"75":0,"76":0,"77":0,"78":0.03922,"79":0.0049,"80":0.0049,"81":0.0049,"82":0.0049,"83":0.0049,"84":0.00981,"85":0.00981,"86":0.02452,"87":0.69623,"88":0.28928,"89":0.0049,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.0049,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.0049,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.07845,"50":0,"51":0,"52":0,"53":0.00981,"54":0,"55":0,"56":0,"57":0,"58":0.0049,"59":0,"60":0,"61":0.01961,"62":0,"63":0.0049,"64":0,"65":0.00981,"66":0.0049,"67":0.00981,"68":0.0049,"69":0.0049,"70":0.0049,"71":0.0049,"72":0.0049,"73":0.0049,"74":0.00981,"75":0.01471,"76":0.01471,"77":0.00981,"78":0.00981,"79":0.01471,"80":0.06374,"81":0.02452,"83":0.03922,"84":0.02942,"85":0.03432,"86":0.05393,"87":0.1569,"88":0.27947,"89":11.32593,"90":4.99616,"91":0.0049,"92":0.0049,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0049,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0049,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.24025,"74":0.06864,"75":0.29418,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00297,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01632,"6.0-6.1":0.00742,"7.0-7.1":0.02077,"8.1-8.4":0.00742,"9.0-9.2":0.00593,"9.3":0.18842,"10.0-10.2":0.01187,"10.3":0.15726,"11.0-11.2":0.03412,"11.3-11.4":0.0727,"12.0-12.1":0.04006,"12.2-12.4":0.2359,"13.0-13.1":0.04451,"13.2":0.01632,"13.3":0.13353,"13.4-13.7":0.49702,"14.0-14.4":12.25328,"14.5":0.17952},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0049,"13":0.02942,"14":0.93647,_:"0","3.1":0,"3.2":0,"5.1":0.14219,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00981,"11.1":0.01961,"12.1":0.04413,"13.1":0.18631,"14.1":0.02452},B:{"12":0.0049,"13":0,"14":0.0049,"15":0.0049,"16":0.0049,"17":0.00981,"18":0.06374,"79":0,"80":0,"81":0,"83":0,"84":0.0049,"85":0.0049,"86":0.0049,"87":0.0049,"88":0.00981,"89":1.07376,"90":0.55404},P:{"4":0.16586,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.04146,"8.2":0,"9.2":0.02073,"10.1":0.01037,"11.1-11.2":0.0622,"12.0":0.05183,"13.0":0.8293,"14.0":0.35245},I:{"0":0,"3":0,"4":0.00241,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00964,"4.2-4.3":0.01688,"4.4":0,"4.4.3-4.4.4":0.135},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00518,"9":0.00518,"10":0.00518,"11":0.17079,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":59.90297},S:{"2.5":0.0051},R:{_:"0"},M:{"0":0.1682},Q:{"10.4":0},O:{"0":0.07646},H:{"0":0.17854}};


/***/ }),
/* 395 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00443,"34":0.00887,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0133,"53":0,"54":0,"55":0,"56":0.00443,"57":0,"58":0,"59":0,"60":0.00887,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00887,"69":0,"70":0,"71":0,"72":0.00443,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01774,"79":0,"80":0.00443,"81":0.00443,"82":0.00443,"83":0.00443,"84":0.0133,"85":0.00887,"86":0.02217,"87":0.57642,"88":0.235,"89":0.00443,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00443,"23":0,"24":0,"25":0,"26":0.00443,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.0133,"35":0,"36":0,"37":0,"38":0.04434,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00443,"48":0,"49":0.05321,"50":0,"51":0,"52":0,"53":0.11085,"54":0,"55":0.03991,"56":0.0133,"57":0.00443,"58":0.00443,"59":0.00887,"60":0.00443,"61":0.00443,"62":0.00887,"63":0.00887,"64":0.00443,"65":0.0133,"66":0.00443,"67":0.00887,"68":0.03547,"69":0.0133,"70":0.01774,"71":0.0133,"72":0.0133,"73":0.01774,"74":0.0133,"75":0.02217,"76":0.0133,"77":0.00887,"78":0.01774,"79":0.02217,"80":0.02217,"81":0.04877,"83":0.10642,"84":0.0266,"85":0.03547,"86":0.09311,"87":0.12415,"88":0.26161,"89":10.08735,"90":3.50729,"91":0.01774,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00443,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.02217,"37":0.02217,"38":0,"39":0,"40":0.00443,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01774,"47":0,"48":0,"49":0,"50":0,"51":0.00443,"52":0,"53":0,"54":0.02217,"55":0.04434,"56":0,"57":0,"58":0,"60":0.00887,"62":0,"63":0.00443,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04434,"74":0.03104,"75":0.09311,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00726,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00363,"5.0-5.1":0.01996,"6.0-6.1":0.03085,"7.0-7.1":0.06896,"8.1-8.4":0.07259,"9.0-9.2":0.0363,"9.3":0.47912,"10.0-10.2":0.049,"10.3":0.3176,"11.0-11.2":0.07804,"11.3-11.4":0.098,"12.0-12.1":0.15608,"12.2-12.4":0.52086,"13.0-13.1":0.11615,"13.2":0.05082,"13.3":0.30127,"13.4-13.7":0.83665,"14.0-14.4":13.753,"14.5":0.16515},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00443,"9":0,"10":0,"11":0,"12":0.00443,"13":0.03104,"14":0.97991,_:"0","3.1":0,"3.2":0,"5.1":0.00443,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00887,"11.1":0.0133,"12.1":0.01774,"13.1":0.11972,"14.1":0.00887},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00443,"18":0.0133,"79":0,"80":0,"81":0,"83":0,"84":0.00443,"85":0,"86":0,"87":0.00443,"88":0.00443,"89":0.47,"90":0.21727},P:{"4":0.75021,"5.0-5.4":0,"6.2-6.4":0.01042,"7.2-7.4":0.03126,"8.2":0.01042,"9.2":0.0521,"10.1":0.02084,"11.1-11.2":0.09378,"12.0":0.08336,"13.0":1.09405,"14.0":0.45846},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00643,"4.2-4.3":0.01609,"4.4":0,"4.4.3-4.4.4":0.10295},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0.00616,"8":0,"9":0.00616,"10":0,"11":0.09853,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.60073},S:{"2.5":0},R:{_:"0"},M:{"0":0.15028},Q:{"10.4":0.02226},O:{"0":1.19669},H:{"0":0.72193}};


/***/ }),
/* 396 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01584,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0.00396,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00396,"67":0,"68":0.0198,"69":0,"70":0,"71":0,"72":0.00396,"73":0,"74":0,"75":0,"76":0,"77":0.00396,"78":0.01584,"79":0,"80":0.00396,"81":0.00792,"82":0.00396,"83":0.00396,"84":0.01188,"85":0.00792,"86":0.02771,"87":0.6176,"88":0.22566,"89":0.00396,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00396,"27":0,"28":0.00396,"29":0,"30":0.00396,"31":0,"32":0,"33":0.00396,"34":0,"35":0,"36":0,"37":0,"38":0.00396,"39":0,"40":0.02771,"41":0,"42":0.01188,"43":0.07918,"44":0,"45":0,"46":0.00396,"47":0,"48":0,"49":0.01584,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.02375,"56":0.00396,"57":0.00396,"58":0.00396,"59":0,"60":0.00792,"61":0.00396,"62":0,"63":0.01584,"64":0,"65":0.00792,"66":0.00396,"67":0.00396,"68":0.00396,"69":0.00396,"70":0.01188,"71":0.01188,"72":0.00396,"73":0.00396,"74":0.00792,"75":0.00396,"76":0.00396,"77":0.00792,"78":0.00396,"79":0.01584,"80":0.05543,"81":0.07522,"83":0.0198,"84":0.01584,"85":0.01188,"86":0.07126,"87":0.11481,"88":0.15044,"89":4.97646,"90":2.03889,"91":0.00792,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01188,"25":0,"26":0.03167,"27":0.00396,"28":0.02771,"29":0.04355,"30":0.00792,"31":0.01188,"32":0.0198,"33":0.01188,"34":0,"35":0.11877,"36":0.00396,"37":0,"38":0.01584,"39":0,"40":0,"41":0,"42":0.01584,"43":0,"44":0,"45":0.01188,"46":0.0673,"47":0.03959,"48":0,"49":0,"50":0.0673,"51":0.13065,"52":0,"53":0.00396,"54":0.41174,"55":0.48696,"56":0,"57":0,"58":0,"60":0,"62":0.00396,"63":0.01188,"64":0.00396,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00396,"73":0.10689,"74":0.14252,"75":0.52655,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.03167},G:{"8":0.00246,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0041,"6.0-6.1":0,"7.0-7.1":0.03201,"8.1-8.4":0.02216,"9.0-9.2":0.0041,"9.3":0.18797,"10.0-10.2":0.03365,"10.3":0.18715,"11.0-11.2":0.11656,"11.3-11.4":0.10917,"12.0-12.1":0.38251,"12.2-12.4":0.42848,"13.0-13.1":0.04186,"13.2":0.01806,"13.3":0.23394,"13.4-13.7":0.56638,"14.0-14.4":4.99321,"14.5":0.05746},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00396,"13":0.00396,"14":0.14252,_:"0","3.1":0,"3.2":0,"5.1":0.01584,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00396,"11.1":0.00792,"12.1":0.00396,"13.1":0.04355,"14.1":0.00396},B:{"12":0.01584,"13":0.01188,"14":0.00396,"15":0.01584,"16":0.02375,"17":0.01584,"18":0.11085,"79":0,"80":0,"81":0,"83":0,"84":0.00396,"85":0.01188,"86":0,"87":0.00792,"88":0.01188,"89":0.50279,"90":0.22566},P:{"4":2.18748,"5.0-5.4":0.02035,"6.2-6.4":0.02035,"7.2-7.4":0.53924,"8.2":0,"9.2":0.07122,"10.1":0.0407,"11.1-11.2":0.20349,"12.0":0.12209,"13.0":0.80377,"14.0":0.24418},I:{"0":0,"3":0,"4":0.00042,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00338,"4.2-4.3":0.00931,"4.4":0,"4.4.3-4.4.4":0.1544},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.24942,"5.5":0},J:{"7":0,"10":0.10874},N:{"10":0,"11":0},L:{"0":62.71909},S:{"2.5":0.14498},R:{_:"0"},M:{"0":0.07249},Q:{"10.4":0.01812},O:{"0":0.56181},H:{"0":7.60657}};


/***/ }),
/* 397 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01949,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00325,"48":0.0065,"49":0,"50":0,"51":0,"52":0.01299,"53":0,"54":0,"55":0,"56":0.00325,"57":0,"58":0,"59":0,"60":0.00325,"61":0.00325,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00325,"69":0.00325,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01949,"79":0.00325,"80":0.0065,"81":0.00325,"82":0,"83":0,"84":0.00325,"85":0.0065,"86":0.02598,"87":0.47096,"88":0.2436,"89":0.0065,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00974,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00325,"39":0,"40":0.0065,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00974,"50":0,"51":0,"52":0,"53":0.00325,"54":0,"55":0,"56":0,"57":0.01299,"58":0.00325,"59":0,"60":0,"61":0,"62":0,"63":0.0065,"64":0,"65":0.00325,"66":0,"67":0,"68":0,"69":0.0065,"70":0.00974,"71":0.00325,"72":0,"73":0.00325,"74":0.00325,"75":0.00325,"76":0.00325,"77":0.00325,"78":0.0065,"79":0.01949,"80":0.00974,"81":0.04547,"83":0.0065,"84":0.0065,"85":0.01299,"86":0.03248,"87":0.11368,"88":0.0747,"89":3.79042,"90":1.57528,"91":0.0065,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.0065,"27":0,"28":0.00974,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.00974,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00325,"51":0.0065,"52":0,"53":0,"54":0.06171,"55":0.10069,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00325,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.04222,"74":0.06821,"75":0.24685,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00325},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01089,"6.0-6.1":0.0029,"7.0-7.1":0.01598,"8.1-8.4":0.05882,"9.0-9.2":0,"9.3":0.06245,"10.0-10.2":0.00363,"10.3":0.14378,"11.0-11.2":0.02106,"11.3-11.4":0.04284,"12.0-12.1":0.06608,"12.2-12.4":0.20696,"13.0-13.1":0.03486,"13.2":0.04212,"13.3":0.21712,"13.4-13.7":0.40012,"14.0-14.4":5.18267,"14.5":0.07189},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0065,"14":0.26958,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00325,"11.1":0.01949,"12.1":0.00974,"13.1":0.05846,"14.1":0.0065},B:{"12":0.0065,"13":0.01299,"14":0.00974,"15":0.00974,"16":0.00974,"17":0.00974,"18":0.0812,"79":0,"80":0.0065,"81":0,"83":0,"84":0.00325,"85":0.0065,"86":0.00325,"87":0.0065,"88":0.00974,"89":0.76653,"90":0.32805},P:{"4":0.40736,"5.0-5.4":0.01018,"6.2-6.4":0.02037,"7.2-7.4":2.36266,"8.2":0.01018,"9.2":0.24441,"10.1":0.10184,"11.1-11.2":1.38501,"12.0":0.64158,"13.0":4.12447,"14.0":1.15078},I:{"0":0,"3":0,"4":0.00106,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00317,"4.2-4.3":0.01375,"4.4":0,"4.4.3-4.4.4":0.11049},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.30856,"5.5":0},J:{"7":0,"10":0.00675},N:{"10":0,"11":0},L:{"0":67.28237},S:{"2.5":0},R:{_:"0"},M:{"0":0.24982},Q:{"10.4":0.0135},O:{"0":0.97904},H:{"0":1.06752}};


/***/ }),
/* 398 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.08062,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.01008,"46":0,"47":0,"48":0.00504,"49":0,"50":0,"51":0,"52":0.06551,"53":0,"54":0,"55":0,"56":0.00504,"57":0,"58":0,"59":0,"60":0.02016,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.15117,"69":0.01008,"70":0,"71":0,"72":0.01008,"73":0.00504,"74":0,"75":0,"76":0,"77":0.01008,"78":0.26707,"79":0,"80":0.01008,"81":0.01512,"82":0.00504,"83":0.01008,"84":0.03023,"85":0.01512,"86":0.07559,"87":2.79161,"88":0.79616,"89":0.00504,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00504,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.1159,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.01008,"56":0.01512,"57":0.00504,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00504,"64":0,"65":0.01512,"66":0,"67":0.03023,"68":0.00504,"69":0.00504,"70":0.00504,"71":0.00504,"72":0.01008,"73":0.00504,"74":0.03527,"75":0,"76":0,"77":0.00504,"78":0.01008,"79":0.03527,"80":0.01512,"81":0.04031,"83":0.0252,"84":0.02016,"85":0.03023,"86":0.06047,"87":0.12598,"88":0.18644,"89":8.42017,"90":3.06875,"91":0.00504,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.01512,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.07055,"74":0.05039,"75":0.388,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00454,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00454,"7.0-7.1":0.02953,"8.1-8.4":0.00681,"9.0-9.2":0,"9.3":0.25442,"10.0-10.2":0.0318,"10.3":0.52248,"11.0-11.2":0.07951,"11.3-11.4":0.69967,"12.0-12.1":0.07496,"12.2-12.4":0.8655,"13.0-13.1":0.05679,"13.2":0.06588,"13.3":0.28168,"13.4-13.7":0.47932,"14.0-14.4":17.44398,"14.5":0.10222},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01512,"13":0.04535,"14":2.32802,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.12094,"11.1":0.04031,"12.1":0.16629,"13.1":0.37793,"14.1":0.06551},B:{"12":0,"13":0,"14":0.01008,"15":0.01512,"16":0.01008,"17":0.01512,"18":0.06551,"79":0,"80":0,"81":0,"83":0.01008,"84":0,"85":0,"86":0.00504,"87":0,"88":0.03527,"89":1.57721,"90":0.57949},P:{"4":0.10732,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.60101,"8.2":0,"9.2":0.42929,"10.1":0.09659,"11.1-11.2":0.86932,"12.0":0.30051,"13.0":4.16416,"14.0":1.51326},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00259,"4.2-4.3":0.00604,"4.4":0,"4.4.3-4.4.4":0.15191},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.28722,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":42.49298},S:{"2.5":0},R:{_:"0"},M:{"0":0.4961},Q:{"10.4":0},O:{"0":0.12403},H:{"0":0.05166}};


/***/ }),
/* 399 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00449,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00673,"31":0.00224,"32":0,"33":0.00224,"34":0,"35":0.00224,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.00224,"42":0,"43":0,"44":0,"45":0.00224,"46":0,"47":0.01122,"48":0.00224,"49":0,"50":0.00224,"51":0,"52":0.00673,"53":0,"54":0,"55":0,"56":0.00224,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00673,"66":0,"67":0.00224,"68":0.00224,"69":0,"70":0,"71":0,"72":0.00224,"73":0,"74":0,"75":0,"76":0,"77":0.00898,"78":0.00449,"79":0,"80":0.00224,"81":0.00224,"82":0.00449,"83":0,"84":0.00449,"85":0.00449,"86":0.01795,"87":0.3366,"88":0.13688,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00224,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00224,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00224,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00224,"38":0,"39":0,"40":0.00224,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00224,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.03815,"56":0,"57":0,"58":0.00673,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00898,"70":0.00224,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.00224,"78":0,"79":0.01571,"80":0,"81":0.00224,"83":0.00898,"84":0.03142,"85":0.00224,"86":0.00673,"87":0.03366,"88":0.07181,"89":1.07712,"90":0.38821,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00224,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01346,"25":0,"26":0.00898,"27":0.0359,"28":0.01795,"29":0,"30":0.01571,"31":0.02693,"32":0.00224,"33":0.00673,"34":0,"35":0.00224,"36":0,"37":0,"38":0.00449,"39":0,"40":0,"41":0,"42":0.00449,"43":0,"44":0,"45":0.00224,"46":0.01346,"47":0.00449,"48":0,"49":0,"50":0.03142,"51":0.03366,"52":0,"53":0.01122,"54":0.12118,"55":0.29845,"56":0,"57":0,"58":0,"60":0,"62":0.00224,"63":0.00898,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00224,"74":0.01571,"75":0.07854,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01795},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00096,"5.0-5.1":0,"6.0-6.1":0.00192,"7.0-7.1":0.00384,"8.1-8.4":0.0072,"9.0-9.2":0.00192,"9.3":0.05567,"10.0-10.2":0.00192,"10.3":0.04319,"11.0-11.2":0.06863,"11.3-11.4":0.22075,"12.0-12.1":0.03263,"12.2-12.4":0.99243,"13.0-13.1":0.04751,"13.2":0.0192,"13.3":0.12861,"13.4-13.7":0.55764,"14.0-14.4":2.24256,"14.5":0.03791},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.09425,_:"0","3.1":0,"3.2":0,"5.1":0.3164,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00224,"13.1":0.00449,"14.1":0.00224},B:{"12":0.00449,"13":0.00449,"14":0,"15":0.00224,"16":0.00224,"17":0.00673,"18":0.0561,"79":0,"80":0,"81":0,"83":0,"84":0.00224,"85":0.00224,"86":0,"87":0.00224,"88":0.00449,"89":0.21991,"90":0.08078},P:{"4":0.16413,"5.0-5.4":0.03077,"6.2-6.4":0.03077,"7.2-7.4":0.09232,"8.2":0,"9.2":0.06155,"10.1":0.02052,"11.1-11.2":0.06155,"12.0":0.14361,"13.0":0.92321,"14.0":0.06155},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01568,"4.2-4.3":0.0392,"4.4":0,"4.4.3-4.4.4":1.17595},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.73154,"5.5":0},J:{"7":0,"10":0.00776},N:{"10":0,"11":0},L:{"0":78.134},S:{"2.5":0.03102},R:{_:"0"},M:{"0":0.05429},Q:{"10.4":0.39556},O:{"0":1.43486},H:{"0":5.9771}};


/***/ }),
/* 400 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.07559,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0.07559,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1.12299,"88":0.67488,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.07559,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.07559,"75":0,"76":0,"77":0,"78":0,"79":0.07559,"80":0,"81":0.59929,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.89623,"89":6.59218,"90":3.74151,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":3.82198,"10.0-10.2":0,"10.3":0.19953,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0.80499,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":1.20404,"14.0-14.4":25.35031,"14.5":0.80499},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.82605,"13":0,"14":5.53937,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":1.6467,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0.07559,"16":0,"17":0,"18":0.15117,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0.07559,"87":0,"88":0,"89":0.67488,"90":0.89623},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":5.02904,"11.1-11.2":0.14917,"12.0":0,"13.0":6.06255,"14.0":1.48101},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":2.39716,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":21.16982},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 401 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00367,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00917,"44":0,"45":0,"46":0,"47":0.00367,"48":0.00183,"49":0,"50":0,"51":0,"52":0.0055,"53":0,"54":0,"55":0,"56":0.00183,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00183,"66":0.00183,"67":0,"68":0.01283,"69":0,"70":0,"71":0,"72":0.00183,"73":0,"74":0,"75":0,"76":0.00183,"77":0,"78":0.00917,"79":0.00183,"80":0.00183,"81":0.00183,"82":0.00367,"83":0.00183,"84":0.00733,"85":0.00917,"86":0.0165,"87":0.2053,"88":0.08982,"89":0.00367,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00367,"41":0,"42":0,"43":0.00183,"44":0,"45":0,"46":0,"47":0.0055,"48":0,"49":0.00367,"50":0.00183,"51":0,"52":0,"53":0.00183,"54":0,"55":0.00183,"56":0.00183,"57":0,"58":0.00367,"59":0,"60":0,"61":0,"62":0.00183,"63":0.00183,"64":0.00917,"65":0.00183,"66":0,"67":0,"68":0.00183,"69":0.00183,"70":0.00367,"71":0.00183,"72":0.00183,"73":0.00183,"74":0.0055,"75":0.00183,"76":0.00183,"77":0.00367,"78":0.00367,"79":0.00917,"80":0.01283,"81":0.022,"83":0.00917,"84":0.00917,"85":0.00733,"86":0.0165,"87":0.03849,"88":0.05499,"89":0.96416,"90":0.3721,"91":0.00367,"92":0.00183,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00183,"17":0,"18":0,"19":0.00183,"20":0.00183,"21":0,"22":0,"23":0.00367,"24":0.13014,"25":0.00367,"26":0.08249,"27":0.1833,"28":0.09165,"29":0.01283,"30":0.09165,"31":0.03116,"32":0.08982,"33":0.04033,"34":0.00183,"35":0.00917,"36":0.011,"37":0.00917,"38":0.05866,"39":0.0055,"40":0,"41":0.00367,"42":0.08249,"43":0.00183,"44":0.00917,"45":0.02933,"46":0.12281,"47":0.08798,"48":0.00367,"49":0,"50":0.26029,"51":0.28778,"52":0,"53":0.0055,"54":0.84685,"55":0.68188,"56":0,"57":0,"58":0.00183,"60":0.00367,"62":0.00917,"63":0.02566,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00367,"74":0.02016,"75":0.06782,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.11915},G:{"8":0.00129,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00258,"5.0-5.1":0.00193,"6.0-6.1":0.00451,"7.0-7.1":0.00516,"8.1-8.4":0.00129,"9.0-9.2":0.00193,"9.3":0.05349,"10.0-10.2":0.00902,"10.3":0.05542,"11.0-11.2":0.14113,"11.3-11.4":0.06638,"12.0-12.1":0.10504,"12.2-12.4":0.47172,"13.0-13.1":0.13404,"13.2":0.05607,"13.3":0.30804,"13.4-13.7":0.73014,"14.0-14.4":3.80923,"14.5":0.02642},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00183,"12":0,"13":0.0055,"14":0.03666,_:"0","3.1":0,"3.2":0,"5.1":0.01466,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00183,"12.1":0.00183,"13.1":0.00733,"14.1":0},B:{"12":0.00367,"13":0.00183,"14":0.00183,"15":0.00183,"16":0.00183,"17":0.00183,"18":0.011,"79":0,"80":0,"81":0,"83":0,"84":0.00183,"85":0.00183,"86":0.00183,"87":0.00183,"88":0.0055,"89":0.09348,"90":0.03849},P:{"4":0.06274,"5.0-5.4":0.01046,"6.2-6.4":0,"7.2-7.4":0.05228,"8.2":0,"9.2":0.06274,"10.1":0.02091,"11.1-11.2":0.11502,"12.0":0.09411,"13.0":0.56467,"14.0":0.13594},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0129,"4.2-4.3":0.03441,"4.4":0,"4.4.3-4.4.4":0.59353},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00298,"9":0,"10":0,"11":0.02085,"5.5":0},J:{"7":0,"10":0.0245},N:{"10":0,"11":0},L:{"0":45.83116},S:{"2.5":0.0245},R:{_:"0"},M:{"0":0.30218},Q:{"10.4":0.01633},O:{"0":1.40472},H:{"0":33.29394}};


/***/ }),
/* 402 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.0047,"44":0,"45":0,"46":0,"47":0.0047,"48":0,"49":0,"50":0,"51":0,"52":0.0094,"53":0,"54":0,"55":0,"56":0.0094,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.0047,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.0094,"73":0,"74":0,"75":0.0141,"76":0,"77":0,"78":0.0141,"79":0.0094,"80":0.0047,"81":0.0094,"82":0.0047,"83":0.0047,"84":0.0094,"85":0.0141,"86":0.0235,"87":0.7567,"88":0.3196,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.0047,"36":0,"37":0,"38":0.0094,"39":0,"40":0.0094,"41":0.0047,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0564,"50":0,"51":0,"52":0,"53":0.0094,"54":0,"55":0.0047,"56":0,"57":0,"58":0.0047,"59":0,"60":0,"61":0,"62":0,"63":0.0047,"64":0,"65":0,"66":0.0047,"67":0.0047,"68":0.0047,"69":0.0047,"70":0.0141,"71":0.0047,"72":0.0047,"73":0,"74":0.0047,"75":0.0094,"76":0.0376,"77":0.0094,"78":0.0047,"79":0.0329,"80":0.0329,"81":0.0329,"83":0.0329,"84":0.0188,"85":0.0188,"86":0.0517,"87":0.1598,"88":0.1739,"89":11.0403,"90":4.2582,"91":0.0047,"92":0.0047,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.0047,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0047,"47":0,"48":0,"49":0,"50":0.0047,"51":0.0047,"52":0,"53":0,"54":0.0141,"55":0.0282,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.0047,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.0047,"73":0.3337,"74":0.0564,"75":0.2867,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00073,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00734,"6.0-6.1":0.00147,"7.0-7.1":0.0558,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.09839,"10.0-10.2":0.00514,"10.3":0.08003,"11.0-11.2":0.03157,"11.3-11.4":0.01762,"12.0-12.1":0.02129,"12.2-12.4":0.14538,"13.0-13.1":0.02496,"13.2":0.01028,"13.3":0.08737,"13.4-13.7":0.25404,"14.0-14.4":5.79519,"14.5":0.10279},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0047,"14":0.3478,_:"0","3.1":0,"3.2":0,"5.1":0.4935,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.0094,"12.1":0.0094,"13.1":0.0376,"14.1":0.0047},B:{"12":0,"13":0,"14":0.0047,"15":0.0047,"16":0.0094,"17":0.0047,"18":0.047,"79":0,"80":0.0047,"81":0,"83":0,"84":0.0094,"85":0.0188,"86":0,"87":0.0094,"88":0.0094,"89":0.7144,"90":0.3807},P:{"4":0.41762,"5.0-5.4":0.02037,"6.2-6.4":0.04074,"7.2-7.4":0.26483,"8.2":0.02037,"9.2":0.19353,"10.1":0.12223,"11.1-11.2":0.50929,"12.0":0.22409,"13.0":2.00659,"14.0":0.61114},I:{"0":0,"3":0,"4":0.00365,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00853,"4.2-4.3":0.02314,"4.4":0,"4.4.3-4.4.4":0.25337},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.0047,"10":0,"11":0.0564,"5.5":0},J:{"7":0,"10":0.0053},N:{"10":0,"11":0},L:{"0":64.7703},S:{"2.5":0.0053},R:{_:"0"},M:{"0":0.1219},Q:{"10.4":0},O:{"0":0.265},H:{"0":0.4265}};


/***/ }),
/* 403 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0214,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00535,"49":0,"50":0,"51":0,"52":0.02675,"53":0,"54":0,"55":0,"56":0.0107,"57":0,"58":0,"59":0,"60":0.00535,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00535,"67":0,"68":0.01605,"69":0,"70":0,"71":0,"72":0.00535,"73":0,"74":0.00535,"75":0,"76":0,"77":0.00535,"78":0.06954,"79":0.0107,"80":0.0107,"81":0.01605,"82":0.0107,"83":0.0107,"84":0.02675,"85":0.04279,"86":0.10163,"87":1.16073,"88":0.43327,"89":0.00535,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00535,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01605,"48":0.00535,"49":0.20861,"50":0,"51":0,"52":0.01605,"53":0.00535,"54":0,"55":0,"56":0.00535,"57":0,"58":0.00535,"59":0.00535,"60":0,"61":0.07489,"62":0,"63":0.00535,"64":0.0214,"65":0.00535,"66":0.00535,"67":0.00535,"68":0.00535,"69":0.01605,"70":0.03744,"71":0.00535,"72":0.06419,"73":0.0214,"74":0.0107,"75":0.01605,"76":0.0214,"77":0.01605,"78":0.01605,"79":0.08558,"80":0.06419,"81":0.02675,"83":0.05349,"84":0.08024,"85":0.09628,"86":0.17652,"87":0.23536,"88":0.52955,"89":10.99754,"90":3.61058,"91":0.00535,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00535,"55":0.0107,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00535,"64":0,"65":0,"66":0,"67":0,"68":0.00535,"69":0,"70":0.00535,"71":0.00535,"72":0,"73":0.08558,"74":0.07489,"75":0.19791,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0058,"6.0-6.1":0.0116,"7.0-7.1":0.0087,"8.1-8.4":0.0087,"9.0-9.2":0.0609,"9.3":0.2871,"10.0-10.2":0.0087,"10.3":0.3132,"11.0-11.2":0.0493,"11.3-11.4":0.0899,"12.0-12.1":0.0696,"12.2-12.4":0.377,"13.0-13.1":0.0754,"13.2":0.0377,"13.3":0.2784,"13.4-13.7":0.99469,"14.0-14.4":24.6672,"14.5":0.2784},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00535,"12":0.0107,"13":0.07489,"14":3.12917,_:"0","3.1":0,"3.2":0,"5.1":0.00535,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01605,"11.1":0.04279,"12.1":0.07489,"13.1":0.38513,"14.1":0.05349},B:{"12":0,"13":0,"14":0,"15":0.00535,"16":0,"17":0.0107,"18":0.05884,"79":0,"80":0,"81":0.00535,"83":0.00535,"84":0.00535,"85":0.0107,"86":0.0107,"87":0.01605,"88":0.0214,"89":2.25728,"90":0.97352},P:{"4":0.07272,"5.0-5.4":0.01039,"6.2-6.4":0,"7.2-7.4":0.02078,"8.2":0,"9.2":0.03117,"10.1":0.02078,"11.1-11.2":0.07272,"12.0":0.08311,"13.0":3.39702,"14.0":1.67254},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01187,"4.2-4.3":0.03264,"4.4":0,"4.4.3-4.4.4":0.20177},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01315,"9":0.01315,"10":0.01315,"11":0.76289,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":34.75655},S:{"2.5":0},R:{_:"0"},M:{"0":0.35813},Q:{"10.4":0.01395},O:{"0":0.35813},H:{"0":0.27741}};


/***/ }),
/* 404 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02003,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01335,"53":0,"54":0,"55":0,"56":0.00668,"57":0,"58":0,"59":0.01335,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00668,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.07344,"79":0,"80":0,"81":0,"82":0.00668,"83":0.00668,"84":0.01335,"85":0.01335,"86":0.07344,"87":0.92129,"88":0.35383,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00668,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.04673,"50":0,"51":0.00668,"52":0,"53":0.00668,"54":0,"55":0.00668,"56":0,"57":0,"58":0,"59":0.00668,"60":0,"61":0.02003,"62":0.00668,"63":0.00668,"64":0,"65":0.00668,"66":0.05341,"67":0.0267,"68":0.00668,"69":0.10682,"70":0.00668,"71":0.00668,"72":0.00668,"73":0.01335,"74":0,"75":0.01335,"76":0.01335,"77":0.01335,"78":0.01335,"79":0.03338,"80":0.03338,"81":0.0267,"83":0.03338,"84":0.03338,"85":3.15775,"86":0.06676,"87":0.26704,"88":0.95467,"89":22.03748,"90":5.08044,"91":0.01335,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00668,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00668,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.29374,"74":0.15355,"75":0.36718,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.03312,"8.1-8.4":0.01656,"9.0-9.2":0.00662,"9.3":0.22523,"10.0-10.2":0.00994,"10.3":0.29147,"11.0-11.2":0.05631,"11.3-11.4":0.13911,"12.0-12.1":0.1093,"12.2-12.4":0.30803,"13.0-13.1":0.07949,"13.2":0.03643,"13.3":0.25504,"13.4-13.7":0.87773,"14.0-14.4":29.41892,"14.5":0.28485},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00668,"12":0.01335,"13":0.11349,"14":4.37946,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0267,"11.1":0.05341,"12.1":0.09346,"13.1":0.55411,"14.1":0.07344},B:{"12":0,"13":0,"14":0,"15":0.00668,"16":0.00668,"17":0.01335,"18":0.06008,"79":0,"80":0.00668,"81":0,"83":0.00668,"84":0.00668,"85":0.03338,"86":0.01335,"87":0.02003,"88":0.02003,"89":2.06956,"90":0.89458},P:{"4":0.05162,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.01032,"10.1":0.01032,"11.1-11.2":0.02065,"12.0":0.03097,"13.0":1.66216,"14.0":0.84656},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00286,"4.2-4.3":0.00857,"4.4":0,"4.4.3-4.4.4":0.03857},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.31377,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":19.35355},S:{"2.5":0},R:{_:"0"},M:{"0":0.1662},Q:{"10.4":0.00332},O:{"0":0.02992},H:{"0":0.13532}};


/***/ }),
/* 405 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00958,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.0024,"69":0,"70":0.0024,"71":0.0024,"72":0.0024,"73":0,"74":0,"75":0,"76":0.00479,"77":0,"78":0.00958,"79":0,"80":0,"81":0.0024,"82":0,"83":0,"84":0.0024,"85":0.00479,"86":0.00958,"87":0.52712,"88":0.12938,"89":0.00719,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00479,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.0024,"64":0.0024,"65":0.0024,"66":0,"67":0.0024,"68":0,"69":0,"70":0.0024,"71":0.0024,"72":0,"73":0.0024,"74":0.0024,"75":0.0024,"76":0.0024,"77":0.0024,"78":0.0024,"79":0.01198,"80":0.00479,"81":0.01198,"83":0.00479,"84":0.01198,"85":0.00719,"86":0.00958,"87":0.02396,"88":0.03594,"89":2.8776,"90":1.13331,"91":0.00958,"92":0.0024,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.0024,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.0024,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.0024,"51":0.0024,"52":0,"53":0,"54":0.01917,"55":0.0599,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00479,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00958,"74":0.02396,"75":0.09105,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.0024},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00156,"6.0-6.1":0.00233,"7.0-7.1":0.02646,"8.1-8.4":0.00156,"9.0-9.2":0.00856,"9.3":0.0677,"10.0-10.2":0.01634,"10.3":0.13151,"11.0-11.2":0.02957,"11.3-11.4":0.0498,"12.0-12.1":0.0428,"12.2-12.4":0.28715,"13.0-13.1":0.02179,"13.2":0.01089,"13.3":0.09105,"13.4-13.7":0.32217,"14.0-14.4":5.64494,"14.5":0.09338},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0024,"14":0.04792,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00719,"11.1":0.0024,"12.1":0.0024,"13.1":0.00958,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0.0024,"16":0,"17":0.0024,"18":0.00479,"79":0,"80":0.0024,"81":0,"83":0,"84":0,"85":0.0024,"86":0,"87":0,"88":0.0024,"89":0.17012,"90":0.17251},P:{"4":0.20321,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.06096,"8.2":0.01016,"9.2":0.02032,"10.1":0.02032,"11.1-11.2":0.07112,"12.0":0.0508,"13.0":0.54867,"14.0":0.19305},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00435,"4.2-4.3":0.01305,"4.4":0,"4.4.3-4.4.4":0.16208},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00958,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":82.98246},S:{"2.5":0},R:{_:"0"},M:{"0":0.06083},Q:{"10.4":0},O:{"0":1.38393},H:{"0":0.89267}};


/***/ }),
/* 406 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0.01029,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02058,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0.07203,"88":0.01029,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00343,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.26068,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.01715,"78":0,"79":0.01029,"80":0,"81":0.04802,"83":0.00343,"84":0.01372,"85":0.00343,"86":0,"87":0.67228,"88":0.00343,"89":2.27066,"90":0.98784,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.01372,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01372,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.04802,"55":0.00343,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0.01579,"9.3":0,"10.0-10.2":0,"10.3":0.03112,"11.0-11.2":0.01579,"11.3-11.4":0,"12.0-12.1":0.01579,"12.2-12.4":0.03112,"13.0-13.1":0.29633,"13.2":0,"13.3":0.73247,"13.4-13.7":0.68603,"14.0-14.4":2.72738,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.05145,"14":1.77331,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00343,"11.1":0.00343,"12.1":0.01372,"13.1":0.01029,"14.1":0.01029},B:{"12":0,"13":0,"14":0,"15":0,"16":0.01715,"17":0,"18":0.01029,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.01715,"89":1.21765,"90":0.26068},P:{"4":0.30809,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.04108,"8.2":0,"9.2":0.04108,"10.1":0,"11.1-11.2":0.08216,"12.0":1.07831,"13.0":4.45701,"14.0":0.3389},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.05145},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.05913,"7":0.20103,"8":0.53214,"9":0.05913,"10":0.19512,"11":0.19512,"5.5":0},J:{"7":0,"10":0.05256},N:{"10":0,"11":0},L:{"0":75.45071},S:{"2.5":0},R:{_:"0"},M:{"0":0.15768},Q:{"10.4":0},O:{"0":0.24966},H:{"0":0.83349}};


/***/ }),
/* 407 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0.30383,"88":0.40383,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.19999,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1.71532,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.30383,"89":4.34213,"90":5.04595,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":0.34947,"14.0-14.4":1.04821,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0,"14.1":0},B:{"12":0,"13":0.1,"14":0,"15":0,"16":0,"17":0,"18":0.40383,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0.70766},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0.26462,"14.0":0},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.90766,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":79.73595},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":2.65237},H:{"0":0}};


/***/ }),
/* 408 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.00551,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02755,"34":0.00551,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.02204,"53":0,"54":0,"55":0,"56":0.01102,"57":0,"58":0,"59":0,"60":0.00551,"61":0,"62":0,"63":0,"64":0,"65":0.00551,"66":0.00551,"67":0,"68":0.02755,"69":0,"70":0,"71":0,"72":0.01102,"73":0,"74":0,"75":0,"76":0,"77":0.00551,"78":0.08264,"79":0.00551,"80":0.00551,"81":0.00551,"82":0,"83":0.00551,"84":0.02204,"85":0.02755,"86":0.07713,"87":1.18994,"88":0.41318,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.00551,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00551,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.01102,"35":0,"36":0,"37":0,"38":0.06611,"39":0,"40":0,"41":0,"42":0.00551,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.11569,"50":0,"51":0,"52":0,"53":0.09916,"54":0,"55":0,"56":0.00551,"57":0.01102,"58":0.00551,"59":0,"60":0,"61":0.01102,"62":0.00551,"63":0.01653,"64":0.00551,"65":0.04407,"66":0.00551,"67":0.02755,"68":0.04407,"69":0.05509,"70":0.02204,"71":0.01653,"72":0.01653,"73":0.02755,"74":0.03305,"75":0.02204,"76":0.02755,"77":0.01653,"78":0.02204,"79":0.07162,"80":0.03856,"81":0.04407,"83":0.0606,"84":0.03305,"85":0.03305,"86":0.22036,"87":0.34707,"88":0.80982,"89":11.51932,"90":3.94444,"91":0.01102,"92":0.00551,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00551,"37":0.01102,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01102,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00551,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00551,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0606,"74":0.03856,"75":0.12671,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00317,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0127,"6.0-6.1":0.08572,"7.0-7.1":0.07302,"8.1-8.4":0.13017,"9.0-9.2":0.05397,"9.3":0.67305,"10.0-10.2":0.08254,"10.3":0.7556,"11.0-11.2":0.327,"11.3-11.4":0.21588,"12.0-12.1":0.16509,"12.2-12.4":0.86354,"13.0-13.1":0.06985,"13.2":0.0254,"13.3":0.33018,"13.4-13.7":1.108,"14.0-14.4":24.60135,"14.5":0.25716},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.02204,"12":0.01653,"13":0.10467,"14":3.47067,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00551,"10.1":0.03856,"11.1":0.0606,"12.1":0.11018,"13.1":0.51234,"14.1":0.04958},B:{"12":0,"13":0,"14":0,"15":0.01102,"16":0.00551,"17":0.01102,"18":0.1212,"79":0,"80":0.00551,"81":0,"83":0,"84":0.00551,"85":0.01102,"86":0.00551,"87":0.00551,"88":0.02204,"89":1.76288,"90":0.74922},P:{"4":0.18035,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01061,"8.2":0,"9.2":0.04243,"10.1":0.03183,"11.1-11.2":0.10609,"12.0":0.06365,"13.0":1.93076,"14.0":0.94416},I:{"0":0,"3":0,"4":0.00205,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00616,"4.2-4.3":0.01849,"4.4":0,"4.4.3-4.4.4":0.16228},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.02849,"10":0,"11":0.79786,"5.5":0},J:{"7":0,"10":0.00449},N:{"10":0,"11":0},L:{"0":34.85779},S:{"2.5":0},R:{_:"0"},M:{"0":0.41766},Q:{"10.4":0.08533},O:{"0":0.29192},H:{"0":0.2381}};


/***/ }),
/* 409 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00348,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00348,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00348,"79":0,"80":0.00348,"81":0.00348,"82":0,"83":0,"84":0.00348,"85":0.00696,"86":0.00696,"87":0.15656,"88":0.06262,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00348,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00348,"35":0,"36":0,"37":0,"38":0.01044,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02783,"50":0,"51":0,"52":0,"53":0.01392,"54":0,"55":0,"56":0.00348,"57":0,"58":0.00348,"59":0,"60":0,"61":0,"62":0.00348,"63":0.00348,"64":0.00348,"65":0.00348,"66":0,"67":0.00348,"68":0.01044,"69":0.00348,"70":0.00696,"71":0.00348,"72":0.00348,"73":0.00348,"74":0.00348,"75":0.00348,"76":0.01044,"77":0.00348,"78":0.02435,"79":0.01044,"80":0.00696,"81":0.03131,"83":0.16003,"84":0.01044,"85":0.0174,"86":0.03479,"87":0.05219,"88":0.08002,"89":5.62206,"90":2.24743,"91":0.01392,"92":0.00348,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00348,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00348,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00696,"55":0.04175,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00348,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.05219,"74":0.04871,"75":0.08002,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02499,"6.0-6.1":0.00227,"7.0-7.1":0.12268,"8.1-8.4":0,"9.0-9.2":0.00454,"9.3":0.09769,"10.0-10.2":0.01363,"10.3":0.08179,"11.0-11.2":0.04998,"11.3-11.4":0.05907,"12.0-12.1":0.08406,"12.2-12.4":0.38623,"13.0-13.1":0.07497,"13.2":0.04317,"13.3":0.28854,"13.4-13.7":0.92241,"14.0-14.4":19.0888,"14.5":0.27945},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00348,"13":0.01392,"14":0.60187,_:"0","3.1":0,"3.2":0,"5.1":0.03479,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00348,"11.1":0.01392,"12.1":0.01044,"13.1":0.07654,"14.1":0.00696},B:{"12":0.00696,"13":0.00348,"14":0.00696,"15":0.00696,"16":0.00696,"17":0.00696,"18":0.04871,"79":0,"80":0.00348,"81":0,"83":0,"84":0.00348,"85":0.00348,"86":0.00348,"87":0.00348,"88":0.00696,"89":0.70276,"90":0.27832},P:{"4":0.71182,"5.0-5.4":0.01032,"6.2-6.4":0.01032,"7.2-7.4":0.10316,"8.2":0.01032,"9.2":0.16506,"10.1":0.03095,"11.1-11.2":0.29917,"12.0":0.18569,"13.0":2.63064,"14.0":1.00067},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00407,"4.2-4.3":0.01222,"4.4":0,"4.4.3-4.4.4":0.13981},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.78973,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":58.1361},S:{"2.5":0},R:{_:"0"},M:{"0":0.09782},Q:{"10.4":0.00652},O:{"0":0.58689},H:{"0":0.35807}};


/***/ }),
/* 410 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00895,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00448,"53":0,"54":0,"55":0,"56":0,"57":0.00895,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.0537,"67":0,"68":0.00448,"69":0,"70":0,"71":0,"72":0,"73":0.02685,"74":0,"75":0,"76":0,"77":0,"78":0.03133,"79":0.00448,"80":0,"81":0,"82":0.00448,"83":0.00448,"84":0.01343,"85":0.00895,"86":0.04028,"87":0.48778,"88":0.21928,"89":0.00448,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00448,"12":0.04475,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00448,"39":0,"40":0,"41":0,"42":0.00448,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0895,"50":0,"51":0,"52":0,"53":0.01343,"54":0,"55":0,"56":0.00448,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00448,"63":0.00448,"64":0.00448,"65":0.00895,"66":0,"67":0.00448,"68":0.01343,"69":0.00448,"70":0.0179,"71":0.00448,"72":0.00448,"73":0.01343,"74":0.0179,"75":0.03133,"76":0.01343,"77":0.01343,"78":0.02685,"79":0.03133,"80":0.0179,"81":0.04028,"83":0.04923,"84":0.04028,"85":0.02238,"86":0.05818,"87":0.1074,"88":0.22375,"89":8.86945,"90":3.87983,"91":0.02238,"92":0.01343,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00448,"55":0.00895,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00448,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.24613,"74":0.0716,"75":0.20585,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00241,"6.0-6.1":0.02655,"7.0-7.1":0.06758,"8.1-8.4":0.00241,"9.0-9.2":0.00362,"9.3":0.11464,"10.0-10.2":0.02534,"10.3":0.07241,"11.0-11.2":0.03379,"11.3-11.4":0.02896,"12.0-12.1":0.02172,"12.2-12.4":0.12671,"13.0-13.1":0.02414,"13.2":0.02051,"13.3":0.16412,"13.4-13.7":0.40065,"14.0-14.4":10.24783,"14.5":0.1786},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0179,"13":0.0179,"14":1.0561,_:"0","3.1":0,"3.2":0,"5.1":0.52358,"6.1":0,"7.1":0,"9.1":0.00448,"10.1":0.00448,"11.1":0.00895,"12.1":0.04923,"13.1":0.15215,"14.1":0.02238},B:{"12":0,"13":0.02238,"14":0.00448,"15":0.00448,"16":0.00895,"17":0.00895,"18":0.02685,"79":0,"80":0.00448,"81":0,"83":0,"84":0.00448,"85":0.00448,"86":0.00895,"87":0.00448,"88":0.00895,"89":0.92185,"90":0.49225},P:{"4":0.26592,"5.0-5.4":0,"6.2-6.4":0.01023,"7.2-7.4":0.43978,"8.2":0.02046,"9.2":0.13296,"10.1":0.09205,"11.1-11.2":0.45001,"12.0":0.21478,"13.0":2.99667,"14.0":1.21708},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00697,"4.2-4.3":0.01627,"4.4":0,"4.4.3-4.4.4":0.22074},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.01247,"10":0,"11":0.16206,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":59.71868},S:{"2.5":0.00553},R:{_:"0"},M:{"0":0.27625},Q:{"10.4":0},O:{"0":0.21548},H:{"0":0.204}};


/***/ }),
/* 411 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00609,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.02436,"67":0,"68":0.00609,"69":0,"70":0,"71":0,"72":0,"73":0.00609,"74":0,"75":0,"76":0,"77":0,"78":0.01218,"79":0,"80":0.00609,"81":0.00609,"82":0.00609,"83":0.00609,"84":0.01218,"85":0.00609,"86":0.01827,"87":0.53592,"88":0.23751,"89":0.00609,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01218,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00609,"35":0,"36":0,"37":0,"38":0.03045,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00609,"47":0.00609,"48":0,"49":0.06699,"50":0,"51":0,"52":0,"53":0.04263,"54":0,"55":0,"56":0,"57":0.00609,"58":0.00609,"59":0,"60":0,"61":0,"62":0.00609,"63":0.00609,"64":0,"65":0.00609,"66":0.00609,"67":0.00609,"68":0.01218,"69":0.00609,"70":0.01218,"71":0.01218,"72":0.00609,"73":0.00609,"74":0.02436,"75":0.01827,"76":0.01218,"77":0.01218,"78":0.01218,"79":0.03045,"80":0.04872,"81":0.08526,"83":0.07308,"84":0.04872,"85":0.04263,"86":0.07917,"87":0.19488,"88":0.3045,"89":20.4015,"90":9.75618,"91":0.01218,"92":0.00609,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00609,"55":0.01218,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0.00609,"65":0,"66":0.00609,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.63336,"74":0.1218,"75":0.43239,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00927,"6.0-6.1":0.00327,"7.0-7.1":0.01036,"8.1-8.4":0.00109,"9.0-9.2":0,"9.3":0.05561,"10.0-10.2":0.00654,"10.3":0.04471,"11.0-11.2":0.01636,"11.3-11.4":0.03053,"12.0-12.1":0.05561,"12.2-12.4":0.12485,"13.0-13.1":0.02235,"13.2":0.00872,"13.3":0.07578,"13.4-13.7":0.26279,"14.0-14.4":4.34917,"14.5":0.07742},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00609,"13":0.01827,"14":0.50547,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00609,"12.1":0.01827,"13.1":0.08526,"14.1":0.01218},B:{"12":0,"13":0,"14":0,"15":0.00609,"16":0,"17":0,"18":0.02436,"79":0,"80":0,"81":0,"83":0,"84":0.00609,"85":0.00609,"86":0,"87":0.00609,"88":0.01218,"89":1.02921,"90":0.51765},P:{"4":0.20457,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.05114,"8.2":0,"9.2":0.05114,"10.1":0.02046,"11.1-11.2":0.1432,"12.0":0.0716,"13.0":0.64439,"14.0":0.22502},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00474,"4.2-4.3":0.015,"4.4":0,"4.4.3-4.4.4":0.13026},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.07917,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":55.82667},S:{"2.5":0},R:{_:"0"},M:{"0":0.10557},Q:{"10.4":0},O:{"0":0.02737},H:{"0":0.16658}};


/***/ }),
/* 412 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.01672,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01114,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00557,"44":0,"45":0,"46":0,"47":0.00557,"48":0.01672,"49":0.00557,"50":0,"51":0,"52":0.11701,"53":0,"54":0,"55":0,"56":0.00557,"57":0,"58":0,"59":0.04458,"60":0.02229,"61":0.00557,"62":0.00557,"63":0,"64":0,"65":0,"66":0.05572,"67":0,"68":0.1003,"69":0,"70":0,"71":0,"72":0.01114,"73":0,"74":0,"75":0.00557,"76":0,"77":0.01672,"78":0.44019,"79":0,"80":0,"81":0.01114,"82":0.00557,"83":0.01114,"84":2.57426,"85":0.10587,"86":0.10587,"87":2.10622,"88":1.0754,"89":0.00557,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01672,"50":0,"51":0,"52":0,"53":0.00557,"54":0,"55":0,"56":0.01672,"57":0,"58":0.00557,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.08915,"66":0,"67":0.02229,"68":0,"69":0.00557,"70":0.00557,"71":0,"72":0,"73":0.00557,"74":0,"75":0.00557,"76":0,"77":0,"78":0.00557,"79":0.01672,"80":0.00557,"81":0.01672,"83":0.1003,"84":0.03343,"85":0.01672,"86":0.03343,"87":0.18945,"88":0.19502,"89":8.50287,"90":3.56608,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00557,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00557,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.06129,"74":0.12258,"75":0.34546,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.01088,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03264,"6.0-6.1":0.12838,"7.0-7.1":0.0087,"8.1-8.4":0.00435,"9.0-9.2":0.03264,"9.3":0.5701,"10.0-10.2":0.01741,"10.3":0.50264,"11.0-11.2":0.20672,"11.3-11.4":0.09139,"12.0-12.1":0.25459,"12.2-12.4":0.42431,"13.0-13.1":0.04352,"13.2":0.01741,"13.3":1.26205,"13.4-13.7":0.95307,"14.0-14.4":15.49712,"14.5":0.11533},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00557,"11":0.00557,"12":0.039,"13":0.10587,"14":3.3042,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01114,"10.1":0.039,"11.1":0.22288,"12.1":0.16716,"13.1":0.66864,"14.1":0.08915},B:{"12":0,"13":0,"14":0,"15":0,"16":0.02229,"17":0.01672,"18":0.04458,"79":0,"80":0,"81":0,"83":0,"84":0.01672,"85":0.00557,"86":0.00557,"87":0.00557,"88":0.01114,"89":1.72175,"90":0.61292},P:{"4":0.1578,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.12624,"8.2":0.01052,"9.2":0.11572,"10.1":0.01052,"11.1-11.2":0.43131,"12.0":0.23144,"13.0":3.0823,"14.0":1.12562},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00579,"4.2-4.3":0.01159,"4.4":0,"4.4.3-4.4.4":0.30893},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.67978,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":41.28905},S:{"2.5":0},R:{_:"0"},M:{"0":0.48708},Q:{"10.4":0},O:{"0":0.57121},H:{"0":0.05869}};


/***/ }),
/* 413 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00357,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.00357,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.02142,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00357,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00357,"59":0,"60":0,"61":0.00357,"62":0.00357,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00714,"69":0,"70":0,"71":0,"72":0.00357,"73":0,"74":0.00357,"75":0,"76":0.00357,"77":0.01071,"78":0.00714,"79":0.00357,"80":0.00357,"81":0.00357,"82":0.01785,"83":0.00714,"84":0.01071,"85":0.04284,"86":0.04641,"87":0.36414,"88":0.14994,"89":0.00357,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00714,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00357,"27":0,"28":0.00357,"29":0.00357,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00714,"38":0.00357,"39":0,"40":0.0714,"41":0,"42":0.00357,"43":0,"44":0,"45":0,"46":0.00357,"47":0,"48":0.00357,"49":0.02499,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.01785,"56":0,"57":0.01785,"58":0.00357,"59":0.00357,"60":0,"61":0,"62":0,"63":0.00714,"64":0.00714,"65":0.00714,"66":0.00357,"67":0.03927,"68":0.00714,"69":0.0357,"70":0.08211,"71":0.00357,"72":0.00714,"73":0,"74":0.02142,"75":0.00357,"76":0.00714,"77":0.00357,"78":0.00357,"79":0.01428,"80":0.02499,"81":0.01428,"83":0.02142,"84":0.02142,"85":0.00714,"86":0.04284,"87":0.13923,"88":0.16065,"89":4.02696,"90":1.87782,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00357,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.04284,"38":0.00357,"39":0,"40":0,"41":0,"42":0,"43":0.00357,"44":0,"45":0,"46":0.00714,"47":0.00357,"48":0,"49":0,"50":0.02499,"51":0.00357,"52":0,"53":0,"54":0.04284,"55":0.13209,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00714,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00357,"74":0.16065,"75":0.64974,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.00357,"12.1":0.01071},G:{"8":0.00031,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00125,"6.0-6.1":0.00031,"7.0-7.1":0.01129,"8.1-8.4":0.00345,"9.0-9.2":0.00063,"9.3":0.16591,"10.0-10.2":0.01756,"10.3":0.03858,"11.0-11.2":0.03042,"11.3-11.4":0.02415,"12.0-12.1":0.03293,"12.2-12.4":0.29639,"13.0-13.1":0.03607,"13.2":0.02509,"13.3":0.0897,"13.4-13.7":0.3083,"14.0-14.4":1.83728,"14.5":0.0047},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00357,"12":0,"13":0.02499,"14":0.1071,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00357,"11.1":0.00357,"12.1":0.01071,"13.1":0.03927,"14.1":0},B:{"12":0.02499,"13":0.02142,"14":0.01428,"15":0.02142,"16":0.04284,"17":0.13923,"18":0.26061,"79":0,"80":0.01785,"81":0.00357,"83":0.00357,"84":0.02142,"85":0.02142,"86":0.00714,"87":0.01071,"88":0.06426,"89":0.63546,"90":0.26061},P:{"4":0.41941,"5.0-5.4":0.02046,"6.2-6.4":0.04092,"7.2-7.4":0.76722,"8.2":0.03069,"9.2":0.23528,"10.1":0.14321,"11.1-11.2":0.624,"12.0":0.23528,"13.0":1.86178,"14.0":0.3478},I:{"0":0,"3":0,"4":0.01424,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03416,"4.2-4.3":0.06833,"4.4":0,"4.4.3-4.4.4":0.88828},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00427,"10":0.00427,"11":0.1664,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":72.34186},S:{"2.5":0.18647},R:{_:"0"},M:{"0":0.12217},Q:{"10.4":0.43081},O:{"0":1.98687},H:{"0":2.21585}};


/***/ }),
/* 414 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00549,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00549,"53":0,"54":0,"55":0,"56":0.02745,"57":0,"58":0,"59":0,"60":0.00549,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00549,"69":0,"70":0,"71":0,"72":0.00549,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01098,"79":0,"80":0,"81":0.00549,"82":0.00549,"83":0.00549,"84":0.00549,"85":0.00549,"86":0.01647,"87":0.36234,"88":0.14823,"89":0.00549,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00549,"35":0,"36":0,"37":0,"38":0.02196,"39":0.00549,"40":0,"41":0,"42":0.00549,"43":0,"44":0,"45":0,"46":0,"47":0.00549,"48":0,"49":0.03843,"50":0,"51":0,"52":0,"53":0.01647,"54":0,"55":0.00549,"56":0,"57":0,"58":0.00549,"59":0,"60":0,"61":0.01647,"62":0,"63":0.00549,"64":0.00549,"65":0.01098,"66":0.00549,"67":0.01098,"68":0.01098,"69":0.01098,"70":0.01098,"71":0.01647,"72":0.01647,"73":0.01647,"74":0.02745,"75":0.02745,"76":0.04941,"77":0.02745,"78":0.03294,"79":0.04941,"80":0.04941,"81":0.0549,"83":0.09882,"84":0.06039,"85":0.06039,"86":0.20313,"87":0.4392,"88":0.47214,"89":16.77744,"90":5.68764,"91":0.02745,"92":0.00549,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00549,"37":0.01098,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00549,"47":0,"48":0,"49":0,"50":0.00549,"51":0.00549,"52":0,"53":0,"54":0.02196,"55":0.03843,"56":0,"57":0,"58":0,"60":0.00549,"62":0,"63":0.00549,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.25254,"74":0.04392,"75":0.18666,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00452,"3.2":0.0009,"4.0-4.1":0,"4.2-4.3":0.0009,"5.0-5.1":0.04881,"6.0-6.1":0.00904,"7.0-7.1":0.12473,"8.1-8.4":0.01536,"9.0-9.2":0.02621,"9.3":0.38593,"10.0-10.2":0.03163,"10.3":0.14913,"11.0-11.2":0.06417,"11.3-11.4":0.06327,"12.0-12.1":0.07773,"12.2-12.4":0.39316,"13.0-13.1":0.05152,"13.2":0.02892,"13.3":0.14461,"13.4-13.7":0.43655,"14.0-14.4":6.01222,"14.5":0.10213},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00549,"12":0,"13":0.02196,"14":0.58194,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00549,"11.1":0.01098,"12.1":0.01647,"13.1":0.08235,"14.1":0.01098},B:{"12":0,"13":0,"14":0,"15":0.00549,"16":0.00549,"17":0.00549,"18":0.02196,"79":0,"80":0,"81":0,"83":0,"84":0.00549,"85":0.00549,"86":0,"87":0.00549,"88":0.01098,"89":0.9882,"90":0.45018},P:{"4":0.19775,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01041,"8.2":0,"9.2":0.02082,"10.1":0.02082,"11.1-11.2":0.08326,"12.0":0.06245,"13.0":0.6765,"14.0":0.28101},I:{"0":0,"3":0,"4":0.00527,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00878,"4.2-4.3":0.01756,"4.4":0,"4.4.3-4.4.4":0.44073},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.29646,"5.5":0},J:{"7":0,"10":0.00451},N:{"10":0,"11":0},L:{"0":57.46693},S:{"2.5":0},R:{_:"0"},M:{"0":0.08569},Q:{"10.4":0.00902},O:{"0":1.14103},H:{"0":0.73013}};


/***/ }),
/* 415 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00243,"48":0,"49":0,"50":0.00243,"51":0,"52":0.0097,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00243,"69":0,"70":0,"71":0,"72":0.00243,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00485,"79":0,"80":0.00243,"81":0.00243,"82":0,"83":0.00243,"84":0.00728,"85":0.00243,"86":0.00728,"87":0.15769,"88":0.0655,"89":0.00243,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00243,"39":0,"40":0.00243,"41":0,"42":0.00243,"43":0.00728,"44":0,"45":0,"46":0,"47":0,"48":0.00243,"49":0.01456,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00485,"57":0,"58":0.00243,"59":0,"60":0,"61":0.01213,"62":0,"63":0.00485,"64":0.00243,"65":0.00243,"66":0,"67":0.00243,"68":0.00243,"69":0.00243,"70":0.00243,"71":0.00243,"72":0.00243,"73":0.00243,"74":0.00485,"75":0.00485,"76":0.00485,"77":0.00485,"78":0.00485,"79":0.0097,"80":0.00728,"81":0.01941,"83":0.01213,"84":0.01941,"85":0.01698,"86":0.02911,"87":0.06308,"88":0.07035,"89":2.56186,"90":1.11839,"91":0.0097,"92":0.00243,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.00243,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00728,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00243,"46":0,"47":0,"48":0,"49":0,"50":0.00243,"51":0.00485,"52":0,"53":0,"54":0.02911,"55":0.07278,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00485,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02183,"74":0.02911,"75":0.11645,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00046,"5.0-5.1":0.0164,"6.0-6.1":0.00319,"7.0-7.1":0.0451,"8.1-8.4":0.0041,"9.0-9.2":0.00228,"9.3":0.09111,"10.0-10.2":0.01412,"10.3":0.08427,"11.0-11.2":0.03006,"11.3-11.4":0.04145,"12.0-12.1":0.02779,"12.2-12.4":0.18631,"13.0-13.1":0.02187,"13.2":0.00957,"13.3":0.07106,"13.4-13.7":0.23186,"14.0-14.4":3.17823,"14.5":0.04646},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00243,"14":0.04852,_:"0","3.1":0,"3.2":0,"5.1":0.01698,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00243,"13.1":0.0097,"14.1":0},B:{"12":0.00243,"13":0,"14":0.00243,"15":0.00243,"16":0.00243,"17":0.00243,"18":0.0097,"79":0,"80":0,"81":0,"83":0,"84":0.00243,"85":0.00243,"86":0,"87":0,"88":0.00243,"89":0.11402,"90":0.05337},P:{"4":0.27013,"5.0-5.4":0.01039,"6.2-6.4":0.02078,"7.2-7.4":0.05195,"8.2":0.01039,"9.2":0.05195,"10.1":0.03117,"11.1-11.2":0.10389,"12.0":0.09351,"13.0":0.99739,"14.0":0.34285},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00682,"4.2-4.3":0.02181,"4.4":0,"4.4.3-4.4.4":0.36261},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.0027,"9":0.0027,"10":0,"11":0.04313,"5.5":0},J:{"7":0,"10":0.00757},N:{"10":0,"11":0},L:{"0":80.05669},S:{"2.5":0.13633},R:{_:"0"},M:{"0":0.05302},Q:{"10.4":0.00757},O:{"0":4.32475},H:{"0":1.60621}};


/***/ }),
/* 416 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0047,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01879,"49":0,"50":0,"51":0.0047,"52":0.14564,"53":0,"54":0,"55":0,"56":0.0047,"57":0.0047,"58":0,"59":0,"60":0.0094,"61":0,"62":0,"63":0,"64":0,"65":0.0047,"66":0.0047,"67":0,"68":0.02349,"69":0.0047,"70":0.0047,"71":0.0047,"72":0.01409,"73":0,"74":0.0047,"75":0.0047,"76":0.0047,"77":0.0047,"78":0.08456,"79":0.0047,"80":0.0094,"81":0.01409,"82":0.01879,"83":0.01409,"84":0.03758,"85":0.04698,"86":0.10336,"87":2.75773,"88":1.07114,"89":0.0047,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.0047,"35":0,"36":0,"37":0,"38":0.0047,"39":0,"40":0.0047,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0047,"47":0,"48":0,"49":0.14564,"50":0.0047,"51":0,"52":0,"53":0.0047,"54":0,"55":0,"56":0.0047,"57":0,"58":0.0047,"59":0.0047,"60":0,"61":0.01409,"62":0,"63":0.01409,"64":0.0094,"65":0.0047,"66":0.0047,"67":0.0047,"68":0.0047,"69":0.0047,"70":0.0094,"71":0.0094,"72":0.0047,"73":0.0047,"74":0.0094,"75":0.0094,"76":0.01879,"77":0.0047,"78":0.0094,"79":0.11275,"80":0.01879,"81":0.05638,"83":0.04698,"84":0.02819,"85":0.01879,"86":0.04228,"87":0.08926,"88":0.17852,"89":7.60136,"90":3.07249,"91":0.0047,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.01409,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01409,"55":0.02349,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.01879,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.0047,"73":1.02886,"74":0.29597,"75":1.10403,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.0005,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00151,"6.0-6.1":0.00252,"7.0-7.1":0.00353,"8.1-8.4":0,"9.0-9.2":0.00252,"9.3":0.06096,"10.0-10.2":0.00655,"10.3":0.06197,"11.0-11.2":0.02922,"11.3-11.4":0.03073,"12.0-12.1":0.02973,"12.2-12.4":0.11588,"13.0-13.1":0.02116,"13.2":0.01058,"13.3":0.07507,"13.4-13.7":0.21009,"14.0-14.4":4.0845,"14.5":0.05592},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0094,"14":0.41812,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.01409,"12.1":0.01879,"13.1":0.07047,"14.1":0.0094},B:{"12":0,"13":0,"14":0.0047,"15":0.01409,"16":0.0047,"17":0.0094,"18":0.02819,"79":0,"80":0,"81":0,"83":0,"84":0.0047,"85":0.0047,"86":0.0094,"87":0.0094,"88":0.01409,"89":1.29195,"90":0.59195},P:{"4":0.21312,"5.0-5.4":0.0203,"6.2-6.4":0.01015,"7.2-7.4":0.0406,"8.2":0.01015,"9.2":0.10149,"10.1":0.05074,"11.1-11.2":0.30446,"12.0":0.16238,"13.0":2.24288,"14.0":0.86265},I:{"0":0,"3":0,"4":0.00377,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03075,"4.2-4.3":0.0251,"4.4":0,"4.4.3-4.4.4":0.09099},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.10805,"5.5":0},J:{"7":0,"10":0.0053},N:{"10":0,"11":0},L:{"0":65.44324},S:{"2.5":0},R:{_:"0"},M:{"0":0.2704},Q:{"10.4":0},O:{"0":0.03181},H:{"0":1.18462}};


/***/ }),
/* 417 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00531,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00531,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.01592,"49":0,"50":0,"51":0,"52":0.02654,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.02123,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.01592,"76":0,"77":0,"78":0.08491,"79":0.00531,"80":0,"81":0.03184,"82":0.01592,"83":0,"84":0.19105,"85":0.02123,"86":0.09553,"87":2.10157,"88":1.01894,"89":0.01061,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00531,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01592,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.01061,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.00531,"76":0,"77":0,"78":0.11145,"79":0.01061,"80":0,"81":0.02654,"83":0,"84":0,"85":0,"86":0.07961,"87":0.04246,"88":0.19105,"89":8.48059,"90":3.35933,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.14329,"74":0,"75":0.37149,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0.06189,"9.3":0.06189,"10.0-10.2":0,"10.3":0,"11.0-11.2":0.07736,"11.3-11.4":0.18566,"12.0-12.1":0.07736,"12.2-12.4":2.01133,"13.0-13.1":0,"13.2":0.07736,"13.3":0.27849,"13.4-13.7":0.72717,"14.0-14.4":32.88131,"14.5":0.1083},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0743,"14":3.70429,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.02123,"11.1":0.30781,"12.1":0.08491,"13.1":0.3768,"14.1":0.03184},B:{"12":0,"13":0,"14":0.01061,"15":0,"16":0,"17":0,"18":0.01061,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0.12737,"87":0,"88":0.00531,"89":2.91354,"90":1.67171},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0.01067,"12.0":0.01067,"13.0":1.48332,"14.0":0.17074},I:{"0":0,"3":0,"4":0.00238,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.12416},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.18575,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":34.06663},S:{"2.5":0},R:{_:"0"},M:{"0":0.02347},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 418 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":6.35662,"88":0,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":29.65899,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":21.18611,"90":0,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":0,"14.0-14.4":0,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":4.24036,"11":0,"12":0,"13":0,"14":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0,"14.0":0},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":38.56576},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 419 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00441,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02207,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00441,"46":0.00441,"47":0.00441,"48":0.00441,"49":0.00441,"50":0.00441,"51":0.00441,"52":0.02648,"53":0.00441,"54":0.00441,"55":0.00441,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.07062,"67":0,"68":0.00883,"69":0,"70":0,"71":0,"72":0.00441,"73":0.02207,"74":0,"75":0,"76":0,"77":0.00441,"78":0.03531,"79":0,"80":0,"81":0,"82":0.00441,"83":0.00441,"84":0.00441,"85":0.00883,"86":0.03531,"87":0.53851,"88":0.20304,"89":0.00441,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00441,"25":0.00441,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00441,"47":0,"48":0,"49":0.03531,"50":0,"51":0,"52":0,"53":0.00883,"54":0,"55":0,"56":0,"57":0.00441,"58":0.00441,"59":0.00441,"60":0,"61":0,"62":0,"63":0.00441,"64":0,"65":0.00441,"66":0,"67":0.00441,"68":0.00883,"69":0.00441,"70":0.00441,"71":0,"72":0.00441,"73":0,"74":0.02648,"75":0.00883,"76":0.01324,"77":0.00441,"78":0.00441,"79":0.01766,"80":0.01324,"81":0.01766,"83":0.01324,"84":0.0309,"85":0.01766,"86":0.02207,"87":0.27808,"88":0.1898,"89":7.15951,"90":2.93972,"91":0.00441,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00441,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.14125,"74":0.03531,"75":0.11918,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.0036,"7.0-7.1":0.0072,"8.1-8.4":0.0036,"9.0-9.2":0.0036,"9.3":0.11877,"10.0-10.2":0.018,"10.3":0.14037,"11.0-11.2":0.23035,"11.3-11.4":0.13677,"12.0-12.1":0.09358,"12.2-12.4":0.30594,"13.0-13.1":0.15477,"13.2":0.07918,"13.3":0.4535,"13.4-13.7":1.13736,"14.0-14.4":31.97925,"14.5":0.59387},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00441,"11":0.00441,"12":0.00441,"13":0.05738,"14":2.29969,_:"0","3.1":0,"3.2":0,"5.1":0.00883,"6.1":0,"7.1":0,"9.1":0,"10.1":0.02648,"11.1":0.03973,"12.1":0.0618,"13.1":0.34871,"14.1":0.03973},B:{"12":0.00441,"13":0,"14":0.00441,"15":0.00441,"16":0.00441,"17":0.01324,"18":0.09269,"79":0,"80":0.00441,"81":0,"83":0,"84":0.00441,"85":0.00883,"86":0.00883,"87":0.00441,"88":0.01766,"89":1.9245,"90":0.93135},P:{"4":0.17586,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.04138,"8.2":0,"9.2":0.12413,"10.1":0.02069,"11.1-11.2":0.23792,"12.0":0.12413,"13.0":2.3275,"14.0":1.13789},I:{"0":0,"3":0,"4":0.00624,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00624,"4.2-4.3":0.01871,"4.4":0,"4.4.3-4.4.4":0.2307},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.15008,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":38.97529},S:{"2.5":0},R:{_:"0"},M:{"0":0.30723},Q:{"10.4":0.00559},O:{"0":0.0391},H:{"0":0.16923}};


/***/ }),
/* 420 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01633,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00408,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00816,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00408,"69":0,"70":0,"71":0,"72":0.00408,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01225,"79":0.00408,"80":0.00816,"81":0,"82":0.00408,"83":0,"84":0.00408,"85":0.00816,"86":0.01633,"87":0.42045,"88":0.15512,"89":0.00408,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00408,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00816,"39":0,"40":0,"41":0,"42":0,"43":0.00408,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02041,"50":0,"51":0,"52":0,"53":0.04082,"54":0,"55":0,"56":0.00408,"57":0,"58":0.00816,"59":0,"60":0,"61":0,"62":0,"63":0.00816,"64":0.00408,"65":0,"66":0,"67":0,"68":0.00408,"69":0.01225,"70":0,"71":0.00408,"72":0.00816,"73":0.00408,"74":0.00408,"75":0.00816,"76":0.00408,"77":0.08572,"78":0.01225,"79":0.05307,"80":0.01225,"81":0.06123,"83":0.01225,"84":0.03266,"85":0.02041,"86":0.05715,"87":0.15103,"88":0.18369,"89":9.18042,"90":3.3105,"91":0.00816,"92":0.00408,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00408,"55":0.02449,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00816,"71":0,"72":0,"73":0.08572,"74":0.11838,"75":0.35922,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00228,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.1241,"6.0-6.1":0.01366,"7.0-7.1":0.16736,"8.1-8.4":0,"9.0-9.2":0.00114,"9.3":0.09563,"10.0-10.2":0.05009,"10.3":0.05806,"11.0-11.2":0.06603,"11.3-11.4":0.06831,"12.0-12.1":0.0296,"12.2-12.4":0.25844,"13.0-13.1":0.02505,"13.2":0.0148,"13.3":0.10702,"13.4-13.7":0.49981,"14.0-14.4":8.96235,"14.5":0.17533},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00408,"13":0.01225,"14":0.30207,_:"0","3.1":0,"3.2":0,"5.1":0.02449,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00408,"11.1":0.00816,"12.1":0.00408,"13.1":0.02449,"14.1":0.00816},B:{"12":0,"13":0.00408,"14":0,"15":0.00408,"16":0.00408,"17":0.00408,"18":0.02857,"79":0,"80":0,"81":0,"83":0,"84":0.00816,"85":0.00408,"86":0.00816,"87":0.00408,"88":0.00408,"89":0.54291,"90":0.22043},P:{"4":0.15171,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.09102,"8.2":0.01011,"9.2":0.11125,"10.1":0.05057,"11.1-11.2":0.25284,"12.0":0.16182,"13.0":1.8407,"14.0":0.59671},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00225,"4.2-4.3":0.0146,"4.4":0,"4.4.3-4.4.4":0.19765},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00408,"7":0,"8":0.00408,"9":0,"10":0,"11":0.04898,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":67.73571},S:{"2.5":0},R:{_:"0"},M:{"0":0.10652},Q:{"10.4":0},O:{"0":0.07693},H:{"0":0.30255}};


/***/ }),
/* 421 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01335,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00667,"49":0,"50":0,"51":0,"52":0.04004,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00667,"69":0,"70":0,"71":0.00667,"72":0.01335,"73":0,"74":0,"75":0,"76":0,"77":0.00667,"78":0.09342,"79":0.00667,"80":0.01335,"81":0.00667,"82":0.00667,"83":0.01335,"84":0.02002,"85":0.02669,"86":0.06673,"87":1.74165,"88":0.67397,"89":0.00667,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.02002,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00667,"39":0,"40":0,"41":0,"42":0,"43":0.47378,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.18017,"50":0,"51":0,"52":0,"53":0.01335,"54":0,"55":0,"56":0,"57":0.00667,"58":0,"59":0,"60":0,"61":0.03337,"62":0.01335,"63":0.00667,"64":0.00667,"65":0.01335,"66":0,"67":0.01335,"68":0.00667,"69":0.00667,"70":0.00667,"71":0.01335,"72":0.00667,"73":0.00667,"74":0.01335,"75":0.01335,"76":0.01335,"77":0.01335,"78":0.01335,"79":0.04004,"80":0.02669,"81":0.04004,"83":0.04004,"84":0.05338,"85":0.06673,"86":0.08675,"87":0.2469,"88":0.347,"89":21.12672,"90":8.36794,"91":0.01335,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00667,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00667,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00667,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00667,"73":0.95424,"74":0.16683,"75":0.56721,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00147,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00883,"6.0-6.1":0,"7.0-7.1":0.01031,"8.1-8.4":0.01031,"9.0-9.2":0.00589,"9.3":0.20905,"10.0-10.2":0.00883,"10.3":0.18844,"11.0-11.2":0.06036,"11.3-11.4":0.04711,"12.0-12.1":0.03975,"12.2-12.4":0.23555,"13.0-13.1":0.05889,"13.2":0.02208,"13.3":0.15311,"13.4-13.7":0.54765,"14.0-14.4":12.15429,"14.5":0.1958},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00667,"12":0.01335,"13":0.05338,"14":2.02859,_:"0","3.1":0,"3.2":0,"5.1":0.02002,"6.1":0,"7.1":0,"9.1":0,"10.1":0.04671,"11.1":0.06673,"12.1":0.05338,"13.1":0.33365,"14.1":0.04004},B:{"12":0,"13":0,"14":0.00667,"15":0.00667,"16":0.00667,"17":0.01335,"18":0.05338,"79":0,"80":0.00667,"81":0,"83":0,"84":0.00667,"85":0.01335,"86":0.01335,"87":0.02669,"88":0.02002,"89":2.52907,"90":1.09437},P:{"4":0.04166,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02083,"10.1":0,"11.1-11.2":0.06248,"12.0":0.04166,"13.0":1.09348,"14.0":0.49988},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00579,"4.2-4.3":0.01545,"4.4":0,"4.4.3-4.4.4":0.18541},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.55386,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":38.69798},S:{"2.5":0},R:{_:"0"},M:{"0":0.2096},Q:{"10.4":0.00333},O:{"0":0.19962},H:{"0":0.19529}};


/***/ }),
/* 422 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00445,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0.00445,"80":0,"81":0.00891,"82":0.01336,"83":0,"84":0,"85":0,"86":0.02672,"87":0.61897,"88":0.19593,"89":0.00445,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.20929,"49":0.00891,"50":0,"51":0,"52":0,"53":0.02227,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00445,"66":0,"67":0,"68":0.00891,"69":0,"70":0.26273,"71":0,"72":0,"73":0.01781,"74":0,"75":0,"76":0.01336,"77":0,"78":0.02227,"79":0.06234,"80":0,"81":0.04008,"83":0.01336,"84":0.00445,"85":0.04898,"86":0.00891,"87":0.24937,"88":0.45866,"89":8.93717,"90":3.41545,"91":0,"92":0.00891,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01336,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00445,"73":0,"74":0,"75":0.02672,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.04564,"10.0-10.2":0,"10.3":0.01755,"11.0-11.2":0.30369,"11.3-11.4":0.63546,"12.0-12.1":0.21416,"12.2-12.4":0.3423,"13.0-13.1":0.02106,"13.2":0,"13.3":0.08426,"13.4-13.7":0.52136,"14.0-14.4":15.12281,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00891,"14":0.51655,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00891,"11.1":0.00891,"12.1":0.0668,"13.1":0.24937,"14.1":0.00445},B:{"12":0,"13":0,"14":0,"15":0,"16":0.11578,"17":0.01336,"18":0.00445,"79":0,"80":0.00445,"81":0,"83":0,"84":0,"85":0.00445,"86":0,"87":0.00891,"88":0.00891,"89":1.13106,"90":0.71248},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":1.07865,"8.2":0,"9.2":0.07191,"10.1":0.01027,"11.1-11.2":0.14382,"12.0":0.05136,"13.0":2.58877,"14.0":2.30113},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00035,"4.4":0,"4.4.3-4.4.4":0.0898},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.0229,"11":0.45802,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":51.19447},S:{"2.5":0},R:{_:"0"},M:{"0":0.29399},Q:{"10.4":1.51433},O:{"0":1.12604},H:{"0":0.09978}};


/***/ }),
/* 423 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00229,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00686,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00229,"66":0,"67":0,"68":0.00229,"69":0,"70":0,"71":0,"72":0,"73":0.01144,"74":0,"75":0,"76":0,"77":0,"78":0.00457,"79":0,"80":0,"81":0.00229,"82":0.00686,"83":0,"84":0.00229,"85":0.00229,"86":0.00686,"87":0.1944,"88":0.08005,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00229,"48":0,"49":0.01372,"50":0,"51":0,"52":0,"53":0.00457,"54":0.00229,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00229,"64":0,"65":0.00457,"66":0,"67":0,"68":0.00229,"69":0.00229,"70":0.00457,"71":0.00229,"72":0.00229,"73":0,"74":0.00229,"75":0.00229,"76":0,"77":0.00229,"78":0.00457,"79":0.02973,"80":0.00686,"81":0.01372,"83":0.01372,"84":0.00686,"85":0.00686,"86":0.01372,"87":0.02516,"88":0.09377,"89":2.56373,"90":1.12292,"91":0.00229,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00457,"55":0.00686,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00229,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.10063,"74":0.01601,"75":0.08233,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00117,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0041,"6.0-6.1":0.00293,"7.0-7.1":0.02458,"8.1-8.4":0,"9.0-9.2":0.00234,"9.3":0.03512,"10.0-10.2":0.00644,"10.3":0.05502,"11.0-11.2":0.01756,"11.3-11.4":0.02634,"12.0-12.1":0.0158,"12.2-12.4":0.1159,"13.0-13.1":0.01288,"13.2":0.0041,"13.3":0.04214,"13.4-13.7":0.21072,"14.0-14.4":4.81083,"14.5":0.06965},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00229,"14":0.11206,_:"0","3.1":0,"3.2":0,"5.1":0.10978,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00229,"12.1":0.00229,"13.1":0.01601,"14.1":0.00229},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00686,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.00229,"89":0.18067,"90":0.09148},P:{"4":0.58553,"5.0-5.4":0.06057,"6.2-6.4":0.05048,"7.2-7.4":0.54515,"8.2":0.03029,"9.2":0.16153,"10.1":0.09086,"11.1-11.2":0.50477,"12.0":0.27257,"13.0":2.77622,"14.0":0.83791},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01515,"4.2-4.3":0.0202,"4.4":0,"4.4.3-4.4.4":0.18182},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00229,"10":0,"11":0.01372,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":81.48717},S:{"2.5":0},R:{_:"0"},M:{"0":0.06942},Q:{"10.4":0},O:{"0":0.0617},H:{"0":0.20446}};


/***/ }),
/* 424 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00652,"34":0,"35":0,"36":0,"37":0,"38":0.00978,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00326,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00326,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01304,"79":0,"80":0,"81":0.00326,"82":0.00652,"83":0,"84":0.00326,"85":0.00326,"86":0.00978,"87":0.1956,"88":0.06846,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00326,"35":0,"36":0,"37":0,"38":0.00978,"39":0,"40":0,"41":0.00326,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01956,"50":0,"51":0,"52":0,"53":0.01304,"54":0,"55":0,"56":0.00326,"57":0,"58":0,"59":0,"60":0,"61":0.03912,"62":0,"63":0,"64":0,"65":0.00978,"66":0,"67":0,"68":0.00978,"69":0.00652,"70":0.00326,"71":0.00326,"72":0,"73":0.00326,"74":0.00326,"75":0.00326,"76":0.00326,"77":0.00326,"78":0.00652,"79":0.01304,"80":0.00652,"81":0.01304,"83":0.02934,"84":0.02608,"85":0.01956,"86":0.02934,"87":0.07172,"88":0.15322,"89":5.08234,"90":1.83538,"91":0.00326,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00326,"47":0,"48":0,"49":0,"50":0,"51":0.00326,"52":0,"53":0,"54":0.02282,"55":0.0815,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00652,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00326,"70":0,"71":0,"72":0,"73":0.08476,"74":0.02282,"75":0.09128,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.02747,"6.0-6.1":0,"7.0-7.1":0.03925,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.09812,"10.0-10.2":0.00589,"10.3":0.06476,"11.0-11.2":0.06083,"11.3-11.4":0.03925,"12.0-12.1":0.02355,"12.2-12.4":0.10989,"13.0-13.1":0.04513,"13.2":0.0314,"13.3":0.21586,"13.4-13.7":0.7398,"14.0-14.4":17.03898,"14.5":0.42975},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00326,"9":0,"10":0,"11":0,"12":0.00326,"13":0.02934,"14":0.73024,_:"0","3.1":0,"3.2":0,"5.1":0.00326,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00326,"11.1":0.00652,"12.1":0.01956,"13.1":0.0978,"14.1":0.01304},B:{"12":0,"13":0,"14":0.00326,"15":0.00326,"16":0.00326,"17":0.00652,"18":0.02608,"79":0,"80":0,"81":0,"83":0,"84":0.00978,"85":0.00326,"86":0.00326,"87":0.00978,"88":0.00978,"89":0.52486,"90":0.23798},P:{"4":0.12264,"5.0-5.4":0.01022,"6.2-6.4":0,"7.2-7.4":0.04088,"8.2":0.01022,"9.2":0.04088,"10.1":0.02044,"11.1-11.2":0.2044,"12.0":0.09198,"13.0":1.9418,"14.0":0.96068},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00397,"4.2-4.3":0.00794,"4.4":0,"4.4.3-4.4.4":0.04765},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.14996,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.98492},S:{"2.5":0},R:{_:"0"},M:{"0":0.1011},Q:{"10.4":0},O:{"0":5.37178},H:{"0":0.82953}};


/***/ }),
/* 425 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00542,"30":0,"31":0,"32":0.00542,"33":0.01627,"34":0.00542,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.00542,"42":0,"43":0,"44":0,"45":0.00542,"46":0,"47":0.00542,"48":0.00542,"49":0.04882,"50":0.00542,"51":0,"52":0.0217,"53":0,"54":0.00542,"55":0.01085,"56":0.00542,"57":0.00542,"58":0,"59":0,"60":0.02712,"61":0.02712,"62":0,"63":0,"64":0,"65":0,"66":0.00542,"67":0.01085,"68":0.06509,"69":0,"70":0,"71":0,"72":0.01627,"73":0,"74":0,"75":0,"76":0,"77":0.01627,"78":0.39053,"79":0,"80":0.00542,"81":0.03254,"82":0.0217,"83":0.01085,"84":0.02712,"85":0.03797,"86":0.14645,"87":2.58182,"88":1.02514,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00542,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.00542,"45":0,"46":0,"47":0,"48":0,"49":0.17899,"50":0,"51":0,"52":0,"53":0.01627,"54":0.01627,"55":0,"56":0.03254,"57":0,"58":0.00542,"59":0.01085,"60":0,"61":0.0217,"62":0.00542,"63":0.00542,"64":0.00542,"65":0.04882,"66":0,"67":0.01627,"68":0.02712,"69":0.00542,"70":0.01627,"71":0.01085,"72":0.00542,"73":0.0217,"74":0.00542,"75":0.00542,"76":0.00542,"77":0.00542,"78":0.0217,"79":0.03254,"80":0.0217,"81":0.03797,"83":0.02712,"84":0.0217,"85":0.04339,"86":0.02712,"87":0.19526,"88":0.23323,"89":9.97474,"90":4.42598,"91":0.01085,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00542,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00542,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.21154,"74":0.09763,"75":0.33629,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00186,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.01864,"8.1-8.4":0.00373,"9.0-9.2":0.02795,"9.3":0.29258,"10.0-10.2":0.03541,"10.3":0.25531,"11.0-11.2":0.06895,"11.3-11.4":0.06895,"12.0-12.1":0.08572,"12.2-12.4":0.26463,"13.0-13.1":0.05591,"13.2":0.03541,"13.3":0.18263,"13.4-13.7":0.70816,"14.0-14.4":15.34652,"14.5":0.23108},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00542,"11":0.00542,"12":0.01627,"13":0.05966,"14":2.11536,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.02712,"11.1":0.08136,"12.1":0.10848,"13.1":0.49358,"14.1":0.04339},B:{"12":0,"13":0,"14":0,"15":0.01085,"16":0.04882,"17":0.04339,"18":0.07594,"79":0,"80":0.00542,"81":0,"83":0,"84":0.00542,"85":0.01085,"86":0.01085,"87":0.01085,"88":0.01627,"89":2.15875,"90":0.93835},P:{"4":0.11459,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.08334,"8.2":0.02084,"9.2":0.07292,"10.1":0.02084,"11.1-11.2":0.4688,"12.0":0.14585,"13.0":2.469,"14.0":1.01052},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00782,"4.2-4.3":0.00391,"4.4":0,"4.4.3-4.4.4":0.09166},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.22238,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":46.22114},S:{"2.5":0},R:{_:"0"},M:{"0":0.3432},Q:{"10.4":0},O:{"0":0.5537},H:{"0":0.23394}};


/***/ }),
/* 426 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00905,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00453,"49":0,"50":0,"51":0,"52":0.06335,"53":0,"54":0,"55":0,"56":0.00453,"57":0,"58":0,"59":0.00453,"60":0.00453,"61":0.00453,"62":0.00453,"63":0.00453,"64":0,"65":0.00453,"66":0.00453,"67":0,"68":0.00905,"69":0,"70":0.00453,"71":0,"72":0.00453,"73":0,"74":0,"75":0,"76":0,"77":0.00453,"78":0.0724,"79":0.00453,"80":0.00453,"81":0.00905,"82":0.00453,"83":0.00905,"84":0.0181,"85":0.0181,"86":0.04073,"87":1.16745,"88":0.44798,"89":0.00453,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00453,"39":0,"40":0,"41":0.00453,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.1629,"50":0,"51":0.00453,"52":0,"53":0.01358,"54":0,"55":0,"56":0,"57":0,"58":0.00453,"59":0.00453,"60":0.181,"61":0.0543,"62":0,"63":0.00453,"64":0.00453,"65":0.00453,"66":0.00453,"67":0.02263,"68":0.00905,"69":0.04525,"70":0.00905,"71":0.01358,"72":0.00905,"73":0.00453,"74":0.00905,"75":0.00905,"76":0.01358,"77":0.00905,"78":0.00905,"79":0.02263,"80":0.0181,"81":0.04525,"83":0.02263,"84":0.03168,"85":0.03168,"86":0.04525,"87":0.1267,"88":0.181,"89":9.90523,"90":3.72408,"91":0.00905,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00453,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00453,"55":0.0181,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00453,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.34843,"74":0.17648,"75":0.62898,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00144,"3.2":0.02886,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.11255,"6.0-6.1":0.00144,"7.0-7.1":0.00721,"8.1-8.4":0.00866,"9.0-9.2":0.00433,"9.3":0.07359,"10.0-10.2":0.01299,"10.3":0.07359,"11.0-11.2":0.05772,"11.3-11.4":0.06637,"12.0-12.1":0.0606,"12.2-12.4":0.23086,"13.0-13.1":0.06349,"13.2":0.0303,"13.3":0.19623,"13.4-13.7":0.62766,"14.0-14.4":12.08137,"14.5":0.23519},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.01358,"14":0.37105,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00905,"12.1":0.01358,"13.1":0.05883,"14.1":0.00905},B:{"12":0,"13":0,"14":0.00453,"15":0.00453,"16":0.00453,"17":0.00453,"18":0.02715,"79":0,"80":0,"81":0,"83":0,"84":0.00453,"85":0.00905,"86":0.00453,"87":0.00453,"88":0.00905,"89":0.75568,"90":0.3077},P:{"4":0.1821,"5.0-5.4":0.01012,"6.2-6.4":0.01012,"7.2-7.4":0.03035,"8.2":0.01012,"9.2":0.08093,"10.1":0.05058,"11.1-11.2":0.2428,"12.0":0.19222,"13.0":2.82253,"14.0":1.15329},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00578,"4.2-4.3":0.04046,"4.4":0,"4.4.3-4.4.4":0.22829},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00477,"9":0,"10":0.00477,"11":0.25744,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":57.41973},S:{"2.5":0},R:{_:"0"},M:{"0":0.22448},Q:{"10.4":0.00548},O:{"0":0.3066},H:{"0":0.42504}};


/***/ }),
/* 427 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00425,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00425,"44":0,"45":0,"46":0,"47":0.00425,"48":0.00425,"49":0.00425,"50":0.04674,"51":0.00425,"52":0.10623,"53":0,"54":0.00425,"55":0,"56":0.00425,"57":0.00425,"58":0.00425,"59":0.00425,"60":0.0085,"61":0.00425,"62":0,"63":0,"64":0,"65":0.00425,"66":0.0085,"67":0.00425,"68":0.01275,"69":0.00425,"70":0.00425,"71":0,"72":0.0085,"73":0.00425,"74":0,"75":0,"76":0.00425,"77":0.00425,"78":0.03824,"79":0.00425,"80":0.00425,"81":0.0085,"82":0.0085,"83":0.0085,"84":0.02549,"85":0.017,"86":0.06374,"87":1.66136,"88":0.63735,"89":0.0085,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00425,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00425,"35":0,"36":0,"37":0,"38":0.0085,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00425,"48":0,"49":0.2167,"50":0,"51":0,"52":0,"53":0.02125,"54":0,"55":0.00425,"56":0.00425,"57":0.00425,"58":0.01275,"59":0.00425,"60":0,"61":0.04249,"62":0.00425,"63":0.00425,"64":0.00425,"65":0.00425,"66":0.00425,"67":0.0085,"68":0.017,"69":0.00425,"70":0.01275,"71":0.0085,"72":0.00425,"73":0.0085,"74":0.01275,"75":0.01275,"76":0.0085,"77":0.0085,"78":0.0085,"79":0.02974,"80":0.02974,"81":0.02974,"83":0.02974,"84":0.03399,"85":0.02974,"86":0.07648,"87":0.10198,"88":0.1997,"89":8.11984,"90":2.94456,"91":0.0085,"92":0.00425,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.017,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0085,"56":0,"57":0.00425,"58":0,"60":0,"62":0,"63":0.0085,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00425,"73":0.14022,"74":0.19545,"75":0.67134,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01146,"6.0-6.1":0.00417,"7.0-7.1":0.03125,"8.1-8.4":0.02604,"9.0-9.2":0.00312,"9.3":0.13645,"10.0-10.2":0.01667,"10.3":0.12812,"11.0-11.2":0.05104,"11.3-11.4":0.10728,"12.0-12.1":0.05,"12.2-12.4":0.29477,"13.0-13.1":0.03541,"13.2":0.01979,"13.3":0.14791,"13.4-13.7":0.53017,"14.0-14.4":8.03278,"14.5":0.09999},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0085,"14":0.22945,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00425,"11.1":0.0085,"12.1":0.017,"13.1":0.04249,"14.1":0.00425},B:{"12":0,"13":0.00425,"14":0.01275,"15":0.017,"16":0.00425,"17":0.00425,"18":0.02125,"79":0,"80":0,"81":0,"83":0,"84":0.00425,"85":0.00425,"86":0.00425,"87":0.00425,"88":0.00425,"89":0.42915,"90":0.18271},P:{"4":0.08184,"5.0-5.4":0,"6.2-6.4":0.01023,"7.2-7.4":0.03069,"8.2":0.01023,"9.2":0.05115,"10.1":0.04092,"11.1-11.2":0.21484,"12.0":0.13299,"13.0":2.47573,"14.0":1.1151},I:{"0":0,"3":0,"4":0.00218,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00364,"4.2-4.3":0.01675,"4.4":0,"4.4.3-4.4.4":0.11142},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00917,"9":0,"10":0.00458,"11":0.16046,"5.5":0},J:{"7":0,"10":0.00575},N:{"10":0,"11":0},L:{"0":65.55401},S:{"2.5":0},R:{_:"0"},M:{"0":0.22429},Q:{"10.4":0.00575},O:{"0":0.04026},H:{"0":0.4628}};


/***/ }),
/* 428 */
/***/ ((module) => {

module.exports={C:{"2":0.02195,"3":0.01463,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00732,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.02926,"46":0,"47":0.00732,"48":0.00732,"49":0,"50":0.01463,"51":0.00732,"52":0.20485,"53":0.00732,"54":0.02195,"55":0.00732,"56":0.0439,"57":0.00732,"58":0.00732,"59":0.01463,"60":0.02195,"61":0.01463,"62":0.00732,"63":0.01463,"64":0.00732,"65":0.00732,"66":0.00732,"67":0.00732,"68":0.05853,"69":0.00732,"70":0.01463,"71":0.00732,"72":0.01463,"73":0.00732,"74":0.00732,"75":0.00732,"76":0.00732,"77":0.01463,"78":0.09511,"79":0.02195,"80":0.02195,"81":0.03658,"82":0.03658,"83":0.0439,"84":0.08779,"85":0.03658,"86":0.07316,"87":1.22909,"88":0.45359,"89":0.00732,"90":0,"3.5":0.00732,"3.6":0.01463},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00732,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00732,"39":0.00732,"40":0.00732,"41":0.00732,"42":0.00732,"43":0.00732,"44":0,"45":0.00732,"46":0.00732,"47":0.00732,"48":0.01463,"49":0.26338,"50":0.00732,"51":0.08048,"52":0,"53":0.01463,"54":0.00732,"55":0.00732,"56":0.02926,"57":0.00732,"58":0.00732,"59":0.0439,"60":0.00732,"61":0.11706,"62":0.00732,"63":0.00732,"64":0.02195,"65":0.01463,"66":0.01463,"67":0.01463,"68":0.01463,"69":0.39506,"70":0.02926,"71":0.02195,"72":0.02926,"73":0.05853,"74":1.47783,"75":0.02926,"76":0.0439,"77":0.02195,"78":0.95108,"79":2.06311,"80":0.9145,"81":1.2364,"83":1.21446,"84":1.47783,"85":4.72614,"86":0.51944,"87":0.89255,"88":2.55328,"89":11.34712,"90":4.41886,"91":0.02195,"92":0.00732,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00732,"32":0,"33":0,"34":0,"35":0,"36":0.03658,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00732,"44":0.00732,"45":0,"46":0,"47":0.00732,"48":0,"49":0,"50":0.00732,"51":0.00732,"52":0.00732,"53":0.00732,"54":0.01463,"55":0.02195,"56":0.00732,"57":0,"58":0,"60":0.00732,"62":0.00732,"63":0.01463,"64":0,"65":0,"66":0.00732,"67":0.01463,"68":0.01463,"69":0.00732,"70":0.01463,"71":0.01463,"72":0.01463,"73":0.83402,"74":0.5487,"75":1.79974,"9.5-9.6":0.00732,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01463},G:{"8":0.00738,"3.2":0.00211,"4.0-4.1":0.00211,"4.2-4.3":0.00738,"5.0-5.1":0.0137,"6.0-6.1":0.02318,"7.0-7.1":0.03162,"8.1-8.4":0.04321,"9.0-9.2":0.0411,"9.3":0.15597,"10.0-10.2":0.06007,"10.3":0.16335,"11.0-11.2":0.09485,"11.3-11.4":0.10012,"12.0-12.1":0.11803,"12.2-12.4":0.33197,"13.0-13.1":0.09696,"13.2":0.04426,"13.3":0.21077,"13.4-13.7":0.73138,"14.0-14.4":7.69531,"14.5":0.13595},E:{"4":0.01463,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00732,"11":0.00732,"12":0.01463,"13":0.10242,"14":1.03156,_:"0","3.1":0,"3.2":0,"5.1":0.19753,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00732,"11.1":0.02195,"12.1":0.05121,"13.1":0.21948,"14.1":0.02926},B:{"12":0.01463,"13":0.00732,"14":0.01463,"15":0.01463,"16":0.01463,"17":0.01463,"18":0.11706,"79":0.00732,"80":0.00732,"81":0.00732,"83":0.01463,"84":0.02926,"85":0.02195,"86":0.02926,"87":0.02195,"88":0.01463,"89":0.72428,"90":0.3219},P:{"4":0.08253,"5.0-5.4":0.02063,"6.2-6.4":0,"7.2-7.4":0.04126,"8.2":0.01032,"9.2":0.03095,"10.1":0.04126,"11.1-11.2":0.08253,"12.0":0.09284,"13.0":0.56737,"14.0":0.21663},I:{"0":0,"3":0,"4":0.00249,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00873,"4.2-4.3":0.03117,"4.4":0,"4.4.3-4.4.4":0.14713},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00816,"7":0.00816,"8":0.02447,"9":0.01631,"10":0.01631,"11":0.41593,"5.5":0},J:{"7":0,"10":0.00268},N:{"10":0,"11":0},L:{"0":29.08202},S:{"2.5":0},R:{_:"0"},M:{"0":0.13688},Q:{"10.4":0.00805},O:{"0":0.2684},H:{"0":0.54378}};


/***/ }),
/* 429 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00431,"32":0,"33":0.01722,"34":0,"35":0,"36":0,"37":0.00431,"38":0,"39":0,"40":0.00861,"41":0,"42":0,"43":0.01292,"44":0.00431,"45":0,"46":0,"47":0.00431,"48":0.01292,"49":0,"50":0.00431,"51":0,"52":0.01292,"53":0,"54":0,"55":0,"56":0,"57":0.00431,"58":0.00431,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00431,"68":0.00861,"69":0,"70":0,"71":0,"72":0.00861,"73":0,"74":0,"75":0,"76":0,"77":0.00431,"78":0.02584,"79":0.00861,"80":0.00861,"81":0.00431,"82":0.00431,"83":0.01292,"84":0.00861,"85":0.01722,"86":0.03445,"87":0.92579,"88":0.43491,"89":0.03014,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00431,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00431,"35":0,"36":0,"37":0,"38":0.00431,"39":0.01292,"40":0.00431,"41":0.00861,"42":0,"43":0.00431,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00861,"50":0,"51":0,"52":0,"53":0.00431,"54":0,"55":0.00431,"56":0,"57":0,"58":0.00861,"59":0,"60":0.00431,"61":0.00431,"62":0,"63":0.01292,"64":0.00431,"65":0.00431,"66":0,"67":0.00431,"68":0.00431,"69":0.01292,"70":0.00431,"71":0.01722,"72":0.00431,"73":0.00431,"74":0.03014,"75":0.00431,"76":0.00431,"77":0.04737,"78":0.02153,"79":0.03875,"80":0.05167,"81":0.02584,"83":0.02584,"84":0.01722,"85":0.02584,"86":0.06459,"87":0.12918,"88":0.20669,"89":7.84984,"90":3.09601,"91":0.03445,"92":0.01292,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.00431,"20":0,"21":0,"22":0,"23":0,"24":0.00431,"25":0,"26":0.00431,"27":0.00431,"28":0,"29":0,"30":0.00861,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.17224,"38":0,"39":0,"40":0,"41":0,"42":0.00431,"43":0,"44":0,"45":0,"46":0.00431,"47":0,"48":0,"49":0,"50":0.00431,"51":0.01292,"52":0,"53":0,"54":0.04306,"55":0.04737,"56":0,"57":0,"58":0,"60":0,"62":0.00861,"63":0.03014,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00431,"72":0,"73":0.02153,"74":0.11196,"75":0.41338,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.03875},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00236,"6.0-6.1":0.00118,"7.0-7.1":0.0283,"8.1-8.4":0,"9.0-9.2":0.0059,"9.3":0.10022,"10.0-10.2":0.01651,"10.3":0.10022,"11.0-11.2":0.05659,"11.3-11.4":0.17214,"12.0-12.1":0.08136,"12.2-12.4":0.52232,"13.0-13.1":0.16153,"13.2":0.03419,"13.3":0.47398,"13.4-13.7":1.11893,"14.0-14.4":7.4151,"14.5":0.12026},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00431,"12":0.00431,"13":0.00861,"14":0.31864,_:"0","3.1":0,"3.2":0,"5.1":0.01722,"6.1":0,"7.1":0.00431,"9.1":0,"10.1":0.00431,"11.1":0.01292,"12.1":0.04306,"13.1":0.07751,"14.1":0.00431},B:{"12":0.03014,"13":0.06459,"14":0.02153,"15":0.01722,"16":0.02153,"17":0.01292,"18":0.08181,"79":0,"80":0,"81":0,"83":0.01292,"84":0.00861,"85":0.01292,"86":0.00431,"87":0.01292,"88":0.01292,"89":0.91287,"90":0.45644},P:{"4":0.29626,"5.0-5.4":0.02043,"6.2-6.4":0.01022,"7.2-7.4":0.18388,"8.2":0.01022,"9.2":0.06129,"10.1":0.16345,"11.1-11.2":0.1328,"12.0":0.18388,"13.0":1.042,"14.0":0.3269},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00158,"4.2-4.3":0.00605,"4.4":0,"4.4.3-4.4.4":0.0739},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00509,"9":0,"10":0,"11":0.21882,"5.5":0},J:{"7":0,"10":0.03416},N:{"10":0,"11":0},L:{"0":51.89396},S:{"2.5":0.0911},R:{_:"0"},M:{"0":0.22207},Q:{"10.4":0.08541},O:{"0":0.55232},H:{"0":10.71134}};


/***/ }),
/* 430 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00305,"33":0.00609,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00305,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00305,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00914,"79":0,"80":0,"81":0.00305,"82":0.00305,"83":0.00305,"84":0.00914,"85":0.00305,"86":0.01219,"87":0.21634,"88":0.07618,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00609,"35":0,"36":0,"37":0,"38":0.00305,"39":0,"40":0.00305,"41":0,"42":0,"43":0.00305,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02438,"50":0.00305,"51":0,"52":0,"53":0.00914,"54":0,"55":0,"56":0.00305,"57":0,"58":0,"59":0,"60":0,"61":0.00609,"62":0,"63":0.00305,"64":0.00305,"65":0.00305,"66":0.00305,"67":0.00609,"68":0.00914,"69":0.00609,"70":0.00305,"71":0.00609,"72":0.00305,"73":0.00305,"74":0.00305,"75":0.00305,"76":0.00305,"77":0.00914,"78":0.00609,"79":0.01219,"80":0.00914,"81":0.01828,"83":0.06094,"84":0.01524,"85":0.02438,"86":0.03656,"87":0.10969,"88":0.0975,"89":4.55222,"90":1.48084,"91":0.00609,"92":0.00305,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00305,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00914,"72":0.00609,"73":0.03047,"74":0.01219,"75":0.01828,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00739,"6.0-6.1":0.00739,"7.0-7.1":0.04803,"8.1-8.4":0.01847,"9.0-9.2":0,"9.3":0.15887,"10.0-10.2":0.02956,"10.3":0.10715,"11.0-11.2":0.08128,"11.3-11.4":0.13301,"12.0-12.1":0.25494,"12.2-12.4":0.69461,"13.0-13.1":0.28449,"13.2":0.19213,"13.3":0.83501,"13.4-13.7":2.47916,"14.0-14.4":30.02698,"14.5":0.36947},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00305,"13":0.03352,"14":0.66729,_:"0","3.1":0,"3.2":0,"5.1":0.02133,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00305,"11.1":0.00609,"12.1":0.01219,"13.1":0.08532,"14.1":0.00914},B:{"12":0.00305,"13":0,"14":0.00305,"15":0.00609,"16":0.00305,"17":0.00305,"18":0.03047,"79":0,"80":0,"81":0,"83":0,"84":0.00305,"85":0.00305,"86":0.00305,"87":0.00305,"88":0.00609,"89":0.53932,"90":0.17673},P:{"4":0.15301,"5.0-5.4":0.0204,"6.2-6.4":0,"7.2-7.4":0.0918,"8.2":0.0204,"9.2":0.0918,"10.1":0.0306,"11.1-11.2":0.25501,"12.0":0.12241,"13.0":1.80549,"14.0":0.81604},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00201,"4.2-4.3":0.00602,"4.4":0,"4.4.3-4.4.4":0.07721},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00337,"9":0,"10":0,"11":0.15507,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":48.15088},S:{"2.5":0},R:{_:"0"},M:{"0":0.09734},Q:{"10.4":0},O:{"0":1.7313},H:{"0":0.12507}};


/***/ }),
/* 431 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.05722,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00409,"48":0,"49":0.00409,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.01635,"58":0,"59":0,"60":0.00409,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00409,"67":0,"68":0,"69":0.01226,"70":0,"71":0,"72":0.00409,"73":0,"74":0,"75":0,"76":0.00817,"77":0,"78":0,"79":0,"80":0.00409,"81":0.0327,"82":0,"83":0,"84":0.01226,"85":0.00817,"86":0.04087,"87":0.56401,"88":0.20435,"89":0.01226,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00409,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.00409,"36":0.00409,"37":0,"38":0,"39":0,"40":0.01635,"41":0,"42":0,"43":0,"44":0,"45":0.00817,"46":0,"47":0,"48":0,"49":0.01635,"50":0.00409,"51":0,"52":0.00409,"53":0.28609,"54":0,"55":0.00817,"56":0,"57":0,"58":0,"59":0,"60":0.00409,"61":0,"62":0,"63":0.01635,"64":0,"65":0,"66":0,"67":0.00409,"68":0,"69":0.01635,"70":0,"71":0,"72":0,"73":0.00409,"74":0.00409,"75":0.02044,"76":0.01226,"77":0.01226,"78":0.00409,"79":0.02861,"80":0,"81":0.01635,"83":0.02044,"84":0.00409,"85":0.00817,"86":0.01635,"87":0.05313,"88":0.07357,"89":4.59379,"90":1.68384,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00409,"34":0,"35":0,"36":0,"37":0.00409,"38":0.00409,"39":0.00409,"40":0,"41":0,"42":0.00817,"43":0.00409,"44":0,"45":0.00409,"46":0,"47":0.01635,"48":0,"49":0,"50":0.01635,"51":0.06539,"52":0,"53":0,"54":0.1267,"55":0.31061,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.02452,"75":0.11852,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.05313},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.00531,"8.1-8.4":0.0093,"9.0-9.2":0.84285,"9.3":0.03786,"10.0-10.2":0.01793,"10.3":0.02856,"11.0-11.2":0.00863,"11.3-11.4":0.10826,"12.0-12.1":0.01926,"12.2-12.4":0.10826,"13.0-13.1":0.42043,"13.2":0.02723,"13.3":0.15542,"13.4-13.7":2.14865,"14.0-14.4":1.77404,"14.5":0.00199},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00409,"12":0.00409,"13":0.00817,"14":0.05313,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.06131,"11.1":0.00409,"12.1":0.02044,"13.1":0.02452,"14.1":0},B:{"12":0.04087,"13":0.0327,"14":0.04496,"15":0.188,"16":0.07765,"17":0.06539,"18":0.78062,"79":0,"80":0.02452,"81":0,"83":0,"84":0.00409,"85":0.01226,"86":0.02044,"87":0.0327,"88":0.04496,"89":1.20975,"90":0.71931},P:{"4":0.71578,"5.0-5.4":0.01023,"6.2-6.4":0.06135,"7.2-7.4":0.33744,"8.2":0.03068,"9.2":0.24541,"10.1":0.06135,"11.1-11.2":0.53172,"12.0":0.15338,"13.0":2.02463,"14.0":0.39879},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00444,"4.2-4.3":0.01628,"4.4":0,"4.4.3-4.4.4":0.54902},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.02465,"10":0,"11":0.78458,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0.01183},L:{"0":66.83424},S:{"2.5":0},R:{_:"0"},M:{"0":0.03548},Q:{"10.4":0.05322},O:{"0":2.18781},H:{"0":3.06213}};


/***/ }),
/* 432 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0.00358,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00716,"16":0,"17":0.00358,"18":0.00358,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00358,"30":0,"31":0,"32":0,"33":0.00716,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00358,"40":0,"41":0,"42":0,"43":0,"44":0.00358,"45":0.00716,"46":0,"47":0.00358,"48":0.00358,"49":0,"50":0.00716,"51":0,"52":0.00716,"53":0,"54":0.00358,"55":0,"56":0.00358,"57":0,"58":0.00358,"59":0.02149,"60":0.06088,"61":0.02865,"62":0.02865,"63":0.04655,"64":0,"65":0.00358,"66":0,"67":0.00358,"68":0.02865,"69":0.00358,"70":0.00358,"71":0,"72":0.00716,"73":0.00358,"74":0,"75":0,"76":0.00358,"77":0.00358,"78":0.50134,"79":0.01074,"80":0.00358,"81":0.02865,"82":0.02507,"83":0.00716,"84":0.01074,"85":0.01432,"86":0.03223,"87":0.77708,"88":0.26858,"89":0.01074,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00358,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00358,"25":0,"26":0,"27":0,"28":0,"29":0.00358,"30":0,"31":0,"32":0,"33":0,"34":0.00358,"35":0,"36":0.00358,"37":0,"38":0,"39":0,"40":0.00358,"41":0,"42":0,"43":0.01432,"44":0,"45":0,"46":0.00358,"47":0.00358,"48":0.00358,"49":0.02507,"50":0,"51":0,"52":0,"53":0.00358,"54":0,"55":0,"56":0.01074,"57":0,"58":0.00358,"59":0,"60":0.00358,"61":0,"62":0.00358,"63":0.01074,"64":0.00358,"65":0.00358,"66":0.01432,"67":0.01432,"68":0.04297,"69":0.03939,"70":0.03581,"71":0.04297,"72":0.58012,"73":0.01432,"74":0.01791,"75":0.01791,"76":0.00716,"77":0.01791,"78":0.00358,"79":0.03223,"80":0.02865,"81":0.03581,"83":0.18979,"84":0.00716,"85":0.0573,"86":0.85586,"87":0.23277,"88":0.07162,"89":3.91403,"90":1.40375,"91":0.02507,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00358,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00358,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00358,"52":0.00716,"53":0.02507,"54":0.01791,"55":0.05372,"56":0.00358,"57":0,"58":0,"60":0,"62":0,"63":0.02149,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01074,"74":0.03581,"75":0.12175,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00358},G:{"8":0.01219,"3.2":0.00174,"4.0-4.1":0,"4.2-4.3":0.00174,"5.0-5.1":0.00174,"6.0-6.1":0.01306,"7.0-7.1":0.01567,"8.1-8.4":0.02089,"9.0-9.2":0.00957,"9.3":0.07486,"10.0-10.2":0.01741,"10.3":0.03395,"11.0-11.2":0.08269,"11.3-11.4":0.03917,"12.0-12.1":0.07137,"12.2-12.4":0.17495,"13.0-13.1":0.03743,"13.2":0.03395,"13.3":0.11664,"13.4-13.7":0.22021,"14.0-14.4":7.42897,"14.5":0.05745},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00358,"11":0.00358,"12":0.00358,"13":0.02149,"14":0.47269,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00358,"11.1":0.01432,"12.1":0.05013,"13.1":0.06446,"14.1":0.00358},B:{"12":0.01074,"13":0.01791,"14":0.02865,"15":0.01432,"16":0.01432,"17":0.02149,"18":0.08594,"79":0,"80":0.00358,"81":0.00358,"83":0.00358,"84":0.01074,"85":0.02507,"86":0.00716,"87":0.00358,"88":0.00358,"89":0.61235,"90":0.2829},P:{"4":0.12298,"5.0-5.4":0.01025,"6.2-6.4":0.01025,"7.2-7.4":0.30746,"8.2":0.04099,"9.2":0.23572,"10.1":0.08199,"11.1-11.2":0.54317,"12.0":1.16834,"13.0":2.8696,"14.0":1.24008},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00961,"4.2-4.3":0.07366,"4.4":0,"4.4.3-4.4.4":0.18254},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00365,"9":0,"10":0.00365,"11":0.18966,"5.5":0},J:{"7":0,"10":0.08345},N:{"10":0,"11":0},L:{"0":58.34654},S:{"2.5":0},R:{_:"0"},M:{"0":0.60339},Q:{"10.4":0.00642},O:{"0":5.65514},H:{"0":2.16952}};


/***/ }),
/* 433 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00153,"29":0,"30":0.00153,"31":0,"32":0,"33":0.00153,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00153,"43":0.00153,"44":0,"45":0,"46":0,"47":0.00153,"48":0.00153,"49":0,"50":0,"51":0,"52":0.0046,"53":0,"54":0,"55":0,"56":0.00153,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.00306,"65":0,"66":0,"67":0,"68":0.00613,"69":0,"70":0,"71":0,"72":0.00613,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00613,"79":0.00153,"80":0.00153,"81":0.00153,"82":0.00153,"83":0.00306,"84":0.0046,"85":0.0046,"86":0.01532,"87":0.21754,"88":0.06741,"89":0.00153,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00153,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00153,"37":0.00153,"38":0.00153,"39":0,"40":0.00306,"41":0,"42":0,"43":0.0046,"44":0,"45":0.00153,"46":0,"47":0,"48":0.00766,"49":0.00153,"50":0.00153,"51":0,"52":0,"53":0.00153,"54":0,"55":0,"56":0.00153,"57":0.00153,"58":0.0046,"59":0,"60":0,"61":0.01685,"62":0,"63":0.00306,"64":0.00306,"65":0.00306,"66":0,"67":0.00153,"68":0.00306,"69":0.00613,"70":0.0046,"71":0.00153,"72":0.00153,"73":0,"74":0.00306,"75":0.00153,"76":0.00306,"77":0.00153,"78":0.00153,"79":0.00613,"80":0.00613,"81":0.00613,"83":0.02451,"84":0.00306,"85":0.0046,"86":0.00919,"87":0.03677,"88":0.03217,"89":0.60974,"90":0.18997,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0.00153,"16":0.00153,"17":0,"18":0.00153,"19":0,"20":0,"21":0,"22":0.00153,"23":0,"24":0.00919,"25":0,"26":0.00613,"27":0.00306,"28":0.00919,"29":0,"30":0.00613,"31":0,"32":0.00306,"33":0.00153,"34":0,"35":0,"36":0.00919,"37":0.00153,"38":0.00306,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00153,"46":0.00153,"47":0.02451,"48":0,"49":0,"50":0.00766,"51":0.00766,"52":0,"53":0.00153,"54":0.03064,"55":0.04136,"56":0,"57":0,"58":0,"60":0.00306,"62":0.00613,"63":0.00919,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00153,"72":0,"73":0.00613,"74":0.02758,"75":0.07354,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00613},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.01392,"5.0-5.1":0.00316,"6.0-6.1":0.00127,"7.0-7.1":0.02152,"8.1-8.4":0,"9.0-9.2":0.00823,"9.3":0.0576,"10.0-10.2":0.02405,"10.3":0.09051,"11.0-11.2":0.11076,"11.3-11.4":0.14557,"12.0-12.1":0.17975,"12.2-12.4":0.5557,"13.0-13.1":0.13734,"13.2":0.04873,"13.3":0.18228,"13.4-13.7":0.45507,"14.0-14.4":3.78609,"14.5":0.01709},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.0046,"14":0.03064,_:"0","3.1":0,"3.2":0,"5.1":0.31559,"6.1":0,"7.1":0,"9.1":0.00613,"10.1":0,"11.1":0.00153,"12.1":0.00306,"13.1":0.00766,"14.1":0},B:{"12":0.00306,"13":0.00153,"14":0.00306,"15":0.00153,"16":0.00306,"17":0.00306,"18":0.01072,"79":0,"80":0,"81":0,"83":0,"84":0.00153,"85":0.00153,"86":0.00153,"87":0.00153,"88":0.00613,"89":0.06894,"90":0.03524},P:{"4":1.61753,"5.0-5.4":0.09099,"6.2-6.4":0.14153,"7.2-7.4":0.43471,"8.2":0.03033,"9.2":0.28307,"10.1":0.09099,"11.1-11.2":0.59647,"12.0":0.3134,"13.0":1.43556,"14.0":0.23252},I:{"0":0,"3":0,"4":0.00184,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00552,"4.2-4.3":0.03988,"4.4":0,"4.4.3-4.4.4":0.26808},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.08886,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":72.42157},S:{"2.5":0.04234},R:{_:"0"},M:{"0":0.16936},Q:{"10.4":0.04234},O:{"0":1.79522},H:{"0":8.82667}};


/***/ }),
/* 434 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00535,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.02677,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00535,"49":0,"50":0,"51":0,"52":0.02142,"53":0,"54":0,"55":0,"56":0.01606,"57":0,"58":0,"59":0.00535,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01071,"69":0,"70":0,"71":0,"72":0.00535,"73":0,"74":0,"75":0,"76":0.00535,"77":0.00535,"78":0.0696,"79":0,"80":0,"81":0.00535,"82":0.00535,"83":0.00535,"84":0.01606,"85":0.01606,"86":0.05889,"87":0.99584,"88":0.36943,"89":0.00535,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01071,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.04283,"50":0,"51":0,"52":0,"53":0.01071,"54":0,"55":0,"56":0,"57":0.00535,"58":0.00535,"59":0,"60":0,"61":0.01071,"62":0,"63":0.00535,"64":0,"65":0.01071,"66":0.02677,"67":0.02142,"68":0.01071,"69":0.11779,"70":0.00535,"71":0.00535,"72":0.00535,"73":0.01071,"74":0.00535,"75":0.02142,"76":0.03748,"77":0.01606,"78":0.01071,"79":0.02677,"80":0.02142,"81":0.02677,"83":0.02677,"84":0.03212,"85":0.03748,"86":0.07496,"87":0.20881,"88":1.08686,"89":11.85911,"90":3.84953,"91":0.01071,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00535,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.02142,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.16062,"74":0.05354,"75":0.16597,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00389,"7.0-7.1":0.01946,"8.1-8.4":0.03114,"9.0-9.2":0.01946,"9.3":0.21408,"10.0-10.2":0.03503,"10.3":0.38535,"11.0-11.2":0.08953,"11.3-11.4":0.2063,"12.0-12.1":0.16348,"12.2-12.4":0.65392,"13.0-13.1":0.10899,"13.2":0.06228,"13.3":0.41259,"13.4-13.7":1.26114,"14.0-14.4":33.40072,"14.5":0.28415},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00535,"12":0.01071,"13":0.12314,"14":3.35696,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00535,"10.1":0.02142,"11.1":0.06425,"12.1":0.09637,"13.1":0.48186,"14.1":0.05354},B:{"12":0,"13":0,"14":0.00535,"15":0.00535,"16":0.00535,"17":0.01606,"18":0.09102,"79":0,"80":0.00535,"81":0,"83":0,"84":0.00535,"85":0.01606,"86":0.01071,"87":0.01071,"88":0.06425,"89":2.03987,"90":0.9316},P:{"4":0.10383,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01038,"8.2":0.01038,"9.2":0.03115,"10.1":0.04153,"11.1-11.2":0.0623,"12.0":0.08306,"13.0":2.70986,"14.0":1.3705},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00729,"4.2-4.3":0.01822,"4.4":0,"4.4.3-4.4.4":0.08379},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.29447,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":27.39346},S:{"2.5":0},R:{_:"0"},M:{"0":0.34845},Q:{"10.4":0},O:{"0":0.02788},H:{"0":0.12316}};


/***/ }),
/* 435 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.00363,"5":0.00363,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00363,"16":0,"17":0.00363,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.03631,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00363,"49":0,"50":0,"51":0,"52":0.00726,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00363,"64":0,"65":0,"66":0,"67":0,"68":0.00726,"69":0,"70":0.00363,"71":0,"72":0.00363,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.02179,"79":0.00363,"80":0.00363,"81":0.00363,"82":0.00363,"83":0.00363,"84":0.00726,"85":0.00726,"86":0.02905,"87":0.48292,"88":0.17429,"89":0.00363,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00363,"23":0.00363,"24":0.00363,"25":0.00363,"26":0.00363,"27":0.00363,"28":0.00363,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.02542,"35":0.00363,"36":0.00363,"37":0,"38":0.0581,"39":0,"40":0,"41":0.00726,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01089,"48":0,"49":0.05083,"50":0,"51":0,"52":0.00363,"53":0.07625,"54":0,"55":0.00363,"56":0.00363,"57":0.00363,"58":0.00363,"59":0,"60":0,"61":0.02179,"62":0.00726,"63":0.00363,"64":0.00363,"65":0.01452,"66":0.00363,"67":0.01089,"68":0.01816,"69":0.00726,"70":0.00726,"71":0.00726,"72":0.00726,"73":0.00726,"74":0.01089,"75":0.01452,"76":0.00726,"77":0.00726,"78":0.00726,"79":0.02179,"80":0.01816,"81":0.04357,"83":0.0581,"84":0.03631,"85":0.03268,"86":0.07262,"87":0.1634,"88":0.30864,"89":5.40293,"90":1.81913,"91":0.00726,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00726,"37":0.01089,"38":0,"39":0,"40":0.00363,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01089,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.01089,"55":0.03268,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00726,"64":0,"65":0,"66":0,"67":0,"68":0.00363,"69":0,"70":0,"71":0,"72":0,"73":0.03631,"74":0.07262,"75":0.20697,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01233,"6.0-6.1":0.02959,"7.0-7.1":0.03452,"8.1-8.4":0.05179,"9.0-9.2":0.02466,"9.3":0.29346,"10.0-10.2":0.04685,"10.3":0.20221,"11.0-11.2":0.09617,"11.3-11.4":0.11837,"12.0-12.1":0.1307,"12.2-12.4":0.45621,"13.0-13.1":0.08631,"13.2":0.05179,"13.3":0.27373,"13.4-13.7":0.94942,"14.0-14.4":20.7392,"14.5":0.30825},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00363,"9":0,"10":0,"11":0.00726,"12":0.00363,"13":0.03994,"14":1.26359,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00726,"11.1":0.01452,"12.1":0.02179,"13.1":0.17429,"14.1":0.01816},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00363,"18":0.01452,"79":0,"80":0,"81":0,"83":0,"84":0.00363,"85":0.00363,"86":0.00363,"87":0,"88":0.00726,"89":0.55917,"90":0.24328},P:{"4":0.52482,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.02099,"10.1":0.02099,"11.1-11.2":0.04199,"12.0":0.06298,"13.0":2.45618,"14.0":1.1966},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":3.08384,"4.4":0,"4.4.3-4.4.4":14.39124},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00605,"9":0.00605,"10":0.00605,"11":0.23602,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":30.89023},S:{"2.5":0},R:{_:"0"},M:{"0":0.46494},Q:{"10.4":0.05095},O:{"0":0.72607},H:{"0":0.77784}};


/***/ }),
/* 436 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0.98055,"86":0,"87":0,"88":2.94165,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":6.857,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":9.79865,"90":19.59045,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":0,"14.0-14.4":0,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":3.91535,"90":2.94165},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":1.42976,"13.0":22.8562,"14.0":0},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":12.03994},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 437 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00611,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00611,"46":0,"47":0,"48":0.00611,"49":0,"50":0.00611,"51":0,"52":0.22611,"53":0,"54":0.00611,"55":0,"56":0.00611,"57":0.01222,"58":0,"59":0,"60":0.03056,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00611,"67":0,"68":0.02444,"69":0,"70":0,"71":0,"72":0.04278,"73":0,"74":0,"75":0.00611,"76":0.00611,"77":0.01222,"78":0.11,"79":0.00611,"80":0.01833,"81":0.01222,"82":0.01833,"83":0.02444,"84":0.06722,"85":0.06722,"86":0.15278,"87":3.56271,"88":1.20998,"89":0.00611,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00611,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00611,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.23833,"50":0,"51":0,"52":0,"53":0.00611,"54":0,"55":0,"56":0.00611,"57":0.00611,"58":0.04278,"59":0,"60":0,"61":0.00611,"62":0.01222,"63":0.00611,"64":0,"65":0,"66":0.00611,"67":0.01222,"68":0.01833,"69":0.01222,"70":0.00611,"71":0.00611,"72":0,"73":0.00611,"74":0.00611,"75":0.01222,"76":0.00611,"77":0.00611,"78":0.01222,"79":0.04278,"80":0.03667,"81":0.04278,"83":0.03056,"84":0.04278,"85":0.06722,"86":0.04889,"87":0.17722,"88":0.38499,"89":16.68914,"90":5.40824,"91":0.01833,"92":0.30555,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00611,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00611,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00611,"71":0,"72":0,"73":0.34833,"74":0.17722,"75":0.42777,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00243,"6.0-6.1":0.00122,"7.0-7.1":0.00973,"8.1-8.4":0.00487,"9.0-9.2":0.00365,"9.3":0.16545,"10.0-10.2":0.01217,"10.3":0.09976,"11.0-11.2":0.03528,"11.3-11.4":0.05231,"12.0-12.1":0.11436,"12.2-12.4":0.13139,"13.0-13.1":0.03041,"13.2":0.01825,"13.3":0.11314,"13.4-13.7":0.63383,"14.0-14.4":10.24344,"14.5":0.19343},E:{"4":0,"5":0.00611,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00611,"13":0.055,"14":1.29553,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.01222,"10.1":0.01222,"11.1":0.03667,"12.1":0.04278,"13.1":0.22611,"14.1":0.03056},B:{"12":0,"13":0,"14":0,"15":0.01222,"16":0.00611,"17":0.00611,"18":0.03667,"79":0,"80":0,"81":0,"83":0,"84":0.00611,"85":0.00611,"86":0.01833,"87":0.00611,"88":0.02444,"89":2.16941,"90":0.85554},P:{"4":0.17413,"5.0-5.4":0.01024,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.01024,"9.2":0.0717,"10.1":0.03073,"11.1-11.2":0.08194,"12.0":0.10243,"13.0":2.41728,"14.0":1.04476},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00427,"4.2-4.3":0.01139,"4.4":0,"4.4.3-4.4.4":0.09823},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00615,"9":0.00615,"10":0,"11":0.9838,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":44.42825},S:{"2.5":0},R:{_:"0"},M:{"0":0.29945},Q:{"10.4":0},O:{"0":0.00778},H:{"0":0.17673}};


/***/ }),
/* 438 */
/***/ ((module) => {

module.exports={C:{"48":0.01091,"52":0.1528,"56":0.01091,"66":0.01091,"68":0.06003,"70":0.00546,"71":0.02183,"72":0.01091,"75":0.00546,"76":0.01091,"77":0.01091,"78":0.17462,"79":0.01091,"80":0.01091,"81":0.02729,"82":0.02183,"83":0.01637,"84":0.06003,"85":0.07094,"86":0.15825,"87":4.74759,"88":1.72987,"89":0.01091,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 50 51 53 54 55 57 58 59 60 61 62 63 64 65 67 69 73 74 90 3.5 3.6"},D:{"26":0.00546,"34":0.01091,"38":0.06003,"43":0.01637,"47":0.01091,"48":0.00546,"49":0.31651,"50":0.00546,"53":0.14734,"56":0.00546,"58":0.00546,"59":0.02183,"63":0.07094,"67":0.01091,"68":0.04911,"69":0.04366,"70":0.00546,"71":0.01091,"72":0.01637,"73":0.00546,"74":0.00546,"75":0.01637,"76":0.01091,"77":0.01637,"78":0.02183,"79":0.06003,"80":0.02729,"81":0.06548,"83":0.04911,"84":0.0382,"85":0.04366,"86":0.09277,"87":0.22919,"88":0.61664,"89":23.87983,"90":8.78577,"91":0.01091,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 35 36 37 39 40 41 42 44 45 46 51 52 54 55 57 60 61 62 64 65 66 92 93"},F:{"36":0.01637,"40":0.00546,"46":0.01091,"63":0.01637,"73":0.60573,"74":0.66575,"75":2.01363,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 41 42 43 44 45 47 48 49 50 51 52 53 54 55 56 57 58 60 62 64 65 66 67 68 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.01637},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0047,"6.0-6.1":0,"7.0-7.1":0.0047,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.07523,"10.0-10.2":0.01599,"10.3":0.09591,"11.0-11.2":0.01222,"11.3-11.4":0.04608,"12.0-12.1":0.02445,"12.2-12.4":0.11002,"13.0-13.1":0.04137,"13.2":0.01599,"13.3":0.1119,"13.4-13.7":0.3404,"14.0-14.4":8.02201,"14.5":0.15139},E:{"4":0,"12":0.01637,"13":0.04911,"14":2.1064,_:"0 5 6 7 8 9 10 11 3.1 3.2 5.1 6.1 7.1 9.1","10.1":0.01091,"11.1":0.03274,"12.1":0.08731,"13.1":0.26194,"14.1":0.07094},B:{"14":0.01091,"15":0.01637,"17":0.01637,"18":0.12005,"83":0.01091,"84":0.00546,"85":0.01637,"86":0.01091,"87":0.01637,"88":0.02183,"89":2.84855,"90":1.20054,_:"12 13 16 79 80 81"},P:{"4":0.36858,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.01053,"10.1":0.01053,"11.1-11.2":0.06318,"12.0":0.05265,"13.0":1.70598,"14.0":0.76875},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00327,"4.2-4.3":0.01046,"4.4":0,"4.4.3-4.4.4":0.08168},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.01703,"9":0.00568,"10":0.01135,"11":0.52801,_:"6 7 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":33.45385},S:{"2.5":0},R:{_:"0"},M:{"0":0.22261},Q:{"10.4":0},O:{"0":0.03634},H:{"0":0.46881}};


/***/ }),
/* 439 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00256,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00767,"34":0,"35":0,"36":0.00256,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.01023,"44":0.00511,"45":0.00511,"46":0,"47":0.00511,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00256,"57":0,"58":0,"59":0,"60":0,"61":0.01279,"62":0.00256,"63":0,"64":0,"65":0,"66":0.00256,"67":0,"68":0.00256,"69":0,"70":0,"71":0,"72":0.00256,"73":0,"74":0,"75":0,"76":0.00256,"77":0,"78":0.00511,"79":0,"80":0.00256,"81":0.00256,"82":0.00256,"83":0,"84":0.00256,"85":0.00511,"86":0.01534,"87":0.19178,"88":0.10739,"89":0.00511,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00256,"31":0,"32":0,"33":0.0179,"34":0,"35":0,"36":0,"37":0.00256,"38":0,"39":0,"40":0.00256,"41":0,"42":0,"43":0.00256,"44":0,"45":0,"46":0,"47":0,"48":0.00256,"49":0.00767,"50":0.00256,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00256,"59":0,"60":0.00256,"61":0,"62":0,"63":0.00511,"64":0.00511,"65":0.00256,"66":0,"67":0,"68":0.00511,"69":0.00256,"70":0.00511,"71":0.00256,"72":0.00256,"73":0,"74":0.00256,"75":0.00767,"76":0.00767,"77":0.00256,"78":0.00256,"79":0.00767,"80":0.00511,"81":0.02557,"83":0.01534,"84":0.00767,"85":0.00511,"86":0.02301,"87":0.0358,"88":0.05114,"89":1.75666,"90":0.65715,"91":0.00256,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0.00256,"16":0,"17":0,"18":0,"19":0,"20":0.01279,"21":0,"22":0,"23":0.00511,"24":0,"25":0,"26":0.00256,"27":0,"28":0.00256,"29":0,"30":0.00511,"31":0,"32":0.00256,"33":0,"34":0.00256,"35":0,"36":0,"37":0.00511,"38":0,"39":0,"40":0.02301,"41":0,"42":0.00256,"43":0.00256,"44":0,"45":0.00256,"46":0,"47":0,"48":0.00511,"49":0,"50":0.08438,"51":0.02046,"52":0,"53":0,"54":0.02813,"55":0.03836,"56":0,"57":0,"58":0.02557,"60":0.00256,"62":0.01534,"63":0.04091,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0179,"74":0.0716,"75":0.21223,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.34775},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.01513,"5.0-5.1":0.0055,"6.0-6.1":0,"7.0-7.1":0.10179,"8.1-8.4":0,"9.0-9.2":0.01444,"9.3":0.08391,"10.0-10.2":0.01582,"10.3":0.10317,"11.0-11.2":0.02682,"11.3-11.4":0.04196,"12.0-12.1":0.05227,"12.2-12.4":0.34871,"13.0-13.1":0.12793,"13.2":0.07084,"13.3":0.31295,"13.4-13.7":0.56055,"14.0-14.4":4.57314,"14.5":0.03095},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.09717,_:"0","3.1":0,"3.2":0,"5.1":0.12785,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00511,"11.1":0.00767,"12.1":0.02813,"13.1":0.0358,"14.1":0.00256},B:{"12":0.02046,"13":0.01023,"14":0.00511,"15":0.00511,"16":0.01279,"17":0.00511,"18":0.04858,"79":0,"80":0.00256,"81":0,"83":0,"84":0.00767,"85":0.00767,"86":0.00256,"87":0.00511,"88":0.00767,"89":0.39634,"90":0.15086},P:{"4":0.14464,"5.0-5.4":0.05166,"6.2-6.4":0.02066,"7.2-7.4":0.10331,"8.2":0,"9.2":0.05166,"10.1":0.02066,"11.1-11.2":0.13431,"12.0":0.06199,"13.0":0.61988,"14.0":0.17563},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00307,"4.2-4.3":0.0069,"4.4":0,"4.4.3-4.4.4":0.12117},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.02342,"9":0,"10":0,"11":0.19904,"5.5":0},J:{"7":0,"10":0.02977},N:{"10":0.08932,"11":0},L:{"0":56.41596},S:{"2.5":0.02233},R:{_:"0"},M:{"0":0.12653},Q:{"10.4":0.00744},O:{"0":2.21801},H:{"0":20.5407}};


/***/ }),
/* 440 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.09373,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.02884,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00721,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.07931,"75":0,"76":0,"77":0,"78":0.12978,"79":0.02884,"80":0,"81":0,"82":0,"83":0.02163,"84":0.02163,"85":0.07931,"86":0.6489,"87":2.53071,"88":0.85078,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00721,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.90846,"50":0,"51":0,"52":0,"53":0.00721,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.04326,"63":0,"64":0.00721,"65":0.00721,"66":0.00721,"67":0,"68":0.00721,"69":0.00721,"70":0,"71":0.01442,"72":0,"73":0.02163,"74":0,"75":0.01442,"76":0.26677,"77":0.06489,"78":0,"79":0.01442,"80":0.01442,"81":0.31003,"83":0.00721,"84":0,"85":0,"86":0.01442,"87":0.18025,"88":0.25235,"89":22.73313,"90":7.33978,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.22351,"74":0.00721,"75":0.10815,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.27493,"8.1-8.4":0.00302,"9.0-9.2":0.11329,"9.3":0.37765,"10.0-10.2":0.0287,"10.3":0.24018,"11.0-11.2":0.0423,"11.3-11.4":0.03474,"12.0-12.1":0.0136,"12.2-12.4":0.30967,"13.0-13.1":0.06647,"13.2":0,"13.3":0.3852,"13.4-13.7":0.32478,"14.0-14.4":11.02431,"14.5":0.13444},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00721,"13":0.06489,"14":2.98494,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.17304,"11.1":0.15862,"12.1":0.22351,"13.1":0.68495,"14.1":0.06489},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.02163,"79":0,"80":0,"81":0,"83":0,"84":0.00721,"85":0.00721,"86":0,"87":0,"88":0.00721,"89":6.55389,"90":2.27836},P:{"4":0.15355,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0.03071,"12.0":0.13308,"13.0":3.19387,"14.0":2.11901},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00081,"4.4":0,"4.4.3-4.4.4":0.08872},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00721,"10":0,"11":0.2163,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":26.01614},S:{"2.5":0},R:{_:"0"},M:{"0":0.09207},Q:{"10.4":0},O:{"0":0.00558},H:{"0":0.05547}};


/***/ }),
/* 441 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00276,"33":0.01103,"34":0,"35":0.00551,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.00276,"42":0.00276,"43":0.00276,"44":0.00276,"45":0.00276,"46":0,"47":0.00276,"48":0.00276,"49":0,"50":0,"51":0.00276,"52":0.00551,"53":0.00276,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.00276,"65":0,"66":0.01103,"67":0.00551,"68":0.01103,"69":0,"70":0.00551,"71":0,"72":0.00551,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.0386,"79":0,"80":0,"81":0.00551,"82":0.00276,"83":0.00827,"84":0.01654,"85":0.0193,"86":0.06341,"87":0.48799,"88":0.19299,"89":0.00276,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00276,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00276,"39":0,"40":0.00276,"41":0,"42":0,"43":0.00276,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02757,"50":0,"51":0,"52":0,"53":0.00276,"54":0,"55":0.00551,"56":0.00276,"57":0,"58":0,"59":0,"60":0.00276,"61":0,"62":0,"63":0.00551,"64":0.00276,"65":0.00827,"66":0,"67":0.00276,"68":0.00276,"69":0.02481,"70":0.00276,"71":0.00276,"72":0.00276,"73":0.00276,"74":0.01103,"75":0.00551,"76":0.00827,"77":0.00276,"78":0.00276,"79":0.00827,"80":0.01103,"81":0.02481,"83":0.01103,"84":0.00827,"85":0.02481,"86":0.0193,"87":0.05238,"88":0.08271,"89":2.71013,"90":1.1221,"91":0.00551,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00276,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00276,"51":0.00276,"52":0,"53":0,"54":0.01103,"55":0.01654,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00276,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00827,"74":0.03584,"75":0.11304,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00321,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00321,"6.0-6.1":0.00321,"7.0-7.1":0.03858,"8.1-8.4":0.03215,"9.0-9.2":0.00482,"9.3":0.20414,"10.0-10.2":0.01607,"10.3":0.39381,"11.0-11.2":0.15109,"11.3-11.4":0.15752,"12.0-12.1":0.16235,"12.2-12.4":0.52079,"13.0-13.1":0.08841,"13.2":0.05304,"13.3":0.38416,"13.4-13.7":1.04319,"14.0-14.4":11.86888,"14.5":0.09323},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00276,"11":0,"12":0.00276,"13":0.00551,"14":0.15439,_:"0","3.1":0,"3.2":0,"5.1":0.00551,"6.1":0,"7.1":0,"9.1":0.00276,"10.1":0.00551,"11.1":0.01103,"12.1":0.01379,"13.1":0.03033,"14.1":0.00551},B:{"12":0.01103,"13":0.00276,"14":0.00551,"15":0.00827,"16":0.00551,"17":0.00827,"18":0.03308,"79":0,"80":0,"81":0,"83":0,"84":0.00276,"85":0.00276,"86":0.00827,"87":0.00551,"88":0.00551,"89":0.35565,"90":0.14888},P:{"4":0.56862,"5.0-5.4":0.01015,"6.2-6.4":0.04062,"7.2-7.4":0.42646,"8.2":0.01015,"9.2":0.16246,"10.1":0.05077,"11.1-11.2":0.47723,"12.0":0.24369,"13.0":1.81755,"14.0":0.48739},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00725,"4.2-4.3":0.01111,"4.4":0,"4.4.3-4.4.4":0.15024},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.11579,"5.5":0},J:{"7":0,"10":0.02173},N:{"10":0,"11":0},L:{"0":71.68876},S:{"2.5":0.00724},R:{_:"0"},M:{"0":0.21005},Q:{"10.4":0.00724},O:{"0":0.11589},H:{"0":0.46629}};


/***/ }),
/* 442 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00541,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00271,"69":0,"70":0,"71":0,"72":0.00271,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00271,"85":0,"86":0.00541,"87":0.14612,"88":0.05141,"89":0.00271,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00271,"39":0,"40":0.00271,"41":0,"42":0,"43":0.01624,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00271,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00271,"59":0,"60":0,"61":0,"62":0.04871,"63":0.00541,"64":0.00812,"65":0.00271,"66":0.00271,"67":0,"68":0.00271,"69":0,"70":0.02165,"71":0.00271,"72":0.00271,"73":0,"74":0.02165,"75":0,"76":0.00271,"77":0.00271,"78":0.00541,"79":0.01082,"80":0.02977,"81":0.05953,"83":0.00541,"84":0.01353,"85":0.01082,"86":0.02706,"87":0.046,"88":0.10283,"89":3.83711,"90":1.24476,"91":0.00812,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00541,"52":0,"53":0,"54":0.01082,"55":0.02706,"56":0.00271,"57":0,"58":0,"60":0,"62":0.00541,"63":0.03247,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00271,"71":0,"72":0,"73":0.00271,"74":0.03247,"75":0.09742,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00271},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00209,"6.0-6.1":0.00348,"7.0-7.1":0.01185,"8.1-8.4":0.00209,"9.0-9.2":0.00348,"9.3":0.06481,"10.0-10.2":0.00279,"10.3":0.12195,"11.0-11.2":0.02857,"11.3-11.4":0.0223,"12.0-12.1":0.04321,"12.2-12.4":0.27526,"13.0-13.1":0.07108,"13.2":0.05296,"13.3":0.16516,"13.4-13.7":0.63624,"14.0-14.4":4.67112,"14.5":0.08014},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00271,"12":0.00271,"13":0.00812,"14":0.07847,_:"0","3.1":0,"3.2":0,"5.1":0.08118,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01082,"11.1":0.00271,"12.1":0.00271,"13.1":0.01894,"14.1":0.00271},B:{"12":0.00812,"13":0.10012,"14":0,"15":0.00271,"16":0.00812,"17":0.00541,"18":0.046,"79":0,"80":0.00271,"81":0,"83":0,"84":0.00271,"85":0.01624,"86":0,"87":0.00541,"88":0.00812,"89":0.29225,"90":0.11906},P:{"4":0.75002,"5.0-5.4":0.07095,"6.2-6.4":0.22298,"7.2-7.4":0.6588,"8.2":0.01014,"9.2":0.19257,"10.1":0.08108,"11.1-11.2":0.82097,"12.0":0.26352,"13.0":2.98994,"14.0":0.72975},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01222,"4.2-4.3":0.03972,"4.4":0,"4.4.3-4.4.4":0.24136},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.04059,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":69.23117},S:{"2.5":0.02918},R:{_:"0"},M:{"0":0.06565},Q:{"10.4":0},O:{"0":1.90373},H:{"0":4.48857}};


/***/ }),
/* 443 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00709,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00355,"79":0,"80":0,"81":0,"82":0.01419,"83":0.00355,"84":0,"85":0,"86":0.03192,"87":0.48594,"88":0.17026,"89":0.00355,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00355,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01419,"48":0,"49":1.04637,"50":0,"51":0.00355,"52":0,"53":0.01064,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.00355,"63":0.01774,"64":0,"65":0,"66":0,"67":0,"68":0.00709,"69":0.00355,"70":0.00355,"71":0,"72":0,"73":0.00709,"74":0.00709,"75":0.01064,"76":0.00709,"77":0,"78":0,"79":0.03547,"80":0.01419,"81":0.04256,"83":0.00355,"84":0.00355,"85":0.02128,"86":0.02838,"87":0.1809,"88":0.26248,"89":4.74589,"90":2.2417,"91":0.00355,"92":0.00355,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00709,"55":0.02128,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.01419,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00355,"71":0,"72":0,"73":0.03547,"74":0.05675,"75":0.15607,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.16028,"6.0-6.1":0,"7.0-7.1":0.11119,"8.1-8.4":0.02166,"9.0-9.2":0.00289,"9.3":0.17617,"10.0-10.2":0.00578,"10.3":0.1805,"11.0-11.2":0.03754,"11.3-11.4":0.04043,"12.0-12.1":0.04043,"12.2-12.4":0.31479,"13.0-13.1":0.16462,"13.2":0.00578,"13.3":0.32201,"13.4-13.7":0.43464,"14.0-14.4":10.84444,"14.5":0.28014},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00709,"14":0.39372,_:"0","3.1":0,"3.2":0,"5.1":0.01064,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00355,"11.1":0.00709,"12.1":0.00709,"13.1":0.02483,"14.1":0.00355},B:{"12":0,"13":0,"14":0,"15":0.00709,"16":0.00709,"17":0.01419,"18":0.02838,"79":0,"80":0.00355,"81":0,"83":0,"84":0.00355,"85":0.00355,"86":0.00355,"87":0.00355,"88":0.00709,"89":0.80872,"90":0.31923},P:{"4":0.5405,"5.0-5.4":0.02079,"6.2-6.4":0.03118,"7.2-7.4":0.62365,"8.2":0.03118,"9.2":0.14552,"10.1":0.08315,"11.1-11.2":0.63405,"12.0":0.34301,"13.0":4.87487,"14.0":2.33869},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03654,"4.2-4.3":0.06233,"4.4":0,"4.4.3-4.4.4":0.37613},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.13124,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":60.17246},S:{"2.5":0},R:{_:"0"},M:{"0":0.1097},Q:{"10.4":0.06453},O:{"0":0.45816},H:{"0":0.45209}};


/***/ }),
/* 444 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.01625,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.05957,"78":0.00542,"79":0,"80":0,"81":0.00542,"82":0,"83":0,"84":0.00542,"85":0,"86":0.01083,"87":0.55775,"88":0.16245,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00542,"30":0,"31":0,"32":0,"33":0.02166,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.02166,"41":0,"42":0,"43":0.1083,"44":0,"45":0,"46":0.02166,"47":0,"48":0,"49":0.01083,"50":0,"51":0.01625,"52":0,"53":0.08123,"54":0,"55":0,"56":0.00542,"57":0.00542,"58":0,"59":0,"60":0.01083,"61":0,"62":0,"63":0,"64":0.00542,"65":0.00542,"66":0.04332,"67":0.00542,"68":0.08664,"69":0.04332,"70":0.01625,"71":0,"72":0.00542,"73":0.00542,"74":0,"75":0.01625,"76":0.01083,"77":0.00542,"78":0,"79":0.34656,"80":0.00542,"81":0.0704,"83":0.04332,"84":0.03249,"85":0,"86":0.04874,"87":1.16964,"88":0.13538,"89":11.13324,"90":3.17319,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00542,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00542,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00542,"51":0,"52":0,"53":0,"54":0.00542,"55":0.04332,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02166,"74":0.22202,"75":1.02885,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.03249},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.06832,"8.1-8.4":0,"9.0-9.2":0,"9.3":2.51155,"10.0-10.2":0,"10.3":0.10248,"11.0-11.2":0.12932,"11.3-11.4":0.01383,"12.0-12.1":0,"12.2-12.4":0.37413,"13.0-13.1":0.00651,"13.2":0,"13.3":1.27286,"13.4-13.7":0.38796,"14.0-14.4":2.64738,"14.5":0.00651},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00542,"14":0.47652,_:"0","3.1":0,"3.2":0,"5.1":0.0704,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0.02708,"14.1":0},B:{"12":0.01625,"13":0.00542,"14":0.01625,"15":0.01625,"16":0.00542,"17":0.07581,"18":0.03791,"79":0,"80":0.00542,"81":0,"83":0,"84":0.03791,"85":0,"86":0,"87":0.00542,"88":0.01083,"89":3.19485,"90":0.81225},P:{"4":0.25913,"5.0-5.4":0,"6.2-6.4":0.01037,"7.2-7.4":0.11402,"8.2":0,"9.2":0.01037,"10.1":0.0311,"11.1-11.2":0.14511,"12.0":0.01037,"13.0":1.87612,"14.0":0.20731},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.12159,"4.4":0,"4.4.3-4.4.4":0.51675},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.27075,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":55.49656},S:{"2.5":0},R:{_:"0"},M:{"0":0.07795},Q:{"10.4":0.04585},O:{"0":2.81061},H:{"0":1.02442}};


/***/ }),
/* 445 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00505,"34":0,"35":0.00505,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00505,"52":0.02523,"53":0,"54":0,"55":0,"56":0.00505,"57":0,"58":0,"59":0,"60":0.00505,"61":0,"62":0.00505,"63":0.00505,"64":0.00505,"65":0,"66":0.52478,"67":0.00505,"68":0.01514,"69":0,"70":0.03532,"71":0,"72":0.01009,"73":0.04037,"74":0,"75":0.00505,"76":0,"77":0,"78":0.03532,"79":0.00505,"80":0.00505,"81":0.01009,"82":0.00505,"83":0.00505,"84":0.00505,"85":0.02018,"86":0.06055,"87":0.98397,"88":0.439,"89":0.01009,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01009,"39":0,"40":0,"41":0,"42":0.00505,"43":0.00505,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.07569,"50":0,"51":0,"52":0,"53":0.02523,"54":0,"55":0.00505,"56":0,"57":0,"58":0,"59":0,"60":0.00505,"61":0,"62":0,"63":0.00505,"64":0,"65":0.00505,"66":0.01009,"67":0.01009,"68":0.01009,"69":0.01009,"70":0.00505,"71":0.01009,"72":0.01009,"73":0.01009,"74":0.01514,"75":0.02523,"76":0.02523,"77":0.02018,"78":0.01514,"79":0.03028,"80":0.02523,"81":0.05551,"83":0.03028,"84":0.03028,"85":0.02523,"86":0.05551,"87":0.20184,"88":0.23212,"89":11.28286,"90":5.32353,"91":0.01009,"92":0.01009,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00505,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00505,"51":0,"52":0,"53":0,"54":0.01009,"55":0.01514,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.38854,"74":0.10092,"75":0.49451,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00154,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0077,"6.0-6.1":0,"7.0-7.1":0.02541,"8.1-8.4":0.00308,"9.0-9.2":0.00539,"9.3":0.12089,"10.0-10.2":0.00462,"10.3":0.05544,"11.0-11.2":0.01617,"11.3-11.4":0.04235,"12.0-12.1":0.01848,"12.2-12.4":0.12859,"13.0-13.1":0.0231,"13.2":0.03773,"13.3":0.07315,"13.4-13.7":0.27721,"14.0-14.4":6.31573,"14.5":0.10087},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00505,"13":0.02523,"14":0.58534,_:"0","3.1":0,"3.2":0,"5.1":0.41882,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.01514,"12.1":0.03532,"13.1":0.09083,"14.1":0.01514},B:{"12":0.02018,"13":0,"14":0.01009,"15":0.00505,"16":0.00505,"17":0.01009,"18":0.05551,"79":0,"80":0.00505,"81":0,"83":0,"84":0.01009,"85":0.00505,"86":0,"87":0.00505,"88":0.01514,"89":0.79222,"90":0.44405},P:{"4":0.225,"5.0-5.4":0.01023,"6.2-6.4":0,"7.2-7.4":0.13295,"8.2":0,"9.2":0.10227,"10.1":0.02045,"11.1-11.2":0.25568,"12.0":0.12272,"13.0":1.52383,"14.0":0.62385},I:{"0":0,"3":0,"4":0.00978,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00587,"4.2-4.3":0.01761,"4.4":0,"4.4.3-4.4.4":0.24261},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.06055,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":62.58098},S:{"2.5":0},R:{_:"0"},M:{"0":0.89667},Q:{"10.4":0},O:{"0":0.15853},H:{"0":0.22044}};


/***/ }),
/* 446 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.00198,"33":0,"34":0,"35":0,"36":0.00198,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00198,"48":0,"49":0,"50":0.00198,"51":0,"52":0.00988,"53":0,"54":0,"55":0,"56":0.0079,"57":0,"58":0,"59":0,"60":0,"61":0.00198,"62":0,"63":0,"64":0,"65":0.00198,"66":0,"67":0.00198,"68":0.01778,"69":0,"70":0,"71":0.00593,"72":0.00395,"73":0,"74":0,"75":0,"76":0.00198,"77":0,"78":0.00395,"79":0,"80":0.00198,"81":0.00395,"82":0.00395,"83":0.00198,"84":0.0079,"85":0.0079,"86":0.01976,"87":0.22922,"88":0.08497,"89":0.00198,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00198,"37":0,"38":0.00395,"39":0,"40":0.00395,"41":0,"42":0,"43":0.00198,"44":0,"45":0,"46":0.00198,"47":0,"48":0,"49":0.00395,"50":0.00198,"51":0,"52":0,"53":0.00395,"54":0,"55":0.00198,"56":0.00198,"57":0,"58":0.00593,"59":0.00198,"60":0.00198,"61":0.00593,"62":0,"63":0.00395,"64":0.00198,"65":0.00198,"66":0.00198,"67":0.00198,"68":0.00395,"69":0.00198,"70":0.02964,"71":0.00395,"72":0.00198,"73":0.00198,"74":0.00198,"75":0.0079,"76":0.00395,"77":0.00198,"78":0.00593,"79":0.01581,"80":0.01581,"81":0.02569,"83":0.01778,"84":0.00593,"85":0.01976,"86":0.03162,"87":0.03162,"88":0.05928,"89":1.45631,"90":0.53352,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00395,"29":0,"30":0,"31":0,"32":0.00198,"33":0.00198,"34":0,"35":0,"36":0,"37":0,"38":0.00198,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00198,"47":0.00198,"48":0,"49":0,"50":0.00395,"51":0.00198,"52":0,"53":0,"54":0.00988,"55":0.01976,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00198,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01383,"74":0.02569,"75":0.08892,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00198},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00111,"5.0-5.1":0.0089,"6.0-6.1":0.00371,"7.0-7.1":0.05454,"8.1-8.4":0.01002,"9.0-9.2":0.00408,"9.3":0.10685,"10.0-10.2":0.02337,"10.3":0.08904,"11.0-11.2":0.02782,"11.3-11.4":0.07939,"12.0-12.1":0.10722,"12.2-12.4":0.38584,"13.0-13.1":0.04378,"13.2":0.01298,"13.3":0.18364,"13.4-13.7":0.27194,"14.0-14.4":1.9867,"14.5":0.01336},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00395,"14":0.02371,_:"0","3.1":0,"3.2":0,"5.1":0.56316,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00198,"13.1":0.00395,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0.00198,"16":0.00198,"17":0.00198,"18":0.01186,"79":0,"80":0,"81":0,"83":0,"84":0.00198,"85":0.00198,"86":0,"87":0,"88":0.00198,"89":0.10275,"90":0.03162},P:{"4":1.94504,"5.0-5.4":0.09117,"6.2-6.4":0.19248,"7.2-7.4":0.40522,"8.2":0.08104,"9.2":0.42548,"10.1":0.36469,"11.1-11.2":0.52678,"12.0":0.50652,"13.0":3.7989,"14.0":0.76991},I:{"0":0,"3":0,"4":0.00201,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02078,"4.2-4.3":0.04624,"4.4":0,"4.4.3-4.4.4":0.22049},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01976,"5.5":0},J:{"7":0,"10":0.00802},N:{"10":0,"11":0},L:{"0":77.87606},S:{"2.5":0},R:{_:"0"},M:{"0":0.1685},Q:{"10.4":0},O:{"0":1.2036},H:{"0":1.59529}};


/***/ }),
/* 447 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00318,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01591,"50":0,"51":0,"52":0.00318,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.02863,"61":0,"62":0,"63":0.00318,"64":0,"65":0,"66":0,"67":0,"68":0.00954,"69":0,"70":0,"71":0,"72":0.01272,"73":0,"74":0,"75":0,"76":0.00318,"77":0.00318,"78":0.00318,"79":0,"80":0.00318,"81":0,"82":0,"83":0.00318,"84":0.00318,"85":0.00318,"86":0.00954,"87":0.29583,"88":0.2004,"89":0.00318,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00318,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.01272,"41":0,"42":0.00318,"43":0,"44":0,"45":0,"46":0.00318,"47":0,"48":0,"49":0.00318,"50":0,"51":0.00318,"52":0,"53":0.00318,"54":0,"55":0.00318,"56":0.00318,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.00318,"64":0,"65":0.00318,"66":0,"67":0.00318,"68":0,"69":0.01909,"70":0.01591,"71":0.00318,"72":0.01591,"73":0,"74":0.00636,"75":0.02227,"76":0.00318,"77":0.00318,"78":0.00636,"79":0.01272,"80":0.00954,"81":0.03499,"83":0.00954,"84":0.00954,"85":0.00636,"86":0.03817,"87":0.12088,"88":0.0509,"89":3.24144,"90":1.17379,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.00318,"18":0,"19":0.00318,"20":0.00318,"21":0.00318,"22":0,"23":0,"24":0,"25":0.00636,"26":0.00954,"27":0,"28":0.00318,"29":0.00636,"30":0,"31":0,"32":0.00318,"33":0,"34":0.00318,"35":0.01909,"36":0,"37":0,"38":0.00636,"39":0,"40":0.00636,"41":0.00318,"42":0.00318,"43":0,"44":0,"45":0.00636,"46":0.00318,"47":0.00636,"48":0,"49":0,"50":0.00954,"51":0.02227,"52":0,"53":0,"54":0.05408,"55":0.18132,"56":0,"57":0.00318,"58":0,"60":0.00318,"62":0.01272,"63":0.00954,"64":0,"65":0,"66":0,"67":0,"68":0.00318,"69":0,"70":0,"71":0,"72":0.00318,"73":0.01272,"74":0.07634,"75":0.48351,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.21631},G:{"8":0.00047,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0033,"6.0-6.1":0,"7.0-7.1":0.01179,"8.1-8.4":0.00141,"9.0-9.2":0,"9.3":0.02075,"10.0-10.2":0.00283,"10.3":0.25791,"11.0-11.2":0.0132,"11.3-11.4":0.05234,"12.0-12.1":0.07544,"12.2-12.4":0.31591,"13.0-13.1":0.03253,"13.2":0.01933,"13.3":0.03583,"13.4-13.7":0.22255,"14.0-14.4":3.03458,"14.5":0.02216},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00636,"14":0.07953,_:"0","3.1":0,"3.2":0,"5.1":0.07953,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00318,"11.1":0.00318,"12.1":0,"13.1":0.06998,"14.1":0},B:{"12":0.01591,"13":0.00954,"14":0.00636,"15":0.01272,"16":0.01272,"17":0.02227,"18":0.04772,"79":0,"80":0.00636,"81":0,"83":0,"84":0.00636,"85":0.00318,"86":0.01909,"87":0.00636,"88":0.00636,"89":0.33719,"90":0.17177},P:{"4":0.57416,"5.0-5.4":0.01025,"6.2-6.4":0.01025,"7.2-7.4":0.72796,"8.2":0.02051,"9.2":0.09228,"10.1":0.03076,"11.1-11.2":0.29733,"12.0":0.25632,"13.0":1.71224,"14.0":0.56391},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00246,"4.2-4.3":0.01426,"4.4":0,"4.4.3-4.4.4":0.17553},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00334,"10":0.00334,"11":0.13011,"5.5":0},J:{"7":0,"10":0.01364},N:{"10":0,"11":0},L:{"0":56.32587},S:{"2.5":0.15684},R:{_:"0"},M:{"0":0.07501},Q:{"10.4":0},O:{"0":0.60007},H:{"0":18.1214}};


/***/ }),
/* 448 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00557,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00557,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00557,"79":0,"80":0,"81":0,"82":0.00557,"83":0,"84":0,"85":0,"86":0.0223,"87":0.35116,"88":0.15607,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01115,"50":0,"51":0,"52":0,"53":0.13935,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00557,"68":0.02787,"69":0,"70":0,"71":0,"72":0.00557,"73":0,"74":0.16165,"75":0.01115,"76":0.06131,"77":0.09476,"78":0,"79":0.02787,"80":0.01115,"81":0.07804,"83":0,"84":0,"85":0.01115,"86":0.02787,"87":0.22296,"88":0.34559,"89":10.33977,"90":5.0166,"91":0.02787,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00557,"55":0.14492,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0223,"74":0.03344,"75":0.05017,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0.11619,"9.0-9.2":0,"9.3":0.2153,"10.0-10.2":0,"10.3":0.1572,"11.0-11.2":0.12986,"11.3-11.4":0.04101,"12.0-12.1":0.0581,"12.2-12.4":2.09485,"13.0-13.1":0.12303,"13.2":0.00683,"13.3":0.24947,"13.4-13.7":0.59804,"14.0-14.4":29.17418,"14.5":0.26656},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00557,"13":0.01672,"14":4.34772,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.04459,"11.1":0.02787,"12.1":0.08918,"13.1":0.61314,"14.1":0.0223},B:{"12":0,"13":0.00557,"14":0.00557,"15":0.01672,"16":0.0223,"17":0.01672,"18":0.1505,"79":0,"80":0.01115,"81":0,"83":0,"84":0.00557,"85":0,"86":0.37346,"87":0.01115,"88":0.0223,"89":3.32768,"90":1.29874},P:{"4":0.04235,"5.0-5.4":0,"6.2-6.4":0.02117,"7.2-7.4":0.03176,"8.2":0,"9.2":0.07411,"10.1":0.1694,"11.1-11.2":0.6776,"12.0":0.02117,"13.0":1.7681,"14.0":0.6776},I:{"0":0,"3":0,"4":0.08293,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.29024,"4.4":0,"4.4.3-4.4.4":1.11951},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00557,"11":0.21181,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":31.01894},S:{"2.5":0},R:{_:"0"},M:{"0":0.1195},Q:{"10.4":0},O:{"0":0.0177},H:{"0":0.31427}};


/***/ }),
/* 449 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0.00686,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00229,"51":0,"52":0.00229,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00229,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00229,"73":0,"74":0,"75":0,"76":0,"77":0.00229,"78":0.00229,"79":0,"80":0,"81":0.00229,"82":0,"83":0.00229,"84":0.00229,"85":0.0183,"86":0.0183,"87":0.2288,"88":0.0572,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00229,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00229,"38":0,"39":0,"40":0.01373,"41":0,"42":0,"43":0.00229,"44":0,"45":0,"46":0,"47":0,"48":0.00229,"49":0.00458,"50":0.00229,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.00458,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.00686,"68":0.05491,"69":0,"70":0,"71":0.00229,"72":0,"73":0,"74":0,"75":0.02288,"76":0.00458,"77":0.00229,"78":0,"79":0.00229,"80":0.00229,"81":0.00458,"83":0.00686,"84":0.02059,"85":0.00229,"86":0.13499,"87":0.03661,"88":0.06178,"89":1.11197,"90":0.23566,"91":0.00686,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.00229,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00229,"26":0,"27":0,"28":0.12355,"29":0,"30":0.03203,"31":0,"32":0,"33":0,"34":0.01373,"35":0,"36":0,"37":0,"38":0.00229,"39":0,"40":0,"41":0,"42":0.00458,"43":0,"44":0,"45":0.00458,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00915,"52":0,"53":0,"54":0.00458,"55":0.00458,"56":0.00229,"57":0,"58":0.00229,"60":0,"62":0.00229,"63":0.04347,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01144,"74":0.02059,"75":0.05262,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00229},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.00217,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.00869,"10.0-10.2":0,"10.3":0.14174,"11.0-11.2":0.13957,"11.3-11.4":0.09341,"12.0-12.1":0.13848,"12.2-12.4":0.4149,"13.0-13.1":0.0782,"13.2":0.15152,"13.3":0.14391,"13.4-13.7":0.45672,"14.0-14.4":3.09223,"14.5":0.01575},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00458,"11":0,"12":0,"13":0.00686,"14":0.10982,_:"0","3.1":0,"3.2":0,"5.1":0.14872,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00229,"12.1":0.00915,"13.1":0.01373,"14.1":0},B:{"12":0.00686,"13":0.00458,"14":0.00458,"15":0,"16":0.01602,"17":0.00229,"18":0.01602,"79":0,"80":0,"81":0,"83":0,"84":0.00229,"85":0.00229,"86":0,"87":0.00229,"88":0,"89":0.29515,"90":0.0961},P:{"4":0.82756,"5.0-5.4":0.04037,"6.2-6.4":0.04037,"7.2-7.4":0.56517,"8.2":0,"9.2":0.32295,"10.1":0.04037,"11.1-11.2":0.62572,"12.0":0.33304,"13.0":1.11015,"14.0":0.18166},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00203,"4.2-4.3":0.00528,"4.4":0,"4.4.3-4.4.4":0.1693},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":1.09824,"5.5":0},J:{"7":0,"10":0.01542},N:{"10":0,"11":0},L:{"0":79.61826},S:{"2.5":0.09254},R:{_:"0"},M:{"0":0.05398},Q:{"10.4":0.54755},O:{"0":1.64266},H:{"0":2.46051}};


/***/ }),
/* 450 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00463,"23":0.00463,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00463,"31":0,"32":0.00926,"33":0.00463,"34":0,"35":0,"36":0.00463,"37":0,"38":0,"39":0,"40":0.00463,"41":0.00463,"42":0,"43":0.00463,"44":0,"45":0.00463,"46":0,"47":0.00463,"48":0,"49":0,"50":0.00463,"51":0,"52":0.04629,"53":0,"54":0,"55":0,"56":0.00463,"57":0,"58":0,"59":0,"60":0.00926,"61":0,"62":0,"63":0,"64":0,"65":0.00926,"66":0.00926,"67":0,"68":0.02315,"69":0,"70":0,"71":0.09721,"72":0.06481,"73":0.00463,"74":0.00463,"75":0.01389,"76":0.00463,"77":0.01852,"78":0.05555,"79":0.01389,"80":0.0324,"81":0.06481,"82":0.00463,"83":0.00926,"84":0.01852,"85":0.04629,"86":0.08332,"87":2.08305,"88":0.99986,"89":0.00463,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00463,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00463,"23":0,"24":0,"25":0,"26":0.01852,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00926,"34":0,"35":0,"36":0,"37":0,"38":0.0324,"39":0,"40":0.00463,"41":0,"42":0.00463,"43":0.02315,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02777,"50":0.00463,"51":0,"52":0,"53":0.00926,"54":0,"55":0.00463,"56":0.00926,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.01389,"63":0.00926,"64":0.00463,"65":0.00463,"66":0.00463,"67":0,"68":0.00926,"69":0,"70":0.00463,"71":0,"72":0.04166,"73":0.03703,"74":0.01389,"75":0.00463,"76":0.00463,"77":0.01852,"78":0.02315,"79":0.0324,"80":0.01852,"81":0.0324,"83":0.10184,"84":0.06018,"85":0.03703,"86":0.17127,"87":0.77304,"88":0.26385,"89":6.09639,"90":2.85146,"91":0.00926,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00463,"25":0,"26":0.00463,"27":0.00926,"28":0.0324,"29":0,"30":0.00926,"31":0.00463,"32":0,"33":0.01852,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00463,"43":0,"44":0,"45":0,"46":0.00463,"47":0,"48":0,"49":0,"50":0.00463,"51":0.02777,"52":0,"53":0,"54":0.09721,"55":0.37032,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.03703,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00463,"73":0.04629,"74":0.287,"75":0.72675,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01389},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00158,"5.0-5.1":0.00237,"6.0-6.1":0.01106,"7.0-7.1":0.19596,"8.1-8.4":0.00632,"9.0-9.2":0.0079,"9.3":0.45592,"10.0-10.2":0.11299,"10.3":0.58709,"11.0-11.2":0.07902,"11.3-11.4":0.03872,"12.0-12.1":0.00474,"12.2-12.4":0.2007,"13.0-13.1":0.02291,"13.2":0.07744,"13.3":0.19675,"13.4-13.7":0.2331,"14.0-14.4":4.77575,"14.5":0.06874},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00463,"14":0.13887,_:"0","3.1":0,"3.2":0,"5.1":0.18979,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0.0324,"14.1":0.00463},B:{"12":0.00926,"13":0.01389,"14":0.01389,"15":0.04629,"16":0.00463,"17":0.00463,"18":0.12035,"79":0,"80":0,"81":0,"83":0,"84":0.02315,"85":0.01852,"86":0,"87":0.00463,"88":0.01852,"89":0.93506,"90":0.41198},P:{"4":0.13476,"5.0-5.4":0.01037,"6.2-6.4":0,"7.2-7.4":0.05183,"8.2":0,"9.2":0.04146,"10.1":0.02073,"11.1-11.2":0.02073,"12.0":0.02073,"13.0":0.4872,"14.0":0.24878},I:{"0":0,"3":0,"4":0.00827,"2.1":0,"2.2":0,"2.3":0.00207,"4.1":0.02998,"4.2-4.3":0.07546,"4.4":0,"4.4.3-4.4.4":0.46828},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.01054,"7":0,"8":0,"9":0,"10":0.02109,"11":0.15816,"5.5":0},J:{"7":0,"10":0.08594},N:{"10":0,"11":0},L:{"0":65.83749},S:{"2.5":0.01074},R:{_:"0"},M:{"0":0.24707},Q:{"10.4":0.02148},O:{"0":1.19236},H:{"0":3.0001}};


/***/ }),
/* 451 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.01813,"16":0,"17":0.00363,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00725,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01088,"53":0,"54":0.00363,"55":0.01088,"56":0.05075,"57":0,"58":0.00363,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00363,"69":0,"70":0,"71":0,"72":0.00363,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00725,"79":0.00363,"80":0,"81":0.00363,"82":0.00363,"83":0.00363,"84":0.00725,"85":0.00363,"86":0.01088,"87":0.29725,"88":0.13413,"89":0.00363,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00363,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00363,"39":0,"40":0,"41":0,"42":0,"43":0.00725,"44":0,"45":0,"46":0,"47":0.00363,"48":0,"49":0.05438,"50":0,"51":0,"52":0,"53":0.01088,"54":0,"55":0.00363,"56":0.00363,"57":0.00363,"58":0.00363,"59":0,"60":0,"61":0.00725,"62":0,"63":0.00725,"64":0,"65":0.00363,"66":0.00363,"67":0.00363,"68":0.00363,"69":0.00363,"70":0.00363,"71":0.00363,"72":0.00363,"73":0.00363,"74":0.0145,"75":0.0145,"76":0.00725,"77":0.00363,"78":0.00725,"79":0.01088,"80":0.0145,"81":0.0145,"83":0.029,"84":0.01813,"85":0.0145,"86":0.03988,"87":0.09425,"88":0.08338,"89":5.74925,"90":2.70788,"91":0.01088,"92":0.00363,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.0145,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0.00363,"62":0,"63":0.00363,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.02175,"74":0.01813,"75":0.06163,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00473,"6.0-6.1":0.01183,"7.0-7.1":0.01892,"8.1-8.4":0.00946,"9.0-9.2":0.00473,"9.3":0.13721,"10.0-10.2":0.02602,"10.3":0.16796,"11.0-11.2":0.05914,"11.3-11.4":0.10172,"12.0-12.1":0.08989,"12.2-12.4":0.43764,"13.0-13.1":0.09699,"13.2":0.03785,"13.3":0.24839,"13.4-13.7":0.83743,"14.0-14.4":19.80965,"14.5":0.33119},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00363,"13":0.02175,"14":0.94975,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00363,"11.1":0.00725,"12.1":0.0145,"13.1":0.07613,"14.1":0.01813},B:{"12":0,"13":0,"14":0.00363,"15":0.00363,"16":0.00363,"17":0.00363,"18":0.0145,"79":0,"80":0,"81":0,"83":0,"84":0.00363,"85":0.00363,"86":0.00363,"87":0.00363,"88":0.00725,"89":0.46038,"90":0.25738},P:{"4":0.15454,"5.0-5.4":0,"6.2-6.4":0.0103,"7.2-7.4":0.10302,"8.2":0.0206,"9.2":0.09272,"10.1":0.04121,"11.1-11.2":0.25756,"12.0":0.12363,"13.0":1.84414,"14.0":0.81389},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.002,"4.2-4.3":0.00802,"4.4":0,"4.4.3-4.4.4":0.0481},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00394,"9":0.00394,"10":0.00394,"11":0.12594,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":60.0515},S:{"2.5":0},R:{_:"0"},M:{"0":0.10838},Q:{"10.4":0.00638},O:{"0":0.29963},H:{"0":0.24142}};


/***/ }),
/* 452 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0.00445,"5":0,"6":0,"7":0.00445,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00445,"14":0,"15":0.00445,"16":0,"17":0.00445,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00445,"31":0,"32":0,"33":0,"34":0,"35":0.00445,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00445,"49":0,"50":0,"51":0,"52":0.01778,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.01334,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00889,"69":0.00445,"70":0,"71":0,"72":0.00445,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01778,"79":0.00889,"80":0.00445,"81":0.00445,"82":0.00445,"83":0.01334,"84":0.00445,"85":0.02668,"86":0.00889,"87":0.34234,"88":0.1156,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00445,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.00445,"26":0,"27":0,"28":0.00445,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00445,"35":0.00445,"36":0,"37":0,"38":0,"39":0,"40":0.00889,"41":0,"42":0,"43":0,"44":0.04001,"45":0,"46":0.00445,"47":0.00445,"48":0,"49":0.17339,"50":0,"51":0,"52":0.00445,"53":0,"54":0,"55":0.01778,"56":0,"57":0.02223,"58":0,"59":0,"60":0,"61":0,"62":0.01778,"63":0.00445,"64":0.01334,"65":0,"66":0,"67":0.00445,"68":0.00889,"69":0.00889,"70":0.01334,"71":0.00889,"72":0,"73":0.00889,"74":0.00445,"75":0.00445,"76":0.00445,"77":0.00889,"78":0.02668,"79":1.20487,"80":0.02223,"81":0.02223,"83":0.0578,"84":0.03112,"85":0.35123,"86":0.08003,"87":1.35603,"88":0.32456,"89":6.91798,"90":2.27635,"91":0.00445,"92":0.00889,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.00445,"21":0,"22":0,"23":0,"24":0.00445,"25":0,"26":0,"27":0.00445,"28":0.00445,"29":0,"30":0.00445,"31":0,"32":0.00445,"33":0,"34":0,"35":0,"36":0.01334,"37":0.01334,"38":0.00445,"39":0,"40":0.00445,"41":0,"42":0.00445,"43":0,"44":0,"45":0.00445,"46":0.01334,"47":0.00445,"48":0,"49":0,"50":0.00889,"51":0.01778,"52":0,"53":0.00445,"54":0.04001,"55":0.0578,"56":0,"57":0,"58":0,"60":0.00445,"62":0.08892,"63":0.01334,"64":0.00445,"65":0,"66":0,"67":0,"68":0.03557,"69":0,"70":0,"71":0,"72":0,"73":0.23119,"74":0.19562,"75":0.73359,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01334},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.03235,"7.0-7.1":0.05391,"8.1-8.4":0.03504,"9.0-9.2":0.01258,"9.3":0.15904,"10.0-10.2":0.02696,"10.3":0.15185,"11.0-11.2":0.09794,"11.3-11.4":0.1222,"12.0-12.1":0.16443,"12.2-12.4":0.68917,"13.0-13.1":0.07637,"13.2":0.08536,"13.3":0.23362,"13.4-13.7":0.64604,"14.0-14.4":5.65892,"14.5":0.19139},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00445,"12":0,"13":0.18673,"14":0.32456,_:"0","3.1":0,"3.2":0,"5.1":0.92477,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00889,"12.1":0.00445,"13.1":0.06669,"14.1":0.00889},B:{"12":0,"13":0.00445,"14":0.00445,"15":0.00445,"16":0.00889,"17":0.00889,"18":0.03557,"79":0,"80":0,"81":0,"83":0,"84":0.08447,"85":0.00445,"86":0,"87":0.1156,"88":0,"89":0.28454,"90":0.11115},P:{"4":1.30324,"5.0-5.4":0.1203,"6.2-6.4":0.17042,"7.2-7.4":0.41102,"8.2":0.05012,"9.2":0.22055,"10.1":0.17042,"11.1-11.2":0.41102,"12.0":0.2807,"13.0":1.07267,"14.0":0.21052},I:{"0":0,"3":0,"4":0.00359,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00871,"4.2-4.3":0.01794,"4.4":0,"4.4.3-4.4.4":0.12865},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00699,"9":0.00699,"10":0.00699,"11":0.17466,"5.5":0},J:{"7":0,"10":0.00555},N:{"10":0,"11":0.01111},L:{"0":57.09528},S:{"2.5":0},R:{_:"0"},M:{"0":0.04443},Q:{"10.4":0.14996},O:{"0":2.24937},H:{"0":2.55547}};


/***/ }),
/* 453 */
/***/ ((module) => {

module.exports={C:{"87":0.63722,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 88 89 90 3.5 3.6"},D:{"81":1.91165,"88":1.27443,"89":47.76896,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 83 84 85 86 87 90 91 92 93"},F:{_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 73 74 75 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0.65533,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":0,"14.0-14.4":0.65533,"14.5":0},E:{"4":0,_:"0 5 6 7 8 9 10 11 12 13 14 3.1 3.2 5.1 6.1 7.1 9.1 10.1 11.1 12.1 13.1 14.1"},B:{"87":0.63722,"89":1.91165,_:"12 13 14 15 16 17 18 79 80 81 83 84 85 86 88 90"},P:{"4":0.13476,"5.0-5.4":0.01037,"6.2-6.4":0,"7.2-7.4":0.05183,"8.2":0,"9.2":0.65701,"10.1":0.02073,"11.1-11.2":1.96092,"12.0":0.65701,"13.0":0.65701,"14.0":0.24878},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{_:"6 7 8 9 10 11 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":40.61182},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 454 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00239,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00239,"31":0.00239,"32":0,"33":0,"34":0,"35":0,"36":0.00239,"37":0.00239,"38":0.00239,"39":0,"40":0,"41":0.00478,"42":0,"43":0.00239,"44":0.00239,"45":0.00239,"46":0,"47":0.00956,"48":0.00239,"49":0,"50":0,"51":0,"52":0.00239,"53":0,"54":0,"55":0.00239,"56":0.00478,"57":0.00717,"58":0,"59":0,"60":0.00239,"61":0,"62":0,"63":0.00239,"64":0,"65":0,"66":0,"67":0.00239,"68":0.00478,"69":0.00239,"70":0,"71":0,"72":0.00717,"73":0,"74":0,"75":0,"76":0.00239,"77":0,"78":0.02152,"79":0.04782,"80":0.00956,"81":0.00478,"82":0.00239,"83":0.01913,"84":0.01913,"85":0.01196,"86":0.03108,"87":0.39691,"88":0.33713,"89":0.03347,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00239,"32":0.00478,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00956,"41":0,"42":0.00239,"43":0.00956,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00956,"50":0,"51":0,"52":0.00478,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.00478,"59":0,"60":0,"61":0,"62":0,"63":0.00478,"64":0.00239,"65":0.00717,"66":0.00239,"67":0.00239,"68":0.00239,"69":0.00239,"70":0.00717,"71":0.00956,"72":0.00239,"73":0,"74":0,"75":0,"76":0.00478,"77":0,"78":0,"79":0.00478,"80":0.00478,"81":0.00239,"83":0.00478,"84":0.01196,"85":0.01913,"86":0.01913,"87":0.30366,"88":0.11477,"89":1.71913,"90":0.73643,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.00239,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00239,"27":0,"28":0,"29":0,"30":0.00478,"31":0,"32":0.00239,"33":0,"34":0,"35":0,"36":0,"37":0.06456,"38":0.00239,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00239,"47":0,"48":0,"49":0,"50":0.00717,"51":0.00717,"52":0,"53":0,"54":0.03108,"55":0.12672,"56":0.00239,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00239,"74":0.02152,"75":0.08129,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00239},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00086,"6.0-6.1":0,"7.0-7.1":0.00692,"8.1-8.4":0.00086,"9.0-9.2":0.01211,"9.3":0.1081,"10.0-10.2":0.03675,"10.3":0.09426,"11.0-11.2":0.05837,"11.3-11.4":0.15566,"12.0-12.1":0.14096,"12.2-12.4":0.43239,"13.0-13.1":0.17079,"13.2":0.03675,"13.3":0.30051,"13.4-13.7":0.41466,"14.0-14.4":2.01493,"14.5":0.0173},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00239,"12":0.00717,"13":0.00478,"14":0.04065,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.00717,"7.1":0,"9.1":0.00478,"10.1":0.00717,"11.1":0.00478,"12.1":0.00478,"13.1":0.03587,"14.1":0},B:{"12":0.00478,"13":0.01435,"14":0,"15":0.00239,"16":0.00239,"17":0.00717,"18":0.02152,"79":0,"80":0,"81":0,"83":0,"84":0.00239,"85":0,"86":0.02391,"87":0.00239,"88":0.01674,"89":0.15302,"90":0.09803},P:{"4":1.08039,"5.0-5.4":0.03029,"6.2-6.4":0.08078,"7.2-7.4":0.29282,"8.2":0.0101,"9.2":0.24233,"10.1":0.15146,"11.1-11.2":0.19185,"12.0":0.07068,"13.0":0.41398,"14.0":0.09087},I:{"0":0,"3":0,"4":0.00113,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01691,"4.2-4.3":0.0124,"4.4":0,"4.4.3-4.4.4":0.14998},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.07628,"9":0,"10":0,"11":0.44496,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":83.08343},S:{"2.5":0},R:{_:"0"},M:{"0":0.06087},Q:{"10.4":0},O:{"0":0.47937},H:{"0":2.65097}};


/***/ }),
/* 455 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01544,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00172,"30":0.00343,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00172,"47":0,"48":0.00172,"49":0,"50":0,"51":0.00172,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00172,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00172,"69":0,"70":0,"71":0.00172,"72":0.00343,"73":0,"74":0,"75":0.00343,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0.00172,"84":0,"85":0.00172,"86":0.00172,"87":0.00686,"88":0,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00343,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00686,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00172,"29":0,"30":0.00172,"31":0.00172,"32":0,"33":0.00172,"34":0.00343,"35":0,"36":0,"37":0.00172,"38":0.00343,"39":0,"40":0.01716,"41":0,"42":0.00343,"43":0,"44":0,"45":0,"46":0.00172,"47":0,"48":0,"49":0.0103,"50":0,"51":0,"52":0.02059,"53":0,"54":0,"55":0.00515,"56":0,"57":0,"58":0.00515,"59":0,"60":0.00172,"61":0,"62":0.00686,"63":0,"64":0.00172,"65":0.00172,"66":0,"67":0.00343,"68":0.00172,"69":0.02059,"70":0.00172,"71":0.00686,"72":0,"73":0,"74":0.00172,"75":0.00172,"76":0.00172,"77":0.00172,"78":0.00343,"79":0.00858,"80":0.01201,"81":0.0326,"83":0.00515,"84":0.00686,"85":0.02059,"86":0.01373,"87":0.01544,"88":0.07894,"89":1.4689,"90":0.08237,"91":0.00343,"92":0,"93":0},F:{"9":0,"11":0,"12":0.00515,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00172,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00343,"30":0,"31":0,"32":0,"33":0.00858,"34":0,"35":0,"36":0,"37":0.00343,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00686,"44":0.00172,"45":0,"46":0.00172,"47":0,"48":0,"49":0.00172,"50":0.00172,"51":0.01201,"52":0,"53":0.00172,"54":0.00686,"55":0.00172,"56":0,"57":0,"58":0,"60":0.0103,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0.00172,"71":0,"72":0,"73":0.00515,"74":0.00858,"75":0.00343,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00172},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00491,"6.0-6.1":0.02455,"7.0-7.1":0.27,"8.1-8.4":0.07434,"9.0-9.2":0.13325,"9.3":0.33452,"10.0-10.2":0.17042,"10.3":0.4327,"11.0-11.2":0.32681,"11.3-11.4":0.18444,"12.0-12.1":0.23283,"12.2-12.4":0.74618,"13.0-13.1":0.0561,"13.2":0.0547,"13.3":0.3219,"13.4-13.7":0.29805,"14.0-14.4":2.33393,"14.5":0.00281},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.00343,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0,"14.1":0},B:{"12":0.00172,"13":0,"14":0.00172,"15":0.00172,"16":0.00172,"17":0.00172,"18":0.00686,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.00172,"86":0,"87":0,"88":0.00172,"89":0.02402,"90":0},P:{"4":9.61048,"5.0-5.4":0.39412,"6.2-6.4":0.25264,"7.2-7.4":1.04088,"8.2":0.03032,"9.2":0.51539,"10.1":0.21222,"11.1-11.2":1.30363,"12.0":0.5356,"13.0":4.44649,"14.0":0.04042},I:{"0":0,"3":0,"4":0.00222,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02862,"4.2-4.3":0.11472,"4.4":0,"4.4.3-4.4.4":0.32959},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00351,"10":0,"11":0.1578,"5.5":0},J:{"7":0,"10":0.00828},N:{"10":0,"11":0},L:{"0":66.95187},S:{"2.5":0.02485},R:{_:"0"},M:{"0":0.02485},Q:{"10.4":0.00828},O:{"0":1.44142},H:{"0":0.31371}};


/***/ }),
/* 456 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.02186,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00437,"69":0,"70":0,"71":0,"72":0.00437,"73":0,"74":0,"75":0,"76":0,"77":0.00437,"78":0.02623,"79":0.00874,"80":0.00874,"81":0.00437,"82":0.00437,"83":0.00437,"84":0.05246,"85":0.00874,"86":0.03498,"87":0.5159,"88":0.19237,"89":0.00437,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00437,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00437,"39":0.00874,"40":0.00437,"41":0,"42":0.00437,"43":0.00437,"44":0,"45":0,"46":0.00437,"47":0.00437,"48":0,"49":0.11804,"50":0.00437,"51":0,"52":0,"53":0.00437,"54":0,"55":0.00437,"56":0.00874,"57":0,"58":0.00437,"59":0,"60":0.00437,"61":0,"62":0.00437,"63":0.00874,"64":0.00437,"65":0.00874,"66":0.00437,"67":0.00874,"68":0.00437,"69":0.00437,"70":0.00874,"71":0.00874,"72":0.00437,"73":0.00874,"74":0.00874,"75":0.00437,"76":0.00874,"77":0.01312,"78":0.02186,"79":0.02623,"80":0.05246,"81":0.04809,"83":0.05684,"84":0.04372,"85":0.05684,"86":0.08307,"87":0.44594,"88":0.27544,"89":9.3692,"90":3.58067,"91":0.00874,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00437,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00437,"55":0.00874,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.00437,"70":0.00437,"71":0.00437,"72":0,"73":0.5159,"74":0.17051,"75":0.5465,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00091,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03284,"6.0-6.1":0.00456,"7.0-7.1":0.05611,"8.1-8.4":0.00502,"9.0-9.2":0.00411,"9.3":0.15554,"10.0-10.2":0.00867,"10.3":0.11403,"11.0-11.2":0.03147,"11.3-11.4":0.03239,"12.0-12.1":0.04151,"12.2-12.4":0.1966,"13.0-13.1":0.02007,"13.2":0.01779,"13.3":0.07526,"13.4-13.7":0.3421,"14.0-14.4":2.92476,"14.5":0.04288},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00437,"13":0.09181,"14":0.10493,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00437,"12.1":0.00874,"13.1":0.02623,"14.1":0},B:{"12":0.00437,"13":0,"14":0.00437,"15":0.00437,"16":0.00437,"17":0.00874,"18":0.02186,"79":0,"80":0,"81":0,"83":0,"84":0.01749,"85":0.00437,"86":0,"87":0.00874,"88":0.00874,"89":0.53338,"90":0.2492},P:{"4":0.28425,"5.0-5.4":0.01015,"6.2-6.4":0.01015,"7.2-7.4":0.13197,"8.2":0.01015,"9.2":0.08121,"10.1":0.06091,"11.1-11.2":0.24364,"12.0":0.17258,"13.0":1.7461,"14.0":0.45683},I:{"0":0,"3":0,"4":0.00465,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01742,"4.2-4.3":0.01858,"4.4":0,"4.4.3-4.4.4":0.19744},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00547,"9":0,"10":0,"11":0.08198,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":72.37039},S:{"2.5":0},R:{_:"0"},M:{"0":0.09005},Q:{"10.4":0},O:{"0":0.16321},H:{"0":0.25043}};


/***/ }),
/* 457 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.02184,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00546,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00546,"48":0,"49":0,"50":0,"51":0,"52":0.49131,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.00546,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.08734,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0.00546,"77":0,"78":0.04913,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00546,"85":0.01638,"86":0.00546,"87":1.04267,"88":0.36575,"89":0.00546,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00546,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00546,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.01638,"57":0,"58":0.01092,"59":0,"60":0,"61":0,"62":0,"63":0.0273,"64":0,"65":0.00546,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00546,"74":0.00546,"75":0.01092,"76":0.04367,"77":0.00546,"78":0,"79":0.01092,"80":0.02184,"81":0.01638,"83":0,"84":0.01638,"85":0.00546,"86":0.01092,"87":0.07643,"88":0.10372,"89":8.47783,"90":3.11163,"91":0.00546,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00546,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.03275,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.02184,"75":0.06551,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.0764,"10.0-10.2":0,"10.3":0.04972,"11.0-11.2":0.02183,"11.3-11.4":0.21465,"12.0-12.1":0.03274,"12.2-12.4":0.46689,"13.0-13.1":0.03881,"13.2":0.67548,"13.3":1.91729,"13.4-13.7":0.71913,"14.0-14.4":7.08947,"14.5":0.03881},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00546,"13":0.01092,"14":0.93349,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.01638,"11.1":0.00546,"12.1":0.01638,"13.1":0.06551,"14.1":0},B:{"12":0.05459,"13":0.01638,"14":0.01092,"15":0.01092,"16":0.06551,"17":0.05459,"18":0.22382,"79":0,"80":0.03275,"81":0,"83":0,"84":0.01638,"85":0.03275,"86":0.01092,"87":0,"88":0.06551,"89":2.99153,"90":0.5459},P:{"4":0.18254,"5.0-5.4":0,"6.2-6.4":0.08113,"7.2-7.4":0.42592,"8.2":0.03042,"9.2":0.33465,"10.1":0.02028,"11.1-11.2":0.31437,"12.0":0.14197,"13.0":0.9634,"14.0":0.37522},I:{"0":0,"3":0,"4":0.00419,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.01817,"4.4":0,"4.4.3-4.4.4":0.09223},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.14093,"11":2.69775,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":58.66542},S:{"2.5":0},R:{_:"0"},M:{"0":0.02725},Q:{"10.4":0.11807},O:{"0":0.46772},H:{"0":1.08768}};


/***/ }),
/* 458 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00632,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00316,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.00316,"66":0,"67":0,"68":0.00632,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.01264,"78":0.00632,"79":0.00316,"80":0.00316,"81":0.00316,"82":0.00316,"83":0.00316,"84":0.00316,"85":0.00316,"86":0.01581,"87":0.18334,"88":0.0727,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.03793,"23":0,"24":0,"25":0.00316,"26":0.00948,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.01581,"35":0,"36":0,"37":0,"38":0.02529,"39":0.00316,"40":0,"41":0,"42":0.00316,"43":0.00316,"44":0,"45":0,"46":0.00316,"47":0.01581,"48":0.00316,"49":0.08219,"50":0,"51":0.01581,"52":0,"53":0.02213,"54":0,"55":0,"56":0.00316,"57":0,"58":0.00316,"59":0.00316,"60":0,"61":0.00632,"62":0.00316,"63":0.00632,"64":0,"65":0.00316,"66":0.00316,"67":0.00316,"68":0.01264,"69":0.00316,"70":0.00316,"71":0.01264,"72":0.00316,"73":0.00316,"74":0.00632,"75":0.00632,"76":0.00632,"77":0.00632,"78":0.00948,"79":0.02213,"80":0.01897,"81":0.03161,"83":0.03477,"84":0.03161,"85":0.02845,"86":0.04425,"87":0.06322,"88":0.10431,"89":4.64035,"90":2.11471,"91":0.00316,"92":0.00316,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00316,"32":0.00316,"33":0,"34":0,"35":0,"36":0.00316,"37":0,"38":0,"39":0,"40":0.01264,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00632,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00948,"55":0.02845,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00632,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.00316,"72":0,"73":0.17702,"74":0.06954,"75":0.2434,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00736,"6.0-6.1":0.00736,"7.0-7.1":0.12357,"8.1-8.4":0.02059,"9.0-9.2":0.01177,"9.3":0.25302,"10.0-10.2":0.04119,"10.3":0.23978,"11.0-11.2":0.08973,"11.3-11.4":0.13681,"12.0-12.1":0.08238,"12.2-12.4":0.52369,"13.0-13.1":0.05002,"13.2":0.01912,"13.3":0.18535,"13.4-13.7":0.63255,"14.0-14.4":9.9575,"14.5":0.19418},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00632,"14":0.19914,_:"0","3.1":0,"3.2":0,"5.1":0.12012,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00316,"11.1":0.00316,"12.1":0.00632,"13.1":0.02529,"14.1":0.00632},B:{"12":0,"13":0.00316,"14":0.00316,"15":0.00316,"16":0,"17":0.00316,"18":0.01264,"79":0,"80":0,"81":0,"83":0,"84":0.00316,"85":0.00316,"86":0.00316,"87":0.00316,"88":0.00316,"89":0.29081,"90":0.12644},P:{"4":0.79645,"5.0-5.4":0.05105,"6.2-6.4":0.03063,"7.2-7.4":0.21443,"8.2":0.03063,"9.2":0.16337,"10.1":0.08169,"11.1-11.2":0.34717,"12.0":0.25527,"13.0":3.33898,"14.0":1.29679},I:{"0":0,"3":0,"4":0.00095,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00987,"4.2-4.3":0.03819,"4.4":0,"4.4.3-4.4.4":0.08943},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00316,"10":0,"11":0.17386,"5.5":0},J:{"7":0,"10":0.00684},N:{"10":0,"11":0},L:{"0":66.65585},S:{"2.5":0.00684},R:{_:"0"},M:{"0":0.21201},Q:{"10.4":0},O:{"0":0.12994},H:{"0":0.6151}};


/***/ }),
/* 459 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00988,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00494,"49":0,"50":0,"51":0,"52":0.00988,"53":0.01976,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00494,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01482,"79":0,"80":0,"81":0,"82":0.00494,"83":0.00494,"84":0.00494,"85":0.00494,"86":0.01976,"87":0.51386,"88":0.2174,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00494,"39":0,"40":0,"41":0.01482,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00494,"48":0.00988,"49":0.07412,"50":0.00988,"51":0,"52":0,"53":0.00494,"54":0,"55":0.00494,"56":0.00494,"57":0.00494,"58":0.01976,"59":0.00494,"60":0,"61":0,"62":0,"63":0.00494,"64":0,"65":0.00988,"66":0.00494,"67":0.00988,"68":0.00494,"69":0.00494,"70":0.00494,"71":0.00494,"72":0,"73":0,"74":0.07906,"75":0.01482,"76":0.03953,"77":0.00494,"78":0.00494,"79":0.01482,"80":0.01976,"81":0.06917,"83":0.00988,"84":0.01976,"85":0.01976,"86":0.03459,"87":0.15811,"88":0.20752,"89":9.74859,"90":4.61984,"91":0.00988,"92":0.00494,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00494,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00494,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00494,"55":0.00494,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00988,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.14329,"74":0.07906,"75":0.2767,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00293,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03374,"6.0-6.1":0.01027,"7.0-7.1":0.18041,"8.1-8.4":0,"9.0-9.2":0.00587,"9.3":0.36083,"10.0-10.2":0.01027,"10.3":0.21268,"11.0-11.2":0.03227,"11.3-11.4":0.06014,"12.0-12.1":0.05134,"12.2-12.4":0.16721,"13.0-13.1":0.04547,"13.2":0.01173,"13.3":0.15255,"13.4-13.7":0.59552,"14.0-14.4":11.71817,"14.5":0.17601},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00494,"12":0.00494,"13":0.01482,"14":1.15125,_:"0","3.1":0,"3.2":0,"5.1":0.07412,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00494,"11.1":0.13341,"12.1":0.03459,"13.1":0.13341,"14.1":0.01976},B:{"12":0,"13":0,"14":0.00494,"15":0.00988,"16":0.00988,"17":0.00494,"18":0.07412,"79":0,"80":0.00494,"81":0,"83":0,"84":0.00494,"85":0.01976,"86":0.00494,"87":0.00988,"88":0.01482,"89":1.83311,"90":1.03267},P:{"4":0.21853,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.21853,"8.2":0.01093,"9.2":0.15297,"10.1":0.04371,"11.1-11.2":0.33873,"12.0":0.17483,"13.0":3.1906,"14.0":1.80291},I:{"0":0,"3":0,"4":0.03543,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03543,"4.2-4.3":0.16535,"4.4":0,"4.4.3-4.4.4":1.83066},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.00494,"11":0.13341,"5.5":0},J:{"7":0,"10":0.00506},N:{"10":0,"11":0},L:{"0":52.74178},S:{"2.5":0},R:{_:"0"},M:{"0":0.12648},Q:{"10.4":0.02024},O:{"0":0.06071},H:{"0":0.24906}};


/***/ }),
/* 460 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0.05966,"88":0.35301,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.20882,"49":0,"50":0.65133,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.02983,"72":0,"73":0,"74":0,"75":0.02983,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0.26849,"83":0,"84":0.14916,"85":0,"86":0.05966,"87":0.532,"88":0,"89":8.9148,"90":5.18082,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.26849,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0.59587,"13.0-13.1":0.10834,"13.2":0,"13.3":0,"13.4-13.7":0.16251,"14.0-14.4":0.48753,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.02983,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.532,"12.1":0.20882,"13.1":0.38284,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.26849,"18":0.14916,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0.02983,"87":0.02983,"88":0,"89":1.30266,"90":2.10316},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.30587,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0.06117,"14.0":0},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.66536},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.04873,"7":0,"8":0.91781,"9":0,"10":0.09747,"11":0,"5.5":0},J:{"7":0,"10":0.12067},N:{"10":0,"11":0},L:{"0":73.96164},S:{"2.5":0},R:{_:"0"},M:{"0":0},Q:{"10.4":0},O:{"0":0.30671},H:{"0":0}};


/***/ }),
/* 461 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00913,"34":0.0137,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.0137,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00457,"69":0,"70":0,"71":0,"72":0.00457,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00913,"79":0,"80":0,"81":0.00457,"82":0,"83":0.00457,"84":0.00913,"85":0.00913,"86":0.01826,"87":0.42007,"88":0.15981,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00913,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00457,"23":0,"24":0,"25":0,"26":0.00457,"27":0,"28":0,"29":0,"30":0.00457,"31":0,"32":0,"33":0,"34":0.0137,"35":0.00457,"36":0,"37":0,"38":0.05936,"39":0.00457,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00457,"46":0,"47":0.00457,"48":0,"49":0.13241,"50":0.00457,"51":0,"52":0,"53":0.15981,"54":0,"55":0.00913,"56":0.00913,"57":0,"58":0.00457,"59":0.00457,"60":0.00457,"61":0.04566,"62":0.00457,"63":0.00457,"64":0.0137,"65":0.00913,"66":0.00913,"67":0.0137,"68":0.05023,"69":0.00913,"70":0.00913,"71":0.01826,"72":0.00913,"73":0.0137,"74":0.00913,"75":0.0137,"76":0.00913,"77":0.00913,"78":0.00913,"79":0.02283,"80":0.02283,"81":0.05936,"83":0.02283,"84":0.02283,"85":0.02283,"86":0.08675,"87":0.12785,"88":0.26939,"89":9.73928,"90":3.51582,"91":0.00913,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00457,"37":0.02283,"38":0,"39":0,"40":0.00457,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01826,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00457,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.00457,"74":0.01826,"75":0.04566,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00376,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00376,"5.0-5.1":0.04885,"6.0-6.1":0.02255,"7.0-7.1":0.24801,"8.1-8.4":0.09019,"9.0-9.2":0.04509,"9.3":0.47348,"10.0-10.2":0.08267,"10.3":0.481,"11.0-11.2":0.21419,"11.3-11.4":0.25177,"12.0-12.1":0.52985,"12.2-12.4":1.16491,"13.0-13.1":0.48475,"13.2":0.20668,"13.3":0.98454,"13.4-13.7":2.49141,"14.0-14.4":28.58927,"14.5":0.14655},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00457,"9":0,"10":0,"11":0.00457,"12":0.00913,"13":0.10045,"14":1.5707,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00457,"10.1":0.0137,"11.1":0.02283,"12.1":0.04109,"13.1":0.242,"14.1":0.00913},B:{"12":0,"13":0,"14":0.00457,"15":0.00457,"16":0.00457,"17":0.00913,"18":0.0274,"79":0,"80":0,"81":0,"83":0,"84":0.00457,"85":0.00457,"86":0.00457,"87":0.00457,"88":0.00913,"89":0.75339,"90":0.33332},P:{"4":0.52813,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.04311,"8.2":0.03233,"9.2":0.14012,"10.1":0.06467,"11.1-11.2":0.23712,"12.0":0.22634,"13.0":1.94007,"14.0":0.70058},I:{"0":0,"3":0,"4":0.00144,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00431,"4.2-4.3":0.01725,"4.4":0,"4.4.3-4.4.4":0.10636},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00571,"9":0,"10":0,"11":0.19976,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":37.74922},S:{"2.5":0},R:{_:"0"},M:{"0":0.10325},Q:{"10.4":0.01087},O:{"0":0.10868},H:{"0":0.45272}};


/***/ }),
/* 462 */
/***/ ((module) => {

module.exports={C:{"6":0.00511,"15":0.00256,"17":0.00511,"23":0.00256,"24":0.01022,"26":0.00511,"28":0.00511,"29":0.00256,"30":0.00256,"31":0.00511,"32":0.00511,"33":0.00256,"34":0.00511,"35":0.00511,"37":0.00256,"38":0.00767,"40":0.00511,"41":0.00511,"42":0.00767,"43":0.01022,"44":0.00511,"45":0.00511,"46":0.00256,"47":0.01022,"48":0.00511,"49":0.01022,"52":0.01789,"56":0.01022,"57":0.00256,"58":0.00511,"59":0.00511,"60":0.00767,"61":0.01022,"66":0.01278,"68":0.01278,"70":0.00767,"71":0.00256,"72":0.023,"76":0.00256,"77":0.01022,"78":0.08946,"79":0.00511,"80":0.00256,"81":0.00767,"82":0.00767,"83":0.00767,"84":0.02045,"85":0.04856,"86":0.11758,"87":1.57961,"88":0.79236,"89":0.0409,_:"2 3 4 5 7 8 9 10 11 12 13 14 16 18 19 20 21 22 25 27 36 39 50 51 53 54 55 62 63 64 65 67 69 73 74 75 90 3.5 3.6"},D:{"11":0.00256,"21":0.00511,"23":0.00511,"24":0.00256,"25":0.00256,"32":0.00256,"33":0.00256,"38":0.00256,"39":0.00256,"40":0.00256,"42":0.00256,"43":0.01022,"47":0.00256,"49":0.03578,"50":0.00256,"55":0.00511,"57":0.01022,"58":0.00511,"60":0.00767,"62":0.00511,"63":0.02556,"64":0.00256,"65":0.01278,"67":0.01278,"68":0.00511,"69":0.00767,"70":0.01022,"71":0.01534,"72":0.01278,"73":0.00767,"74":0.01534,"75":0.01022,"76":0.00511,"77":0.01278,"78":0.02045,"79":0.08435,"80":0.02045,"81":0.01534,"83":0.07668,"84":0.09457,"85":0.03834,"86":0.06646,"87":0.18659,"88":0.41152,"89":7.4124,"90":3.2819,"91":0.02556,"92":0.00767,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 22 26 27 28 29 30 31 34 35 36 37 41 44 45 46 48 51 52 53 54 56 59 61 66 93"},F:{"42":0.00256,"60":0.00511,"63":0.01534,"67":0.00256,"72":0.00767,"73":0.05623,"74":0.22748,"75":0.96106,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 62 64 65 66 68 69 70 71 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00096,"5.0-5.1":0.00336,"6.0-6.1":0.0024,"7.0-7.1":0.02978,"8.1-8.4":0,"9.0-9.2":0.01153,"9.3":0.09941,"10.0-10.2":0.00576,"10.3":0.12006,"11.0-11.2":0.07108,"11.3-11.4":0.07876,"12.0-12.1":0.09989,"12.2-12.4":0.40726,"13.0-13.1":0.05907,"13.2":0.02353,"13.3":0.17193,"13.4-13.7":0.38757,"14.0-14.4":2.53144,"14.5":0.03506},E:{"4":0,"11":0.00256,"12":0.01022,"13":0.023,"14":0.33228,_:"0 5 6 7 8 9 10 3.1 3.2 5.1 6.1 7.1","9.1":0.00256,"10.1":0.01022,"11.1":0.01789,"12.1":0.04345,"13.1":0.19426,"14.1":0.00767},B:{"12":0.0409,"13":0.03323,"14":0.01534,"15":0.01789,"16":0.03323,"17":0.023,"18":0.13036,"84":0.01278,"85":0.03067,"86":0.023,"87":0.01534,"88":0.03323,"89":0.97639,"90":0.35017,_:"79 80 81 83"},P:{"4":0.35824,"5.0-5.4":0.03071,"6.2-6.4":0.01024,"7.2-7.4":0.13306,"8.2":0.05012,"9.2":0.19447,"10.1":0.04094,"11.1-11.2":0.24565,"12.0":0.12283,"13.0":0.85978,"14.0":0.29683},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00472,"4.2-4.3":0.01652,"4.4":0,"4.4.3-4.4.4":0.13509},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.0047,"11":0.3148,_:"6 7 9 10 5.5"},J:{"7":0,"10":0.02233},N:{"10":0,"11":0.01111},L:{"0":49.99692},S:{"2.5":0.3052},R:{_:"0"},M:{"0":0.14144},Q:{"10.4":0.05211},O:{"0":1.9801},H:{"0":19.94442}};


/***/ }),
/* 463 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0.00671,"4":0.00671,"5":0.00671,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00671,"16":0,"17":0.00671,"18":0,"19":0,"20":0.0738,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01342,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.03355,"46":0,"47":0.00671,"48":0.00671,"49":0,"50":0.00671,"51":0.00671,"52":0.20127,"53":0,"54":0.00671,"55":0,"56":0.04025,"57":0.01342,"58":0.00671,"59":0.00671,"60":0.11405,"61":0.00671,"62":0.00671,"63":0.00671,"64":0,"65":0.00671,"66":0.01342,"67":0.00671,"68":0.24152,"69":0.00671,"70":0.00671,"71":0,"72":0.00671,"73":0,"74":0.00671,"75":0.00671,"76":0.00671,"77":0.01342,"78":0.12747,"79":0.02013,"80":0.02013,"81":0.02013,"82":0.04696,"83":0.02684,"84":0.10734,"85":0.03355,"86":0.0738,"87":1.38205,"88":0.53001,"89":0.00671,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00671,"24":0.00671,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.02013,"42":0,"43":0,"44":0,"45":0,"46":0.00671,"47":0,"48":0.00671,"49":0.57027,"50":0.00671,"51":0.01342,"52":0.00671,"53":0.01342,"54":0,"55":0.00671,"56":0.00671,"57":0.01342,"58":0.01342,"59":0.02013,"60":0.01342,"61":0.17443,"62":0.00671,"63":0.02013,"64":0.00671,"65":0.01342,"66":0.00671,"67":0.01342,"68":0.02684,"69":0.01342,"70":0.02013,"71":0.02013,"72":0.02684,"73":0.04025,"74":0.02684,"75":0.02684,"76":0.02013,"77":0.02684,"78":0.04696,"79":0.21469,"80":0.06709,"81":0.12076,"83":0.12747,"84":0.15431,"85":0.16102,"86":0.35558,"87":0.69103,"88":0.77154,"89":17.60442,"90":6.93711,"91":0.02684,"92":0.01342,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.06038,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00671,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00671,"51":0.00671,"52":0,"53":0.00671,"54":0.02013,"55":0.04025,"56":0,"57":0,"58":0.02013,"60":0.00671,"62":0.00671,"63":0.05367,"64":0.00671,"65":0.00671,"66":0.02013,"67":0.00671,"68":0.00671,"69":0.00671,"70":0.02013,"71":0.02013,"72":0.02684,"73":1.10028,"74":1.37535,"75":4.72314,"9.5-9.6":0.01342,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.04025},G:{"8":0.00306,"3.2":0.00204,"4.0-4.1":0,"4.2-4.3":0.00511,"5.0-5.1":0.01022,"6.0-6.1":0.01737,"7.0-7.1":0.03576,"8.1-8.4":0.01941,"9.0-9.2":0.0143,"9.3":0.12463,"10.0-10.2":0.02963,"10.3":0.12668,"11.0-11.2":0.0664,"11.3-11.4":0.07355,"12.0-12.1":0.09194,"12.2-12.4":0.28298,"13.0-13.1":0.06436,"13.2":0.04291,"13.3":0.18695,"13.4-13.7":0.615,"14.0-14.4":7.91122,"14.5":0.13179},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00671,"12":0.01342,"13":0.06038,"14":1.09357,_:"0","3.1":0,"3.2":0,"5.1":0.20127,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00671,"11.1":0.01342,"12.1":0.04025,"13.1":0.20798,"14.1":0.03355},B:{"12":0.00671,"13":0,"14":0.00671,"15":0.01342,"16":0.00671,"17":0.00671,"18":0.04025,"79":0,"80":0,"81":0.00671,"83":0.00671,"84":0.02013,"85":0.00671,"86":0.00671,"87":0.04025,"88":0.01342,"89":0.53001,"90":0.2214},P:{"4":0.0612,"5.0-5.4":0.0204,"6.2-6.4":0,"7.2-7.4":0.0306,"8.2":0,"9.2":0.0204,"10.1":0.0408,"11.1-11.2":0.0918,"12.0":0.0612,"13.0":0.71397,"14.0":0.29579},I:{"0":0,"3":0,"4":0.00409,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00818,"4.2-4.3":0.02453,"4.4":0,"4.4.3-4.4.4":0.14308},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01394,"9":0,"10":0.00697,"11":0.33466,"5.5":0},J:{"7":0,"10":0.00329},N:{"10":0,"11":0},L:{"0":36.96368},S:{"2.5":0.00329},R:{_:"0"},M:{"0":0.16126},Q:{"10.4":0.00987},O:{"0":0.51669},H:{"0":2.74805}};


/***/ }),
/* 464 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00358,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.00358,"28":0,"29":0,"30":0,"31":0.00358,"32":0,"33":0.00358,"34":0.00358,"35":0.00358,"36":0,"37":0,"38":0,"39":0.00358,"40":0.00358,"41":0.00358,"42":0.00358,"43":0.00358,"44":0.00358,"45":0.00358,"46":0,"47":0.00716,"48":0.00358,"49":0.00358,"50":0.00358,"51":0,"52":0.01431,"53":0,"54":0,"55":0.00358,"56":0.00716,"57":0.00358,"58":0.00716,"59":0,"60":0.00358,"61":0.00358,"62":0.00358,"63":0,"64":0.00358,"65":0,"66":0.00358,"67":0.00358,"68":0.0322,"69":0,"70":0.00358,"71":0.01073,"72":0.02862,"73":0,"74":0.00358,"75":0.00358,"76":0.01431,"77":0.00358,"78":0.05725,"79":0.00358,"80":0.00716,"81":0.00358,"82":0.01073,"83":0.01073,"84":0.02147,"85":0.02862,"86":0.31486,"87":1.0734,"88":0.55817,"89":0.05009,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.00716,"20":0,"21":0,"22":0,"23":0,"24":0.00358,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01073,"39":0,"40":0.01073,"41":0,"42":0,"43":0.00358,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01431,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00358,"56":0.00716,"57":0.00716,"58":0.00358,"59":0,"60":0,"61":0,"62":0.00358,"63":0.01073,"64":0.01431,"65":0.00358,"66":0,"67":0,"68":0.00358,"69":0.00358,"70":0.00358,"71":0.00716,"72":0.01073,"73":0.00358,"74":0.00716,"75":0.01073,"76":0.01431,"77":0.00358,"78":0.01431,"79":0.02505,"80":0.04651,"81":0.02147,"83":0.01073,"84":0.02147,"85":0.01789,"86":0.02862,"87":0.10376,"88":0.15028,"89":4.4725,"90":1.79616,"91":0.00358,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.01073,"17":0,"18":0,"19":0,"20":0.00358,"21":0,"22":0,"23":0.00716,"24":0.01073,"25":0,"26":0.01073,"27":0.00358,"28":0.00716,"29":0,"30":0.00716,"31":0.00358,"32":0.01431,"33":0.00716,"34":0.00358,"35":0,"36":0,"37":0,"38":0.01789,"39":0,"40":0,"41":0,"42":0.00716,"43":0,"44":0,"45":0.00358,"46":0.03936,"47":0.07872,"48":0,"49":0,"50":0.05009,"51":0.08229,"52":0,"53":0.00358,"54":0.41505,"55":0.5045,"56":0,"57":0.00358,"58":0.00358,"60":0,"62":0.00716,"63":0.02505,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01073,"74":0.08945,"75":0.35422,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.08945},G:{"8":0.00053,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00105,"5.0-5.1":0.01366,"6.0-6.1":0.0042,"7.0-7.1":0.04624,"8.1-8.4":0.00105,"9.0-9.2":0.00788,"9.3":0.09143,"10.0-10.2":0.00998,"10.3":0.11402,"11.0-11.2":0.11665,"11.3-11.4":0.09038,"12.0-12.1":0.0557,"12.2-12.4":0.25326,"13.0-13.1":0.04834,"13.2":0.01944,"13.3":0.18338,"13.4-13.7":0.56853,"14.0-14.4":3.1185,"14.5":0.0578},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00358,"13":0.01073,"14":0.12165,_:"0","3.1":0,"3.2":0,"5.1":0.00716,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00358,"11.1":0.00358,"12.1":0.00716,"13.1":0.02505,"14.1":0.00358},B:{"12":0.01789,"13":0.00716,"14":0.00716,"15":0.01789,"16":0.01073,"17":0.01431,"18":0.06798,"79":0,"80":0,"81":0.00358,"83":0,"84":0.01073,"85":0.01073,"86":0.00358,"87":0.00358,"88":0.01073,"89":0.45441,"90":0.18248},P:{"4":0.31229,"5.0-5.4":0.03022,"6.2-6.4":0.01007,"7.2-7.4":0.06044,"8.2":0.01007,"9.2":0.13096,"10.1":0.06044,"11.1-11.2":0.12088,"12.0":0.07052,"13.0":0.56413,"14.0":0.17125},I:{"0":0,"3":0,"4":0.0005,"2.1":0.00149,"2.2":0,"2.3":0,"4.1":0.00249,"4.2-4.3":0.00795,"4.4":0,"4.4.3-4.4.4":0.19335},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01137,"9":0,"10":0.00568,"11":0.07956,"5.5":0},J:{"7":0,"10":0.01927},N:{"10":0,"11":0},L:{"0":51.83034},S:{"2.5":0.18624},R:{_:"0"},M:{"0":0.16697},Q:{"10.4":0.00642},O:{"0":0.84128},H:{"0":19.85707}};


/***/ }),
/* 465 */
/***/ ((module) => {

module.exports={C:{"2":0.01025,"3":0.01025,"4":0.0205,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01025,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00512,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.05124,"34":0,"35":0,"36":0,"37":0,"38":0.00512,"39":0,"40":0,"41":0,"42":0,"43":0.00512,"44":0.01025,"45":0.00512,"46":0,"47":0,"48":0.00512,"49":0,"50":0,"51":0,"52":0.0205,"53":0,"54":0.00512,"55":0,"56":0.00512,"57":0,"58":0.00512,"59":0.00512,"60":0.00512,"61":0,"62":0,"63":0.00512,"64":0,"65":0.00512,"66":0.00512,"67":0,"68":0.01537,"69":0,"70":0.00512,"71":0,"72":0.00512,"73":0,"74":0,"75":0,"76":0.00512,"77":0.00512,"78":0.08198,"79":0.00512,"80":0.00512,"81":0.01025,"82":0.01537,"83":0.01025,"84":0.0205,"85":0.02562,"86":0.06149,"87":0.89158,"88":0.33818,"89":0.00512,"90":0,"3.5":0.00512,"3.6":0.00512},D:{"4":0.00512,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00512,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00512,"30":0,"31":0,"32":0,"33":0.00512,"34":0,"35":0.01537,"36":0,"37":0,"38":0.00512,"39":0,"40":0.01025,"41":0,"42":0,"43":0.00512,"44":0,"45":0,"46":0,"47":0.00512,"48":0.02562,"49":0.10248,"50":0,"51":0,"52":0.00512,"53":0.00512,"54":0,"55":0,"56":0.05124,"57":0,"58":0.01025,"59":0.00512,"60":0.01025,"61":0.12298,"62":0.00512,"63":0.01025,"64":0.01537,"65":0.01025,"66":0.02562,"67":0.0205,"68":0.01025,"69":0.01025,"70":0.0205,"71":0.00512,"72":0.02562,"73":0.01025,"74":0.04099,"75":0.07686,"76":0.08711,"77":0.03587,"78":0.07686,"79":0.07174,"80":0.07174,"81":0.05636,"83":0.06149,"84":0.11785,"85":0.13322,"86":0.20496,"87":0.40992,"88":0.78397,"89":8.65444,"90":3.00779,"91":0.01537,"92":0.0205,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00512,"55":0.00512,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00512,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.07174,"74":0.04099,"75":0.13322,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00863,"6.0-6.1":0.02156,"7.0-7.1":0.04313,"8.1-8.4":0.03882,"9.0-9.2":0.04744,"9.3":0.24152,"10.0-10.2":0.05175,"10.3":0.28034,"11.0-11.2":0.12076,"11.3-11.4":0.15958,"12.0-12.1":0.1682,"12.2-12.4":0.55205,"13.0-13.1":0.1682,"13.2":0.08195,"13.3":0.43992,"13.4-13.7":1.55696,"14.0-14.4":37.57825,"14.5":0.49598},E:{"4":0.00512,"5":0,"6":0,"7":0,"8":0.6405,"9":0.00512,"10":0,"11":0.00512,"12":0.01537,"13":0.08198,"14":3.02828,_:"0","3.1":0,"3.2":0,"5.1":0.00512,"6.1":0,"7.1":0,"9.1":0.08711,"10.1":0.0205,"11.1":0.06661,"12.1":0.1076,"13.1":0.44579,"14.1":0.06149},B:{"12":0.01025,"13":0,"14":0.00512,"15":0.00512,"16":0.00512,"17":0.01025,"18":0.07686,"79":0,"80":0.00512,"81":0,"83":0.00512,"84":0.00512,"85":0.01025,"86":0.01025,"87":0.01537,"88":0.0205,"89":1.86001,"90":0.84546},P:{"4":0.05224,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.03135,"10.1":0.0209,"11.1-11.2":0.08359,"12.0":0.06269,"13.0":1.28517,"14.0":0.65826},I:{"0":0,"3":0,"4":0.13078,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03846,"4.2-4.3":0.23848,"4.4":0,"4.4.3-4.4.4":0.40773},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0.00562,"8":0.00562,"9":0.1517,"10":0.00562,"11":0.47195,"5.5":0},J:{"7":0,"10":0.00488},N:{"10":0,"11":0},L:{"0":27.38076},S:{"2.5":0.00488},R:{_:"0"},M:{"0":0.39496},Q:{"10.4":0.0195},O:{"0":0.19504},H:{"0":0.2262}};


/***/ }),
/* 466 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01042,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00521,"48":0,"49":0.00521,"50":0,"51":0,"52":0.05211,"53":0.00521,"54":0.00521,"55":0.00521,"56":0,"57":0.01563,"58":0,"59":0,"60":0.00521,"61":0.01042,"62":0.00521,"63":0,"64":0,"65":0,"66":0.03127,"67":0,"68":0.01042,"69":0,"70":0,"71":0.00521,"72":0,"73":0.02606,"74":0,"75":0,"76":0,"77":0,"78":0.04169,"79":0.00521,"80":0,"81":0.00521,"82":0.00521,"83":0.01042,"84":0.01563,"85":0.01042,"86":0.05211,"87":1.07347,"88":0.51068,"89":0.00521,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.02084,"37":0,"38":0.01042,"39":0,"40":0,"41":0,"42":0,"43":0.00521,"44":0,"45":0,"46":0.00521,"47":0.00521,"48":0.01042,"49":0.13549,"50":0,"51":0,"52":0.00521,"53":0.01042,"54":0.00521,"55":0.00521,"56":0,"57":0.00521,"58":0.00521,"59":0,"60":0.00521,"61":0,"62":0.01563,"63":0.01042,"64":0,"65":0.01042,"66":0.01042,"67":0.00521,"68":0.00521,"69":0.01563,"70":0.01042,"71":0.02084,"72":0.01563,"73":0.01042,"74":0.02084,"75":0.01563,"76":0.02606,"77":0.02606,"78":0.01042,"79":0.03648,"80":0.19281,"81":0.0469,"83":0.03648,"84":0.03648,"85":0.04169,"86":0.92756,"87":0.24492,"88":0.51589,"89":12.75653,"90":5.82069,"91":0.00521,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00521,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00521,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.58363,"74":0.08338,"75":0.3804,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0.00879,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.05821,"6.0-6.1":0.00329,"7.0-7.1":0.04173,"8.1-8.4":0.0022,"9.0-9.2":0.00439,"9.3":0.05272,"10.0-10.2":0.01098,"10.3":0.07358,"11.0-11.2":0.01647,"11.3-11.4":0.03954,"12.0-12.1":0.03185,"12.2-12.4":0.22295,"13.0-13.1":0.01647,"13.2":0.00439,"13.3":0.14826,"13.4-13.7":0.5052,"14.0-14.4":8.73335,"14.5":0.14168},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00521,"13":0.01563,"14":0.44815,_:"0","3.1":0,"3.2":0,"5.1":0.11464,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.01042,"12.1":0.0469,"13.1":0.12506,"14.1":0.01563},B:{"12":0.01042,"13":0.00521,"14":0.00521,"15":0.00521,"16":0.00521,"17":0.00521,"18":0.04169,"79":0,"80":0.01042,"81":0,"83":0,"84":0.00521,"85":0.00521,"86":0.00521,"87":0,"88":0.01042,"89":0.79207,"90":0.41167},P:{"4":0.08172,"5.0-5.4":0,"6.2-6.4":0.02043,"7.2-7.4":0.09194,"8.2":0,"9.2":0.09194,"10.1":0.17366,"11.1-11.2":0.20431,"12.0":0.20431,"13.0":1.12369,"14.0":0.69464},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02941,"4.2-4.3":0.04118,"4.4":0,"4.4.3-4.4.4":0.40589},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00521,"10":0,"11":0.16675,"5.5":0},J:{"7":0,"10":0.00479},N:{"10":0,"11":0},L:{"0":58.09464},S:{"2.5":0.00479},R:{_:"0"},M:{"0":0.20114},Q:{"10.4":0},O:{"0":0.02395},H:{"0":0.14509}};


/***/ }),
/* 467 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.17074,"44":0,"45":0.00438,"46":0,"47":0.00438,"48":0.00438,"49":0.00438,"50":0,"51":0,"52":0.01751,"53":0,"54":0.00438,"55":0.00438,"56":0.00876,"57":0.00438,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00876,"69":0,"70":0,"71":0,"72":0.20139,"73":0,"74":0,"75":0,"76":0,"77":0.00438,"78":0.03065,"79":0.37213,"80":0,"81":0.01313,"82":0.01313,"83":0.00438,"84":0.00876,"85":0.00438,"86":0.01313,"87":0.40715,"88":0.16199,"89":0.00876,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00438,"31":0,"32":0,"33":0,"34":0.00438,"35":0,"36":0,"37":0,"38":0,"39":0.00438,"40":0.00438,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.10507,"50":0,"51":0,"52":0,"53":0.00438,"54":0,"55":0,"56":0.02189,"57":0,"58":0,"59":0.00438,"60":0,"61":0,"62":0,"63":0.00438,"64":0.00438,"65":0,"66":0.02189,"67":0.01313,"68":0.00438,"69":0.00438,"70":0.00876,"71":0.02627,"72":0.02189,"73":0.00876,"74":0.30208,"75":0.00438,"76":0.00876,"77":0.00876,"78":0.00438,"79":0.03065,"80":0.01313,"81":0.03065,"83":0.05691,"84":0.03502,"85":0.02627,"86":0.11821,"87":0.13572,"88":0.30208,"89":7.95483,"90":3.44549,"91":0.01751,"92":0.00438,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00876,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.00438,"43":0.00438,"44":0.00438,"45":0.01313,"46":0,"47":0,"48":0.00438,"49":0.00438,"50":0,"51":0.00438,"52":0,"53":0.0394,"54":0.00876,"55":0.00876,"56":0.00438,"57":0.0394,"58":0.00876,"60":0.02189,"62":0.02189,"63":0.01313,"64":0.01751,"65":0.00876,"66":0.02189,"67":0.00876,"68":0.01751,"69":0.00438,"70":0.21452,"71":0.00876,"72":0.03065,"73":0.04816,"74":0.03502,"75":0.02189,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00068,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00068,"5.0-5.1":0.00609,"6.0-6.1":0.00068,"7.0-7.1":0.06501,"8.1-8.4":0.00406,"9.0-9.2":0.0088,"9.3":0.09954,"10.0-10.2":0.01557,"10.3":0.13814,"11.0-11.2":0.0535,"11.3-11.4":0.11376,"12.0-12.1":0.05011,"12.2-12.4":0.23701,"13.0-13.1":0.04131,"13.2":0.02031,"13.3":0.1334,"13.4-13.7":0.39411,"14.0-14.4":4.67917,"14.5":0.1185},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00876,"14":0.23203,_:"0","3.1":0,"3.2":0,"5.1":0.90187,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00438,"12.1":0.00876,"13.1":0.04378,"14.1":0.01313},B:{"12":0.00438,"13":0,"14":0.00438,"15":0.00876,"16":0.00438,"17":0.00876,"18":0.05691,"79":0,"80":0,"81":0,"83":0,"84":0.00876,"85":0.00876,"86":0.00438,"87":0.00438,"88":0.00438,"89":0.26706,"90":0.11821},P:{"4":1.1395,"5.0-5.4":0.10084,"6.2-6.4":0.27227,"7.2-7.4":0.45378,"8.2":0.04034,"9.2":0.2521,"10.1":0.12101,"11.1-11.2":0.56471,"12.0":0.31261,"13.0":2.26891,"14.0":0.53445},I:{"0":0,"3":0,"4":0.00435,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00761,"4.2-4.3":0.02064,"4.4":0,"4.4.3-4.4.4":0.10865},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.01035,"9":0.01035,"10":0,"11":0.20696,"5.5":0},J:{"7":0,"10":0.00562},N:{"10":0,"11":0.01687},L:{"0":58.6354},S:{"2.5":0},R:{_:"0"},M:{"0":0.06184},Q:{"10.4":0.00562},O:{"0":4.10406},H:{"0":0.36726}};


/***/ }),
/* 468 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00967,"34":0,"35":0,"36":0,"37":0,"38":0.00967,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00967,"53":0,"54":0,"55":0.0677,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0.00967,"67":0,"68":0,"69":0.0677,"70":0.02901,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0.00967,"83":0,"84":0.00967,"85":0,"86":0.29013,"87":8.54916,"88":4.09083,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00967,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.17408,"66":0,"67":0.49322,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0.00967,"76":0,"77":0.15474,"78":0,"79":0,"80":0.00967,"81":0.03868,"83":0,"84":0.78335,"85":0,"86":0,"87":0.04836,"88":0.05803,"89":39.69946,"90":17.64958,"91":0.01934,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.01934,"75":0.26112,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.08721,"8.1-8.4":0.83317,"9.0-9.2":0,"9.3":0.04396,"10.0-10.2":0.01441,"10.3":0.16072,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0.02955,"13.0-13.1":0,"13.2":0,"13.3":0.01441,"13.4-13.7":0,"14.0-14.4":3.18637,"14.5":0.01441},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.00967,"10":0,"11":0,"12":0,"13":0.00967,"14":3.25913,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.51256,"11.1":0.28046,"12.1":0.29013,"13.1":0.26112,"14.1":0.02901},B:{"12":0,"13":0,"14":0,"15":0.03868,"16":0,"17":0.00967,"18":0.44487,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":6.45056,"90":4.33261},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0.46915,"14.0":0.56095},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":2.67887,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":1.99327},S:{"2.5":0},R:{_:"0"},M:{"0":0.00625},Q:{"10.4":0},O:{"0":0.01875},H:{"0":0.00592}};


/***/ }),
/* 469 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.0047,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00941,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0.00941,"85":0,"86":0.01411,"87":1.02547,"88":0.19286,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.02822,"50":0,"51":0,"52":0,"53":0.01882,"54":0,"55":0,"56":0,"57":0,"58":0.0047,"59":0,"60":0,"61":0.00941,"62":0,"63":0.0047,"64":0,"65":0.1176,"66":0.0047,"67":0,"68":0,"69":0.0047,"70":0.0047,"71":0,"72":0,"73":0,"74":0.32928,"75":0.04234,"76":0.02352,"77":0.00941,"78":0.0047,"79":0.00941,"80":0.0047,"81":0.05174,"83":0.0047,"84":0.01882,"85":0.00941,"86":0.0047,"87":0.04234,"88":0.07056,"89":7.2865,"90":2.7048,"91":0.00941,"92":0.0047,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00941,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.48922,"74":0.03293,"75":0.13171,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01522,"6.0-6.1":0,"7.0-7.1":0.07844,"8.1-8.4":0.00117,"9.0-9.2":0.01873,"9.3":0.12878,"10.0-10.2":0,"10.3":0.09951,"11.0-11.2":0.03161,"11.3-11.4":0.01405,"12.0-12.1":0.0199,"12.2-12.4":0.12176,"13.0-13.1":0.00937,"13.2":0.00117,"13.3":0.03981,"13.4-13.7":1.1169,"14.0-14.4":9.20209,"14.5":0.04917},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.02352,"14":0.89376,_:"0","3.1":0,"3.2":0,"5.1":0.08938,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0047,"11.1":0.01411,"12.1":0.03763,"13.1":0.06586,"14.1":0.01411},B:{"12":0.0047,"13":0,"14":0,"15":0.0047,"16":0.0047,"17":0,"18":0.14112,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0.01411,"89":1.46294,"90":1.01136},P:{"4":0.29846,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.42978,"8.2":0,"9.2":0.31039,"10.1":0.02388,"11.1-11.2":0.22683,"12.0":0.20295,"13.0":2.63835,"14.0":1.55197},I:{"0":0,"3":0,"4":0.12489,"2.1":0,"2.2":0,"2.3":0,"4.1":0.03406,"4.2-4.3":0.06812,"4.4":0,"4.4.3-4.4.4":1.46465},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.49392,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":61.89566},S:{"2.5":0},R:{_:"0"},M:{"0":0.08474},Q:{"10.4":0},O:{"0":0.03707},H:{"0":0.0351}};


/***/ }),
/* 470 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0.01263,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00632,"27":0.06948,"28":0,"29":0.00632,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.00632,"41":0,"42":0,"43":0.00632,"44":0,"45":0.00632,"46":0,"47":0.00632,"48":0.01895,"49":0,"50":0.00632,"51":0.00632,"52":0.2779,"53":0,"54":0.00632,"55":0.00632,"56":0.00632,"57":0.00632,"58":0,"59":0.00632,"60":0.01263,"61":0.00632,"62":0.01895,"63":0.00632,"64":0.00632,"65":0.01263,"66":0.12632,"67":0.00632,"68":0.05684,"69":0.00632,"70":0.00632,"71":0.00632,"72":0.03158,"73":0,"74":0,"75":0,"76":0,"77":0.00632,"78":0.08842,"79":0.00632,"80":0.01263,"81":0.01263,"82":0.00632,"83":0.01263,"84":0.0379,"85":0.03158,"86":0.08211,"87":1.49689,"88":0.63792,"89":0.00632,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00632,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00632,"38":0.00632,"39":0,"40":0,"41":0,"42":0.01263,"43":0.00632,"44":0.00632,"45":0.00632,"46":0.00632,"47":0.01263,"48":0.00632,"49":0.48633,"50":0.00632,"51":0.00632,"52":0,"53":0.01263,"54":0,"55":0.00632,"56":0.00632,"57":0.00632,"58":0.01263,"59":0,"60":0.00632,"61":0.02526,"62":0.00632,"63":0.03158,"64":0.00632,"65":0.01263,"66":0.01263,"67":0.03158,"68":0.01263,"69":0.0379,"70":0.02526,"71":0.06316,"72":0.01895,"73":0.01895,"74":0.01895,"75":0.0379,"76":0.04421,"77":0.01895,"78":0.03158,"79":0.09474,"80":0.07579,"81":0.06948,"83":0.08842,"84":0.10737,"85":0.09474,"86":0.29685,"87":0.72634,"88":0.88424,"89":16.90162,"90":7.36446,"91":0.01263,"92":0.00632,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00632,"32":0,"33":0,"34":0,"35":0,"36":0.00632,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00632,"48":0,"49":0,"50":0,"51":0.00632,"52":0,"53":0,"54":0.01263,"55":0.03158,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00632,"64":0,"65":0,"66":0,"67":0,"68":0.00632,"69":0,"70":0.00632,"71":0,"72":0,"73":0.56844,"74":0.20843,"75":0.78318,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00632},G:{"8":0.00047,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.03166,"6.0-6.1":0.0137,"7.0-7.1":0.06189,"8.1-8.4":0.00378,"9.0-9.2":0.00236,"9.3":0.26789,"10.0-10.2":0.00945,"10.3":0.16253,"11.0-11.2":0.02268,"11.3-11.4":0.03496,"12.0-12.1":0.03496,"12.2-12.4":0.15781,"13.0-13.1":0.02173,"13.2":0.01512,"13.3":0.08316,"13.4-13.7":0.23293,"14.0-14.4":2.99123,"14.5":0.05055},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00632,"13":0.00632,"14":0.18316,_:"0","3.1":0,"3.2":0,"5.1":0.2779,"6.1":0,"7.1":0.00632,"9.1":0.00632,"10.1":0,"11.1":0.01263,"12.1":0.00632,"13.1":0.05053,"14.1":0},B:{"12":0.00632,"13":0.00632,"14":0.00632,"15":0.00632,"16":0,"17":0.00632,"18":0.04421,"79":0.00632,"80":0,"81":0,"83":0.01263,"84":0.00632,"85":0.00632,"86":0,"87":0.00632,"88":0.00632,"89":0.81476,"90":0.34738},P:{"4":0.1668,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.10425,"8.2":0.01042,"9.2":0.0417,"10.1":0.03127,"11.1-11.2":0.10425,"12.0":0.11467,"13.0":0.92782,"14.0":0.4587},I:{"0":0,"3":0,"4":0.01082,"2.1":0,"2.2":0,"2.3":0,"4.1":0.07494,"4.2-4.3":0.11048,"4.4":0,"4.4.3-4.4.4":0.70537},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.00677,"9":0.01353,"10":0,"11":0.16918,"5.5":0},J:{"7":0,"10":0.03684},N:{"10":0,"11":0},L:{"0":55.43057},S:{"2.5":0.00368},R:{_:"0"},M:{"0":0.16578},Q:{"10.4":0.00368},O:{"0":0.06263},H:{"0":0.48829}};


/***/ }),
/* 471 */
/***/ ((module) => {

module.exports={C:{"4":0.00482,"52":0.01927,"77":0.06262,"78":0.01445,"83":0.0578,"84":0.00963,"85":0.00482,"86":0.01927,"87":1.18498,"88":0.13969,_:"2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 79 80 81 82 89 90 3.5 3.6"},D:{"41":0.01445,"49":0.6792,"50":1.31022,"56":0.02409,"62":0.02409,"73":0.10597,"74":1.15126,"76":0.01927,"77":1.6137,"80":0.00963,"81":0.01927,"83":0.01445,"85":0.04335,"86":0.01927,"87":0.37573,"88":0.45762,"89":18.25161,"90":6.02125,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 46 47 48 51 52 53 54 55 57 58 59 60 61 63 64 65 66 67 68 69 70 71 72 75 78 79 84 91 92 93"},F:{"73":0.13969,"74":0.03854,"75":0.24567,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0.00672,"8.1-8.4":0,"9.0-9.2":0.00672,"9.3":0.02687,"10.0-10.2":0.00168,"10.3":0.02351,"11.0-11.2":0.00504,"11.3-11.4":0.06046,"12.0-12.1":0.0084,"12.2-12.4":0.11084,"13.0-13.1":0.02015,"13.2":0.00504,"13.3":0.12259,"13.4-13.7":0.31068,"14.0-14.4":14.31477,"14.5":1.48958},E:{"4":0,"12":0.01927,"13":0.07707,"14":5.50101,_:"0 5 6 7 8 9 10 11 3.1 3.2 6.1 7.1 9.1 11.1","5.1":0.00963,"10.1":0.02409,"12.1":0.02409,"13.1":1.4451,"14.1":0.07707},B:{"13":0.00482,"14":0.00482,"15":0.09634,"16":0.04335,"17":0.00963,"18":0.72255,"81":0.00482,"89":4.04628,"90":1.88345,_:"12 79 80 83 84 85 86 87 88"},P:{"4":0.12298,"5.0-5.4":0.01013,"6.2-6.4":0,"7.2-7.4":0.13323,"8.2":0,"9.2":0.05065,"10.1":0.0205,"11.1-11.2":0.30745,"12.0":0.05124,"13.0":3.87382,"14.0":1.80368},I:{"0":0,"3":0,"4":0.00046,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00046,"4.4":0,"4.4.3-4.4.4":0.00944},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"11":0.58286,_:"6 7 8 9 10 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":28.96959},S:{"2.5":0},R:{_:"0"},M:{"0":0.08293},Q:{"10.4":0.00518},O:{"0":0.02073},H:{"0":0.61337}};


/***/ }),
/* 472 */
/***/ ((module) => {

module.exports={C:{"47":0.0316,"52":0.00527,"60":0.00527,"67":0.01053,"68":0.00527,"78":0.07374,"80":0.00527,"84":0.00527,"85":0.01053,"86":0.09481,"87":1.00073,"88":0.30549,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 48 49 50 51 53 54 55 56 57 58 59 61 62 63 64 65 66 69 70 71 72 73 74 75 76 77 79 81 82 83 89 90 3.5 3.6"},D:{"24":0.0474,"35":0.02107,"36":0.10534,"37":1.09554,"38":0.08427,"47":0.0158,"49":0.0316,"50":0.04214,"53":0.0158,"63":0.0316,"65":0.0158,"67":0.00527,"70":0.00527,"72":0.0158,"73":0.02107,"74":0.26335,"75":0.01053,"76":0.04214,"77":0.02107,"78":0.01053,"79":0.01053,"80":0.0474,"83":0.0158,"84":0.0474,"85":0.02107,"86":0.0158,"87":0.86379,"88":0.56884,"89":15.37964,"90":6.80496,"91":0.00527,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 33 34 39 40 41 42 43 44 45 46 48 51 52 54 55 56 57 58 59 60 61 62 64 66 68 69 71 81 92 93"},F:{"68":0.00527,"73":0.18435,"74":0.17908,"75":0.10534,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0.00809,"7.0-7.1":0.00539,"8.1-8.4":0.00539,"9.0-9.2":0.03237,"9.3":0.06473,"10.0-10.2":0.04316,"10.3":0.14295,"11.0-11.2":0.03506,"11.3-11.4":0.02967,"12.0-12.1":0.02158,"12.2-12.4":0.32367,"13.0-13.1":0.12138,"13.2":0.02428,"13.3":0.32367,"13.4-13.7":1.16522,"14.0-14.4":23.8195,"14.5":0.27242},E:{"4":0,"11":0.0158,"12":0.0474,"13":0.08954,"14":8.60101,_:"0 5 6 7 8 9 10 3.1 3.2 5.1 6.1 7.1 9.1","10.1":0.02107,"11.1":0.03687,"12.1":0.10007,"13.1":0.86906,"14.1":0.11587},B:{"14":0.0316,"15":0.01053,"16":0.07374,"17":0.02634,"18":0.32129,"80":0.01053,"84":0.01053,"85":0.01053,"86":0.00527,"87":0.13168,"88":0.02107,"89":7.60028,"90":3.81858,_:"12 13 79 81 83"},P:{"4":0.07489,"5.0-5.4":0.02042,"6.2-6.4":0.01021,"7.2-7.4":0.04083,"8.2":0.01021,"9.2":0.0214,"10.1":0.02042,"11.1-11.2":0.09629,"12.0":0.11769,"13.0":2.70691,"14.0":1.54069},I:{"0":0,"3":0,"4":0.00451,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00361,"4.4":0,"4.4.3-4.4.4":0.01082},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.03687,"10":0.0158,"11":1.20088,_:"6 7 9 5.5"},J:{"7":0,"10":0},N:{"10":0.0085,"11":0},L:{"0":16.85827},S:{"2.5":0},R:{_:"0"},M:{"0":0.16092},Q:{"10.4":0},O:{"0":0},H:{"0":0.11202}};


/***/ }),
/* 473 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00575,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.0115,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.00575,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.00575,"51":0.00575,"52":0.07475,"53":0,"54":0,"55":0.00575,"56":0.01725,"57":0.00575,"58":0.00575,"59":0,"60":0.00575,"61":0,"62":0.00575,"63":0,"64":0,"65":0.00575,"66":0,"67":0.00575,"68":0.0115,"69":0,"70":0,"71":0,"72":0.00575,"73":0,"74":0.00575,"75":0.00575,"76":0,"77":0.00575,"78":0.0345,"79":0.023,"80":0.0345,"81":0.0345,"82":0.01725,"83":0.023,"84":0.02875,"85":0.0115,"86":0.023,"87":0.598,"88":0.22425,"89":0.00575,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00575,"23":0,"24":0.00575,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00575,"35":0,"36":0,"37":0,"38":0.0115,"39":0,"40":0,"41":0.00575,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.0115,"49":0.2875,"50":0.00575,"51":0.00575,"52":0.00575,"53":0.01725,"54":0.0115,"55":0,"56":0.01725,"57":0.0575,"58":0.00575,"59":0.00575,"60":0,"61":0.368,"62":0.00575,"63":0.01725,"64":0.00575,"65":0.00575,"66":0.00575,"67":0.0115,"68":0.0115,"69":0.00575,"70":0.0115,"71":0.023,"72":0.0115,"73":0.01725,"74":0.0115,"75":0.023,"76":0.0115,"77":0.02875,"78":0.02875,"79":0.046,"80":0.06325,"81":0.04025,"83":0.1725,"84":0.2875,"85":0.2875,"86":0.33925,"87":0.59225,"88":0.25875,"89":13.064,"90":5.16925,"91":0.0115,"92":0.00575,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00575,"37":0.023,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.023,"44":0,"45":0,"46":0.00575,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0115,"56":0,"57":0.00575,"58":0,"60":0.00575,"62":0,"63":0.00575,"64":0,"65":0,"66":0,"67":0,"68":0.00575,"69":0.00575,"70":0.00575,"71":0.01725,"72":0.0115,"73":0.115,"74":0.0575,"75":0.1955,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0163,"6.0-6.1":0.02096,"7.0-7.1":0.05356,"8.1-8.4":0.05123,"9.0-9.2":0.10013,"9.3":0.26081,"10.0-10.2":0.09082,"10.3":0.35862,"11.0-11.2":0.20958,"11.3-11.4":0.31903,"12.0-12.1":0.29574,"12.2-12.4":1.19928,"13.0-13.1":0.19794,"13.2":0.12575,"13.3":0.59848,"13.4-13.7":2.11679,"14.0-14.4":15.24599,"14.5":0.25849},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00575,"12":0.0115,"13":0.069,"14":0.70725,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00575,"11.1":0.01725,"12.1":0.0345,"13.1":0.14375,"14.1":0.01725},B:{"12":0,"13":0.00575,"14":0.01725,"15":0.00575,"16":0.00575,"17":0.0115,"18":0.06325,"79":0,"80":0,"81":0,"83":0.00575,"84":0.01725,"85":0.01725,"86":0.01725,"87":0.0115,"88":0.0115,"89":0.92575,"90":0.41975},P:{"4":0.22457,"5.0-5.4":0.02042,"6.2-6.4":0.01021,"7.2-7.4":0.04083,"8.2":0.01021,"9.2":0.07145,"10.1":0.02042,"11.1-11.2":0.16332,"12.0":0.09187,"13.0":1.09221,"14.0":0.541},I:{"0":0,"3":0,"4":0.00286,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00381,"4.2-4.3":0.01907,"4.4":0,"4.4.3-4.4.4":0.09151},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.00606,"7":0,"8":0.02424,"9":0.01212,"10":0.00606,"11":0.73927,"5.5":0},J:{"7":0,"10":0.017},N:{"10":0.0085,"11":0},L:{"0":39.84325},S:{"2.5":0},R:{_:"0"},M:{"0":0.085},Q:{"10.4":0.017},O:{"0":0.8415},H:{"0":0.28165}};


/***/ }),
/* 474 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.02061,"35":0,"36":0,"37":0,"38":0.02473,"39":0,"40":0,"41":0,"42":0.00824,"43":0.01237,"44":0.00412,"45":0,"46":0,"47":0.00824,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0.02473,"60":0,"61":0.00412,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00824,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01649,"79":0.00412,"80":0,"81":0,"82":0.02061,"83":0,"84":0,"85":0.02473,"86":0.03298,"87":0.45754,"88":0.22671,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01649,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00412,"56":0,"57":0,"58":0.00412,"59":0,"60":0.00412,"61":0,"62":0,"63":0.00412,"64":0,"65":0,"66":0,"67":0.00412,"68":0.00824,"69":0.07007,"70":0.00412,"71":0,"72":0.00412,"73":0,"74":0.01237,"75":0.01237,"76":0.06183,"77":0,"78":0.00412,"79":0.12366,"80":0.00824,"81":0.03298,"83":0.02473,"84":0.01649,"85":0.02473,"86":0.04534,"87":0.02473,"88":0.31327,"89":5.61004,"90":1.94971,"91":0.01237,"92":0.00412,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.00824,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01237,"74":0.02473,"75":0.04946,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0.00814,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00611,"6.0-6.1":0,"7.0-7.1":0.00916,"8.1-8.4":0.0173,"9.0-9.2":0.02544,"9.3":0.44262,"10.0-10.2":0.00305,"10.3":0,"11.0-11.2":0.00611,"11.3-11.4":0.03154,"12.0-12.1":0.05189,"12.2-12.4":0.45381,"13.0-13.1":0.04579,"13.2":0.01119,"13.3":0.41413,"13.4-13.7":0.13431,"14.0-14.4":8.08616,"14.5":0.05088},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01237,"12":0,"13":0.02473,"14":0.40808,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00412,"11.1":0.00412,"12.1":0.00412,"13.1":0.23495,"14.1":0.0371},B:{"12":0.02473,"13":0.02473,"14":0.00824,"15":0.00412,"16":0.00824,"17":0.04122,"18":0.18961,"79":0,"80":0.00824,"81":0.00412,"83":0,"84":0.00824,"85":0.01649,"86":0.00412,"87":0.04534,"88":0.02061,"89":2.55976,"90":1.03462},P:{"4":0.20135,"5.0-5.4":0.01007,"6.2-6.4":0.01007,"7.2-7.4":0.57385,"8.2":0,"9.2":1.00675,"10.1":0.0302,"11.1-11.2":0.24162,"12.0":0.10067,"13.0":0.99668,"14.0":0.54364},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.00633,"4.4":0,"4.4.3-4.4.4":0.2468},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.84089,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0.01176},L:{"0":66.92871},S:{"2.5":0},R:{_:"0"},M:{"0":0.03527},Q:{"10.4":0.14107},O:{"0":1.71638},H:{"0":0.06678}};


/***/ }),
/* 475 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0.03299,"78":0.79552,"79":0,"80":0,"81":0,"82":0,"83":0.03299,"84":0,"85":0,"86":0,"87":2.49655,"88":0.76253,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.1723,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0.13931,"86":0.10265,"87":0,"88":0.03299,"89":3.95195,"90":0.83218,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.24196,"75":0.03299,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0.36783,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":1.2857,"13.4-13.7":0.73566,"14.0-14.4":8.72542,"14.5":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1.38575,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.03299,"13.1":0.13931,"14.1":0},B:{"12":0,"13":0.03299,"14":0,"15":0,"16":0,"17":0,"18":0.20896,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1.42241,"90":0},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0.3015,"10.1":0,"11.1-11.2":0.40918,"12.0":0,"13.0":1.02294,"14.0":0.09691},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.12033,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0.12033},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.03299,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":71.86364},S:{"2.5":0},R:{_:"0"},M:{"0":0.50672},Q:{"10.4":0},O:{"0":0.40538},H:{"0":0.09595}};


/***/ }),
/* 476 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00708,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00354,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00354,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.01063,"69":0.00354,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00354,"79":0,"80":0,"81":0.00354,"82":0,"83":0,"84":0,"85":0,"86":0.00708,"87":0.3542,"88":0.24794,"89":0.00354,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00708,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00354,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00354,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.04605,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00354,"56":0.00354,"57":0,"58":0.00708,"59":0,"60":0,"61":0,"62":0,"63":0.00354,"64":0.03188,"65":0.00354,"66":0,"67":0.00354,"68":0,"69":0,"70":0.00354,"71":0,"72":0.00354,"73":0.00354,"74":0.00708,"75":0.00708,"76":0.00354,"77":0,"78":0,"79":0.01417,"80":0.00354,"81":0.00708,"83":0.00708,"84":0.00708,"85":0.00708,"86":0.00708,"87":0.01417,"88":0.10626,"89":4.27519,"90":1.71079,"91":0.03542,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.10626,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00354,"47":0.02125,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.03896,"55":0.08501,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0.02479,"75":0.05313,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00295,"6.0-6.1":0,"7.0-7.1":0.00516,"8.1-8.4":0.00295,"9.0-9.2":0,"9.3":0.17626,"10.0-10.2":0.0236,"10.3":0.0472,"11.0-11.2":0.0236,"11.3-11.4":0.06048,"12.0-12.1":0.1888,"12.2-12.4":0.4307,"13.0-13.1":0.07375,"13.2":0.09735,"13.3":0.20503,"13.4-13.7":1.35848,"14.0-14.4":3.57393,"14.5":0.00516},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.04959,"14":0.20189,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.00708,"13.1":0.02125,"14.1":0},B:{"12":0.01063,"13":0.01063,"14":0.03896,"15":0.01063,"16":0.02479,"17":0.02479,"18":0.07792,"79":0,"80":0,"81":0.00354,"83":0,"84":0.01417,"85":0.00354,"86":0.02479,"87":0.00354,"88":0.00708,"89":0.69423,"90":0.46046},P:{"4":0.39917,"5.0-5.4":0.03071,"6.2-6.4":0.03071,"7.2-7.4":0.70622,"8.2":0,"9.2":0.44011,"10.1":0.24564,"11.1-11.2":0.34799,"12.0":0.16376,"13.0":2.69183,"14.0":0.49128},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0.05104,"4.4":0,"4.4.3-4.4.4":0.07146},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.04605,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":70.86188},S:{"2.5":0.08395},R:{_:"0"},M:{"0":0.07104},Q:{"10.4":0.02583},O:{"0":3.27421},H:{"0":1.16778}};


/***/ }),
/* 477 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0.00751,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.0025,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.0025,"41":0,"42":0,"43":0.0025,"44":0.0025,"45":0,"46":0,"47":0.0025,"48":0.00501,"49":0.00501,"50":0.0025,"51":0.0025,"52":0.01002,"53":0,"54":0,"55":0,"56":0.00501,"57":0.0025,"58":0.0025,"59":0.0025,"60":0,"61":0.0025,"62":0.0025,"63":0,"64":0,"65":0,"66":0.0025,"67":0.0025,"68":0.02754,"69":0.0025,"70":0.00751,"71":0,"72":0.00751,"73":0,"74":0,"75":0,"76":0.0025,"77":0,"78":0.00751,"79":0.0025,"80":0.0025,"81":0.0025,"82":0.0025,"83":0,"84":0.01753,"85":0.00751,"86":0.02754,"87":0.3781,"88":0.09265,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.0025,"38":0,"39":0,"40":0.0025,"41":0,"42":0,"43":0.0025,"44":0,"45":0,"46":0.0025,"47":0.0025,"48":0.0025,"49":0.00501,"50":0,"51":0,"52":0.0025,"53":0.0025,"54":0,"55":0.00501,"56":0,"57":0.0025,"58":0.0025,"59":0,"60":0.0025,"61":0,"62":0.0025,"63":0.00501,"64":0.00501,"65":0.0025,"66":0.0025,"67":0.0025,"68":0.00501,"69":0.0025,"70":0.00751,"71":0.00501,"72":0.0025,"73":0.0025,"74":0.01002,"75":0.00751,"76":0.00501,"77":0.00501,"78":0.00751,"79":0.01252,"80":0.00751,"81":0.02254,"83":0.02254,"84":0.01753,"85":0.02003,"86":0.02754,"87":0.0651,"88":0.13271,"89":1.79286,"90":0.63351,"91":0.01002,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.0025,"29":0,"30":0.0025,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.0025,"55":0.00751,"56":0,"57":0,"58":0,"60":0,"62":0.0025,"63":0.00501,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.0025,"74":0.01002,"75":0.02754,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.03255},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.03041,"5.0-5.1":0.00344,"6.0-6.1":0.00079,"7.0-7.1":0.05183,"8.1-8.4":0.14492,"9.0-9.2":0.00502,"9.3":0.04284,"10.0-10.2":0.01005,"10.3":0.05897,"11.0-11.2":0.05315,"11.3-11.4":0.03068,"12.0-12.1":0.10684,"12.2-12.4":0.2893,"13.0-13.1":0.03279,"13.2":0.04575,"13.3":0.11503,"13.4-13.7":0.30967,"14.0-14.4":1.12363,"14.5":0.00978},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.01252,_:"0","3.1":0,"3.2":0,"5.1":0.40064,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0025,"11.1":0,"12.1":0,"13.1":0.00751,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.01002,"79":0,"80":0,"81":0,"83":0,"84":0.00501,"85":0.0025,"86":0,"87":0.00501,"88":0.00501,"89":0.16526,"90":0.06761},P:{"4":0.4531,"5.0-5.4":0.12083,"6.2-6.4":0.04028,"7.2-7.4":0.19131,"8.2":0.03021,"9.2":0.28193,"10.1":0.11076,"11.1-11.2":0.21144,"12.0":0.29199,"13.0":2.46685,"14.0":0.55378},I:{"0":0,"3":0,"4":0.00401,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01445,"4.2-4.3":0.0289,"4.4":0,"4.4.3-4.4.4":0.52269},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.04006,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":75.11268},S:{"2.5":0.0075},R:{_:"0"},M:{"0":0.50973},Q:{"10.4":0.01499},O:{"0":2.6161},H:{"0":5.71996}};


/***/ }),
/* 478 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01125,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00562,"48":0,"49":0,"50":0.01687,"51":0,"52":0.01125,"53":0,"54":0,"55":0,"56":0.00562,"57":0,"58":0,"59":0.03374,"60":0.26995,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.01687,"68":0.06749,"69":0,"70":0,"71":0,"72":0.00562,"73":0,"74":0,"75":0,"76":0,"77":0.01125,"78":0.8436,"79":0,"80":0.00562,"81":0.03937,"82":0.06186,"83":0.00562,"84":0.1406,"85":0.10686,"86":0.41618,"87":4.14489,"88":0.91109,"89":0.00562,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.03374,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00562,"50":0.51741,"51":0,"52":0,"53":0.01125,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.01125,"61":0,"62":0,"63":0.01125,"64":0,"65":0,"66":0,"67":0.00562,"68":0,"69":0,"70":0.00562,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0.00562,"77":0.01125,"78":0.08998,"79":0.04499,"80":0.00562,"81":0.35431,"83":0.01125,"84":0,"85":0.00562,"86":0,"87":0.03937,"88":0.1406,"89":11.34361,"90":4.41484,"91":0.01125,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00562,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00562,"64":0,"65":0,"66":0.00562,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.07874,"74":0.04499,"75":0.15185,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.07501,"6.0-6.1":0,"7.0-7.1":0.02657,"8.1-8.4":0,"9.0-9.2":0,"9.3":0.01563,"10.0-10.2":0.15471,"10.3":0.11252,"11.0-11.2":0.44382,"11.3-11.4":0.07501,"12.0-12.1":0.02657,"12.2-12.4":0.17659,"13.0-13.1":0.32036,"13.2":0.01563,"13.3":0.22504,"13.4-13.7":0.5454,"14.0-14.4":11.80656,"14.5":0.0797},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.06186,"13":0.14622,"14":1.63096,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.00562,"11.1":0.08998,"12.1":0.10686,"13.1":0.19684,"14.1":0.07874},B:{"12":0,"13":0,"14":0,"15":0.02812,"16":0.02812,"17":0.05624,"18":0.07874,"79":0,"80":0.01125,"81":0,"83":0,"84":0.00562,"85":0.02812,"86":0.0225,"87":0.01687,"88":0.07311,"89":2.18211,"90":1.25978},P:{"4":0.0711,"5.0-5.4":0,"6.2-6.4":0.03047,"7.2-7.4":0,"8.2":0.02031,"9.2":0.02031,"10.1":0,"11.1-11.2":0.06094,"12.0":0.04063,"13.0":2.9151,"14.0":1.26964},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00165,"4.2-4.3":0.00165,"4.4":0,"4.4.3-4.4.4":0.10795},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.3037,"5.5":0},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":45.31875},S:{"2.5":0},R:{_:"0"},M:{"0":0.22318},Q:{"10.4":0},O:{"0":0.03501},H:{"0":1.19316}};


/***/ }),
/* 479 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01152,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.00691,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.0023,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00461,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.00461,"79":0.0023,"80":0.01613,"81":0.00691,"82":0.00461,"83":0.0023,"84":0.00922,"85":0.00461,"86":0.00922,"87":0.18893,"88":0.07142,"89":0.0023,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0023,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.0023,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.0023,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.0023,"47":0,"48":0,"49":0.01843,"50":0.0023,"51":0,"52":0,"53":0.0023,"54":0,"55":0.00461,"56":0.0023,"57":0,"58":0.0023,"59":0,"60":0,"61":0.00461,"62":0,"63":0.0023,"64":0.0023,"65":0.0023,"66":0,"67":0.00461,"68":0,"69":0.0023,"70":0.00691,"71":0.0023,"72":0.0023,"73":0.0023,"74":0.0023,"75":0.0023,"76":0.0023,"77":0.0023,"78":0.00461,"79":0.00691,"80":0.00691,"81":0.03456,"83":0.01152,"84":0.00922,"85":0.00691,"86":0.01613,"87":0.06451,"88":0.03917,"89":1.86394,"90":0.74419,"91":0.0023,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00922,"27":0,"28":0.00461,"29":0,"30":0.0023,"31":0,"32":0.00461,"33":0,"34":0,"35":0.02765,"36":0,"37":0,"38":0.00691,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.00461,"47":0.00461,"48":0,"49":0,"50":0.01152,"51":0.02074,"52":0,"53":0,"54":0.10138,"55":0.12211,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0.00922,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0.01382,"74":0.01843,"75":0.06221,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00461},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00282,"6.0-6.1":0.00282,"7.0-7.1":0.01971,"8.1-8.4":0.01408,"9.0-9.2":0.01126,"9.3":0.19003,"10.0-10.2":0.0183,"10.3":0.15202,"11.0-11.2":0.05349,"11.3-11.4":0.08164,"12.0-12.1":0.06897,"12.2-12.4":0.34909,"13.0-13.1":0.09713,"13.2":0.03801,"13.3":0.19988,"13.4-13.7":0.73056,"14.0-14.4":11.071,"14.5":0.1112},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0023,"13":0.02765,"14":0.25114,_:"0","3.1":0,"3.2":0,"5.1":0.00461,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0023,"11.1":0.00461,"12.1":0.00922,"13.1":0.03917,"14.1":0.00691},B:{"12":0.00461,"13":0.0023,"14":0.0023,"15":0.00461,"16":0.00461,"17":0.00922,"18":0.02765,"79":0,"80":0.0023,"81":0,"83":0,"84":0.0023,"85":0.0023,"86":0.0023,"87":0.0023,"88":0.00691,"89":0.29491,"90":0.12442},P:{"4":0.47694,"5.0-5.4":0.03044,"6.2-6.4":0.04059,"7.2-7.4":0.57842,"8.2":0.03044,"9.2":0.15222,"10.1":0.11162,"11.1-11.2":0.4465,"12.0":0.48709,"13.0":5.2362,"14.0":2.02954},I:{"0":0,"3":0,"4":0.00047,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00237,"4.2-4.3":0.00663,"4.4":0,"4.4.3-4.4.4":0.06436},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0.00237,"10":0,"11":0.1543,"5.5":0},J:{"7":0,"10":0.01539},N:{"10":0,"11":0},L:{"0":64.55171},S:{"2.5":0.0077},R:{_:"0"},M:{"0":0.40789},Q:{"10.4":0.0077},O:{"0":0.5772},H:{"0":3.60661}};


/***/ }),
/* 480 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00634,"34":0.00317,"35":0,"36":0,"37":0.00317,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00317,"44":0,"45":0,"46":0,"47":0.00952,"48":0.00317,"49":0,"50":0,"51":0,"52":0.00317,"53":0.00317,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.00317,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.00634,"69":0,"70":0,"71":0,"72":0.00317,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0.01586,"79":0,"80":0,"81":0.00317,"82":0.00634,"83":0.00634,"84":0.00634,"85":0.00634,"86":0.03806,"87":0.36795,"88":0.17129,"89":0.00634,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00317,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00317,"40":0.00634,"41":0,"42":0.00317,"43":0.00634,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00317,"50":0.00317,"51":0.00317,"52":0,"53":0.00317,"54":0,"55":0.00317,"56":0,"57":0.00317,"58":0.00634,"59":0.00317,"60":0.00317,"61":0,"62":0,"63":0.00952,"64":0.00952,"65":0.00317,"66":0,"67":0,"68":0.00317,"69":0,"70":0.00317,"71":0.00634,"72":0,"73":0.00317,"74":0.00317,"75":0.00952,"76":0.00634,"77":0.00952,"78":0.00317,"79":0.01586,"80":0.00952,"81":0.03806,"83":0.03489,"84":0.01903,"85":0.00634,"86":0.03172,"87":0.08882,"88":0.12371,"89":2.5598,"90":1.13558,"91":0.00317,"92":0.00317,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.02855,"19":0,"20":0.00317,"21":0,"22":0,"23":0,"24":0.01269,"25":0.00317,"26":0.01586,"27":0.01269,"28":0.03172,"29":0.00317,"30":0.04758,"31":0.00317,"32":0.0222,"33":0.01586,"34":0,"35":0.08882,"36":0.00634,"37":0.00317,"38":0.01269,"39":0,"40":0,"41":0,"42":0.03489,"43":0,"44":0.00317,"45":0.08882,"46":0.04124,"47":0.03489,"48":0,"49":0,"50":0.13957,"51":0.1808,"52":0,"53":0.00317,"54":0.78983,"55":0.9294,"56":0.00317,"57":0,"58":0,"60":0.00317,"62":0.01903,"63":0.05075,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.00317,"73":0.0222,"74":0.17129,"75":0.55193,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.09199},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00523,"6.0-6.1":0.01942,"7.0-7.1":0.06124,"8.1-8.4":0.00672,"9.0-9.2":0.00299,"9.3":0.27783,"10.0-10.2":0.0127,"10.3":0.27335,"11.0-11.2":0.10829,"11.3-11.4":0.16655,"12.0-12.1":0.12174,"12.2-12.4":0.53848,"13.0-13.1":0.06124,"13.2":0.01494,"13.3":0.15161,"13.4-13.7":0.4287,"14.0-14.4":4.15326,"14.5":0.04556},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.00317,"14":0.09833,_:"0","3.1":0,"3.2":0,"5.1":0.01903,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.00952,"12.1":0.00634,"13.1":0.04441,"14.1":0.00317},B:{"12":0.02855,"13":0.01903,"14":0.01586,"15":0.02855,"16":0.01903,"17":0.02855,"18":0.0793,"79":0,"80":0.00317,"81":0.00317,"83":0,"84":0.00952,"85":0.01586,"86":0.00317,"87":0.01269,"88":0.01586,"89":0.54241,"90":0.22521},P:{"4":0.26468,"5.0-5.4":0.01018,"6.2-6.4":0.01018,"7.2-7.4":0.1018,"8.2":0.01018,"9.2":0.08144,"10.1":0.03054,"11.1-11.2":0.08144,"12.0":0.17306,"13.0":1.16051,"14.0":0.31558},I:{"0":0,"3":0,"4":0.00649,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00943,"4.2-4.3":0.01769,"4.4":0,"4.4.3-4.4.4":0.25763},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0,"9":0,"10":0.01187,"11":0.17211,"5.5":0},J:{"7":0,"10":0.06145},N:{"10":0,"11":0.02048},L:{"0":55.74263},S:{"2.5":0.04097},R:{_:"0"},M:{"0":0.18436},Q:{"10.4":0.10242},O:{"0":3.08626},H:{"0":16.00563}};


/***/ }),
/* 481 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00405,"34":0,"35":0,"36":0.00405,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00405,"44":0,"45":0,"46":0,"47":0.00405,"48":0.00405,"49":0.00809,"50":0,"51":0,"52":0.00809,"53":0,"54":0,"55":0,"56":0.00405,"57":0.00405,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.00405,"65":0.00809,"66":0.00405,"67":0,"68":0.02023,"69":0,"70":0,"71":0.00405,"72":0.01214,"73":0,"74":0,"75":0,"76":0,"77":0.00405,"78":0.02023,"79":0.00405,"80":0.00405,"81":0.00405,"82":0.00405,"83":0.00809,"84":0.01618,"85":0.01618,"86":0.03236,"87":0.72406,"88":0.34787,"89":0.02023,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00809,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00405,"40":0.01618,"41":0,"42":0.00405,"43":0.00809,"44":0,"45":0,"46":0.00809,"47":0.00405,"48":0.00405,"49":0.00809,"50":0,"51":0,"52":0,"53":0.00405,"54":0,"55":0.02023,"56":0.00405,"57":0,"58":0.01214,"59":0,"60":0.00809,"61":0,"62":0,"63":0.01618,"64":0.00405,"65":0.00809,"66":0,"67":0.00405,"68":0.00405,"69":0.01618,"70":0.00809,"71":0.00809,"72":0.01214,"73":0.00405,"74":0.00809,"75":0.00809,"76":0.01214,"77":0.00809,"78":0.00809,"79":0.03641,"80":0.02023,"81":0.06877,"83":0.04045,"84":0.02427,"85":0.02023,"86":0.06472,"87":0.10517,"88":0.18203,"89":5.49311,"90":2.31779,"91":0.01214,"92":0.00405,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.01214,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00809,"25":0.00405,"26":0.01618,"27":0.00405,"28":0.06068,"29":0.00405,"30":0.00809,"31":0.00405,"32":0.04045,"33":0.02427,"34":0.00405,"35":0.0809,"36":0.00809,"37":0.00405,"38":0.0445,"39":0.00405,"40":0,"41":0,"42":0.06877,"43":0,"44":0,"45":0.01214,"46":0.02427,"47":0.04045,"48":0,"49":0,"50":0.30742,"51":0.10922,"52":0,"53":0.00405,"54":0.45304,"55":0.59057,"56":0,"57":0,"58":0,"60":0.00405,"62":0.01214,"63":0.02832,"64":0,"65":0,"66":0,"67":0.00405,"68":0,"69":0,"70":0,"71":0,"72":0.01618,"73":0.04045,"74":0.21439,"75":0.74024,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.24675},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00586,"6.0-6.1":0.00195,"7.0-7.1":0.01953,"8.1-8.4":0.00293,"9.0-9.2":0.00977,"9.3":0.62017,"10.0-10.2":0.00488,"10.3":0.31057,"11.0-11.2":0.30764,"11.3-11.4":0.0586,"12.0-12.1":0.07813,"12.2-12.4":0.41507,"13.0-13.1":0.05567,"13.2":0.01465,"13.3":0.23146,"13.4-13.7":0.47172,"14.0-14.4":6.23293,"14.5":0.05958},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.00405,"13":0.02023,"14":0.31551,_:"0","3.1":0,"3.2":0,"5.1":0.1618,"6.1":0,"7.1":0,"9.1":0.00405,"10.1":0.00405,"11.1":0.01214,"12.1":0.00809,"13.1":0.05663,"14.1":0.00809},B:{"12":0.04045,"13":0.01618,"14":0.02023,"15":0.02832,"16":0.02023,"17":0.02832,"18":0.13753,"79":0,"80":0.00405,"81":0.00405,"83":0,"84":0.00809,"85":0.03236,"86":0.00405,"87":0.00809,"88":0.02832,"89":0.94249,"90":0.39641},P:{"4":0.48219,"5.0-5.4":0,"6.2-6.4":0.01026,"7.2-7.4":0.19493,"8.2":0.01026,"9.2":0.06156,"10.1":0.04104,"11.1-11.2":0.2257,"12.0":0.15389,"13.0":1.36449,"14.0":0.37959},I:{"0":0,"3":0,"4":0.00316,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00947,"4.2-4.3":0.03156,"4.4":0,"4.4.3-4.4.4":0.36986},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0,"7":0,"8":0.0047,"9":0,"10":0.0047,"11":0.16453,"5.5":0},J:{"7":0,"10":0.01787},N:{"10":0,"11":0.02978},L:{"0":53.21495},S:{"2.5":0.00596},R:{_:"0"},M:{"0":0.17865},Q:{"10.4":0.04764},O:{"0":1.76864},H:{"0":11.25307}};


/***/ }),
/* 482 */
/***/ ((module) => {

module.exports={C:{"2":0.16756,"15":0.16472,"18":0.16472,"21":0.16756,"23":0.1704,"25":0.33228,"30":0.16756,"34":0.00284,"43":0.00852,"47":0.00852,"48":0.00568,"51":0.16188,"52":0.05964,"56":0.00568,"60":0.00568,"65":0.00568,"66":0.00284,"67":0.00852,"68":0.00568,"71":0.00284,"72":0.01136,"76":0.00284,"77":0.00284,"78":0.05112,"79":0.00568,"80":0.01988,"81":0.00568,"82":0.00852,"83":0.00568,"84":0.0284,"85":0.02272,"86":0.05964,"87":1.05932,"88":0.40896,"89":0.0142,_:"3 4 5 6 7 8 9 10 11 12 13 14 16 17 19 20 22 24 26 27 28 29 31 32 33 35 36 37 38 39 40 41 42 44 45 46 49 50 53 54 55 57 58 59 61 62 63 64 69 70 73 74 75 90 3.5 3.6"},D:{"11":0.00284,"19":0.1704,"24":0.49132,"26":0.00568,"28":0.00284,"30":0.16472,"33":0.17892,"34":0.00284,"35":0.3266,"38":0.00852,"39":0.00568,"40":0.01136,"43":0.08236,"47":0.00852,"49":0.07952,"50":0.00568,"53":0.03124,"54":0.16756,"55":0.16756,"56":0.84632,"57":0.00568,"58":0.00852,"60":0.00568,"61":0.01988,"62":0.00568,"63":0.01704,"64":0.00852,"65":0.01136,"66":0.00284,"67":0.01136,"68":0.0284,"69":0.01704,"70":0.0142,"71":0.01136,"72":0.00852,"73":0.00852,"74":0.01988,"75":0.01136,"76":0.0142,"77":0.0142,"78":0.0142,"79":0.04828,"80":0.03976,"81":0.03976,"83":0.05112,"84":0.04544,"85":0.04544,"86":0.09372,"87":0.27264,"88":0.2698,"89":8.85796,"90":3.36256,"91":0.0142,"92":0.00284,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 20 21 22 23 25 27 29 31 32 36 37 41 42 44 45 46 48 51 52 59 93"},F:{"36":0.00568,"43":0.16472,"63":0.00852,"64":0.00568,"68":0.00568,"70":0.00568,"71":0.01136,"72":0.01988,"73":0.1136,"74":0.142,"75":0.43736,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 65 66 67 69 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0.16188},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.00761,"6.0-6.1":3.24948,"7.0-7.1":0.02918,"8.1-8.4":0.00381,"9.0-9.2":0.01015,"9.3":0.10151,"10.0-10.2":0.46947,"10.3":0.12181,"11.0-11.2":0.07232,"11.3-11.4":0.06217,"12.0-12.1":0.06725,"12.2-12.4":0.30325,"13.0-13.1":0.05456,"13.2":0.02665,"13.3":0.14718,"13.4-13.7":0.46693,"14.0-14.4":6.75399,"14.5":0.04568},E:{"4":0,"5":0.1704,"11":0.00284,"12":0.00568,"13":0.05112,"14":0.46576,_:"0 6 7 8 9 10 3.1 3.2 6.1 7.1 9.1","5.1":0.15052,"10.1":0.00568,"11.1":0.0142,"12.1":0.02272,"13.1":0.09088,"14.1":0.01136},B:{"12":0.0142,"13":0.00852,"14":0.00852,"15":0.01136,"16":0.0142,"17":0.01988,"18":0.07668,"84":0.01136,"85":0.01136,"86":0.00568,"87":0.00852,"88":0.01988,"89":0.8804,"90":0.37488,_:"79 80 81 83"},P:{"4":0.38897,"5.0-5.4":0,"6.2-6.4":0.02047,"7.2-7.4":0.24567,"8.2":0.01024,"9.2":0.09213,"10.1":0.05118,"11.1-11.2":0.26614,"12.0":0.21496,"13.0":2.10865,"14.0":0.74724},I:{"0":0,"3":0,"4":0.00092,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00642,"4.2-4.3":0.13214,"4.4":0,"4.4.3-4.4.4":0.40468},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.17849,"9":0.35401,"10":0.33914,"11":0.25584,_:"6 7 5.5"},J:{"7":0,"10":0.01432},N:{"10":0,"11":0.02978},L:{"0":49.596},S:{"2.5":0.01432},R:{_:"0"},M:{"0":0.2148},Q:{"10.4":0.01432},O:{"0":0.6444},H:{"0":7.14467}};


/***/ }),
/* 483 */
/***/ ((module) => {

module.exports={C:{"2":0,"3":0.27265,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0.13264,"82":0,"83":0,"84":0,"85":0.4053,"86":0.4053,"87":0.13264,"88":0.4053,"89":0,"90":0,"3.5":0,"3.6":0},D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":2.17386,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":2.17386,"88":0,"89":16.99291,"90":9.78603,"91":0,"92":0,"93":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0.31404,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2-12.4":0,"13.0-13.1":0,"13.2":0,"13.3":0,"13.4-13.7":0,"14.0-14.4":41.00745,"14.5":0},E:{"4":0.27265,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":8.15748,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0,"13.1":0.4053,"14.1":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0,"10.1":0,"11.1-11.2":0,"12.0":0,"13.0":0,"14.0":0},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.33471,"7":0,"8":2.66864,"9":0.66942,"10":0.16283,"11":7.17368,"5.5":0},J:{"7":0,"10":0.1868},N:{"10":0,"11":0},L:{"0":4.32698},S:{"2.5":0},R:{_:"0"},M:{"0":0.1868},Q:{"10.4":0},O:{"0":0},H:{"0":0}};


/***/ }),
/* 484 */
/***/ ((module) => {

module.exports={C:{"34":0.00677,"36":0.00677,"43":0.11844,"47":0.00338,"48":0.00338,"52":0.04061,"56":0.01354,"60":0.00338,"66":0.00338,"68":0.00338,"72":0.01015,"75":0.01354,"78":0.03384,"79":0.00677,"80":0.01015,"81":0.00677,"82":0.01015,"83":0.01015,"84":0.01692,"85":0.01692,"86":0.04399,"87":0.97459,"88":0.39254,"89":0.01354,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 37 38 39 40 41 42 44 45 46 49 50 51 53 54 55 57 58 59 61 62 63 64 65 67 69 70 71 73 74 76 77 90 3.5 3.6"},D:{"11":0.00338,"22":0.01354,"26":0.00677,"34":0.01354,"35":0.00677,"38":0.04061,"42":0.00677,"43":0.00338,"45":0.00338,"47":0.01015,"48":0.01354,"49":0.14213,"51":0.00677,"53":0.07445,"54":0.00338,"55":0.01692,"56":0.01015,"57":0.01354,"58":0.01015,"59":0.00677,"60":0.00338,"61":0.04061,"62":0.01692,"63":0.02369,"64":0.00677,"65":0.01354,"66":0.00677,"67":0.06768,"68":0.03384,"69":0.08798,"70":0.05753,"71":0.03384,"72":0.0643,"73":0.0203,"74":0.17258,"75":0.04061,"76":0.02369,"77":0.02369,"78":0.05414,"79":0.0643,"80":0.06091,"81":0.05753,"83":0.09475,"84":0.08122,"85":0.07445,"86":0.16582,"87":0.27072,"88":0.41623,"89":14.93021,"90":5.64113,"91":0.02707,"92":0.00677,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 23 24 25 27 28 29 30 31 32 33 36 37 39 40 41 44 46 50 52 93"},F:{"36":0.00677,"40":0.00677,"46":0.01015,"73":0.11506,"74":0.08798,"75":0.29102,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 41 42 43 44 45 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0.00197,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00591,"5.0-5.1":0.00985,"6.0-6.1":0.00886,"7.0-7.1":0.03939,"8.1-8.4":0.0197,"9.0-9.2":0.02659,"9.3":0.11719,"10.0-10.2":0.04629,"10.3":0.12704,"11.0-11.2":0.12015,"11.3-11.4":0.07091,"12.0-12.1":0.09356,"12.2-12.4":0.28363,"13.0-13.1":0.0778,"13.2":0.03447,"13.3":0.18514,"13.4-13.7":0.59975,"14.0-14.4":7.39891,"14.5":0.09454},E:{"4":0,"8":0.00338,"11":0.00338,"12":0.00677,"13":0.06091,"14":1.31976,_:"0 5 6 7 9 10 3.1 3.2 6.1 7.1 9.1","5.1":0.18274,"10.1":0.01015,"11.1":0.0203,"12.1":0.03722,"13.1":0.19627,"14.1":0.0203},B:{"12":0.00338,"14":0.00338,"15":0.00677,"16":0.00677,"17":0.01354,"18":0.06091,"84":0.00677,"85":0.00677,"86":0.01015,"87":0.01015,"88":0.01692,"89":1.27915,"90":0.59558,_:"13 79 80 81 83"},P:{"4":0.46093,"5.0-5.4":0.01024,"6.2-6.4":0.01024,"7.2-7.4":0.11267,"8.2":0.01024,"9.2":0.12292,"10.1":0.05121,"11.1-11.2":0.22534,"12.0":0.17413,"13.0":1.83349,"14.0":0.70676},I:{"0":0,"3":0,"4":0.01506,"2.1":0,"2.2":0,"2.3":0,"4.1":0.02108,"4.2-4.3":0.07227,"4.4":0,"4.4.3-4.4.4":0.32824},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.02318,"9":0.02318,"10":0.00773,"11":1.28259,_:"6 7 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":49.51457},S:{"2.5":0.21833},R:{_:"0"},M:{"0":0.17202},Q:{"10.4":0.39696},O:{"0":2.73902},H:{"0":1.32788}};


/***/ }),
/* 485 */
/***/ ((module) => {

module.exports={C:{"45":0.01038,"48":0.01557,"50":0.00519,"52":0.13491,"56":0.02595,"59":0.01038,"60":0.01557,"66":0.01038,"68":0.03113,"69":0.00519,"70":0.00519,"72":0.01557,"75":0.00519,"76":0.00519,"77":0.01557,"78":0.23869,"79":0.02595,"80":0.01557,"81":0.02076,"82":0.0467,"83":0.02595,"84":0.05708,"85":0.07784,"86":0.15567,"87":3.51295,"88":1.45292,"89":0.00519,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 49 51 53 54 55 57 58 61 62 63 64 65 67 71 73 74 90 3.5 3.6"},D:{"22":0.01038,"38":0.01557,"40":0.03632,"43":0.01038,"47":0.00519,"48":0.00519,"49":0.31134,"50":0.01557,"51":0.01038,"52":0.01038,"53":0.05708,"54":0.02076,"56":0.01038,"57":0.00519,"58":0.01038,"59":0.01038,"60":0.03113,"61":0.08302,"63":0.01557,"64":0.01557,"65":0.04151,"66":0.03632,"67":0.02076,"68":0.02595,"69":0.08821,"70":0.02595,"71":0.02595,"72":0.02595,"73":0.02076,"74":0.11416,"75":0.19718,"76":0.04151,"77":0.02595,"78":0.11416,"79":0.22832,"80":0.15567,"81":0.12973,"83":0.17124,"84":0.20756,"85":0.47739,"86":0.23869,"87":0.46701,"88":0.80948,"89":19.16817,"90":7.38395,"91":0.01557,"92":0.00519,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 41 42 44 45 46 55 62 93"},F:{"31":0.00519,"36":0.01557,"40":0.01038,"68":0.00519,"71":0.01038,"72":0.00519,"73":0.7057,"74":0.31134,"75":1.05337,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 37 38 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 69 70 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.00519},G:{"8":0.00287,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0086,"6.0-6.1":0.00717,"7.0-7.1":0.01863,"8.1-8.4":0.0172,"9.0-9.2":0.02867,"9.3":0.19923,"10.0-10.2":0.0215,"10.3":0.1892,"11.0-11.2":0.04873,"11.3-11.4":0.07023,"12.0-12.1":0.05447,"12.2-12.4":0.2236,"13.0-13.1":0.04873,"13.2":0.02293,"13.3":0.14907,"13.4-13.7":0.53177,"14.0-14.4":11.83933,"14.5":0.14763},E:{"4":0,"11":0.01038,"12":0.01557,"13":0.11935,"14":3.90213,_:"0 5 6 7 8 9 10 3.1 3.2 6.1 7.1","5.1":0.02595,"9.1":0.00519,"10.1":0.02595,"11.1":0.08821,"12.1":0.12454,"13.1":0.5656,"14.1":0.07784},B:{"12":0.00519,"14":0.00519,"15":0.00519,"16":0.01038,"17":0.02076,"18":0.15048,"83":0.00519,"84":0.01038,"85":0.02076,"86":0.02076,"87":0.02076,"88":0.04151,"89":3.13416,"90":1.39065,_:"13 79 80 81"},P:{"4":0.17967,"5.0-5.4":0.01057,"6.2-6.4":0.01024,"7.2-7.4":0.11267,"8.2":0.01024,"9.2":0.03171,"10.1":0.03171,"11.1-11.2":0.14797,"12.0":0.11626,"13.0":2.40974,"14.0":1.09918},I:{"0":0,"3":0,"4":0.00508,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0062,"4.2-4.3":0.00959,"4.4":0,"4.4.3-4.4.4":0.06092},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.03533,"8":0.01178,"9":0.01178,"10":0.00589,"11":0.67725,_:"7 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":30.19889},S:{"2.5":0},R:{_:"0"},M:{"0":0.37045},Q:{"10.4":0.00962},O:{"0":0.17801},H:{"0":0.41448}};


/***/ }),
/* 486 */
/***/ ((module) => {

module.exports={C:{"2":0.02012,"3":0.01509,"4":0.0805,"11":0.01509,"38":0.01509,"43":0.00503,"44":0.02012,"45":0.00503,"48":0.01006,"52":0.04528,"54":0.01006,"55":0.00503,"56":0.01006,"58":0.01006,"59":0.00503,"60":0.00503,"63":0.05534,"65":0.00503,"66":0.01006,"68":0.01006,"70":0.01006,"72":0.01006,"76":0.00503,"77":0.00503,"78":0.15093,"79":0.01006,"80":0.01006,"81":0.01509,"82":0.03019,"83":0.01509,"84":0.03019,"85":0.04025,"86":0.10565,"87":1.69545,"88":0.62888,_:"5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 46 47 49 50 51 53 57 61 62 64 67 69 71 73 74 75 89 90","3.5":0.01006,"3.6":0.01006},D:{"4":0.00503,"33":0.01006,"35":0.02516,"38":0.00503,"40":0.02012,"43":0.00503,"47":0.00503,"48":0.05534,"49":0.2113,"53":0.01509,"56":0.0805,"58":0.02012,"59":0.01006,"60":0.01509,"61":0.2113,"62":0.00503,"63":0.01509,"64":0.02012,"65":0.02516,"66":0.04025,"67":0.03522,"68":0.07043,"69":0.02516,"70":0.0805,"71":0.01006,"72":0.04025,"73":0.02516,"74":0.07547,"75":0.13081,"76":0.17609,"77":0.06037,"78":0.12578,"79":0.36223,"80":0.13584,"81":0.09056,"83":0.33708,"84":0.20627,"85":0.2264,"86":0.3572,"87":0.71943,"88":1.38353,"89":17.65881,"90":6.40949,"91":0.02516,"92":0.03522,_:"5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 36 37 39 41 42 44 45 46 50 51 52 54 55 57 93"},F:{"73":0.17105,"74":0.09056,"75":0.2918,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0052,"6.0-6.1":0.01299,"7.0-7.1":0.02598,"8.1-8.4":0.02858,"9.0-9.2":0.02598,"9.3":0.18185,"10.0-10.2":0.03117,"10.3":0.19744,"11.0-11.2":0.08053,"11.3-11.4":0.10132,"12.0-12.1":0.10132,"12.2-12.4":0.34811,"13.0-13.1":0.09872,"13.2":0.04936,"13.3":0.26498,"13.4-13.7":0.94302,"14.0-14.4":22.42734,"14.5":0.29875},E:{"4":0,"8":0.99614,"9":0.01006,"11":0.01509,"12":0.02516,"13":0.15093,"14":5.59447,_:"0 5 6 7 10 3.1 3.2 6.1 7.1","5.1":0.03522,"9.1":0.14087,"10.1":0.04528,"11.1":0.13081,"12.1":0.20124,"13.1":0.83012,"14.1":0.11571},B:{"12":0.01509,"14":0.00503,"15":0.01006,"16":0.01006,"17":0.07043,"18":0.15093,"80":0.00503,"84":0.01006,"85":0.01509,"86":0.02012,"87":0.03019,"88":0.04025,"89":3.51164,"90":1.61495,_:"13 79 81 83"},P:{"4":0.03268,"5.0-5.4":0.01057,"6.2-6.4":0.01024,"7.2-7.4":0.11267,"8.2":0.01024,"9.2":0.02178,"10.1":0.03171,"11.1-11.2":0.08713,"12.0":0.05446,"13.0":1.48129,"14.0":0.76243},I:{"0":0,"3":0,"4":0.02865,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01322,"4.2-4.3":0.0617,"4.4":0,"4.4.3-4.4.4":0.14985},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"7":0.0056,"8":0.01679,"9":0.2462,"10":0.0056,"11":0.87289,_:"6 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":21.8524},S:{"2.5":0},R:{_:"0"},M:{"0":0.38758},Q:{"10.4":0.01491},O:{"0":0.18882},H:{"0":0.2211}};


/***/ }),
/* 487 */
/***/ ((module) => {

module.exports={C:{"34":0.00523,"47":0.00523,"48":0.01045,"52":0.04181,"54":0.01045,"56":0.01045,"60":0.00523,"68":0.01045,"70":0.01045,"72":0.01045,"75":0.00523,"77":0.01045,"78":0.11497,"79":0.00523,"80":0.00523,"81":0.00523,"82":0.04181,"83":0.01045,"84":0.03658,"85":0.04703,"86":0.10452,"87":1.77684,"88":0.63757,"89":0.00523,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 35 36 37 38 39 40 41 42 43 44 45 46 49 50 51 53 55 57 58 59 61 62 63 64 65 66 67 69 71 73 74 76 90 3.5 3.6"},D:{"11":0.01568,"26":0.01568,"34":0.02613,"38":0.11497,"48":0.00523,"49":0.29788,"53":0.1411,"55":0.01045,"56":0.01045,"57":0.01045,"58":0.00523,"59":0.01568,"60":0.01568,"61":0.04181,"63":0.0209,"64":0.0209,"65":0.05749,"66":0.01568,"67":0.04703,"68":0.06794,"69":0.05226,"70":0.04703,"71":0.02613,"72":0.04703,"73":0.04703,"74":0.07316,"75":0.04703,"76":0.05749,"77":0.03136,"78":0.05749,"79":0.09929,"80":0.1202,"81":0.06794,"83":0.09929,"84":0.08362,"85":0.08884,"86":0.41285,"87":0.6637,"88":1.35353,"89":19.92674,"90":7.0551,"91":0.0209,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 35 36 37 39 40 41 42 43 44 45 46 47 50 51 52 54 62 92 93"},F:{"46":0.01568,"73":0.10975,"74":0.07839,"75":0.22472,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0.00475,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01664,"6.0-6.1":0.03804,"7.0-7.1":0.0523,"8.1-8.4":0.0951,"9.0-9.2":0.04279,"9.3":0.52065,"10.0-10.2":0.05706,"10.3":0.49449,"11.0-11.2":0.17117,"11.3-11.4":0.1783,"12.0-12.1":0.17593,"12.2-12.4":0.64427,"13.0-13.1":0.08083,"13.2":0.04042,"13.3":0.29955,"13.4-13.7":0.93669,"14.0-14.4":18.41041,"14.5":0.16879},E:{"4":0,"5":0.00523,"10":0.00523,"11":0.02613,"12":0.04181,"13":0.26653,"14":7.2955,_:"0 6 7 8 9 3.1 3.2 6.1 7.1","5.1":0.00523,"9.1":0.0209,"10.1":0.07316,"11.1":0.15155,"12.1":0.27698,"13.1":1.08178,"14.1":0.09929},B:{"14":0.00523,"15":0.01045,"16":0.01568,"17":0.02613,"18":0.17246,"80":0.01045,"84":0.01568,"85":0.01568,"86":0.0209,"87":0.0209,"88":0.04703,"89":3.32896,"90":1.46851,_:"12 13 79 81 83"},P:{"4":0.26394,"5.0-5.4":0.01057,"6.2-6.4":0.01024,"7.2-7.4":0.11267,"8.2":0.01024,"9.2":0.03299,"10.1":0.03299,"11.1-11.2":0.10997,"12.0":0.10997,"13.0":2.26546,"14.0":1.06675},I:{"0":0,"3":0,"4":0,"2.1":0,"2.2":0,"2.3":0,"4.1":0.0029,"4.2-4.3":0.00725,"4.4":0,"4.4.3-4.4.4":0.04715},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.01063,"9":0.01063,"11":1.22253,_:"7 8 10 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":21.2903},S:{"2.5":0},R:{_:"0"},M:{"0":0.41543},Q:{"10.4":0.05253},O:{"0":0.21488},H:{"0":0.2396}};


/***/ }),
/* 488 */
/***/ ((module) => {

module.exports={C:{"38":0.00493,"52":0.0493,"60":0.00493,"66":0.01972,"68":0.01479,"72":0.00986,"73":0.00493,"77":0.00493,"78":0.05916,"79":0.00986,"80":0.00986,"81":0.00986,"82":0.00986,"83":0.00986,"84":0.02958,"85":0.02465,"86":0.05423,"87":1.31631,"88":0.55216,"89":0.00493,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 43 44 45 46 47 48 49 50 51 53 54 55 56 57 58 59 61 62 63 64 65 67 69 70 71 74 75 76 90 3.5 3.6"},D:{"22":0.00493,"34":0.00493,"38":0.02465,"42":0.00493,"47":0.00986,"49":0.21692,"53":0.03451,"55":0.00986,"58":0.00986,"61":0.09367,"62":0.00493,"63":0.02465,"65":0.01479,"66":0.01972,"67":0.01479,"68":0.01479,"69":0.01479,"70":0.01479,"71":0.01479,"72":0.01479,"73":0.01972,"74":0.01972,"75":0.02958,"76":0.02465,"77":0.02465,"78":0.02958,"79":0.0986,"80":0.06902,"81":0.08874,"83":0.07888,"84":0.10353,"85":0.09367,"86":0.18734,"87":0.37961,"88":0.48314,"89":25.42894,"90":11.37844,"91":0.02958,"92":0.00986,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 32 33 35 36 37 39 40 41 43 44 45 46 48 50 51 52 54 56 57 59 60 64 93"},F:{"36":0.00493,"73":1.29166,"74":0.18734,"75":0.76415,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 71 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},G:{"8":0,"3.2":0.00051,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.01019,"6.0-6.1":0.00357,"7.0-7.1":0.00764,"8.1-8.4":0.00306,"9.0-9.2":0.00153,"9.3":0.05657,"10.0-10.2":0.00408,"10.3":0.04485,"11.0-11.2":0.0107,"11.3-11.4":0.03618,"12.0-12.1":0.01733,"12.2-12.4":0.07899,"13.0-13.1":0.01631,"13.2":0.00612,"13.3":0.05708,"13.4-13.7":0.22475,"14.0-14.4":4.16681,"14.5":0.04994},E:{"4":0,"12":0.00493,"13":0.02958,"14":0.74936,_:"0 5 6 7 8 9 10 11 3.1 3.2 6.1 7.1 9.1","5.1":0.1479,"10.1":0.00493,"11.1":0.01972,"12.1":0.02958,"13.1":0.16762,"14.1":0.01972},B:{"15":0.00493,"16":0.00493,"17":0.00986,"18":0.06902,"84":0.01479,"85":0.00986,"86":0.00493,"87":0.00986,"88":0.01479,"89":1.63183,"90":0.79866,_:"12 13 14 79 80 81 83"},P:{"4":0.17493,"5.0-5.4":0.01057,"6.2-6.4":0.01024,"7.2-7.4":0.13377,"8.2":0.01024,"9.2":0.04116,"10.1":0.02058,"11.1-11.2":0.2058,"12.0":0.09261,"13.0":1.46121,"14.0":0.64828},I:{"0":0,"3":0,"4":0.00101,"2.1":0,"2.2":0,"2.3":0,"4.1":0.00554,"4.2-4.3":0.00907,"4.4":0,"4.4.3-4.4.4":0.0655},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"8":0.0108,"9":0.0108,"11":0.20518,_:"6 7 10 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0},L:{"0":43.81826},S:{"2.5":0},R:{_:"0"},M:{"0":0.13689},Q:{"10.4":0},O:{"0":0.08619},H:{"0":0.192}};


/***/ }),
/* 489 */
/***/ ((module) => {

module.exports={C:{"2":0.01281,"3":0.00427,"4":0.02136,"11":0.00427,"15":0.00854,"18":0.00854,"21":0.00854,"23":0.00854,"25":0.01708,"30":0.00854,"38":0.00427,"43":0.05125,"44":0.00427,"45":0.00427,"47":0.00427,"48":0.00854,"51":0.00854,"52":0.06407,"54":0.00427,"56":0.01281,"59":0.00427,"60":0.00854,"63":0.01708,"66":0.00854,"68":0.01281,"70":0.00427,"72":0.00854,"75":0.00854,"77":0.00854,"78":0.15376,"79":0.01281,"80":0.01281,"81":0.01281,"82":0.02136,"83":0.01281,"84":0.0299,"85":0.03844,"86":0.08542,"87":1.76819,"88":0.70899,"89":0.00854,_:"5 6 7 8 9 10 12 13 14 16 17 19 20 22 24 26 27 28 29 31 32 33 34 35 36 37 39 40 41 42 46 49 50 53 55 57 58 61 62 64 65 67 69 71 73 74 76 90 3.5 3.6"},D:{"19":0.00854,"22":0.00854,"24":0.02563,"30":0.00854,"33":0.01281,"34":0.00854,"35":0.02563,"38":0.02563,"40":0.01281,"43":0.00854,"47":0.00854,"48":0.02136,"49":0.20074,"50":0.00427,"51":0.00427,"52":0.00427,"53":0.05552,"54":0.01281,"55":0.01708,"56":0.06407,"57":0.00854,"58":0.01281,"59":0.00854,"60":0.01281,"61":0.08969,"62":0.00854,"63":0.02136,"64":0.01281,"65":0.02136,"66":0.02136,"67":0.04271,"68":0.04271,"69":0.06834,"70":0.05125,"71":0.02563,"72":0.04698,"73":0.02136,"74":0.11959,"75":0.09396,"76":0.06407,"77":0.03417,"78":0.08115,"79":0.17511,"80":0.1025,"81":0.08115,"83":0.16657,"84":0.13667,"85":0.20501,"86":0.23063,"87":0.43137,"88":0.74315,"89":16.82347,"90":6.40223,"91":0.02136,"92":0.01281,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 21 23 25 26 27 28 29 31 32 36 37 39 41 42 44 45 46 93"},F:{"36":0.00854,"40":0.00427,"43":0.00854,"46":0.00427,"71":0.00427,"73":0.3246,"74":0.15376,"75":0.51679,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 41 42 44 45 47 48 49 50 51 52 53 54 55 56 57 58 60 62 63 64 65 66 67 68 69 70 72 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0.00854},G:{"8":0.00146,"3.2":0,"4.0-4.1":0,"4.2-4.3":0.00292,"5.0-5.1":0.00877,"6.0-6.1":0.15926,"7.0-7.1":0.03214,"8.1-8.4":0.02046,"9.0-9.2":0.0263,"9.3":0.15342,"10.0-10.2":0.05552,"10.3":0.15926,"11.0-11.2":0.09059,"11.3-11.4":0.07744,"12.0-12.1":0.08474,"12.2-12.4":0.28345,"13.0-13.1":0.07159,"13.2":0.03361,"13.3":0.18994,"13.4-13.7":0.64727,"14.0-14.4":11.75305,"14.5":0.15049},E:{"4":0,"5":0.00854,"8":0.23491,"11":0.00854,"12":0.01281,"13":0.09823,"14":2.95126,_:"0 6 7 9 10 3.1 3.2 6.1 7.1","5.1":0.10678,"9.1":0.03417,"10.1":0.02136,"11.1":0.06407,"12.1":0.09823,"13.1":0.43991,"14.1":0.05552},B:{"12":0.00854,"14":0.00427,"15":0.00854,"16":0.00854,"17":0.0299,"18":0.10678,"84":0.00854,"85":0.01281,"86":0.01281,"87":0.01708,"88":0.02563,"89":2.26363,"90":1.03358,_:"13 79 80 81 83"},P:{"4":0.30804,"5.0-5.4":0,"6.2-6.4":0.01026,"7.2-7.4":0.07188,"8.2":0.01026,"9.2":0.07188,"10.1":0.04107,"11.1-11.2":0.17456,"12.0":0.13348,"13.0":1.85851,"14.0":0.8009},I:{"0":0,"3":0,"4":0.01375,"2.1":0,"2.2":0,"2.3":0,"4.1":0.01203,"4.2-4.3":0.05156,"4.4":0,"4.4.3-4.4.4":0.21484},K:{_:"0 10 11 12 11.1 11.5 12.1"},A:{"6":0.01312,"8":0.02624,"9":0.11153,"10":0.0328,"11":0.9054,_:"7 5.5"},J:{"7":0,"10":0},N:{"10":0,"11":0.02978},L:{"0":37.92975},S:{"2.5":0.09739},R:{_:"0"},M:{"0":0.27499},Q:{"10.4":0.1776},O:{"0":1.30048},H:{"0":1.0685}};


/***/ }),
/* 490 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./aac.js": 491,
	"./abortcontroller.js": 492,
	"./ac3-ec3.js": 493,
	"./accelerometer.js": 494,
	"./addeventlistener.js": 495,
	"./alternate-stylesheet.js": 496,
	"./ambient-light.js": 497,
	"./apng.js": 498,
	"./array-find-index.js": 499,
	"./array-find.js": 500,
	"./array-flat.js": 501,
	"./array-includes.js": 502,
	"./arrow-functions.js": 503,
	"./asmjs.js": 504,
	"./async-clipboard.js": 505,
	"./async-functions.js": 506,
	"./atob-btoa.js": 507,
	"./audio-api.js": 508,
	"./audio.js": 509,
	"./audiotracks.js": 510,
	"./autofocus.js": 511,
	"./auxclick.js": 512,
	"./av1.js": 513,
	"./avif.js": 514,
	"./background-attachment.js": 515,
	"./background-clip-text.js": 516,
	"./background-img-opts.js": 517,
	"./background-position-x-y.js": 518,
	"./background-repeat-round-space.js": 519,
	"./background-sync.js": 520,
	"./battery-status.js": 521,
	"./beacon.js": 522,
	"./beforeafterprint.js": 523,
	"./bigint.js": 524,
	"./blobbuilder.js": 525,
	"./bloburls.js": 526,
	"./border-image.js": 527,
	"./border-radius.js": 528,
	"./broadcastchannel.js": 529,
	"./brotli.js": 530,
	"./calc.js": 531,
	"./canvas-blending.js": 532,
	"./canvas-text.js": 533,
	"./canvas.js": 534,
	"./ch-unit.js": 535,
	"./chacha20-poly1305.js": 536,
	"./channel-messaging.js": 537,
	"./childnode-remove.js": 538,
	"./classlist.js": 539,
	"./client-hints-dpr-width-viewport.js": 540,
	"./clipboard.js": 541,
	"./colr.js": 542,
	"./comparedocumentposition.js": 543,
	"./console-basic.js": 544,
	"./console-time.js": 545,
	"./const.js": 546,
	"./constraint-validation.js": 547,
	"./contenteditable.js": 548,
	"./contentsecuritypolicy.js": 549,
	"./contentsecuritypolicy2.js": 550,
	"./cookie-store-api.js": 551,
	"./cors.js": 552,
	"./createimagebitmap.js": 553,
	"./credential-management.js": 554,
	"./cryptography.js": 555,
	"./css-all.js": 556,
	"./css-animation.js": 557,
	"./css-any-link.js": 558,
	"./css-appearance.js": 559,
	"./css-apply-rule.js": 560,
	"./css-at-counter-style.js": 561,
	"./css-backdrop-filter.js": 562,
	"./css-background-offsets.js": 563,
	"./css-backgroundblendmode.js": 564,
	"./css-boxdecorationbreak.js": 565,
	"./css-boxshadow.js": 566,
	"./css-canvas.js": 567,
	"./css-caret-color.js": 568,
	"./css-case-insensitive.js": 569,
	"./css-clip-path.js": 570,
	"./css-color-adjust.js": 571,
	"./css-color-function.js": 572,
	"./css-conic-gradients.js": 573,
	"./css-container-queries.js": 574,
	"./css-containment.js": 575,
	"./css-content-visibility.js": 576,
	"./css-counters.js": 577,
	"./css-crisp-edges.js": 578,
	"./css-cross-fade.js": 579,
	"./css-default-pseudo.js": 580,
	"./css-descendant-gtgt.js": 581,
	"./css-deviceadaptation.js": 582,
	"./css-dir-pseudo.js": 583,
	"./css-display-contents.js": 584,
	"./css-element-function.js": 585,
	"./css-env-function.js": 586,
	"./css-exclusions.js": 587,
	"./css-featurequeries.js": 588,
	"./css-filter-function.js": 589,
	"./css-filters.js": 590,
	"./css-first-letter.js": 591,
	"./css-first-line.js": 592,
	"./css-fixed.js": 593,
	"./css-focus-visible.js": 594,
	"./css-focus-within.js": 595,
	"./css-font-rendering-controls.js": 596,
	"./css-font-stretch.js": 597,
	"./css-gencontent.js": 598,
	"./css-gradients.js": 599,
	"./css-grid.js": 600,
	"./css-hanging-punctuation.js": 601,
	"./css-has.js": 602,
	"./css-hyphenate.js": 603,
	"./css-hyphens.js": 604,
	"./css-image-orientation.js": 605,
	"./css-image-set.js": 606,
	"./css-in-out-of-range.js": 607,
	"./css-indeterminate-pseudo.js": 608,
	"./css-initial-letter.js": 609,
	"./css-initial-value.js": 610,
	"./css-letter-spacing.js": 611,
	"./css-line-clamp.js": 612,
	"./css-logical-props.js": 613,
	"./css-marker-pseudo.js": 614,
	"./css-masks.js": 615,
	"./css-matches-pseudo.js": 616,
	"./css-math-functions.js": 617,
	"./css-media-interaction.js": 618,
	"./css-media-resolution.js": 619,
	"./css-media-scripting.js": 620,
	"./css-mediaqueries.js": 621,
	"./css-mixblendmode.js": 622,
	"./css-motion-paths.js": 623,
	"./css-namespaces.js": 624,
	"./css-not-sel-list.js": 625,
	"./css-nth-child-of.js": 626,
	"./css-opacity.js": 627,
	"./css-optional-pseudo.js": 628,
	"./css-overflow-anchor.js": 629,
	"./css-overflow-overlay.js": 630,
	"./css-overflow.js": 631,
	"./css-overscroll-behavior.js": 632,
	"./css-page-break.js": 633,
	"./css-paged-media.js": 634,
	"./css-paint-api.js": 635,
	"./css-placeholder-shown.js": 636,
	"./css-placeholder.js": 637,
	"./css-read-only-write.js": 638,
	"./css-rebeccapurple.js": 639,
	"./css-reflections.js": 640,
	"./css-regions.js": 641,
	"./css-repeating-gradients.js": 642,
	"./css-resize.js": 643,
	"./css-revert-value.js": 644,
	"./css-rrggbbaa.js": 645,
	"./css-scroll-behavior.js": 646,
	"./css-scroll-timeline.js": 647,
	"./css-scrollbar.js": 648,
	"./css-sel2.js": 649,
	"./css-sel3.js": 650,
	"./css-selection.js": 651,
	"./css-shapes.js": 652,
	"./css-snappoints.js": 653,
	"./css-sticky.js": 654,
	"./css-subgrid.js": 655,
	"./css-supports-api.js": 656,
	"./css-table.js": 657,
	"./css-text-align-last.js": 658,
	"./css-text-indent.js": 659,
	"./css-text-justify.js": 660,
	"./css-text-orientation.js": 661,
	"./css-text-spacing.js": 662,
	"./css-textshadow.js": 663,
	"./css-touch-action-2.js": 664,
	"./css-touch-action.js": 665,
	"./css-transitions.js": 666,
	"./css-unicode-bidi.js": 667,
	"./css-unset-value.js": 668,
	"./css-variables.js": 669,
	"./css-widows-orphans.js": 670,
	"./css-writing-mode.js": 671,
	"./css-zoom.js": 672,
	"./css3-attr.js": 673,
	"./css3-boxsizing.js": 674,
	"./css3-colors.js": 675,
	"./css3-cursors-grab.js": 676,
	"./css3-cursors-newer.js": 677,
	"./css3-cursors.js": 678,
	"./css3-tabsize.js": 679,
	"./currentcolor.js": 680,
	"./custom-elements.js": 681,
	"./custom-elementsv1.js": 682,
	"./customevent.js": 683,
	"./datalist.js": 684,
	"./dataset.js": 685,
	"./datauri.js": 686,
	"./date-tolocaledatestring.js": 687,
	"./details.js": 688,
	"./deviceorientation.js": 689,
	"./devicepixelratio.js": 690,
	"./dialog.js": 691,
	"./dispatchevent.js": 692,
	"./dnssec.js": 693,
	"./do-not-track.js": 694,
	"./document-currentscript.js": 695,
	"./document-evaluate-xpath.js": 696,
	"./document-execcommand.js": 697,
	"./document-policy.js": 698,
	"./document-scrollingelement.js": 699,
	"./documenthead.js": 700,
	"./dom-manip-convenience.js": 701,
	"./dom-range.js": 702,
	"./domcontentloaded.js": 703,
	"./domfocusin-domfocusout-events.js": 704,
	"./dommatrix.js": 705,
	"./download.js": 706,
	"./dragndrop.js": 707,
	"./element-closest.js": 708,
	"./element-from-point.js": 709,
	"./element-scroll-methods.js": 710,
	"./eme.js": 711,
	"./eot.js": 712,
	"./es5.js": 713,
	"./es6-class.js": 714,
	"./es6-generators.js": 715,
	"./es6-module-dynamic-import.js": 716,
	"./es6-module.js": 717,
	"./es6-number.js": 718,
	"./es6-string-includes.js": 719,
	"./es6.js": 720,
	"./eventsource.js": 721,
	"./extended-system-fonts.js": 722,
	"./feature-policy.js": 723,
	"./fetch.js": 724,
	"./fieldset-disabled.js": 725,
	"./fileapi.js": 726,
	"./filereader.js": 727,
	"./filereadersync.js": 728,
	"./filesystem.js": 729,
	"./flac.js": 730,
	"./flexbox-gap.js": 731,
	"./flexbox.js": 732,
	"./flow-root.js": 733,
	"./focusin-focusout-events.js": 734,
	"./focusoptions-preventscroll.js": 735,
	"./font-family-system-ui.js": 736,
	"./font-feature.js": 737,
	"./font-kerning.js": 738,
	"./font-loading.js": 739,
	"./font-metrics-overrides.js": 740,
	"./font-size-adjust.js": 741,
	"./font-smooth.js": 742,
	"./font-unicode-range.js": 743,
	"./font-variant-alternates.js": 744,
	"./font-variant-east-asian.js": 745,
	"./font-variant-numeric.js": 746,
	"./fontface.js": 747,
	"./form-attribute.js": 748,
	"./form-submit-attributes.js": 749,
	"./form-validation.js": 750,
	"./forms.js": 751,
	"./fullscreen.js": 752,
	"./gamepad.js": 753,
	"./geolocation.js": 754,
	"./getboundingclientrect.js": 755,
	"./getcomputedstyle.js": 756,
	"./getelementsbyclassname.js": 757,
	"./getrandomvalues.js": 758,
	"./gyroscope.js": 759,
	"./hardwareconcurrency.js": 760,
	"./hashchange.js": 761,
	"./heif.js": 762,
	"./hevc.js": 763,
	"./hidden.js": 764,
	"./high-resolution-time.js": 765,
	"./history.js": 766,
	"./html-media-capture.js": 767,
	"./html5semantic.js": 768,
	"./http-live-streaming.js": 769,
	"./http2.js": 770,
	"./http3.js": 771,
	"./iframe-sandbox.js": 772,
	"./iframe-seamless.js": 773,
	"./iframe-srcdoc.js": 774,
	"./imagecapture.js": 775,
	"./ime.js": 776,
	"./img-naturalwidth-naturalheight.js": 777,
	"./import-maps.js": 778,
	"./imports.js": 779,
	"./indeterminate-checkbox.js": 780,
	"./indexeddb.js": 781,
	"./indexeddb2.js": 782,
	"./inline-block.js": 783,
	"./innertext.js": 784,
	"./input-autocomplete-onoff.js": 785,
	"./input-color.js": 786,
	"./input-datetime.js": 787,
	"./input-email-tel-url.js": 788,
	"./input-event.js": 789,
	"./input-file-accept.js": 790,
	"./input-file-directory.js": 791,
	"./input-file-multiple.js": 792,
	"./input-inputmode.js": 793,
	"./input-minlength.js": 794,
	"./input-number.js": 795,
	"./input-pattern.js": 796,
	"./input-placeholder.js": 797,
	"./input-range.js": 798,
	"./input-search.js": 799,
	"./input-selection.js": 800,
	"./insert-adjacent.js": 801,
	"./insertadjacenthtml.js": 802,
	"./internationalization.js": 803,
	"./intersectionobserver-v2.js": 804,
	"./intersectionobserver.js": 805,
	"./intl-pluralrules.js": 806,
	"./intrinsic-width.js": 807,
	"./jpeg2000.js": 808,
	"./jpegxl.js": 809,
	"./jpegxr.js": 810,
	"./js-regexp-lookbehind.js": 811,
	"./json.js": 812,
	"./justify-content-space-evenly.js": 813,
	"./kerning-pairs-ligatures.js": 814,
	"./keyboardevent-charcode.js": 815,
	"./keyboardevent-code.js": 816,
	"./keyboardevent-getmodifierstate.js": 817,
	"./keyboardevent-key.js": 818,
	"./keyboardevent-location.js": 819,
	"./keyboardevent-which.js": 820,
	"./lazyload.js": 821,
	"./let.js": 822,
	"./link-icon-png.js": 823,
	"./link-icon-svg.js": 824,
	"./link-rel-dns-prefetch.js": 825,
	"./link-rel-modulepreload.js": 826,
	"./link-rel-preconnect.js": 827,
	"./link-rel-prefetch.js": 828,
	"./link-rel-preload.js": 829,
	"./link-rel-prerender.js": 830,
	"./loading-lazy-attr.js": 831,
	"./localecompare.js": 832,
	"./magnetometer.js": 833,
	"./matchesselector.js": 834,
	"./matchmedia.js": 835,
	"./mathml.js": 836,
	"./maxlength.js": 837,
	"./media-attribute.js": 838,
	"./media-fragments.js": 839,
	"./media-session-api.js": 840,
	"./mediacapture-fromelement.js": 841,
	"./mediarecorder.js": 842,
	"./mediasource.js": 843,
	"./menu.js": 844,
	"./meta-theme-color.js": 845,
	"./meter.js": 846,
	"./midi.js": 847,
	"./minmaxwh.js": 848,
	"./mp3.js": 849,
	"./mpeg-dash.js": 850,
	"./mpeg4.js": 851,
	"./multibackgrounds.js": 852,
	"./multicolumn.js": 853,
	"./mutation-events.js": 854,
	"./mutationobserver.js": 855,
	"./namevalue-storage.js": 856,
	"./native-filesystem-api.js": 857,
	"./nav-timing.js": 858,
	"./navigator-language.js": 859,
	"./netinfo.js": 860,
	"./notifications.js": 861,
	"./object-entries.js": 862,
	"./object-fit.js": 863,
	"./object-observe.js": 864,
	"./object-values.js": 865,
	"./objectrtc.js": 866,
	"./offline-apps.js": 867,
	"./offscreencanvas.js": 868,
	"./ogg-vorbis.js": 869,
	"./ogv.js": 870,
	"./ol-reversed.js": 871,
	"./once-event-listener.js": 872,
	"./online-status.js": 873,
	"./opus.js": 874,
	"./orientation-sensor.js": 875,
	"./outline.js": 876,
	"./pad-start-end.js": 877,
	"./page-transition-events.js": 878,
	"./pagevisibility.js": 879,
	"./passive-event-listener.js": 880,
	"./passwordrules.js": 881,
	"./path2d.js": 882,
	"./payment-request.js": 883,
	"./pdf-viewer.js": 884,
	"./permissions-api.js": 885,
	"./permissions-policy.js": 886,
	"./picture-in-picture.js": 887,
	"./picture.js": 888,
	"./ping.js": 889,
	"./png-alpha.js": 890,
	"./pointer-events.js": 891,
	"./pointer.js": 892,
	"./pointerlock.js": 893,
	"./portals.js": 894,
	"./prefers-color-scheme.js": 895,
	"./prefers-reduced-motion.js": 896,
	"./private-class-fields.js": 897,
	"./private-methods-and-accessors.js": 898,
	"./progress.js": 899,
	"./promise-finally.js": 900,
	"./promises.js": 901,
	"./proximity.js": 902,
	"./proxy.js": 903,
	"./public-class-fields.js": 904,
	"./publickeypinning.js": 905,
	"./push-api.js": 906,
	"./queryselector.js": 907,
	"./readonly-attr.js": 908,
	"./referrer-policy.js": 909,
	"./registerprotocolhandler.js": 910,
	"./rel-noopener.js": 911,
	"./rel-noreferrer.js": 912,
	"./rellist.js": 913,
	"./rem.js": 914,
	"./requestanimationframe.js": 915,
	"./requestidlecallback.js": 916,
	"./resizeobserver.js": 917,
	"./resource-timing.js": 918,
	"./rest-parameters.js": 919,
	"./rtcpeerconnection.js": 920,
	"./ruby.js": 921,
	"./run-in.js": 922,
	"./same-site-cookie-attribute.js": 923,
	"./screen-orientation.js": 924,
	"./script-async.js": 925,
	"./script-defer.js": 926,
	"./scrollintoview.js": 927,
	"./scrollintoviewifneeded.js": 928,
	"./sdch.js": 929,
	"./selection-api.js": 930,
	"./server-timing.js": 931,
	"./serviceworkers.js": 932,
	"./setimmediate.js": 933,
	"./sha-2.js": 934,
	"./shadowdom.js": 935,
	"./shadowdomv1.js": 936,
	"./sharedarraybuffer.js": 937,
	"./sharedworkers.js": 938,
	"./sni.js": 939,
	"./spdy.js": 940,
	"./speech-recognition.js": 941,
	"./speech-synthesis.js": 942,
	"./spellcheck-attribute.js": 943,
	"./sql-storage.js": 944,
	"./srcset.js": 945,
	"./stream.js": 946,
	"./streams.js": 947,
	"./stricttransportsecurity.js": 948,
	"./style-scoped.js": 949,
	"./subresource-integrity.js": 950,
	"./svg-css.js": 951,
	"./svg-filters.js": 952,
	"./svg-fonts.js": 953,
	"./svg-fragment.js": 954,
	"./svg-html.js": 955,
	"./svg-html5.js": 956,
	"./svg-img.js": 957,
	"./svg-smil.js": 958,
	"./svg.js": 959,
	"./sxg.js": 960,
	"./tabindex-attr.js": 961,
	"./template-literals.js": 962,
	"./template.js": 963,
	"./testfeat.js": 964,
	"./text-decoration.js": 965,
	"./text-emphasis.js": 966,
	"./text-overflow.js": 967,
	"./text-size-adjust.js": 968,
	"./text-stroke.js": 969,
	"./text-underline-offset.js": 970,
	"./textcontent.js": 971,
	"./textencoder.js": 972,
	"./tls1-1.js": 973,
	"./tls1-2.js": 974,
	"./tls1-3.js": 975,
	"./token-binding.js": 976,
	"./touch.js": 977,
	"./transforms2d.js": 978,
	"./transforms3d.js": 979,
	"./trusted-types.js": 980,
	"./ttf.js": 981,
	"./typedarrays.js": 982,
	"./u2f.js": 983,
	"./unhandledrejection.js": 984,
	"./upgradeinsecurerequests.js": 985,
	"./url-scroll-to-text-fragment.js": 986,
	"./url.js": 987,
	"./urlsearchparams.js": 988,
	"./use-strict.js": 989,
	"./user-select-none.js": 990,
	"./user-timing.js": 991,
	"./variable-fonts.js": 992,
	"./vector-effect.js": 993,
	"./vibration.js": 994,
	"./video.js": 995,
	"./videotracks.js": 996,
	"./viewport-units.js": 997,
	"./wai-aria.js": 998,
	"./wake-lock.js": 999,
	"./wasm.js": 1000,
	"./wav.js": 1001,
	"./wbr-element.js": 1002,
	"./web-animation.js": 1003,
	"./web-app-manifest.js": 1004,
	"./web-bluetooth.js": 1005,
	"./web-serial.js": 1006,
	"./web-share.js": 1007,
	"./webauthn.js": 1008,
	"./webgl.js": 1009,
	"./webgl2.js": 1010,
	"./webgpu.js": 1011,
	"./webhid.js": 1012,
	"./webkit-user-drag.js": 1013,
	"./webm.js": 1014,
	"./webnfc.js": 1015,
	"./webp.js": 1016,
	"./websockets.js": 1017,
	"./webusb.js": 1018,
	"./webvr.js": 1019,
	"./webvtt.js": 1020,
	"./webworkers.js": 1021,
	"./webxr.js": 1022,
	"./will-change.js": 1023,
	"./woff.js": 1024,
	"./woff2.js": 1025,
	"./word-break.js": 1026,
	"./wordwrap.js": 1027,
	"./x-doc-messaging.js": 1028,
	"./x-frame-options.js": 1029,
	"./xhr2.js": 1030,
	"./xhtml.js": 1031,
	"./xhtmlsmil.js": 1032,
	"./xml-serializer.js": 1033
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 490;

/***/ }),
/* 491 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d jB kB","132":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F","16":"A B"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"132":"P"},N:{"1":"A","2":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"132":"dC"}},B:6,C:"AAC audio file format"};


/***/ }),
/* 492 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K L"},C:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB jB kB"},D:{"1":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB"},E:{"1":"J K UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB","130":"C TB"},F:{"1":"9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H SC TC UC VC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"AbortController & AbortSignal"};


/***/ }),
/* 493 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O","2":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B","132":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D","132":"A"},K:{"2":"A B C Q TB eB","132":"UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"132":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs"};


/***/ }),
/* 494 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB XB FB YB Q GB HB IB JB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Accelerometer"};


/***/ }),
/* 495 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","130":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","257":"hB WB H a I jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"EventTarget.addEventListener()"};


/***/ }),
/* 496 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","2":"I D gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"F B C wB xB yB zB TB eB 0B UB","16":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"16":"G"},M:{"16":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"16":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"16":"cC"},S:{"1":"dC"}},B:1,C:"Alternate stylesheet"};


/***/ }),
/* 497 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J","132":"K L M N O","322":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d jB kB","132":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB","194":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","322":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB wB xB yB zB TB eB 0B UB","322":"QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"132":"dC"}},B:4,C:"Ambient Light Sensor"};


/***/ }),
/* 498 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB"},D:{"1":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB"},E:{"1":"E F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB rB"},F:{"1":"2 3 4 5 6 7 8 9 B C AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"0 1 F L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:7,C:"Animated PNG (APNG)"};


/***/ }),
/* 499 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","16":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Array.prototype.findIndex"};


/***/ }),
/* 500 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","16":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","16":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Array.prototype.find"};


/***/ }),
/* 501 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB jB kB"},D:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB"},E:{"1":"C J K UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB TB"},F:{"1":"CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB wB xB yB zB TB eB 0B UB"},G:{"1":"CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"flat & flatMap array methods"};


/***/ }),
/* 502 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y jB kB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Array.prototype.includes"};


/***/ }),
/* 503 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d jB kB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Arrow functions"};


/***/ }),
/* 504 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O","132":"R S T U V W X P Y Z G VB","322":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d jB kB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j","132":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","132":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","132":"Q"},L:{"132":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H","132":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"1":"dC"}},B:6,C:"asm.js"};


/***/ }),
/* 505 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q jB kB","132":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","66":"EB XB FB YB"},E:{"1":"K tB uB vB","2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC","260":"IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","260":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","260":"Q"},L:{"1":"G"},M:{"132":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC","260":"WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Asynchronous Clipboard API"};


/***/ }),
/* 506 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C J","194":"K"},C:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB","514":"dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B","514":"9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Async functions"};


/***/ }),
/* 507 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","2":"F wB xB","16":"yB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","16":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Base64 encoding and decoding"};


/***/ }),
/* 508 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J","33":"K L M N O b c d e f g h i j k l m n o p"},E:{"1":"uB vB","2":"H a oB cB pB","33":"I D E F A B C J K qB rB sB dB TB UB tB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d"},G:{"1":"JC","2":"cB 1B fB 2B","33":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Web Audio API"};


/***/ }),
/* 509 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","132":"H a I D E F A B C J K L M N O b jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F","4":"wB xB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","2":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Audio element"};


/***/ }),
/* 510 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O","322":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB","194":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","322":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a I oB cB pB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n wB xB yB zB TB eB 0B UB","322":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","322":"Q"},L:{"322":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:1,C:"Audio Tracks"};


/***/ }),
/* 511 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:1,C:"Autofocus attribute"};


/***/ }),
/* 512 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","129":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","16":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"Auxclick"};


/***/ }),
/* 513 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N","194":"O"},C:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB jB kB","66":"BB CB DB EB XB FB YB Q GB HB","260":"IB","516":"JB"},D:{"1":"NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB","66":"KB LB MB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1090":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"YC ZC aC","2":"H SC TC UC VC WC dB XC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"AV1 video format"};


/***/ }),
/* 514 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB jB kB","450":"aB bB R S T iB U V W X P Y Z G"},D:{"1":"W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"450":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"AVIF image format"};


/***/ }),
/* 515 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","132":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","132":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","132":"F wB xB"},G:{"2":"cB 1B fB","772":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC PC QC","132":"OC fB"},J:{"260":"D A"},K:{"1":"B C Q TB eB UB","132":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"2":"H","1028":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1028":"cC"},S:{"1":"dC"}},B:4,C:"CSS background-attachment"};


/***/ }),
/* 516 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O","33":"C J K R S T U V W X P Y Z G VB"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"16":"oB cB","33":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"16":"cB 1B fB 2B","33":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"16":"WB LC MC NC","33":"H G OC fB PC QC"},J:{"33":"D A"},K:{"16":"A B C TB eB UB","33":"Q"},L:{"33":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"33":"RC"},P:{"33":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"33":"cC"},S:{"1":"dC"}},B:7,C:"Background-clip: text"};


/***/ }),
/* 517 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB","36":"kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","516":"H a I D E F A B C J K"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","772":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB","36":"xB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","4":"cB 1B fB 3B","516":"2B"},H:{"132":"KC"},I:{"1":"G PC QC","36":"LC","516":"WB H OC fB","548":"MC NC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 Background-image options"};


/***/ }),
/* 518 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"background-position-x & background-position-y"};


/***/ }),
/* 519 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E gB","132":"F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F L M N O wB xB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:4,C:"CSS background-repeat round and space"};


/***/ }),
/* 520 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y jB kB","16":"Z G"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Background Sync API"};


/***/ }),
/* 521 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 z","2":"8 9 hB WB H a I D E F AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","132":"M N O b c d e f g h i j k l m n o p q r s t u v w x y","164":"A B C J K L"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s","66":"t"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Battery Status API"};


/***/ }),
/* 522 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Beacon API"};


/***/ }),
/* 523 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","16":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"2":"SC TC UC VC WC dB XC YC ZC aC","16":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:1,C:"Printing Events"};


/***/ }),
/* 524 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB jB kB","194":"IB JB KB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB"},E:{"1":"K uB vB","2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB tB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H SC TC UC VC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"BigInt"};


/***/ }),
/* 525 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB","36":"I D E F A B C"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D","36":"E F A B C J K L M N O b"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B C wB xB yB zB TB eB 0B"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"G","2":"LC MC NC","36":"WB H OC fB PC QC"},J:{"1":"A","2":"D"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Blob constructing"};


/***/ }),
/* 526 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","129":"A B"},B:{"1":"L M N O R S T U V W X P Y Z G VB","129":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D","33":"E F A B C J K L M N O b c d e"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","33":"3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB LC MC NC","33":"H OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Blob URLs"};


/***/ }),
/* 527 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","129":"C J"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","260":"0 1 2 3 4 5 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","804":"H a I D E F A B C J K jB kB"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","260":"7 8 9 AB BB","388":"0 1 2 3 4 5 6 m n o p q r s t u v w x y z","1412":"L M N O b c d e f g h i j k l","1956":"H a I D E F A B C J K"},E:{"129":"A B C J K sB dB TB UB tB uB vB","1412":"I D E F qB rB","1956":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB xB","260":"u v w x y","388":"L M N O b c d e f g h i j k l m n o p q r s t","1796":"yB zB","1828":"B C TB eB 0B UB"},G:{"129":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","1412":"E 3B 4B 5B 6B","1956":"cB 1B fB 2B"},H:{"1828":"KC"},I:{"1":"G","388":"PC QC","1956":"WB H LC MC NC OC fB"},J:{"1412":"A","1924":"D"},K:{"1":"Q","2":"A","1828":"B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"388":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","260":"SC TC","388":"H"},Q:{"260":"bC"},R:{"260":"cC"},S:{"260":"dC"}},B:4,C:"CSS3 Border images"};


/***/ }),
/* 528 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","257":"0 1 2 3 4 5 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","289":"WB jB kB","292":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H"},E:{"1":"a D E F A B C J K rB sB dB TB UB tB uB vB","33":"H oB cB","129":"I pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"cB"},H:{"2":"KC"},I:{"1":"WB H G MC NC OC fB PC QC","33":"LC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"257":"dC"}},B:4,C:"CSS3 Border-radius (rounded corners)"};


/***/ }),
/* 529 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t jB kB"},D:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:1,C:"BroadcastChannel"};


/***/ }),
/* 530 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"5","257":"6"},E:{"1":"J K tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","513":"B C TB UB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB","194":"s t"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:6,C:"Brotli Accept-Encoding/Content-Encoding"};


/***/ }),
/* 531 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","260":"F","516":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","33":"H a I D E F A B C J K L"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O","33":"b c d e f g h"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","33":"3B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB","132":"PC QC"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"calc() as CSS unit value"};


/***/ }),
/* 532 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a I oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Canvas blend modes"};


/***/ }),
/* 533 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","8":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","8":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","8":"F wB xB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","8":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Text API for Canvas"};


/***/ }),
/* 534 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","132":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","132":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"260":"KC"},I:{"1":"WB H G OC fB PC QC","132":"LC MC NC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Canvas (basic support)"};


/***/ }),
/* 535 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","132":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"ch (character) unit"};


/***/ }),
/* 536 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o","129":"0 1 2 3 4 p q r s t u v w x y z"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC","16":"QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ChaCha20-Poly1305 cipher suites for TLS"};


/***/ }),
/* 537 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h jB kB","194":"i j k l m n o p q r s t u v w"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","2":"F wB xB","16":"yB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Channel messaging"};


/***/ }),
/* 538 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","16":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"ChildNode.remove()"};


/***/ }),
/* 539 */
/***/ ((module) => {

module.exports={A:{A:{"8":"I D E F gB","1924":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB jB","516":"g h","772":"H a I D E F A B C J K L M N O b c d e f kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H a I D","516":"g h i j","772":"f","900":"E F A B C J K L M N O b c d e"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","8":"H a oB cB","900":"I pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","8":"F B wB xB yB zB TB","900":"C eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB","900":"2B 3B"},H:{"900":"KC"},I:{"1":"G PC QC","8":"LC MC NC","900":"WB H OC fB"},J:{"1":"A","900":"D"},K:{"1":"Q","8":"A B","900":"C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"900":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"classList (DOMTokenList)"};


/***/ }),
/* 540 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:6,C:"Client Hints: DPR, Width, Viewport-Width"};


/***/ }),
/* 541 */
/***/ ((module) => {

module.exports={A:{A:{"2436":"I D E F A B gB"},B:{"260":"N O","2436":"C J K L M","8196":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d jB kB","772":"e f g h i j k l m n o p q r s t u v w","4100":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"H a I D E F A B C","2564":"J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y","8196":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","10244":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB"},E:{"1":"C J K UB tB uB vB","16":"oB cB","2308":"A B dB TB","2820":"H a I D E F pB qB rB sB"},F:{"2":"F B wB xB yB zB TB eB 0B","16":"C","516":"UB","2564":"L M N O b c d e f g h i j k l","8196":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","10244":"0 m n o p q r s t u v w x y z"},G:{"1":"CC DC EC FC GC HC IC JC","2":"cB 1B fB","2820":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","260":"G","2308":"PC QC"},J:{"2":"D","2308":"A"},K:{"2":"A B C TB eB","16":"UB","1028":"Q"},L:{"8196":"G"},M:{"1028":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2052":"SC TC","2308":"H","8196":"UC VC WC dB XC YC ZC aC"},Q:{"10244":"bC"},R:{"2052":"cC"},S:{"4100":"dC"}},B:5,C:"Synchronous Clipboard API"};


/***/ }),
/* 542 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","257":"F A B"},B:{"1":"C J K L M N O","513":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB","513":"OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"K uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","129":"B C J TB UB tB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB wB xB yB zB TB eB 0B UB","513":"EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"16":"A B"},O:{"1":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"COLR/CPAL(v0) Font Formats"};


/***/ }),
/* 543 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","132":"L M N O b c d e f g h i j k l"},E:{"1":"A B C J K dB TB UB tB uB vB","16":"H a I oB cB","132":"D E F qB rB sB","260":"pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","16":"F B wB xB yB zB TB eB","132":"L M"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB","132":"E 1B fB 2B 3B 4B 5B 6B 7B"},H:{"1":"KC"},I:{"1":"G PC QC","16":"LC MC","132":"WB H NC OC fB"},J:{"132":"D A"},K:{"1":"C Q UB","16":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Node.compareDocumentPosition()"};


/***/ }),
/* 544 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D gB","132":"E F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F wB xB yB zB"},G:{"1":"cB 1B fB 2B","513":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"4097":"KC"},I:{"1025":"WB H G LC MC NC OC fB PC QC"},J:{"258":"D A"},K:{"2":"A","258":"B C Q TB eB UB"},L:{"1025":"G"},M:{"2049":"P"},N:{"258":"A B"},O:{"258":"RC"},P:{"1025":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1025":"cC"},S:{"1":"dC"}},B:1,C:"Basic console logging functions"};


/***/ }),
/* 545 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F wB xB yB zB","16":"B"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"Q","16":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"console.time and console.timeEnd"};


/***/ }),
/* 546 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","2052":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"hB WB H a I D E F A B C jB kB","260":"J K L M N O b c d e f g h i j k l m n o p q r"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","260":"H a I D E F A B C J K L M N O b c","772":"d e f g h i j k l m n o p q r s t u v w","1028":"0 1 2 3 4 x y z"},E:{"1":"A B C J K dB TB UB tB uB vB","260":"H a oB cB","772":"I D E F pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB","132":"B xB yB zB TB eB","644":"C 0B UB","772":"L M N O b c d e f g h i j","1028":"k l m n o p q r"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","260":"cB 1B fB","772":"E 2B 3B 4B 5B 6B 7B"},H:{"644":"KC"},I:{"1":"G","16":"LC MC","260":"NC","772":"WB H OC fB PC QC"},J:{"772":"D A"},K:{"1":"Q","132":"A B TB eB","644":"C UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","1028":"H"},Q:{"1":"bC"},R:{"1028":"cC"},S:{"1":"dC"}},B:6,C:"const"};


/***/ }),
/* 547 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","900":"A B"},B:{"1":"N O R S T U V W X P Y Z G VB","388":"K L M","900":"C J"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","260":"5 6","388":"0 1 2 3 4 l m n o p q r s t u v w x y z","900":"H a I D E F A B C J K L M N O b c d e f g h i j k"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","388":"h i j k l m n o p q r s t u v","900":"L M N O b c d e f g"},E:{"1":"A B C J K dB TB UB tB uB vB","16":"H a oB cB","388":"E F rB sB","900":"I D pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F B wB xB yB zB TB eB","388":"L M N O b c d e f g h i","900":"C 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB","388":"E 4B 5B 6B 7B","900":"2B 3B"},H:{"2":"KC"},I:{"1":"G","16":"WB LC MC NC","388":"PC QC","900":"H OC fB"},J:{"16":"D","388":"A"},K:{"1":"Q","16":"A B TB eB","900":"C UB"},L:{"1":"G"},M:{"1":"P"},N:{"900":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"388":"dC"}},B:1,C:"Constraint Validation API"};


/***/ }),
/* 548 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB","4":"WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"contenteditable attribute (basic support)"};


/***/ }),
/* 549 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","129":"H a I D E F A B C J K L M N O b c d e"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J","257":"K L M N O b c d e f g"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a oB cB","257":"I qB","260":"pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","257":"3B","260":"2B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D","257":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"257":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Content Security Policy 1.0"};


/***/ }),
/* 550 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K","32772":"L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB","132":"n o p q","260":"r","516":"0 s t u v w x y z","8196":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r","1028":"s t u","2052":"v"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e wB xB yB zB TB eB 0B UB","1028":"f g h","2052":"i"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"4100":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"8196":"dC"}},B:2,C:"Content Security Policy Level 2"};


/***/ }),
/* 551 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"P Y Z G VB","2":"C J K L M N O","194":"R S T U V W X"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB","194":"HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"RB SB","2":"0 1 2 3 4 5 6 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","194":"7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Cookie Store API"};


/***/ }),
/* 552 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D gB","132":"A","260":"E F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB","1025":"YB Q GB HB IB JB KB LB MB NB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C"},E:{"2":"oB cB","513":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","644":"H a pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B"},G:{"513":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","644":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"G PC QC","132":"WB H LC MC NC OC fB"},J:{"1":"A","132":"D"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","132":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Cross-Origin Resource Sharing"};


/***/ }),
/* 553 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x jB kB","3076":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","132":"6 7","260":"8 9","516":"AB BB CB DB EB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s wB xB yB zB TB eB 0B UB","132":"t u","260":"v w","516":"0 1 x y z"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"3076":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","16":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"3076":"dC"}},B:1,C:"createImageBitmap"};


/***/ }),
/* 554 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","66":"4 5 6","129":"7 8 9 AB BB CB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Credential Management API"};


/***/ }),
/* 555 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E F A","164":"B"},B:{"1":"R S T U V W X P Y Z G VB","513":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n jB kB","66":"o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s"},E:{"1":"B C J K TB UB tB uB vB","8":"H a I D oB cB pB qB","289":"E F A rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","8":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB 2B 3B 4B","289":"E 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","8":"WB H LC MC NC OC fB PC QC"},J:{"8":"D A"},K:{"1":"Q","8":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A","164":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Web Cryptography"};


/***/ }),
/* 556 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G QC","2":"WB H LC MC NC OC fB PC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS all property"};


/***/ }),
/* 557 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H jB kB","33":"a I D E F A B C J K L"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"oB cB","33":"I D E pB qB rB","292":"H a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B","33":"C L M N O b c d e f g h i j k l"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"E 3B 4B 5B","164":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"G","33":"H OC fB PC QC","164":"WB LC MC NC"},J:{"33":"D A"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS Animation"};


/***/ }),
/* 558 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB","33":"0 1 2 3 4 5 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","16":"H a I oB cB pB","33":"D E qB rB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B","33":"E 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","16":"WB H LC MC NC OC fB","33":"PC QC"},J:{"16":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"33":"RC"},P:{"1":"WC dB XC YC ZC aC","16":"H","33":"SC TC UC VC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"33":"dC"}},B:5,C:"CSS :any-link selector"};


/***/ }),
/* 559 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"V W X P Y Z G VB","33":"U","164":"R S T","388":"C J K L M N O"},C:{"1":"S T iB U V W X P Y Z G","164":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","676":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q jB kB"},D:{"1":"V W X P Y Z G VB lB mB nB","33":"U","164":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T"},E:{"164":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"NB OB PB","164":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB"},G:{"164":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","164":"WB H LC MC NC OC fB PC QC"},J:{"164":"D A"},K:{"2":"A B C TB eB UB","164":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A","388":"B"},O:{"164":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"164":"bC"},R:{"164":"cC"},S:{"164":"dC"}},B:5,C:"CSS Appearance"};


/***/ }),
/* 560 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","194":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t wB xB yB zB TB eB 0B UB","194":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","194":"Q"},L:{"194":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H","194":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"194":"cC"},S:{"2":"dC"}},B:7,C:"CSS @apply rule"};


/***/ }),
/* 561 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G","132":"VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB","132":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G","132":"VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"132":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"132":"dC"}},B:4,C:"CSS Counter Styles"};


/***/ }),
/* 562 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M","257":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB jB kB","578":"NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},E:{"2":"H a I D E oB cB pB qB rB","33":"F A B C J K sB dB TB UB tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p wB xB yB zB TB eB 0B UB","194":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB Q GB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B","33":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"578":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"YC ZC aC","2":"H","194":"SC TC UC VC WC dB XC"},Q:{"194":"bC"},R:{"194":"cC"},S:{"2":"dC"}},B:7,C:"CSS Backdrop Filter"};


/***/ }),
/* 563 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS background-position edge offsets"};


/***/ }),
/* 564 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l jB kB"},D:{"1":"0 1 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q","260":"2"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D oB cB pB qB","132":"E F A rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d wB xB yB zB TB eB 0B UB","260":"p"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","132":"E 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS background-blend-mode"};


/***/ }),
/* 565 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","164":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n jB kB"},D:{"2":"H a I D E F A B C J K L M N O b c d","164":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I oB cB pB","164":"D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"2":"F wB xB yB zB","129":"B C TB eB 0B UB","164":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B fB 2B 3B","164":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"132":"KC"},I:{"2":"WB H LC MC NC OC fB","164":"G PC QC"},J:{"2":"D","164":"A"},K:{"2":"A","129":"B C TB eB UB","164":"Q"},L:{"164":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"164":"bC"},R:{"164":"cC"},S:{"1":"dC"}},B:5,C:"CSS box-decoration-break"};


/***/ }),
/* 566 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","33":"jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H a I D E F"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","33":"a","164":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"1B fB","164":"cB"},H:{"2":"KC"},I:{"1":"H G OC fB PC QC","164":"WB LC MC NC"},J:{"1":"A","33":"D"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 Box-shadow"};


/***/ }),
/* 567 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"0 1 2 3 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"2":"oB cB","33":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","33":"L M N O b c d e f g h i j k l m n o p q"},G:{"33":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"G","33":"WB H LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"SC TC UC VC WC dB XC YC ZC aC","33":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS Canvas Drawings"};


/***/ }),
/* 568 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"CSS caret-color"};


/***/ }),
/* 569 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:5,C:"Case-insensitive CSS attribute selectors"};


/***/ }),
/* 570 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N","260":"R S T U V W X P Y Z G VB","3138":"O"},C:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","132":"0 1 2 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","644":"3 4 5 6 7 8 9"},D:{"2":"H a I D E F A B C J K L M N O b c d e f","260":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","292":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB"},E:{"2":"H a I oB cB pB qB","292":"D E F A B C J K rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","260":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","292":"L M N O b c d e f g h i j k l m n o p q r s t u v w x"},G:{"2":"cB 1B fB 2B 3B","292":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","260":"G","292":"PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","260":"Q"},L:{"260":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"292":"RC"},P:{"292":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"292":"bC"},R:{"260":"cC"},S:{"644":"dC"}},B:4,C:"CSS clip-path property (for HTML)"};


/***/ }),
/* 571 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","33":"R S T U V W X P Y Z G VB"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"16":"H a I D E F A B C J K L M N O","33":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a oB cB pB","33":"I D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"16":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"16":"WB H LC MC NC OC fB PC QC","33":"G"},J:{"16":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"16":"G"},M:{"1":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"16":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"16":"cC"},S:{"1":"dC"}},B:5,C:"CSS color-adjust"};


/***/ }),
/* 572 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS `color()` function"};


/***/ }),
/* 573 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB jB kB","578":"SB ZB aB bB R S T iB"},D:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","194":"XB FB YB Q GB HB IB JB KB LB"},E:{"1":"J K UB tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","194":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB"},G:{"1":"DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Conical Gradients"};


/***/ }),
/* 574 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB","194":"lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS Container Queries"};


/***/ }),
/* 575 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w jB kB","194":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB"},D:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","66":"7"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t wB xB yB zB TB eB 0B UB","66":"u v"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:2,C:"CSS Containment"};


/***/ }),
/* 576 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"W X P Y Z G VB","2":"C J K L M N O R S T U V"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB","16":"vB"},F:{"1":"OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS content-visibility"};


/***/ }),
/* 577 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","2":"I D gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS Counters"};


/***/ }),
/* 578 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I gB","2340":"D E F A B"},B:{"2":"C J K L M N O","1025":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB jB","513":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","545":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB kB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w","1025":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a oB cB pB","164":"I","4644":"D E F qB rB sB"},F:{"2":"F B L M N O b c d e f g h i j wB xB yB zB TB eB","545":"C 0B UB","1025":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","4260":"2B 3B","4644":"E 4B 5B 6B 7B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","1025":"G"},J:{"2":"D","4260":"A"},K:{"2":"A B TB eB","545":"C UB","1025":"Q"},L:{"1025":"G"},M:{"545":"P"},N:{"2340":"A B"},O:{"1":"RC"},P:{"1025":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1025":"bC"},R:{"1025":"cC"},S:{"4097":"dC"}},B:7,C:"Crisp edges/pixelated images"};


/***/ }),
/* 579 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","33":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"H a I D E F A B C J K L M","33":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a oB cB","33":"I D E F pB qB rB sB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","33":"E 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","33":"G PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","33":"Q"},L:{"33":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"33":"RC"},P:{"33":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"33":"cC"},S:{"2":"dC"}},B:4,C:"CSS Cross-Fade Function"};


/***/ }),
/* 580 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB WB jB kB"},D:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","132":"0 1 2 3 4 5 6 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","16":"H a oB cB","132":"I D E F A pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F B wB xB yB zB TB eB","132":"L M N O b c d e f g h i j k l m n o p q r s t","260":"C 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B 3B","132":"E 4B 5B 6B 7B 8B"},H:{"260":"KC"},I:{"1":"G","16":"WB LC MC NC","132":"H OC fB PC QC"},J:{"16":"D","132":"A"},K:{"1":"Q","16":"A B C TB eB","260":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"132":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","132":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:7,C:":default CSS pseudo-class"};


/***/ }),
/* 581 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O S T U V W X P Y Z G VB","16":"R"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB","16":"lB mB nB"},E:{"1":"B","2":"H a I D E F A C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Explicit descendant combinator >>"};


/***/ }),
/* 582 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","164":"A B"},B:{"66":"R S T U V W X P Y Z G VB","164":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k","66":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v wB xB yB zB TB eB 0B UB","66":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"292":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A Q","292":"B C TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"164":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"66":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Device Adaptation"};


/***/ }),
/* 583 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M jB kB","33":"0 1 2 3 4 N O b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G","194":"VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"33":"dC"}},B:5,C:":dir() CSS pseudo-class"};


/***/ }),
/* 584 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Z G VB","2":"C J K L M N O","260":"R S T U V W X P Y"},C:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s jB kB","260":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB"},D:{"1":"Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB XB FB YB Q GB HB","260":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y"},E:{"2":"H a I D E F A B oB cB pB qB rB sB dB","260":"K tB uB vB","772":"C J TB UB"},F:{"2":"0 1 2 3 4 5 6 7 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","260":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC","260":"HC IC JC","772":"BC CC DC EC FC GC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","260":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","260":"Q"},L:{"260":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC","260":"WC dB XC YC ZC aC"},Q:{"260":"bC"},R:{"2":"cC"},S:{"260":"dC"}},B:5,C:"CSS display: contents"};


/***/ }),
/* 585 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"33":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","164":"hB WB jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"33":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"33":"dC"}},B:5,C:"CSS element() function"};


/***/ }),
/* 586 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB jB kB"},D:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","132":"B"},F:{"1":"CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","132":"AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS Environment Variables env()"};


/***/ }),
/* 587 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","33":"A B"},B:{"2":"R S T U V W X P Y Z G VB","33":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"33":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Exclusions Level 1"};


/***/ }),
/* 588 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B C wB xB yB zB TB eB 0B"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS Feature Queries"};


/***/ }),
/* 589 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB","33":"F"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B","33":"6B 7B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS filter() function"};


/***/ }),
/* 590 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","1028":"J K L M N O","1346":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB","196":"q","516":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p kB"},D:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N","33":"0 1 2 3 4 5 6 7 8 O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a oB cB pB","33":"I D E F qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d e f g h i j k l m n o p q r s t u v"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","33":"E 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB","33":"PC QC"},J:{"2":"D","33":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","33":"H SC TC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS Filter Effects"};


/***/ }),
/* 591 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","16":"gB","516":"E","1540":"I D"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","132":"WB","260":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"a I D E","132":"H"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"a oB","132":"H cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","16":"F wB","260":"B xB yB zB TB eB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"1":"KC"},I:{"1":"WB H G OC fB PC QC","16":"LC MC","132":"NC"},J:{"1":"D A"},K:{"1":"C Q UB","260":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"::first-letter CSS pseudo-element selector"};


/***/ }),
/* 592 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","132":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS first-line pseudo-element"};


/***/ }),
/* 593 */
/***/ ((module) => {

module.exports={A:{A:{"1":"D E F A B","2":"gB","8":"I"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB dB TB UB tB uB vB","1025":"sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","132":"2B 3B 4B"},H:{"2":"KC"},I:{"1":"WB G PC QC","260":"LC MC NC","513":"H OC fB"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS position:fixed"};


/***/ }),
/* 594 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"X P Y Z G VB","2":"C J K L M N O","328":"R S T U V W"},C:{"1":"W X P Y Z G","2":"hB WB jB kB","161":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V"},D:{"1":"X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB","328":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB","16":"vB"},F:{"1":"PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB wB xB yB zB TB eB 0B UB","328":"JB KB LB MB NB OB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"161":"dC"}},B:7,C:":focus-visible CSS pseudo-class"};


/***/ }),
/* 595 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","194":"XB"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","194":"2"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"16":"cC"},S:{"2":"dC"}},B:7,C:":focus-within CSS pseudo-class"};


/***/ }),
/* 596 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"2 3 4 5 6 7 8 9 AB BB CB DB"},D:{"1":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","66":"5 6 7 8 9 AB BB CB DB EB XB"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB","66":"0 1 2 s t u v w x y z"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H","66":"SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:5,C:"CSS font-rendering controls"};


/***/ }),
/* 597 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E jB kB"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS font-stretch"};


/***/ }),
/* 598 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D gB","132":"E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS Generated content for pseudo-elements"};


/***/ }),
/* 599 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB","260":"M N O b c d e f g h i j k l m n o p q r","292":"H a I D E F A B C J K L kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"A B C J K L M N O b c d e f g h","548":"H a I D E F"},E:{"2":"oB cB","260":"D E F A B C J K qB rB sB dB TB UB tB uB vB","292":"I pB","804":"H a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB","33":"C 0B","164":"TB eB"},G:{"260":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","292":"2B 3B","804":"cB 1B fB"},H:{"2":"KC"},I:{"1":"G PC QC","33":"H OC fB","548":"WB LC MC NC"},J:{"1":"A","548":"D"},K:{"1":"Q UB","2":"A B","33":"C","164":"TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS Gradients"};


/***/ }),
/* 600 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","8":"F","292":"A B"},B:{"1":"M N O R S T U V W X P Y Z G VB","292":"C J K L"},C:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O jB kB","8":"b c d e f g h i j k l m n o p q r s t u v","584":"0 1 2 3 4 5 6 7 w x y z","1025":"8 9"},D:{"1":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g","8":"h i j k","200":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB","1025":"DB"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a oB cB pB","8":"I D E F A qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB","200":"k l m n o p q r s t u v w x y z"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","8":"E 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC","8":"fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"292":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"SC","8":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:4,C:"CSS Grid Layout (level 1)"};


/***/ }),
/* 601 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS hanging-punctuation"};


/***/ }),
/* 602 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:":has() CSS relational pseudo-class"};


/***/ }),
/* 603 */
/***/ ((module) => {

module.exports={A:{A:{"16":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","16":"C J K L M N O"},C:{"16":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB"},E:{"16":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"16":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"16":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"16":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"16":"G"},M:{"16":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"16":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"16":"bC"},R:{"16":"cC"},S:{"16":"dC"}},B:5,C:"CSS4 Hyphenation"};


/***/ }),
/* 604 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","33":"A B"},B:{"33":"C J K L M N O","132":"R S T U V W X P","260":"Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB","33":"I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y"},D:{"1":"Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB","132":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P"},E:{"2":"H a oB cB","33":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B","33":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"4":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H","132":"SC"},Q:{"2":"bC"},R:{"132":"cC"},S:{"1":"dC"}},B:5,C:"CSS Hyphenation"};


/***/ }),
/* 605 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Z G VB","2":"C J K L M N O R S","257":"T U V W X P Y"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h jB kB"},D:{"1":"Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S","257":"T U V W X P Y"},E:{"1":"K tB uB vB","2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB"},F:{"1":"LB MB NB OB PB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB wB xB yB zB TB eB 0B UB","257":"QB RB SB"},G:{"1":"IC JC","132":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"ZC aC","2":"H SC TC UC VC WC dB XC YC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 image-orientation"};


/***/ }),
/* 606 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","164":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W jB kB","66":"X P","260":"Z G","772":"Y"},D:{"2":"H a I D E F A B C J K L M N O b c","164":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a oB cB pB","132":"A B C J dB TB UB tB","164":"I D E F qB rB sB","516":"K uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","164":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B fB 2B","132":"8B 9B AC BC CC DC EC FC GC HC","164":"E 3B 4B 5B 6B 7B","516":"IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","164":"G PC QC"},J:{"2":"D","164":"A"},K:{"2":"A B C TB eB UB","164":"Q"},L:{"164":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"164":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"164":"bC"},R:{"164":"cC"},S:{"2":"dC"}},B:5,C:"CSS image-set"};


/***/ }),
/* 607 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C","260":"J K L M N O"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB","516":"0 1 2 3 4 5 l m n o p q r s t u v w x y z"},D:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H","16":"a I D E F A B C J K","260":"8","772":"0 1 2 3 4 5 6 7 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H oB cB","16":"a","772":"I D E F A pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F wB","260":"B C v xB yB zB TB eB 0B UB","772":"L M N O b c d e f g h i j k l m n o p q r s t u"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","772":"E 2B 3B 4B 5B 6B 7B 8B"},H:{"132":"KC"},I:{"1":"G","2":"WB LC MC NC","260":"H OC fB PC QC"},J:{"2":"D","260":"A"},K:{"1":"Q","260":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","260":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"516":"dC"}},B:5,C:":in-range and :out-of-range CSS pseudo-classes"};


/***/ }),
/* 608 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","132":"A B","388":"F"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB WB jB kB","132":"0 1 2 3 4 5 6 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","388":"H a"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","132":"L M N O b c d e f g h i j k l m n o p q r s t u"},E:{"1":"B C J K dB TB UB tB uB vB","16":"H a I oB cB","132":"D E F A qB rB sB","388":"pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F B wB xB yB zB TB eB","132":"L M N O b c d e f g h","516":"C 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B 3B","132":"E 4B 5B 6B 7B 8B"},H:{"516":"KC"},I:{"1":"G","16":"WB LC MC NC QC","132":"PC","388":"H OC fB"},J:{"16":"D","132":"A"},K:{"1":"Q","16":"A B C TB eB","516":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"132":"dC"}},B:7,C:":indeterminate CSS pseudo-class"};


/***/ }),
/* 609 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E oB cB pB qB rB","4":"F","164":"A B C J K sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B","164":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Initial Letter"};


/***/ }),
/* 610 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"H a I D E F A B C J K L M N O jB kB","164":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","16":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS initial value"};


/***/ }),
/* 611 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","16":"gB","132":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f g h i j k l"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","16":"oB","132":"H a I cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F wB","132":"B C L M xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"2":"KC"},I:{"1":"G PC QC","16":"LC MC","132":"WB H NC OC fB"},J:{"132":"D A"},K:{"1":"Q","132":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"letter-spacing CSS property"};


/***/ }),
/* 612 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M","33":"R S T U V W X P Y Z G VB","129":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB jB kB","33":"LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"16":"H a I D E F A B C J","33":"0 1 2 3 4 5 6 7 8 9 K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H oB cB","33":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B fB","33":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"16":"LC MC","33":"WB H G NC OC fB PC QC"},J:{"33":"D A"},K:{"2":"A B C TB eB UB","33":"Q"},L:{"33":"G"},M:{"33":"P"},N:{"2":"A B"},O:{"33":"RC"},P:{"33":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"33":"cC"},S:{"2":"dC"}},B:5,C:"CSS line-clamp"};


/***/ }),
/* 613 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Z G VB","2":"C J K L M N O","2052":"P Y","3588":"R S T U V W X"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB","164":"WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w jB kB"},D:{"1":"Z G VB lB mB nB","292":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB","2052":"P Y","3588":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X"},E:{"292":"H a I D E F A B C oB cB pB qB rB sB dB TB","2052":"uB vB","3588":"J K UB tB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","292":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB","2052":"RB SB","3588":"CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB"},G:{"292":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC","2052":"JC","3588":"DC EC FC GC HC IC"},H:{"2":"KC"},I:{"1":"G","292":"WB H LC MC NC OC fB PC QC"},J:{"292":"D A"},K:{"2":"A B C TB eB UB","3588":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"292":"RC"},P:{"292":"H SC TC UC VC WC","3588":"dB XC YC ZC aC"},Q:{"3588":"bC"},R:{"3588":"cC"},S:{"3588":"dC"}},B:5,C:"CSS Logical Properties"};


/***/ }),
/* 614 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"X P Y Z G VB","2":"C J K L M N O R S T U V W"},C:{"1":"LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB jB kB"},D:{"1":"X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W"},E:{"2":"H a I D E F A B oB cB pB qB rB sB dB","129":"C J K TB UB tB uB vB"},F:{"1":"PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS ::marker pseudo-element"};


/***/ }),
/* 615 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M","164":"R S T U V W X P Y Z G VB","3138":"N","12292":"O"},C:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","260":"0 1 2 3 4 5 6 7 8 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"164":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"oB cB","164":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","164":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"164":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"164":"G PC QC","676":"WB H LC MC NC OC fB"},J:{"164":"D A"},K:{"2":"A B C TB eB UB","164":"Q"},L:{"164":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"164":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"164":"bC"},R:{"164":"cC"},S:{"260":"dC"}},B:4,C:"CSS Masks"};


/***/ }),
/* 616 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Y Z G VB","2":"C J K L M N O","1220":"R S T U V W X P"},C:{"1":"bB R S T iB U V W X P Y Z G","16":"hB WB jB kB","548":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB"},D:{"1":"Y Z G VB lB mB nB","16":"H a I D E F A B C J K","164":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB","196":"IB JB KB","1220":"LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P"},E:{"1":"K uB vB","2":"H oB cB","16":"a","164":"I D E pB qB rB","260":"F A B C J sB dB TB UB tB"},F:{"1":"SB","2":"F B C wB xB yB zB TB eB 0B UB","164":"0 1 2 3 4 5 6 7 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","196":"8 9 AB","1220":"BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB"},G:{"1":"IC JC","16":"cB 1B fB 2B 3B","164":"E 4B 5B","260":"6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"2":"KC"},I:{"1":"G","16":"WB LC MC NC","164":"H OC fB PC QC"},J:{"16":"D","164":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"164":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1220":"bC"},R:{"164":"cC"},S:{"548":"dC"}},B:5,C:":is() CSS pseudo-class"};


/***/ }),
/* 617 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB jB kB"},D:{"1":"R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB"},E:{"1":"K tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB","132":"C J TB UB"},F:{"1":"JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB wB xB yB zB TB eB 0B UB"},G:{"1":"HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC","132":"BC CC DC EC FC GC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"YC ZC aC","2":"H SC TC UC VC WC dB XC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS math functions min(), max() and clamp()"};


/***/ }),
/* 618 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"Media Queries: interaction media features"};


/***/ }),
/* 619 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","132":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","260":"H a I D E F A B C J K L jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","548":"H a I D E F A B C J K L M N O b c d e f g h i j k"},E:{"2":"oB cB","548":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F","548":"B C wB xB yB zB TB eB 0B"},G:{"16":"cB","548":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"132":"KC"},I:{"1":"G PC QC","16":"LC MC","548":"WB H NC OC fB"},J:{"548":"D A"},K:{"1":"Q UB","548":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Media Queries: resolution feature"};


/***/ }),
/* 620 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"16":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","16":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB","16":"lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Media Queries: scripting media feature"};


/***/ }),
/* 621 */
/***/ ((module) => {

module.exports={A:{A:{"8":"I D E gB","129":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","129":"H a I D E F A B C J K L M N O b c d e f g h"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","129":"H a I pB","388":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","129":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"1":"G PC QC","129":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"129":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS3 Media Queries"};


/***/ }),
/* 622 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k","194":"l m n o p q r s t u v w"},E:{"2":"H a I D oB cB pB qB","260":"E F A B C J K rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB 2B 3B 4B","260":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Blending of HTML/SVG elements"};


/***/ }),
/* 623 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB jB kB"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y","194":"0 1 z"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB","194":"m n o"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"CSS Motion Path"};


/***/ }),
/* 624 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS namespaces"};


/***/ }),
/* 625 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Y Z G VB","2":"C J K L M N O S T U V W X P","16":"R"},C:{"1":"V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U jB kB"},D:{"1":"Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"selector list argument of :not()"};


/***/ }),
/* 626 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"selector list argument of :nth-child and :nth-last-child CSS pseudo-classes"};


/***/ }),
/* 627 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","4":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS3 Opacity"};


/***/ }),
/* 628 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F wB","132":"B C xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"132":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"Q","132":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:":optional CSS pseudo-class"};


/***/ }),
/* 629 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB jB kB"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"CSS overflow-anchor (Scroll Anchoring)"};


/***/ }),
/* 630 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"H a I D E F A B pB qB rB sB dB TB","16":"oB cB","130":"C J K UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC","16":"cB","130":"CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"CSS overflow: overlay"};


/***/ }),
/* 631 */
/***/ ((module) => {

module.exports={A:{A:{"388":"I D E F A B gB"},B:{"1":"G VB","260":"R S T U V W X P Y Z","388":"C J K L M N O"},C:{"1":"T iB U V W X P Y Z G","260":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S","388":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB jB kB"},D:{"1":"G VB lB mB nB","260":"LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z","388":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB"},E:{"260":"K tB uB vB","388":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB"},F:{"260":"BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","388":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB wB xB yB zB TB eB 0B UB"},G:{"260":"HC IC JC","388":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC"},H:{"388":"KC"},I:{"1":"G","388":"WB H LC MC NC OC fB PC QC"},J:{"388":"D A"},K:{"388":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"388":"A B"},O:{"388":"RC"},P:{"388":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"388":"bC"},R:{"388":"cC"},S:{"388":"dC"}},B:5,C:"CSS overflow property"};


/***/ }),
/* 632 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N","516":"O"},C:{"1":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB jB kB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q","260":"GB HB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB vB","1090":"uB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","260":"6 7"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS overscroll-behavior"};


/***/ }),
/* 633 */
/***/ ((module) => {

module.exports={A:{A:{"388":"A B","900":"I D E F gB"},B:{"388":"C J K L M N O","900":"R S T U V W X P Y Z G VB"},C:{"772":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","900":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB jB kB"},D:{"900":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"772":"A","900":"H a I D E F B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"16":"F wB","129":"B C xB yB zB TB eB 0B UB","900":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"900":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"129":"KC"},I:{"900":"WB H G LC MC NC OC fB PC QC"},J:{"900":"D A"},K:{"129":"A B C TB eB UB","900":"Q"},L:{"900":"G"},M:{"900":"P"},N:{"388":"A B"},O:{"900":"RC"},P:{"900":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"900":"bC"},R:{"900":"cC"},S:{"900":"dC"}},B:2,C:"CSS page-break properties"};


/***/ }),
/* 634 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","132":"E F A B"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O jB kB","132":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","132":"F B C wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"16":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"16":"A B C TB eB UB","258":"Q"},L:{"1":"G"},M:{"132":"P"},N:{"258":"A B"},O:{"258":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"132":"dC"}},B:5,C:"CSS Paged Media (@page)"};


/***/ }),
/* 635 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB"},E:{"2":"H a I D E F A B C oB cB pB qB rB sB dB TB","194":"J K UB tB uB vB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Paint API"};


/***/ }),
/* 636 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","292":"A B"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","164":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"164":"dC"}},B:5,C:":placeholder-shown CSS pseudo-class"};


/***/ }),
/* 637 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","36":"C J K L M N O"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O jB kB","33":"0 1 2 3 4 5 6 b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","36":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H oB cB","36":"a I D E F A pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","36":"L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B","36":"E fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","36":"WB H LC MC NC OC fB PC QC"},J:{"36":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"36":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","36":"H SC TC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"33":"dC"}},B:5,C:"::placeholder CSS pseudo-element"};


/***/ }),
/* 638 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"bB R S T iB U V W X P Y Z G","16":"hB","33":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","132":"L M N O b c d e f g h i j k l m n o p q r"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","16":"oB cB","132":"H a I D E pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F B wB xB yB zB TB","132":"C L M N O b c d e eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B","132":"E fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","16":"LC MC","132":"WB H NC OC fB PC QC"},J:{"1":"A","132":"D"},K:{"1":"Q","2":"A B TB","132":"C eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"33":"dC"}},B:1,C:"CSS :read-only and :read-write selectors"};


/***/ }),
/* 639 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB","16":"qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Rebeccapurple color"};


/***/ }),
/* 640 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","33":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"oB cB","33":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"33":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"33":"WB H G LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"2":"A B C TB eB UB","33":"Q"},L:{"33":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"33":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"33":"cC"},S:{"2":"dC"}},B:7,C:"CSS Reflections"};


/***/ }),
/* 641 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","420":"A B"},B:{"2":"R S T U V W X P Y Z G VB","420":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","36":"L M N O","66":"b c d e f g h i j k l m n o p q"},E:{"2":"H a I C J K oB cB pB TB UB tB uB vB","33":"D E F A B qB rB sB dB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB 2B 3B BC CC DC EC FC GC HC IC JC","33":"E 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"420":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Regions"};


/***/ }),
/* 642 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB","33":"H a I D E F A B C J K L kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F","33":"A B C J K L M N O b c d e f g h"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB","33":"I pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB","33":"C 0B","36":"TB eB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","33":"2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB LC MC NC","33":"H OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q UB","2":"A B","33":"C","36":"TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS Repeating Gradients"};


/***/ }),
/* 643 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","33":"H"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B","132":"UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:4,C:"CSS resize property"};


/***/ }),
/* 644 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"V W X P Y Z G VB","2":"C J K L M N O R S T U"},C:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB jB kB"},D:{"1":"V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB"},F:{"1":"QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB wB xB yB zB TB eB 0B UB"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS revert value"};


/***/ }),
/* 645 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"8 9 AB BB CB DB EB XB FB YB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u wB xB yB zB TB eB 0B UB","194":"0 1 2 3 4 5 6 7 v w x y z"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H","194":"SC TC UC"},Q:{"2":"bC"},R:{"194":"cC"},S:{"2":"dC"}},B:7,C:"#rrggbbaa hex color notation"};


/***/ }),
/* 646 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","129":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w","129":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","450":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB tB","578":"K uB vB"},F:{"2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB","129":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","450":"0 1 2 3 k l m n o p q r s t u v w x y z"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"129":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"129":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSSOM Scroll-behavior"};


/***/ }),
/* 647 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z","194":"G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V","194":"Y Z G VB lB mB nB","322":"W X P"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB wB xB yB zB TB eB 0B UB","194":"SB","322":"QB RB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS @scroll-timeline"};


/***/ }),
/* 648 */
/***/ ((module) => {

module.exports={A:{A:{"132":"I D E F A B gB"},B:{"2":"C J K L M N O","292":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q jB kB","3074":"GB","4100":"HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"292":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"16":"H a oB cB","292":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","292":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"16":"cB 1B fB 2B 3B","292":"4B","804":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"16":"LC MC","292":"WB H G NC OC fB PC QC"},J:{"292":"D A"},K:{"2":"A B C TB eB UB","292":"Q"},L:{"292":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"292":"RC"},P:{"292":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"292":"bC"},R:{"292":"cC"},S:{"2":"dC"}},B:7,C:"CSS scrollbar styling"};


/***/ }),
/* 649 */
/***/ ((module) => {

module.exports={A:{A:{"1":"D E F A B","2":"gB","8":"I"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS 2.1 selectors"};


/***/ }),
/* 650 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I","132":"D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","2":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS3 selectors"};


/***/ }),
/* 651 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"C Q eB UB","16":"A B TB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"33":"dC"}},B:5,C:"::selection CSS pseudo-element"};


/***/ }),
/* 652 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","322":"7 8 9 AB BB CB DB EB XB FB YB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p","194":"q r s"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D oB cB pB qB","33":"E F A rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","33":"E 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:4,C:"CSS Shapes Level 1"};


/***/ }),
/* 653 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","6308":"A","6436":"B"},B:{"1":"R S T U V W X P Y Z G VB","6436":"C J K L M N O"},C:{"1":"LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u jB kB","2052":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB"},D:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB","8258":"JB KB LB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E oB cB pB qB rB","3108":"F A sB dB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","8258":"AB BB CB DB EB FB Q GB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B","3108":"6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2052":"dC"}},B:4,C:"CSS Scroll Snap"};


/***/ }),
/* 654 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"VB","2":"C J K L","1028":"R S T U V W X P Y Z G","4100":"M N O"},C:{"1":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h jB kB","194":"i j k l m n","516":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB"},D:{"1":"VB lB mB nB","2":"0 1 2 3 4 5 6 7 H a I D E F A B C J K L M N O b c d e t u v w x y z","322":"8 9 f g h i j k l m n o p q r s AB BB","1028":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G"},E:{"1":"J K tB uB vB","2":"H a I oB cB pB","33":"E F A B C rB sB dB TB UB","2084":"D qB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u wB xB yB zB TB eB 0B UB","322":"v w x","1028":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"EC FC GC HC IC JC","2":"cB 1B fB 2B","33":"E 5B 6B 7B 8B 9B AC BC CC DC","2084":"3B 4B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","1028":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","1028":"Q"},L:{"1028":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1028":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"1028":"bC"},R:{"2":"cC"},S:{"516":"dC"}},B:5,C:"CSS position:sticky"};


/***/ }),
/* 655 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Subgrid"};


/***/ }),
/* 656 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","260":"C J K L M N O"},C:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b jB kB","66":"c d","260":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j","260":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B","132":"UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"132":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB","132":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS.supports() API"};


/***/ }),
/* 657 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","2":"I D gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","132":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS Table display"};


/***/ }),
/* 658 */
/***/ ((module) => {

module.exports={A:{A:{"132":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","4":"C J K L M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B jB kB","33":"0 1 2 3 4 C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q","322":"0 1 2 r s t u v w x y z"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d wB xB yB zB TB eB 0B UB","578":"e f g h i j k l m n o p"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"1":"cC"},S:{"33":"dC"}},B:5,C:"CSS3 text-align-last"};


/***/ }),
/* 659 */
/***/ ((module) => {

module.exports={A:{A:{"132":"I D E F A B gB"},B:{"132":"C J K L M N O","388":"R S T U V W X P Y Z G VB"},C:{"132":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"132":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t","388":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"132":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"132":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB","388":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"132":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"132":"KC"},I:{"132":"WB H LC MC NC OC fB PC QC","388":"G"},J:{"132":"D A"},K:{"132":"A B C TB eB UB","388":"Q"},L:{"388":"G"},M:{"132":"P"},N:{"132":"A B"},O:{"132":"RC"},P:{"132":"H","388":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"388":"bC"},R:{"388":"cC"},S:{"132":"dC"}},B:5,C:"CSS text-indent"};


/***/ }),
/* 660 */
/***/ ((module) => {

module.exports={A:{A:{"16":"I D gB","132":"E F A B"},B:{"132":"C J K L M N O","322":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","1025":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","1602":"AB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y","322":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB","322":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","322":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","322":"Q"},L:{"322":"G"},M:{"1025":"P"},N:{"132":"A B"},O:{"2":"RC"},P:{"2":"H","322":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"322":"bC"},R:{"322":"cC"},S:{"2":"dC"}},B:5,C:"CSS text-justify"};


/***/ }),
/* 661 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t jB kB","194":"u v w"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"K uB vB","2":"H a I D E F oB cB pB qB rB sB","16":"A","33":"B C J dB TB UB tB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS text-orientation"};


/***/ }),
/* 662 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","161":"E F A B"},B:{"2":"R S T U V W X P Y Z G VB","161":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"16":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"CSS Text 4 text-spacing"};


/***/ }),
/* 663 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","129":"A B"},B:{"1":"R S T U V W X P Y Z G VB","129":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","260":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"4":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"A","4":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"129":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 Text-shadow"};


/***/ }),
/* 664 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"B","164":"A"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB","260":"BB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB","260":"y"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"132":"B","164":"A"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","16":"H"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"CSS touch-action level 2 values"};


/***/ }),
/* 665 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F gB","289":"A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB","194":"0 1 2 3 4 5 6 7 l m n o p q r s t u v w x y z","1025":"8 9 AB BB CB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e wB xB yB zB TB eB 0B UB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B","516":"7B 8B 9B AC BC CC DC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","289":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"194":"dC"}},B:2,C:"CSS touch-action property"};


/***/ }),
/* 666 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","33":"a I D E F A B C J K L","164":"H"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H a I D E F A B C J K L M N O b c d e f g h"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","33":"I pB","164":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F wB xB","33":"C","164":"B yB zB TB eB 0B"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"3B","164":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"G PC QC","33":"WB H LC MC NC OC fB"},J:{"1":"A","33":"D"},K:{"1":"Q UB","33":"C","164":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS3 Transitions"};


/***/ }),
/* 667 */
/***/ ((module) => {

module.exports={A:{A:{"132":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"0 1 2 3 4 5 N O b c d e f g h i j k l m n o p q r s t u v w x y z","132":"hB WB H a I D E F jB kB","292":"A B C J K L M"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M","548":"0 1 2 3 N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"132":"H a I D E oB cB pB qB rB","548":"F A B C J K sB dB TB UB tB uB vB"},F:{"132":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"132":"E cB 1B fB 2B 3B 4B 5B","548":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"1":"G","16":"WB H LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"16":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","16":"H"},Q:{"16":"bC"},R:{"16":"cC"},S:{"33":"dC"}},B:4,C:"CSS unicode-bidi property"};


/***/ }),
/* 668 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS unset value"};


/***/ }),
/* 669 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K","260":"L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"4"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB","260":"sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q wB xB yB zB TB eB 0B UB","194":"r"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B","260":"7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:4,C:"CSS Variables (Custom Properties)"};


/***/ }),
/* 670 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D gB","129":"E F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","129":"F B wB xB yB zB TB eB 0B"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:2,C:"CSS widows & orphans"};


/***/ }),
/* 671 */
/***/ ((module) => {

module.exports={A:{A:{"132":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB","322":"s t u v w"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I","16":"D","33":"0 1 2 3 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K TB UB tB uB vB","2":"H oB cB","16":"a","33":"I D E F A pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d e f g h i j k l m n o p q"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB","33":"E 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"LC MC NC","33":"WB H OC fB PC QC"},J:{"33":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"36":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","33":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS writing-mode property"};


/***/ }),
/* 672 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D gB","129":"E F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"129":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"CSS zoom"};


/***/ }),
/* 673 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"CSS3 attr() function for all properties"};


/***/ }),
/* 674 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","8":"I D gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H a I D E F"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","33":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"cB 1B fB"},H:{"1":"KC"},I:{"1":"H G OC fB PC QC","33":"WB LC MC NC"},J:{"1":"A","33":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS3 Box-sizing"};


/***/ }),
/* 675 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","4":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","2":"F","4":"wB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS3 Colors"};


/***/ }),
/* 676 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"hB WB H a I D E F A B C J K L M N O b c d e f g h i jB kB"},D:{"1":"LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB"},E:{"1":"B C J K TB UB tB uB vB","33":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"C BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"2":"A B C TB eB UB","33":"Q"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:3,C:"CSS grab & grabbing cursors"};


/***/ }),
/* 677 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"hB WB H a I D E F A B C J K L M N O b c d e f jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","33":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB","33":"L M N O b c d e f"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"CSS3 Cursors: zoom-in & zoom-out"};


/***/ }),
/* 678 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","132":"I D E gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","260":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","4":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","4":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","260":"F B C wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","16":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"CSS3 Cursors (original values)"};


/***/ }),
/* 679 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"hB WB jB kB","33":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","164":"0 1 2 3 4 5 6 7 8 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c","132":"d e f g h i j k l m n o p q r s t u v w x"},E:{"1":"K tB uB vB","2":"H a I oB cB pB","132":"D E F A B C J qB rB sB dB TB UB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB xB yB","132":"L M N O b c d e f g h i j k","164":"B C zB TB eB 0B UB"},G:{"1":"HC IC JC","2":"cB 1B fB 2B 3B","132":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC"},H:{"164":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB","132":"PC QC"},J:{"132":"D A"},K:{"1":"Q","2":"A","164":"B C TB eB UB"},L:{"1":"G"},M:{"33":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"164":"dC"}},B:5,C:"CSS3 tab-size"};


/***/ }),
/* 680 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS currentColor value"};


/***/ }),
/* 681 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","8":"A B"},B:{"1":"R","2":"S T U V W X P Y Z G VB","8":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","66":"f g h i j k l","72":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","2":"H a I D E F A B C J K L M N O b c d e f g h i S T U V W X P Y Z G VB lB mB nB","66":"j k l m n o"},E:{"2":"H a oB cB pB","8":"I D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB","2":"F B C KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","66":"L M N O b"},G:{"2":"cB 1B fB 2B 3B","8":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"QC","2":"WB H G LC MC NC OC fB PC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC","2":"ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"72":"dC"}},B:7,C:"Custom Elements (deprecated V0 spec)"};


/***/ }),
/* 682 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","8":"A B"},B:{"1":"R S T U V W X P Y Z G VB","8":"C J K L M N O"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l jB kB","8":"0 1 2 3 4 5 m n o p q r s t u v w x y z","456":"6 7 8 9 AB BB CB DB EB","712":"XB FB YB Q"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","8":"8 9","132":"AB BB CB DB EB XB FB YB Q GB HB IB JB"},E:{"2":"H a I D oB cB pB qB rB","8":"E F A sB","132":"B C J K dB TB UB tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB Q GB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B","132":"9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H","132":"SC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"8":"dC"}},B:1,C:"Custom Elements (V1)"};


/***/ }),
/* 683 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","132":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB","132":"I D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H","16":"a I D E J K","388":"F A B C"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H oB cB","16":"a I","388":"pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F wB xB yB zB","132":"B TB eB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"1B","16":"cB fB","388":"2B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"LC MC NC","388":"WB H OC fB"},J:{"1":"A","388":"D"},K:{"1":"C Q UB","2":"A","132":"B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"CustomEvent"};


/***/ }),
/* 684 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E F","260":"A B"},B:{"1":"R S T U V W X P Y Z G VB","260":"C J K L","1284":"M N O"},C:{"8":"hB WB jB kB","4612":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H a I D E F A B C J K L M N O b","132":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB"},E:{"1":"J K UB tB uB vB","8":"H a I D E F A B C oB cB pB qB rB sB dB TB"},F:{"1":"F B C HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB"},G:{"8":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC","2049":"DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G QC","8":"WB H LC MC NC OC fB PC"},J:{"1":"A","8":"D"},K:{"1":"A B C TB eB UB","8":"Q"},L:{"1":"G"},M:{"516":"P"},N:{"8":"A B"},O:{"8":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"132":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:1,C:"Datalist element"};


/***/ }),
/* 685 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","4":"I D E F A gB"},B:{"1":"C J K L M","129":"N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","4":"hB WB H a jB kB","129":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"1 2 3 4 5 6 7 8 9 AB","4":"H a I","129":"0 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"4":"H a oB cB","129":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"1":"C o p q r s t u v w x TB eB 0B UB","4":"F B wB xB yB zB","129":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"4":"cB 1B fB","129":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"4":"KC"},I:{"4":"LC MC NC","129":"WB H G OC fB PC QC"},J:{"129":"D A"},K:{"1":"C TB eB UB","4":"A B","129":"Q"},L:{"129":"G"},M:{"129":"P"},N:{"1":"B","4":"A"},O:{"129":"RC"},P:{"129":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"129":"cC"},S:{"1":"dC"}},B:1,C:"dataset & data-* attributes"};


/***/ }),
/* 686 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","132":"E","260":"F A B"},B:{"1":"R S T U V W X P Y Z G VB","260":"C J L M N O","772":"K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"260":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Data URIs"};


/***/ }),
/* 687 */
/***/ ((module) => {

module.exports={A:{A:{"16":"gB","132":"I D E F A B"},B:{"1":"O R S T U V W X P Y Z G VB","132":"C J K L M N"},C:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB","260":"8 9 AB BB","772":"0 1 2 3 4 5 6 7 l m n o p q r s t u v w x y z"},D:{"1":"NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f","260":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB","772":"g h i j k l m n o p q r s t"},E:{"1":"C J K UB tB uB vB","16":"H a oB cB","132":"I D E F A pB qB rB sB","260":"B dB TB"},F:{"1":"DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F B C wB xB yB zB TB eB 0B","132":"UB","260":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB","772":"L M N O b c d e f g"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B","132":"E 3B 4B 5B 6B 7B 8B"},H:{"132":"KC"},I:{"1":"G","16":"WB LC MC NC","132":"H OC fB","772":"PC QC"},J:{"132":"D A"},K:{"1":"Q","16":"A B C TB eB","132":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"260":"RC"},P:{"1":"WC dB XC YC ZC aC","260":"H SC TC UC VC"},Q:{"260":"bC"},R:{"132":"cC"},S:{"132":"dC"}},B:6,C:"Date.prototype.toLocaleDateString"};


/***/ }),
/* 688 */
/***/ ((module) => {

module.exports={A:{A:{"2":"F A B gB","8":"I D E"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB","8":"0 1 2 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"3 4"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H a I D E F A B","257":"b c d e f g h i j k l m n o p q r","769":"C J K L M N O"},E:{"1":"C J K UB tB uB vB","8":"H a oB cB pB","257":"I D E F A qB rB sB","1025":"B dB TB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"C TB eB 0B UB","8":"F B wB xB yB zB"},G:{"1":"E 3B 4B 5B 6B 7B BC CC DC EC FC GC HC IC JC","8":"cB 1B fB 2B","1025":"8B 9B AC"},H:{"8":"KC"},I:{"1":"H G OC fB PC QC","8":"WB LC MC NC"},J:{"1":"A","8":"D"},K:{"1":"Q","8":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"769":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Details & Summary elements"};


/***/ }),
/* 689 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"C J K L M N O","4":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB jB","4":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"H a kB"},D:{"2":"H a I","4":"0 1 2 3 4 5 6 7 8 9 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","4":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B","4":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"LC MC NC","4":"WB H G OC fB PC QC"},J:{"2":"D","4":"A"},K:{"1":"C UB","2":"A B TB eB","4":"Q"},L:{"4":"G"},M:{"4":"P"},N:{"1":"B","2":"A"},O:{"4":"RC"},P:{"4":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"4":"bC"},R:{"4":"cC"},S:{"4":"dC"}},B:4,C:"DeviceOrientation & DeviceMotion events"};


/***/ }),
/* 690 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Window.devicePixelRatio"};


/***/ }),
/* 691 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","1218":"S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n","322":"o p q r s"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O wB xB yB zB TB eB 0B UB","578":"b c d e f"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"194":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:1,C:"Dialog element"};


/***/ }),
/* 692 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","16":"gB","129":"F A","130":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","16":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","129":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"EventTarget.dispatchEvent"};


/***/ }),
/* 693 */
/***/ ((module) => {

module.exports={A:{A:{"132":"I D E F A B gB"},B:{"132":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"132":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"132":"0 1 2 3 4 5 6 7 8 9 H a n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","388":"I D E F A B C J K L M N O b c d e f g h i j k l m"},E:{"132":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"132":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"132":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"132":"KC"},I:{"132":"WB H G LC MC NC OC fB PC QC"},J:{"132":"D A"},K:{"132":"A B C Q TB eB UB"},L:{"132":"G"},M:{"132":"P"},N:{"132":"A B"},O:{"132":"RC"},P:{"132":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"132":"dC"}},B:6,C:"DNSSEC and DANE"};


/***/ }),
/* 694 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","164":"F A","260":"B"},B:{"1":"N O R S T U V W X P Y Z G VB","260":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E jB kB","516":"F A B C J K L M N O b c d e f g h i j k l m n"},D:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e"},E:{"1":"I A B C pB sB dB TB","2":"H a J K oB cB UB tB uB vB","1028":"D E F qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B"},G:{"1":"6B 7B 8B 9B AC BC CC","2":"cB 1B fB 2B 3B DC EC FC GC HC IC JC","1028":"E 4B 5B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"16":"D","1028":"A"},K:{"1":"Q UB","16":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"164":"A","260":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Do Not Track API"};


/***/ }),
/* 695 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k"},E:{"1":"E F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"document.currentScript"};


/***/ }),
/* 696 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","16":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"document.evaluate & XPath"};


/***/ }),
/* 697 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","16":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","16":"F wB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B","16":"fB 2B 3B"},H:{"2":"KC"},I:{"1":"G OC fB PC QC","2":"WB H LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"Document.execCommand()"};


/***/ }),
/* 698 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V","132":"W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V","132":"W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB wB xB yB zB TB eB 0B UB","132":"OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","132":"G"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"132":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Document Policy"};


/***/ }),
/* 699 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","16":"C J"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"document.scrollingElement"};


/***/ }),
/* 700 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB","16":"a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F wB xB yB zB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"document.head"};


/***/ }),
/* 701 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"8 9"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v wB xB yB zB TB eB 0B UB","194":"w"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"194":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"DOM manipulation convenience methods"};


/***/ }),
/* 702 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Document Object Model Range"};


/***/ }),
/* 703 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"DOMContentLoaded"};


/***/ }),
/* 704 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K L M N O b c d e f g h"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB","16":"a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","16":"F B wB xB yB zB TB eB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B 3B"},H:{"16":"KC"},I:{"1":"H G OC fB PC QC","16":"WB LC MC NC"},J:{"16":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"DOMFocusIn & DOMFocusOut events"};


/***/ }),
/* 705 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"132":"C J K L M N O","1028":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB","1028":"MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2564":"0 1 2 3 4 p q r s t u v w x y z","3076":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB"},D:{"16":"H a I D","132":"0 1 2 3 4 5 6 7 8 9 F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB","388":"E","1028":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"16":"H oB cB","132":"a I D E F A pB qB rB sB dB","1028":"B C J K TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","132":"0 1 2 3 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","1028":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"16":"cB 1B fB","132":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"132":"H OC fB PC QC","292":"WB LC MC NC","1028":"G"},J:{"16":"D","132":"A"},K:{"2":"A B C TB eB UB","132":"Q"},L:{"1028":"G"},M:{"1028":"P"},N:{"132":"A B"},O:{"132":"RC"},P:{"132":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"2564":"dC"}},B:4,C:"DOMMatrix"};


/***/ }),
/* 706 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Download attribute"};


/***/ }),
/* 707 */
/***/ ((module) => {

module.exports={A:{A:{"644":"I D E F gB","772":"A B"},B:{"1":"O R S T U V W X P Y Z G VB","260":"C J K L M N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","8":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","8":"F B wB xB yB zB TB eB 0B"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","1025":"G"},J:{"2":"D A"},K:{"1":"UB","8":"A B C TB eB","1025":"Q"},L:{"1025":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"Drag and Drop"};


/***/ }),
/* 708 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Element.closest()"};


/***/ }),
/* 709 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","16":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","16":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","16":"F wB xB yB zB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"C Q UB","16":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"document.elementFromPoint()"};


/***/ }),
/* 710 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB"},E:{"1":"K uB vB","2":"H a I D E F oB cB pB qB rB sB","132":"A B C J dB TB UB tB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B","132":"8B 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:5,C:"Scroll methods on elements (scroll, scrollTo, scrollBy)"};


/***/ }),
/* 711 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","164":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q","132":"r s t u v w x"},E:{"1":"C J K UB tB uB vB","2":"H a I oB cB pB qB","164":"D E F A B rB sB dB TB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d wB xB yB zB TB eB 0B UB","132":"e f g h i j k"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"16":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:2,C:"Encrypted Media Extensions"};


/***/ }),
/* 712 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","2":"gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"EOT - Embedded OpenType fonts"};


/***/ }),
/* 713 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D gB","260":"F","1026":"E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","4":"hB WB jB kB","132":"H a I D E F A B C J K L M N O b c"},D:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H a I D E F A B C J K L M N O","132":"b c d e"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","4":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","4":"F B C wB xB yB zB TB eB 0B","132":"UB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","4":"cB 1B fB 2B"},H:{"132":"KC"},I:{"1":"G PC QC","4":"WB LC MC NC","132":"OC fB","900":"H"},J:{"1":"A","4":"D"},K:{"1":"Q","4":"A B C TB eB","132":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ECMAScript 5"};


/***/ }),
/* 714 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x","132":"0 1 2 3 4 y z"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k wB xB yB zB TB eB 0B UB","132":"l m n o p q r"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ES6 classes"};


/***/ }),
/* 715 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ES6 Generators"};


/***/ }),
/* 716 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB jB kB","194":"JB"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"JavaScript modules: dynamic import()"};


/***/ }),
/* 717 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K","4097":"M N O","4290":"L"},C:{"1":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","322":"AB BB CB DB EB XB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB","194":"FB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB","3076":"dB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","194":"3"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B","3076":"9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"JavaScript modules via script tag"};


/***/ }),
/* 718 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L jB kB","132":"M N O b c d e f g","260":"h i j k l m","516":"n"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O","1028":"b c d e f g h i j k l m n o p"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","1028":"L M N O b c"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC","1028":"OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ES6 Number"};


/***/ }),
/* 719 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"String.prototype.includes"};


/***/ }),
/* 720 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","388":"B"},B:{"257":"R S T U V W X P Y Z G VB","260":"C J K","769":"L M N O"},C:{"2":"hB WB H a jB kB","4":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","257":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"H a I D E F A B C J K L M N O b c","4":"0 1 2 3 4 5 6 d e f g h i j k l m n o p q r s t u v w x y z","257":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D oB cB pB qB","4":"E F rB sB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","4":"L M N O b c d e f g h i j k l m n o p q r s t","257":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B","4":"E 4B 5B 6B 7B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","4":"PC QC","257":"G"},J:{"2":"D","4":"A"},K:{"2":"A B C TB eB UB","257":"Q"},L:{"257":"G"},M:{"257":"P"},N:{"2":"A","388":"B"},O:{"257":"RC"},P:{"4":"H","257":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"257":"bC"},R:{"4":"cC"},S:{"4":"dC"}},B:6,C:"ECMAScript 2015 (ES6)"};


/***/ }),
/* 721 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","4":"F wB xB yB zB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"C Q TB eB UB","4":"A B"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Server-sent events"};


/***/ }),
/* 722 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"K tB uB vB","2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family"};


/***/ }),
/* 723 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P","2":"C J K L M N O","1025":"Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB jB kB","260":"RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"RB SB ZB aB bB R S T U V W X P","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB","132":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB","1025":"Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B oB cB pB qB rB sB dB","772":"C J K TB UB tB uB vB"},F:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB","2":"0 1 2 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","132":"3 4 5 6 7 8 9 AB BB CB DB EB FB","1025":"SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC","772":"BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1025":"G"},M:{"260":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"XC YC ZC aC","2":"H SC TC UC","132":"VC WC dB"},Q:{"132":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Feature Policy"};


/***/ }),
/* 724 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p jB kB","1025":"v","1218":"q r s t u"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v","260":"w","772":"x"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i wB xB yB zB TB eB 0B UB","260":"j","772":"k"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Fetch"};


/***/ }),
/* 725 */
/***/ ((module) => {

module.exports={A:{A:{"16":"gB","132":"E F","388":"I D A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L","16":"M N O b"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","16":"F wB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"388":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A","260":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"disabled attribute of the fieldset element"};


/***/ }),
/* 726 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","260":"A B"},B:{"1":"R S T U V W X P Y Z G VB","260":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB","260":"H a I D E F A B C J K L M N O b c d e f g h i j kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a","260":"J K L M N O b c d e f g h i j k l m n o p q r s t","388":"I D E F A B C"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a oB cB","260":"I D E F qB rB sB","388":"pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B wB xB yB zB","260":"C L M N O b c d e f g TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","260":"E 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G QC","2":"LC MC NC","260":"PC","388":"WB H OC fB"},J:{"260":"A","388":"D"},K:{"1":"Q","2":"A B","260":"C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A","260":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"File API"};


/***/ }),
/* 727 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F B wB xB yB zB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"C Q TB eB UB","2":"A B"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"FileReader API"};


/***/ }),
/* 728 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F wB xB","16":"B yB zB TB eB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"C Q eB UB","2":"A","16":"B TB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"FileReaderSync"};


/***/ }),
/* 729 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","33":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"H a I D","33":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","36":"E F A B C"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D","33":"A"},K:{"2":"A B C TB eB UB","33":"Q"},L:{"33":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H","33":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Filesystem & FileWriter API"};


/***/ }),
/* 730 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K L"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","16":"0 1 2","388":"3 4 5 6 7 8 9 AB BB"},E:{"1":"J K tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","516":"B C TB UB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"LC MC NC","16":"WB H OC fB PC QC"},J:{"1":"A","2":"D"},K:{"1":"UB","16":"A B C TB eB","129":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","129":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:6,C:"FLAC audio format"};


/***/ }),
/* 731 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"V W X P Y Z G VB","2":"C J K L M N O R S T U"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q jB kB"},D:{"1":"V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U"},E:{"1":"uB vB","2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB"},F:{"1":"QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB wB xB yB zB TB eB 0B UB"},G:{"1":"JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"gap property for Flexbox"};


/***/ }),
/* 732 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","1028":"B","1316":"A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","164":"hB WB H a I D E F A B C J K L M N O b c d jB kB","516":"e f g h i j"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"d e f g h i j k","164":"H a I D E F A B C J K L M N O b c"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","33":"D E qB rB","164":"H a I oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B C wB xB yB zB TB eB 0B","33":"L M"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"E 4B 5B","164":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"1":"G PC QC","164":"WB H LC MC NC OC fB"},J:{"1":"A","164":"D"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","292":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS Flexible Box Layout Module"};


/***/ }),
/* 733 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB"},E:{"1":"J K tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB UB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"display: flow-root"};


/***/ }),
/* 734 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","2":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F wB xB yB zB","16":"B TB eB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"H G OC fB PC QC","2":"LC MC NC","16":"WB"},J:{"1":"D A"},K:{"1":"C Q UB","2":"A","16":"B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"focusin & focusout events"};


/***/ }),
/* 735 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M","132":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"preventScroll support in focus"};


/***/ }),
/* 736 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y jB kB","132":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","260":"9 AB BB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E oB cB pB qB rB","16":"F","132":"A sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B","132":"6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"132":"dC"}},B:5,C:"system-ui value for font-family"};


/***/ }),
/* 737 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","33":"L M N O b c d e f g h i j k l m n o p","164":"H a I D E F A B C J K"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L","33":"0 1 2 3 d e f g h i j k l m n o p q r s t u v w x y z","292":"M N O b c"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"D E F oB cB qB rB","4":"H a I pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d e f g h i j k l m n o p q"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E 4B 5B 6B","4":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB","33":"PC QC"},J:{"2":"D","33":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","33":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS font-feature-settings"};


/***/ }),
/* 738 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f jB kB","194":"g h i j k l m n o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k","33":"l m n o"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I oB cB pB qB","33":"D E F rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L wB xB yB zB TB eB 0B UB","33":"M N O b"},G:{"1":"CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","33":"E 5B 6B 7B 8B 9B AC BC"},H:{"2":"KC"},I:{"1":"G QC","2":"WB H LC MC NC OC fB","33":"PC"},J:{"2":"D","33":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 font-kerning"};


/***/ }),
/* 739 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q jB kB","194":"r s t u v w"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS Font Loading"};


/***/ }),
/* 740 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W","194":"X"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"@font-face metrics overrides"};


/***/ }),
/* 741 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","194":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y","194":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB","194":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"258":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"194":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"CSS font-size-adjust"};


/***/ }),
/* 742 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","676":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB","804":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"H","676":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"oB cB","676":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","676":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"804":"dC"}},B:7,C:"CSS font-smooth"};


/***/ }),
/* 743 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","4":"F A B"},B:{"1":"N O R S T U V W X P Y Z G VB","4":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB","194":"s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r"},E:{"1":"A B C J K dB TB UB tB uB vB","4":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","4":"L M N O b c d e"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","4":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","4":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","4":"A"},K:{"2":"A B C TB eB UB","4":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"4":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","4":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:4,C:"Font unicode-range subsetting"};


/***/ }),
/* 744 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","130":"A B"},B:{"130":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","130":"H a I D E F A B C J K L M N O b c d e f","322":"g h i j k l m n o p"},D:{"2":"H a I D E F A B C J K L","130":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"D E F oB cB qB rB","130":"H a I pB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","130":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 4B 5B 6B","130":"1B fB 2B 3B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","130":"G PC QC"},J:{"2":"D","130":"A"},K:{"2":"A B C TB eB UB","130":"Q"},L:{"130":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"130":"RC"},P:{"130":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"130":"bC"},R:{"130":"cC"},S:{"1":"dC"}},B:5,C:"CSS font-variant-alternates"};


/***/ }),
/* 745 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f jB kB","132":"g h i j k l m n o p"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"132":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:4,C:"CSS font-variant-east-asian "};


/***/ }),
/* 746 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p jB kB"},D:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u wB xB yB zB TB eB 0B UB"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","16":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:2,C:"CSS font-variant-numeric"};


/***/ }),
/* 747 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","132":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","2":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","2":"F wB"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","260":"cB 1B"},H:{"2":"KC"},I:{"1":"H G OC fB PC QC","2":"LC","4":"WB MC NC"},J:{"1":"A","4":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"@font-face Web fonts"};


/***/ }),
/* 748 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB","16":"a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Form attribute"};


/***/ }),
/* 749 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","2":"F wB","16":"xB yB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"H G OC fB PC QC","2":"LC MC NC","16":"WB"},J:{"1":"A","2":"D"},K:{"1":"B C Q TB eB UB","16":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Attributes for form submission"};


/***/ }),
/* 750 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H oB cB","132":"a I D E F A pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","2":"F wB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"cB","132":"E 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"516":"KC"},I:{"1":"G QC","2":"WB LC MC NC","132":"H OC fB PC"},J:{"1":"A","132":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"260":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"132":"dC"}},B:1,C:"Form validation"};


/***/ }),
/* 751 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","4":"A B","8":"I D E F"},B:{"1":"M N O R S T U V W X P Y Z G VB","4":"C J K L"},C:{"4":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB jB kB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB"},E:{"4":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","8":"oB cB"},F:{"1":"8 9 F B C AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","4":"0 1 2 3 4 5 6 7 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},G:{"2":"cB","4":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB","4":"PC QC"},J:{"2":"D","4":"A"},K:{"1":"A B C TB eB UB","4":"Q"},L:{"1":"G"},M:{"4":"P"},N:{"4":"A B"},O:{"1":"RC"},P:{"1":"VC WC dB XC YC ZC aC","4":"H SC TC UC"},Q:{"1":"bC"},R:{"4":"cC"},S:{"4":"dC"}},B:1,C:"HTML5 form features"};


/***/ }),
/* 752 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","548":"B"},B:{"1":"R S T U V W X P Y Z G VB","516":"C J K L M N O"},C:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F jB kB","676":"0 1 2 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","1700":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB"},D:{"1":"OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K","676":"L M N O b","804":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB"},E:{"2":"H a oB cB","676":"pB","804":"I D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B C wB xB yB zB TB eB 0B","804":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC","2052":"CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D","292":"A"},K:{"2":"A B C TB eB UB","804":"Q"},L:{"804":"G"},M:{"1":"P"},N:{"2":"A","548":"B"},O:{"804":"RC"},P:{"1":"dB XC YC ZC aC","804":"H SC TC UC VC WC"},Q:{"804":"bC"},R:{"804":"cC"},S:{"1":"dC"}},B:1,C:"Full Screen API"};


/***/ }),
/* 753 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c","33":"d e f g"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"Gamepad API"};


/***/ }),
/* 754 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I D E"},B:{"1":"C J K L M N O","129":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB jB kB","8":"hB WB","129":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","4":"H","129":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F B C J K pB qB rB sB dB TB UB tB uB vB","8":"H oB cB","129":"A"},F:{"1":"B C M N O b c d e f g h i j k l m n o p q r s t u zB TB eB 0B UB","2":"F L wB","8":"xB yB","129":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B","129":"8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H LC MC NC OC fB PC QC","129":"G"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","8":"A"},L:{"129":"G"},M:{"129":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H","129":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"129":"bC"},R:{"129":"cC"},S:{"1":"dC"}},B:2,C:"Geolocation"};


/***/ }),
/* 755 */
/***/ ((module) => {

module.exports={A:{A:{"644":"I D gB","2049":"F A B","2692":"E"},B:{"1":"R S T U V W X P Y Z G VB","2049":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB","260":"H a I D E F A B","1156":"WB","1284":"jB","1796":"kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","16":"F wB","132":"xB yB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","132":"A"},L:{"1":"G"},M:{"1":"P"},N:{"2049":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Element.getBoundingClientRect()"};


/***/ }),
/* 756 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB","132":"WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","260":"H a I D E F A"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","260":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","260":"F wB xB yB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","260":"cB 1B fB"},H:{"260":"KC"},I:{"1":"H G OC fB PC QC","260":"WB LC MC NC"},J:{"1":"A","260":"D"},K:{"1":"B C Q TB eB UB","260":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"getComputedStyle"};


/***/ }),
/* 757 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","8":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"getElementsByClassName"};


/***/ }),
/* 758 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","33":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a I oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A","33":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"crypto.getRandomValues()"};


/***/ }),
/* 759 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB XB FB YB Q GB HB IB JB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Gyroscope"};


/***/ }),
/* 760 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C J K"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s"},E:{"2":"H a I D oB cB pB qB rB","129":"B C J K dB TB UB tB uB vB","194":"E F A sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB 2B 3B 4B","129":"9B AC BC CC DC EC FC GC HC IC JC","194":"E 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"navigator.hardwareConcurrency"};


/***/ }),
/* 761 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","8":"I D gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","8":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","8":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","8":"F wB xB yB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"2":"KC"},I:{"1":"WB H G MC NC OC fB PC QC","2":"LC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","8":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Hashchange event"};


/***/ }),
/* 762 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A oB cB pB qB rB sB dB","130":"B C J K TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","130":"AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"HEIF/ISO Base Media File Format"};


/***/ }),
/* 763 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"2":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"J K tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","516":"B C TB UB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","258":"G"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"258":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H","258":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"HEVC/H.265 video format"};


/***/ }),
/* 764 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F B wB xB yB zB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"H G OC fB PC QC","2":"WB LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"C Q TB eB UB","2":"A B"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"hidden attribute"};


/***/ }),
/* 765 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b","33":"c d e f"},E:{"1":"E F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"High Resolution Time API"};


/***/ }),
/* 766 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H oB cB","4":"a pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB eB 0B UB","2":"F B wB xB yB zB TB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B","4":"fB"},H:{"2":"KC"},I:{"1":"G MC NC fB PC QC","2":"WB H LC OC"},J:{"1":"D A"},K:{"1":"C Q TB eB UB","2":"A B"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Session history management"};


/***/ }),
/* 767 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB 2B","129":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC","257":"MC NC"},J:{"1":"A","16":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"516":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"16":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:4,C:"HTML Media Capture"};


/***/ }),
/* 768 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E","260":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB","132":"WB jB kB","260":"H a I D E F A B C J K L M N O b c"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a","260":"I D E F A B C J K L M N O b c d e f g h"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","132":"H oB cB","260":"a I pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","132":"F B wB xB yB zB","260":"C TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","132":"cB","260":"1B fB 2B 3B"},H:{"132":"KC"},I:{"1":"G PC QC","132":"LC","260":"WB H MC NC OC fB"},J:{"260":"D A"},K:{"1":"Q","132":"A","260":"B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"260":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"HTML5 semantic elements"};


/***/ }),
/* 769 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O","2":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"HTTP Live Streaming (HLS)"};


/***/ }),
/* 770 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"C J K L M N O","513":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 s t u v w x y z","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB","513":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 x y z","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w","513":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E oB cB pB qB rB","260":"F A sB dB"},F:{"1":"k l m n o p q r s t","2":"F B C L M N O b c d e f g h i j wB xB yB zB TB eB 0B UB","513":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","513":"G"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"513":"G"},M:{"513":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H","513":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"513":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"HTTP/2 protocol"};


/***/ }),
/* 771 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"P Y Z G VB","2":"C J K L M N O","322":"R S T U V","578":"W X"},C:{"1":"Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB jB kB","194":"PB QB RB SB ZB aB bB R S T iB U V W X P"},D:{"1":"P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB","322":"R S T U V","578":"W X"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB tB","1090":"K uB vB"},F:{"1":"RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB wB xB yB zB TB eB 0B UB","578":"QB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC","66":"IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"194":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"HTTP/3 protocol"};


/***/ }),
/* 772 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M jB kB","4":"N O b c d e f g h i j"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B"},H:{"2":"KC"},I:{"1":"WB H G MC NC OC fB PC QC","2":"LC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"sandbox attribute for iframes"};


/***/ }),
/* 773 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","66":"c d e f g h i"},E:{"2":"H a I E F A B C J K oB cB pB qB sB dB TB UB tB uB vB","130":"D rB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","130":"4B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"seamless attribute for iframes"};


/***/ }),
/* 774 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E F A B"},B:{"1":"R S T U V W X P Y Z G VB","8":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB","8":"WB H a I D E F A B C J K L M N O b c d e f g jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J","8":"K L M N O b"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"oB cB","8":"H a pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B wB xB yB zB","8":"C TB eB 0B UB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB","8":"1B fB 2B"},H:{"2":"KC"},I:{"1":"G PC QC","8":"WB H LC MC NC OC fB"},J:{"1":"A","8":"D"},K:{"1":"Q","2":"A B","8":"C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"srcdoc attribute for iframes"};


/***/ }),
/* 775 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","322":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q jB kB","194":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","322":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v wB xB yB zB TB eB 0B UB","322":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"322":"bC"},R:{"1":"cC"},S:{"194":"dC"}},B:5,C:"ImageCapture API"};


/***/ }),
/* 776 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","161":"B"},B:{"2":"R S T U V W X P Y Z G VB","161":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A","161":"B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Input Method Editor API"};


/***/ }),
/* 777 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"naturalWidth & naturalHeight image properties"};


/***/ }),
/* 778 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Z G VB","2":"C J K L M N O","194":"R S T U V W X P Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB","194":"RB SB ZB aB bB R S T U V W X P Y"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB","194":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Import maps"};


/***/ }),
/* 779 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","8":"A B"},B:{"1":"R","2":"S T U V W X P Y Z G VB","8":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l jB kB","8":"m n CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","72":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l S T U V W X P Y Z G VB lB mB nB","66":"m n o p q","72":"r"},E:{"2":"H a oB cB pB","8":"I D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB","2":"F B C L M KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","66":"N O b c d","72":"e"},G:{"2":"cB 1B fB 2B 3B","8":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"2":"G"},M:{"8":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC","2":"ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"HTML Imports"};


/***/ }),
/* 780 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","16":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB","16":"jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB"},G:{"1":"DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"indeterminate checkbox"};


/***/ }),
/* 781 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","33":"A B C J K L","36":"H a I D E F"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"A","8":"H a I D E F","33":"f","36":"B C J K L M N O b c d e"},E:{"1":"A B C J K dB TB UB tB uB vB","8":"H a I D oB cB pB qB","260":"E F rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB xB","8":"B C yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB 2B 3B 4B","260":"E 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G PC QC","8":"WB H LC MC NC OC fB"},J:{"1":"A","8":"D"},K:{"1":"Q","2":"A","8":"B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"IndexedDB"};


/***/ }),
/* 782 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","132":"0 1 2","260":"3 4 5 6"},D:{"1":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","132":"4 5 6 7","260":"8 9 AB BB CB DB"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q wB xB yB zB TB eB 0B UB","132":"r s t u","260":"0 v w x y z"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B","16":"8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H","260":"SC TC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"260":"dC"}},B:4,C:"IndexedDB 2.0"};


/***/ }),
/* 783 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","4":"gB","132":"I D"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","36":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS inline-block"};


/***/ }),
/* 784 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","16":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","16":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"HTMLElement.innerText"};


/***/ }),
/* 785 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A gB","132":"B"},B:{"132":"C J K L M N O","260":"R S T U V W X P Y Z G VB"},C:{"1":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l jB kB","516":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"N O b c d e f g h i","2":"H a I D E F A B C J K L M","132":"j k l m n o p q r s t u v w","260":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I pB qB","2":"H a oB cB","2052":"D E F A B C J K rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB","1025":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1025":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2052":"A B"},O:{"1025":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"260":"bC"},R:{"1":"cC"},S:{"516":"dC"}},B:1,C:"autocomplete attribute: on & off values"};


/***/ }),
/* 786 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b"},E:{"1":"J K UB tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F L M wB xB yB zB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC","129":"DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:1,C:"Color input type"};


/***/ }),
/* 787 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","132":"C"},C:{"2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","1090":"9 AB BB CB","2052":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b","2052":"c d e f g"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB","4100":"uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB","260":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB LC MC NC","514":"H OC fB"},J:{"1":"A","2":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2052":"dC"}},B:1,C:"Date and time input types"};


/***/ }),
/* 788 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","132":"LC MC NC"},J:{"1":"A","132":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Email, telephone & URL input types"};


/***/ }),
/* 789 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","2561":"A B","2692":"F"},B:{"1":"R S T U V W X P Y Z G VB","2561":"C J K L M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB","1537":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z kB","1796":"WB jB"},D:{"1":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K","1025":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB","1537":"L M N O b c d e f g h i j k l m n o p q"},E:{"1":"K tB uB vB","16":"H a I oB cB","1025":"D E F A B C qB rB sB dB TB","1537":"pB","4097":"J UB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","16":"F B C wB xB yB zB TB eB","260":"0B","1025":"0 1 2 3 4 5 6 7 e f g h i j k l m n o p q r s t u v w x y z","1537":"L M N O b c d"},G:{"16":"cB 1B fB","1025":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","1537":"2B 3B 4B"},H:{"2":"KC"},I:{"16":"LC MC","1025":"G QC","1537":"WB H NC OC fB PC"},J:{"1025":"A","1537":"D"},K:{"1":"A B C TB eB UB","1025":"Q"},L:{"1":"G"},M:{"1537":"P"},N:{"2561":"A B"},O:{"1537":"RC"},P:{"1025":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1025":"bC"},R:{"1025":"cC"},S:{"1537":"dC"}},B:1,C:"input event"};


/***/ }),
/* 790 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","132":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H","16":"a I D E d e f g h","132":"F A B C J K L M N O b c"},E:{"1":"C J K TB UB tB uB vB","2":"H a oB cB pB","132":"I D E F A B qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"2":"3B 4B","132":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","514":"cB 1B fB 2B"},H:{"2":"KC"},I:{"2":"LC MC NC","260":"WB H OC fB","514":"G PC QC"},J:{"132":"A","260":"D"},K:{"2":"A B C TB eB UB","260":"Q"},L:{"260":"G"},M:{"2":"P"},N:{"514":"A","1028":"B"},O:{"2":"RC"},P:{"260":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"260":"bC"},R:{"260":"cC"},S:{"1":"dC"}},B:1,C:"accept attribute for file input"};


/***/ }),
/* 791 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Directory selection from file input"};


/***/ }),
/* 792 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","2":"F wB xB yB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"130":"KC"},I:{"130":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"130":"A B C Q TB eB UB"},L:{"132":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"130":"RC"},P:{"130":"H","132":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"2":"dC"}},B:1,C:"Multiple file selection"};


/***/ }),
/* 793 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M jB kB","4":"N O b c","194":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB","66":"CB DB EB XB FB YB Q GB HB IB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y wB xB yB zB TB eB 0B UB","66":"0 1 2 3 4 5 6 7 8 z"},G:{"1":"DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H SC TC UC VC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:1,C:"inputmode attribute"};


/***/ }),
/* 794 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:1,C:"Minimum length attribute for input fields"};


/***/ }),
/* 795 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","129":"A B"},B:{"1":"R S T U V W X P Y Z G VB","129":"C J","1025":"K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB","513":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"388":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB LC MC NC","388":"H G OC fB PC QC"},J:{"2":"D","388":"A"},K:{"1":"A B C TB eB UB","388":"Q"},L:{"388":"G"},M:{"641":"P"},N:{"388":"A B"},O:{"388":"RC"},P:{"388":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"388":"bC"},R:{"388":"cC"},S:{"513":"dC"}},B:1,C:"Number input type"};


/***/ }),
/* 796 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H oB cB","16":"a","388":"I D E F A pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB","388":"E 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G QC","2":"WB H LC MC NC OC fB PC"},J:{"1":"A","2":"D"},K:{"1":"A B C TB eB UB","132":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Pattern attribute for input fields"};


/***/ }),
/* 797 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","132":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB eB 0B UB","2":"F wB xB yB zB","132":"B TB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB G LC MC NC fB PC QC","4":"H OC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"input placeholder attribute"};


/***/ }),
/* 798 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"G fB PC QC","4":"WB H LC MC NC OC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Range input type"};


/***/ }),
/* 799 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","129":"A B"},B:{"1":"R S T U V W X P Y Z G VB","129":"C J K L M N O"},C:{"2":"hB WB jB kB","129":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K d e f g h","129":"L M N O b c"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F wB xB yB zB","16":"B TB eB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"129":"KC"},I:{"1":"G PC QC","16":"LC MC","129":"WB H NC OC fB"},J:{"1":"D","129":"A"},K:{"1":"C","2":"A","16":"B TB eB","129":"Q UB"},L:{"1":"G"},M:{"129":"P"},N:{"129":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"129":"dC"}},B:1,C:"Search input type"};


/***/ }),
/* 800 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","16":"F wB xB yB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Selection controls for input & textarea"};


/***/ }),
/* 801 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","16":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Element.insertAdjacentElement() & Element.insertAdjacentText()"};


/***/ }),
/* 802 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","16":"gB","132":"I D E F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","16":"F wB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Element.insertAdjacentHTML()"};


/***/ }),
/* 803 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:6,C:"Internationalization API"};


/***/ }),
/* 804 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"XC YC ZC aC","2":"H SC TC UC VC WC dB"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"IntersectionObserver V2"};


/***/ }),
/* 805 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O","2":"C J K","516":"L","1025":"R S T U V W X P Y Z G VB"},C:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"8 9 AB"},D:{"1":"EB XB FB YB Q GB HB","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","516":"7 8 9 AB BB CB DB","1025":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"J K UB tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t wB xB yB zB TB eB 0B UB","516":"0 u v w x y z","1025":"HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","1025":"G"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"516":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H","516":"SC TC"},Q:{"1025":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"IntersectionObserver"};


/***/ }),
/* 806 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N","130":"O"},C:{"1":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB jB kB"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q"},E:{"1":"J K tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB UB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Intl.PluralRules API"};


/***/ }),
/* 807 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","1537":"R S T U V W X P Y Z G VB"},C:{"2":"hB","932":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB jB kB","2308":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"H a I D E F A B C J K L M N O b c d","545":"0 1 e f g h i j k l m n o p q r s t u v w x y z","1537":"2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I oB cB pB","516":"B C J K TB UB tB uB vB","548":"F A sB dB","676":"D E qB rB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","513":"q","545":"L M N O b c d e f g h i j k l m n o","1537":"0 1 2 3 4 5 6 7 8 9 p r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B fB 2B 3B","516":"IC JC","548":"6B 7B 8B 9B AC BC CC DC EC FC GC HC","676":"E 4B 5B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","545":"PC QC","1537":"G"},J:{"2":"D","545":"A"},K:{"2":"A B C TB eB UB","1537":"Q"},L:{"1537":"G"},M:{"2308":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"545":"H","1537":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"545":"bC"},R:{"1537":"cC"},S:{"932":"dC"}},B:5,C:"Intrinsic & Extrinsic Sizing"};


/***/ }),
/* 808 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H oB cB","129":"a pB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"JPEG 2000 image format"};


/***/ }),
/* 809 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z jB kB","322":"G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G","194":"VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"JPEG XL image format"};


/***/ }),
/* 810 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O","2":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"JPEG XR image format"};


/***/ }),
/* 811 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB jB kB"},D:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Lookbehind in JS regular expressions"};


/***/ }),
/* 812 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D gB","129":"E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"JSON parsing"};


/***/ }),
/* 813 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L","132":"M N O"},C:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB","132":"DB EB XB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB","132":"dB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","132":"0 1 2"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B","132":"9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"132":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC","132":"UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"132":"dC"}},B:5,C:"CSS justify-content: space-evenly"};


/***/ }),
/* 814 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"O R S T U V W X P Y Z G VB","2":"C J K L M N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"LC MC NC","132":"WB H OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"High-quality kerning pairs & ligatures"};


/***/ }),
/* 815 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","16":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B","16":"C"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"UB","2":"A B TB eB","16":"C","130":"Q"},L:{"1":"G"},M:{"130":"P"},N:{"130":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"KeyboardEvent.charCode"};


/***/ }),
/* 816 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t jB kB"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x","194":"0 1 2 3 y z"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k wB xB yB zB TB eB 0B UB","194":"l m n o p q"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","194":"Q"},L:{"194":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H","194":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"194":"cC"},S:{"1":"dC"}},B:5,C:"KeyboardEvent.code"};


/***/ }),
/* 817 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B L M wB xB yB zB TB eB 0B","16":"C"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q UB","2":"A B TB eB","16":"C"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"KeyboardEvent.getModifierState()"};


/***/ }),
/* 818 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","260":"F A B"},B:{"1":"R S T U V W X P Y Z G VB","260":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e jB kB","132":"f g h i j k"},D:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B L M N O b c d e f g h i j k l m n o p q r s t wB xB yB zB TB eB 0B","16":"C"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"1":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"UB","2":"A B TB eB","16":"C Q"},L:{"1":"G"},M:{"1":"P"},N:{"260":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:5,C:"KeyboardEvent.key"};


/***/ }),
/* 819 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f g h i j k l"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","16":"I oB cB","132":"H a pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B","16":"C","132":"L M"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB","132":"2B 3B 4B"},H:{"2":"KC"},I:{"1":"G PC QC","16":"LC MC","132":"WB H NC OC fB"},J:{"132":"D A"},K:{"1":"Q UB","2":"A B TB eB","16":"C"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"KeyboardEvent.location"};


/***/ }),
/* 820 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB","16":"a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","16":"F wB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB","16":"LC MC","132":"PC QC"},J:{"1":"D A"},K:{"1":"A B C TB eB UB","132":"Q"},L:{"132":"G"},M:{"132":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"2":"H","132":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"132":"cC"},S:{"1":"dC"}},B:7,C:"KeyboardEvent.which"};


/***/ }),
/* 821 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O","2":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"1":"B","2":"A"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Resource Hints: Lazyload"};


/***/ }),
/* 822 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","2052":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","194":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O","322":"b c d e f g h i j k l m n o p q r s t u v w","516":"0 1 2 3 4 x y z"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB","1028":"A dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","322":"L M N O b c d e f g h i j","516":"k l m n o p q r"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B","1028":"8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","516":"H"},Q:{"1":"bC"},R:{"516":"cC"},S:{"1":"dC"}},B:6,C:"let"};


/***/ }),
/* 823 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O","129":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"129":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"257":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"129":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","513":"F B C wB xB yB zB TB eB 0B UB"},G:{"1026":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1026":"KC"},I:{"1":"WB H LC MC NC OC fB","513":"G PC QC"},J:{"1":"D","1026":"A"},K:{"1026":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1026":"A B"},O:{"257":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","513":"H"},Q:{"129":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"PNG favicons"};


/***/ }),
/* 824 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R","3073":"S T U V W X P Y Z G VB"},C:{"2":"hB WB jB kB","260":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w","1025":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","3073":"S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E oB cB pB qB rB","516":"F A B C J K sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB wB xB yB zB TB eB 0B UB","3073":"KB LB MB NB OB PB QB RB SB"},G:{"130":"E cB 1B fB 2B 3B 4B 5B","516":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"130":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D","130":"A"},K:{"130":"A B C Q TB eB UB"},L:{"3073":"G"},M:{"2":"P"},N:{"130":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1025":"dC"}},B:1,C:"SVG favicons"};


/***/ }),
/* 825 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E gB","132":"F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"hB WB","260":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"16":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"16":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"16":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","16":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Resource Hints: dns-prefetch"};


/***/ }),
/* 826 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H SC TC UC VC"},Q:{"16":"bC"},R:{"16":"cC"},S:{"2":"dC"}},B:1,C:"Resource Hints: modulepreload"};


/***/ }),
/* 827 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K","260":"L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","129":"v"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"16":"P"},N:{"2":"A B"},O:{"16":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Resource Hints: preconnect"};


/***/ }),
/* 828 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB","194":"K tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC","194":"HC IC JC"},H:{"2":"KC"},I:{"1":"H G PC QC","2":"WB LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Resource Hints: prefetch"};


/***/ }),
/* 829 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M","1028":"N O"},C:{"1":"W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB jB kB","132":"CB","578":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V"},D:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","322":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","322":"AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Resource Hints: preload"};


/***/ }),
/* 830 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"1":"B","2":"A"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"Resource Hints: prerender"};


/***/ }),
/* 831 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB jB kB","132":"SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB","66":"SB ZB"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB","322":"K tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB","66":"Q GB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC","322":"HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"132":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"YC ZC aC","2":"H SC TC UC VC WC dB XC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"Lazy loading via attribute for images & iframes"};


/***/ }),
/* 832 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","16":"gB","132":"I D E F A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f"},E:{"1":"A B C J K dB TB UB tB uB vB","132":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F B C wB xB yB zB TB eB 0B","132":"UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","132":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"132":"KC"},I:{"1":"G PC QC","132":"WB H LC MC NC OC fB"},J:{"132":"D A"},K:{"1":"Q","16":"A B C TB eB","132":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","132":"A"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","132":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"4":"dC"}},B:6,C:"localeCompare()"};


/***/ }),
/* 833 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB XB FB YB Q GB HB IB JB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"194":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Magnetometer"};


/***/ }),
/* 834 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","36":"F A B"},B:{"1":"L M N O R S T U V W X P Y Z G VB","36":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB","36":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","36":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","2":"H oB cB","36":"a I D pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B wB xB yB zB TB","36":"C L M N O b c eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB","36":"1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G","2":"LC","36":"WB H MC NC OC fB PC QC"},J:{"36":"D A"},K:{"1":"Q","2":"A B","36":"C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"36":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","36":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"matches() DOM method"};


/***/ }),
/* 835 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B C wB xB yB zB TB eB 0B"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"matchMedia"};


/***/ }),
/* 836 */
/***/ ((module) => {

module.exports={A:{A:{"2":"F A B gB","8":"I D E"},B:{"2":"C J K L M N O","8":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","129":"hB WB jB kB"},D:{"1":"g","8":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K dB TB UB tB uB vB","260":"H a I D E F oB cB pB qB rB sB"},F:{"2":"F","4":"B C wB xB yB zB TB eB 0B UB","8":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB"},H:{"8":"KC"},I:{"8":"WB H G LC MC NC OC fB PC QC"},J:{"1":"A","8":"D"},K:{"8":"A B C Q TB eB UB"},L:{"8":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"4":"RC"},P:{"8":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"8":"bC"},R:{"8":"cC"},S:{"1":"dC"}},B:2,C:"MathML"};


/***/ }),
/* 837 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","16":"gB","900":"I D E F"},B:{"1":"R S T U V W X P Y Z G VB","1025":"C J K L M N O"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","900":"hB WB jB kB","1025":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"a oB","900":"H cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F","132":"B C wB xB yB zB TB eB 0B UB"},G:{"1":"1B fB 2B 3B 4B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB","2052":"E 5B"},H:{"132":"KC"},I:{"1":"WB H NC OC fB PC QC","16":"LC MC","4097":"G"},J:{"1":"D A"},K:{"132":"A B C TB eB UB","4100":"Q"},L:{"4097":"G"},M:{"4097":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"4097":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1025":"dC"}},B:1,C:"maxlength attribute for input and textarea elements"};


/***/ }),
/* 838 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O","16":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p","2":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB","16":"lB mB nB"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"B C L M N O b c d e f g xB yB zB TB eB 0B UB","2":"0 1 2 3 4 5 6 7 8 9 F h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"16":"KC"},I:{"1":"H G OC fB PC QC","16":"WB LC MC NC"},J:{"16":"D A"},K:{"1":"C Q UB","16":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"16":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Media attribute"};


/***/ }),
/* 839 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","132":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p jB kB","132":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"H a I D E F A B C J K L M N","132":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a oB cB pB","132":"I D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B fB 2B 3B 4B","132":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","132":"G PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"132":"G"},M:{"132":"P"},N:{"132":"A B"},O:{"2":"RC"},P:{"2":"H SC","132":"TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"132":"dC"}},B:2,C:"Media Fragments"};


/***/ }),
/* 840 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB","16":"K tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Media Session API"};


/***/ }),
/* 841 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y jB kB","260":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","324":"7 8 9 AB BB CB DB EB XB FB YB"},E:{"2":"H a I D E F A oB cB pB qB rB sB dB","132":"B C J K TB UB tB uB vB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB","324":"0 1 2 3 s t u v w x y z"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"260":"P"},N:{"2":"A B"},O:{"132":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H","132":"SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"260":"dC"}},B:5,C:"Media Capture from DOM Elements API"};


/***/ }),
/* 842 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"3 4"},E:{"1":"uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB","322":"J K UB tB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p wB xB yB zB TB eB 0B UB","194":"q r"},G:{"1":"JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC","578":"CC DC EC FC GC HC IC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:5,C:"MediaRecorder API"};


/***/ }),
/* 843 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB","66":"h i j k l m n o p q r s t u v w x"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M","33":"f g h i j k l m","66":"N O b c d e"},E:{"1":"E F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC","260":"EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G QC","2":"WB H LC MC NC OC fB PC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H SC TC UC VC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Media Source Extensions"};


/***/ }),
/* 844 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D jB kB","132":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V","450":"W X P Y Z G"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","66":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","66":"0 1 2 r s t u v w x y z"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"450":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Context menu item (menuitem element)"};


/***/ }),
/* 845 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u","132":"QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","258":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"513":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H","16":"SC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"theme-color Meta Tag"};


/***/ }),
/* 846 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F wB xB yB zB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"meter element"};


/***/ }),
/* 847 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"Web MIDI API"};


/***/ }),
/* 848 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","8":"I gB","129":"D","257":"E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"CSS min/max-width/height"};


/***/ }),
/* 849 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","132":"H a I D E F A B C J K L M N O b c d jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","2":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"MP3 audio format"};


/***/ }),
/* 850 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O","2":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","386":"d e"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Dynamic Adaptive Streaming over HTTP (MPEG-DASH)"};


/***/ }),
/* 851 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c jB kB","4":"d e f g h i j k l m n o p q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","2":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G PC QC","4":"WB H LC MC OC fB","132":"NC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"260":"P"},N:{"1":"A B"},O:{"4":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"MPEG-4/H.264 video format"};


/***/ }),
/* 852 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 Multiple backgrounds"};


/***/ }),
/* 853 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O","516":"R S T U V W X P Y Z G VB"},C:{"132":"8 9 AB BB CB DB EB XB FB YB Q GB HB","164":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","516":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"420":"0 1 2 3 4 5 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","516":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"A B C J K dB TB UB tB uB vB","132":"F sB","164":"D E rB","420":"H a I oB cB pB qB"},F:{"1":"C TB eB 0B UB","2":"F B wB xB yB zB","420":"L M N O b c d e f g h i j k l m n o p q r s","516":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","132":"6B 7B","164":"E 4B 5B","420":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"420":"WB H LC MC NC OC fB PC QC","516":"G"},J:{"420":"D A"},K:{"1":"C TB eB UB","2":"A B","516":"Q"},L:{"516":"G"},M:{"132":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","420":"H"},Q:{"132":"bC"},R:{"132":"cC"},S:{"164":"dC"}},B:4,C:"CSS3 Multiple column layout"};


/***/ }),
/* 854 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","260":"F A B"},B:{"132":"R S T U V W X P Y Z G VB","260":"C J K L M N O"},C:{"2":"hB WB H a jB kB","260":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"16":"H a I D E F A B C J K","132":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"16":"oB cB","132":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"1":"C 0B UB","2":"F wB xB yB zB","16":"B TB eB","132":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"16":"cB 1B","132":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"16":"LC MC","132":"WB H G NC OC fB PC QC"},J:{"132":"D A"},K:{"1":"C UB","2":"A","16":"B TB eB","132":"Q"},L:{"132":"G"},M:{"260":"P"},N:{"260":"A B"},O:{"132":"RC"},P:{"132":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"260":"dC"}},B:5,C:"Mutation events"};


/***/ }),
/* 855 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E gB","8":"F A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N","33":"O b c d e f g h i"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","33":"3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB LC MC NC","8":"H OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","8":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Mutation Observer"};


/***/ }),
/* 856 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","2":"gB","8":"I D"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","4":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Web Storage - name/value pairs"};


/***/ }),
/* 857 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","194":"R S T U V W","260":"X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB","194":"RB SB ZB aB bB R S T U V W","260":"X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB","194":"Q GB HB IB JB KB LB MB NB OB","260":"PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"File System Access API"};


/***/ }),
/* 858 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a","33":"I D E F A B C"},E:{"1":"E F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"H G OC fB PC QC","2":"WB LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Navigation Timing API"};


/***/ }),
/* 859 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"16":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"16":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"16":"bC"},R:{"16":"cC"},S:{"1":"dC"}},B:2,C:"Navigator Language API"};


/***/ }),
/* 860 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","1028":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB","1028":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","1028":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"LC PC QC","132":"WB H MC NC OC fB"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","516":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","132":"H","516":"SC TC UC"},Q:{"1":"bC"},R:{"516":"cC"},S:{"260":"dC"}},B:7,C:"Network Information API"};


/***/ }),
/* 861 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H","36":"a I D E F A B C J K L M N O b c d"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","36":"G PC QC"},J:{"1":"A","2":"D"},K:{"2":"A B C TB eB UB","36":"Q"},L:{"513":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"36":"H","258":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"258":"cC"},S:{"1":"dC"}},B:1,C:"Web Notifications"};


/***/ }),
/* 862 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","16":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:6,C:"Object.entries"};


/***/ }),
/* 863 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L","260":"M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D oB cB pB qB","132":"E F rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F L M N O wB xB yB","33":"B C zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","132":"E 5B 6B 7B"},H:{"33":"KC"},I:{"1":"G QC","2":"WB H LC MC NC OC fB PC"},J:{"2":"D A"},K:{"1":"Q","2":"A","33":"B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 object-fit/object-position"};


/***/ }),
/* 864 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 s t u v w x y z","2":"6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"f g h i j k l m n o p q r s","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"H","2":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"Object.observe data binding"};


/***/ }),
/* 865 */
/***/ ((module) => {

module.exports={A:{A:{"8":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"0 1 2 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","8":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","8":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","8":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"8":"KC"},I:{"1":"G","8":"WB H LC MC NC OC fB PC QC"},J:{"8":"D A"},K:{"1":"Q","8":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","8":"H SC"},Q:{"1":"bC"},R:{"8":"cC"},S:{"1":"dC"}},B:6,C:"Object.values method"};


/***/ }),
/* 866 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O","2":"C R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D","130":"A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Object RTC (ORTC) API for WebRTC"};


/***/ }),
/* 867 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"F gB","8":"I D E"},B:{"1":"C J K L M N O R S T U V","2":"W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U jB kB","2":"V W X P Y Z G","4":"WB","8":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V","2":"W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","8":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB zB TB eB 0B UB","2":"F QB RB SB wB","8":"xB yB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H LC MC NC OC fB PC QC","2":"G"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"2":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"Offline web applications"};


/***/ }),
/* 868 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","322":"EB XB FB YB Q GB HB IB JB KB LB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","322":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"194":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:1,C:"OffscreenCanvas"};


/***/ }),
/* 869 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB","132":"uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"A","2":"D"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Ogg Vorbis audio format"};


/***/ }),
/* 870 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","8":"F A B"},B:{"1":"N O R S T U V W X P Y Z G VB","8":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"1":"P"},N:{"8":"A B"},O:{"1":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:6,C:"Ogg/Theora video format"};


/***/ }),
/* 871 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L","16":"M N O b"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","16":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B","16":"C"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Reversed attribute of ordered lists"};


/***/ }),
/* 872 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K L"},C:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"\"once\" event listener option"};


/***/ }),
/* 873 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D gB","260":"E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB","516":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B","4":"UB"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"A","132":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Online/offline status"};


/***/ }),
/* 874 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o"},E:{"2":"H a I D E F A oB cB pB qB rB sB dB","132":"B C J K TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","132":"AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Opus"};


/***/ }),
/* 875 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB XB FB YB Q GB HB IB JB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Orientation Sensor"};


/***/ }),
/* 876 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","260":"E","388":"F A B"},B:{"1":"L M N O R S T U V W X P Y Z G VB","388":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B","129":"UB","260":"F B wB xB yB zB TB eB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"C Q UB","260":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"388":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS outline properties"};


/***/ }),
/* 877 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C J K"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:6,C:"String.prototype.padStart(), String.prototype.padEnd()"};


/***/ }),
/* 878 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"PageTransitionEvent"};


/***/ }),
/* 879 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F jB kB","33":"A B C J K L M N"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J","33":"K L M N O b c d e f g h i j k l m n o"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a I oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B C wB xB yB zB TB eB 0B","33":"L M N O b"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB","33":"PC QC"},J:{"1":"A","2":"D"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","33":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Page Visibility"};


/***/ }),
/* 880 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K L"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"Passive event listeners"};


/***/ }),
/* 881 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","16":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y jB kB","16":"Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB","16":"lB mB nB"},E:{"1":"C J UB","2":"H a I D E F A B oB cB pB qB rB sB dB TB","16":"K tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","16":"9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","16":"G"},J:{"2":"D","16":"A"},K:{"2":"A B C TB eB UB","16":"Q"},L:{"16":"G"},M:{"16":"P"},N:{"2":"A","16":"B"},O:{"16":"RC"},P:{"2":"H SC TC","16":"UC VC WC dB XC YC ZC aC"},Q:{"16":"bC"},R:{"16":"cC"},S:{"2":"dC"}},B:1,C:"Password Rules"};


/***/ }),
/* 882 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J","132":"K L M N O"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB","132":"0 1 2 3 n o p q r s t u v w x y z"},D:{"1":"LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r","132":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB","132":"E F rB"},F:{"1":"BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","16":"E","132":"5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"1":"A","2":"D"},K:{"2":"A B C TB eB UB","132":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"132":"RC"},P:{"1":"dB XC YC ZC aC","132":"H SC TC UC VC WC"},Q:{"132":"bC"},R:{"132":"cC"},S:{"1":"dC"}},B:1,C:"Path2D"};


/***/ }),
/* 883 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J","322":"K","8196":"L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB jB kB","4162":"BB CB DB EB XB FB YB Q GB HB IB","16452":"JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"9 AB BB CB DB EB","1090":"XB FB","8196":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB"},E:{"1":"J K UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB","514":"A B dB","8196":"C TB"},F:{"1":"JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v wB xB yB zB TB eB 0B UB","194":"0 1 2 3 w x y z","8196":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB"},G:{"1":"DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B","514":"8B 9B AC","8196":"BC CC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2049":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"YC ZC aC","2":"H","8196":"SC TC UC VC WC dB XC"},Q:{"8196":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Payment Request API"};


/***/ }),
/* 884 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"L M N O R S T U V W X P Y Z G VB","16":"C J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"16":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Built-in PDF viewer"};


/***/ }),
/* 885 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:7,C:"Permissions API"};


/***/ }),
/* 886 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","258":"R S T U V W","322":"X P","388":"Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB jB kB","258":"RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB","258":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W","322":"X P","388":"Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B oB cB pB qB rB sB dB","258":"C J K TB UB tB uB vB"},F:{"2":"0 1 2 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","258":"3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB","322":"PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC","258":"BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","258":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","258":"Q"},L:{"388":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC","258":"VC WC dB XC YC ZC aC"},Q:{"258":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Permissions Policy"};


/***/ }),
/* 887 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB jB kB","132":"PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","1090":"KB","1412":"OB","1668":"LB MB NB"},D:{"1":"NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB","2114":"MB"},E:{"1":"K tB uB vB","2":"H a I D E F oB cB pB qB rB sB","4100":"A B C J dB TB UB"},F:{"1":"QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s wB xB yB zB TB eB 0B UB","8196":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB"},G:{"1":"IC JC","2":"E cB 1B fB 2B 3B 4B 5B","4100":"6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"16388":"G"},M:{"16388":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Picture-in-Picture"};


/***/ }),
/* 888 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p jB kB","578":"q r s t"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s","194":"t"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB","322":"g"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Picture element"};


/***/ }),
/* 889 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"2":"hB","194":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"194":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"194":"dC"}},B:1,C:"Ping attribute"};


/***/ }),
/* 890 */
/***/ ((module) => {

module.exports={A:{A:{"1":"D E F A B","2":"gB","8":"I"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"PNG alpha transparency"};


/***/ }),
/* 891 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"CSS pointer-events (for HTML)"};


/***/ }),
/* 892 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F gB","164":"A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB","8":"I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w","328":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB"},D:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d","8":"0 1 2 3 4 5 6 7 e f g h i j k l m n o p q r s t u v w x y z","584":"8 9 AB"},E:{"1":"J K tB uB vB","2":"H a I oB cB pB","8":"D E F A B C qB rB sB dB TB","1096":"UB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","8":"L M N O b c d e f g h i j k l m n o p q r s t u","584":"v w x"},G:{"1":"FC GC HC IC JC","8":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC","6148":"EC"},H:{"2":"KC"},I:{"1":"G","8":"WB H LC MC NC OC fB PC QC"},J:{"8":"D A"},K:{"1":"Q","2":"A","8":"B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","36":"A"},O:{"8":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"SC","8":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"328":"dC"}},B:2,C:"Pointer events"};


/***/ }),
/* 893 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J jB kB","33":"K L M N O b c d e f g h i j k l m n o p q r s t u v w"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L","33":"e f g h i j k l m n o p q r s","66":"M N O b c d"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d e f"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:2,C:"Pointer Lock API"};


/***/ }),
/* 894 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V","322":"G VB","450":"W X P Y Z"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB","194":"SB ZB aB bB R S T U V","322":"X P Y Z G VB lB mB nB","450":"W"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB","194":"Q GB HB IB JB KB LB MB NB OB PB","322":"QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"450":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Portals"};


/***/ }),
/* 895 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB jB kB"},D:{"1":"ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},E:{"1":"J K UB tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB"},F:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"YC ZC aC","2":"H SC TC UC VC WC dB XC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"prefers-color-scheme media query"};


/***/ }),
/* 896 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q jB kB"},D:{"1":"RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"XC YC ZC aC","2":"H SC TC UC VC WC dB"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"prefers-reduced-motion media query"};


/***/ }),
/* 897 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB"},E:{"1":"uB vB","2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB"},F:{"1":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB wB xB yB zB TB eB 0B UB"},G:{"1":"JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"XC YC ZC aC","2":"H SC TC UC VC WC dB"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Private class fields"};


/***/ }),
/* 898 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"V W X P Y Z G VB","2":"C J K L M N O R S T U"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U"},E:{"1":"uB vB","2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB"},F:{"1":"NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB wB xB yB zB TB eB 0B UB"},G:{"1":"JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Public class fields"};


/***/ }),
/* 899 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F wB xB yB zB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B","132":"4B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"progress element"};


/***/ }),
/* 900 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"O R S T U V W X P Y Z G VB","2":"C J K L M N"},C:{"1":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB jB kB"},D:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Promise.prototype.finally"};


/***/ }),
/* 901 */
/***/ ((module) => {

module.exports={A:{A:{"8":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","4":"j k","8":"hB WB H a I D E F A B C J K L M N O b c d e f g h i jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"o","8":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","8":"H a I D oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","4":"b","8":"F B C L M N O wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB 2B 3B 4B"},H:{"8":"KC"},I:{"1":"G QC","8":"WB H LC MC NC OC fB PC"},J:{"8":"D A"},K:{"1":"Q","8":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Promises"};


/***/ }),
/* 902 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:4,C:"Proximity API"};


/***/ }),
/* 903 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O u v w x y z","66":"b c d e f g h i j k l m n o p q r s t"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C h i j k l m n o p q r wB xB yB zB TB eB 0B UB","66":"L M N O b c d e f g"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:6,C:"Proxy object"};


/***/ }),
/* 904 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB jB kB","4":"NB OB PB QB RB","132":"MB"},D:{"1":"PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB"},E:{"1":"uB vB","2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB tB","260":"K"},F:{"1":"FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB wB xB yB zB TB eB 0B UB"},G:{"1":"IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"XC YC ZC aC","2":"H SC TC UC VC WC dB"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Public class fields"};


/***/ }),
/* 905 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB","2":"F B C L M N O b JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","4":"f","16":"c d e g"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB","2":"XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"HTTP Public Key Pinning"};


/***/ }),
/* 906 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O","2":"C J K L M","257":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","257":"0 2 3 4 5 6 7 9 AB BB CB DB EB XB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","1281":"1 8 FB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","257":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","388":"0 1 2 3 4 5"},E:{"2":"H a I D E F oB cB pB qB rB","514":"A B C J K sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s wB xB yB zB TB eB 0B UB","16":"t u v w x","257":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"257":"dC"}},B:5,C:"Push API"};


/***/ }),
/* 907 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"gB","8":"I D","132":"E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","8":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","8":"F wB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"querySelector/querySelectorAll"};


/***/ }),
/* 908 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","16":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K L M N O b c d e f g h"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F wB","132":"B C xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B 3B"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"Q","132":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"257":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"readonly attribute of input and textarea elements"};


/***/ }),
/* 909 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"R S T U","132":"C J K L M N O","513":"V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V","2":"H a I D E F A B C J K L M N O b c","260":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB","513":"W X P Y Z G VB lB mB nB"},E:{"1":"C TB UB","2":"H a I D oB cB pB qB","132":"E F A B rB sB dB","1025":"J K tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB","2":"F B C wB xB yB zB TB eB 0B UB","513":"QB RB SB"},G:{"1":"CC DC EC FC","2":"cB 1B fB 2B 3B 4B","132":"E 5B 6B 7B 8B 9B AC BC","1025":"GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"513":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Referrer Policy"};


/***/ }),
/* 910 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","129":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB"},D:{"2":"H a I D E F A B C","129":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B wB xB yB zB TB eB","129":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D","129":"A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"Custom protocol handling"};


/***/ }),
/* 911 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:1,C:"rel=noopener"};


/***/ }),
/* 912 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","132":"B"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K L"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Link type \"noreferrer\""};


/***/ }),
/* 913 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"O R S T U V W X P Y Z G VB","2":"C J K L M","132":"N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l jB kB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","132":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D E oB cB pB qB rB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 t u v w x y z"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"132":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H","132":"SC TC UC VC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:1,C:"relList (DOMTokenList)"};


/***/ }),
/* 914 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E gB","132":"F A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB"},G:{"1":"E 1B fB 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB","260":"2B"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"rem (root em) units"};


/***/ }),
/* 915 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","33":"B C J K L M N O b c d e","164":"H a I D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F","33":"e f","164":"O b c d","420":"A B C J K L M N"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","33":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","33":"3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"requestAnimationFrame"};


/***/ }),
/* 916 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"9 AB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB","322":"K tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC","322":"HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"requestIdleCallback"};


/***/ }),
/* 917 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB jB kB"},D:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"AB BB CB DB EB XB FB YB Q GB"},E:{"1":"K tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB UB","66":"J"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w wB xB yB zB TB eB 0B UB","194":"0 1 2 3 4 5 6 7 x y z"},G:{"1":"HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"WC dB XC YC ZC aC","2":"H SC TC UC VC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Resize Observer"};


/***/ }),
/* 918 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB","194":"n o p q"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB","260":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Resource Timing"};


/***/ }),
/* 919 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"0 1 2"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m wB xB yB zB TB eB 0B UB","194":"n o p"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Rest parameters"};


/***/ }),
/* 920 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K","516":"L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d jB kB","33":"e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e","33":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N wB xB yB zB TB eB 0B UB","33":"O b c d e f g h i j k l m n o p q r s t u v w x y"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","130":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"33":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"33":"cC"},S:{"1":"dC"}},B:5,C:"WebRTC Peer-to-peer connections"};


/***/ }),
/* 921 */
/***/ ((module) => {

module.exports={A:{A:{"4":"I D E F A B gB"},B:{"4":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t jB kB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H"},E:{"4":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","8":"H oB cB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","8":"F B C wB xB yB zB TB eB 0B UB"},G:{"4":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB"},H:{"8":"KC"},I:{"4":"WB H G OC fB PC QC","8":"LC MC NC"},J:{"4":"A","8":"D"},K:{"4":"Q","8":"A B C TB eB UB"},L:{"4":"G"},M:{"1":"P"},N:{"4":"A B"},O:{"4":"RC"},P:{"4":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"4":"bC"},R:{"4":"cC"},S:{"1":"dC"}},B:1,C:"Ruby annotation"};


/***/ }),
/* 922 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","2":"I D gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n","2":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I pB","2":"D E F A B C J K rB sB dB TB UB tB uB vB","16":"qB","129":"H oB cB"},F:{"1":"F B C L M N O wB xB yB zB TB eB 0B UB","2":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"1B fB 2B 3B 4B","2":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","129":"cB"},H:{"1":"KC"},I:{"1":"WB H LC MC NC OC fB PC","2":"G QC"},J:{"1":"D A"},K:{"1":"A B C TB eB UB","2":"Q"},L:{"2":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"display: run-in"};


/***/ }),
/* 923 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","388":"B"},B:{"1":"O R S T U V W","2":"C J K L","129":"M N","513":"X P Y Z G VB"},C:{"1":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB jB kB"},D:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","513":"S T U V W X P Y Z G VB lB mB nB"},E:{"1":"uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB TB","2052":"K","3076":"C J UB tB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u wB xB yB zB TB eB 0B UB","513":"OB PB QB RB SB"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC","2052":"CC DC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","513":"Q"},L:{"513":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"16":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:6,C:"'SameSite' cookie attribute"};


/***/ }),
/* 924 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","164":"B"},B:{"1":"R S T U V W X P Y Z G VB","36":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N jB kB","36":"O b c d e f g h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A","36":"B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","16":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"Screen Orientation"};


/***/ }),
/* 925 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB","132":"a"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"async attribute for external scripts"};


/***/ }),
/* 926 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","132":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","257":"H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"defer attribute for external scripts"};


/***/ }),
/* 927 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","132":"E F A B"},B:{"1":"R S T U V W X P Y Z G VB","132":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r jB kB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB"},E:{"2":"H a oB cB","132":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB xB yB zB","16":"B TB eB","132":"0 1 2 3 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z 0B UB"},G:{"16":"cB 1B fB","132":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","16":"LC MC","132":"WB H NC OC fB PC QC"},J:{"132":"D A"},K:{"132":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"132":"RC"},P:{"132":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"132":"cC"},S:{"1":"dC"}},B:5,C:"scrollIntoView"};


/***/ }),
/* 928 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"Element.scrollIntoViewIfNeeded()"};


/***/ }),
/* 929 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","2":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB","2":"F B C QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"SDCH Accept-Encoding/Content-Encoding"};


/***/ }),
/* 930 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","16":"gB","260":"I D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y jB kB","2180":"0 1 2 3 4 5 6 7 z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","132":"F B C wB xB yB zB TB eB 0B UB"},G:{"16":"fB","132":"cB 1B","516":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G PC QC","16":"WB H LC MC NC OC","1025":"fB"},J:{"1":"A","16":"D"},K:{"1":"Q","16":"A B C TB eB","132":"UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","16":"A"},O:{"1025":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2180":"dC"}},B:5,C:"Selection API"};


/***/ }),
/* 931 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB jB kB"},D:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB","196":"FB YB Q GB","324":"HB"},E:{"2":"H a I D E F A B C oB cB pB qB rB sB dB TB","516":"J K UB tB uB vB"},F:{"1":"8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Server Timing"};


/***/ }),
/* 932 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K","322":"L M"},C:{"1":"0 2 3 4 5 6 7 9 AB BB CB DB EB XB YB Q GB HB IB JB KB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB","194":"p q r s t u v w x y z","513":"1 8 FB LB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v","4":"0 w x y z"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D E F A B oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i wB xB yB zB TB eB 0B UB","4":"j k l m n"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","4":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","4":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"4":"cC"},S:{"2":"dC"}},B:4,C:"Service Workers"};


/***/ }),
/* 933 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O","2":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"1":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Efficient Script Yielding: setImmediate()"};


/***/ }),
/* 934 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","2":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"1":"WB H G MC NC OC fB PC QC","260":"LC"},J:{"1":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"1":"G"},M:{"16":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","16":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"SHA-2 SSL certificates"};


/***/ }),
/* 935 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R","2":"C J K L M N O S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","66":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","2":"H a I D E F A B C J K L M N O b c d e f g S T U V W X P Y Z G VB lB mB nB","33":"h i j k l m n o p q"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB","2":"F B C KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","33":"L M N O b c d"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB","33":"PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC","2":"ZC aC","33":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:7,C:"Shadow DOM (deprecated V0 spec)"};


/***/ }),
/* 936 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB jB kB","322":"EB","578":"XB FB YB Q"},D:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C J K dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B","132":"8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H","4":"SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Shadow DOM (V1)"};


/***/ }),
/* 937 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L","194":"M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB jB kB","194":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB","450":"RB SB ZB aB bB","513":"R S T iB U V W X P Y Z G"},D:{"1":"LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB","194":"FB YB Q GB HB IB JB KB","513":"VB lB mB nB"},E:{"2":"H a I D E F A oB cB pB qB rB sB","194":"B C J K dB TB UB tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","194":"3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B","194":"9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"513":"G"},M:{"513":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"Shared Array Buffer"};


/***/ }),
/* 938 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"a I pB","2":"H D E F A B C J K oB cB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","2":"F wB xB yB"},G:{"1":"2B 3B","2":"E cB 1B fB 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"B C TB eB UB","2":"Q","16":"A"},L:{"2":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"H","2":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:1,C:"Shared Web Workers"};


/***/ }),
/* 939 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I gB","132":"D E"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB"},H:{"1":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Server Name Indication"};


/***/ }),
/* 940 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F A gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","2":"7 8 9 hB WB H a I D E F A B C AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","2":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"E F A B C sB dB TB","2":"H a I D oB cB pB qB rB","129":"J K UB tB uB vB"},F:{"1":"0 L M N O b c d e f g h i j k l m n o p q r s t u v y UB","2":"1 2 3 4 5 6 7 8 9 F B C w x z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC","2":"cB 1B fB 2B 3B 4B","257":"DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H OC fB PC QC","2":"G LC MC NC"},J:{"2":"D A"},K:{"1":"UB","2":"A B C Q TB eB"},L:{"2":"G"},M:{"2":"P"},N:{"1":"B","2":"A"},O:{"2":"RC"},P:{"1":"H","2":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"16":"cC"},S:{"1":"dC"}},B:7,C:"SPDY protocol"};


/***/ }),
/* 941 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","1026":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d jB kB","322":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g","164":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB","2084":"uB vB"},F:{"2":"F B C L M N O b c d e f g h i wB xB yB zB TB eB 0B UB","1026":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC","2084":"JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"164":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"164":"bC"},R:{"164":"cC"},S:{"322":"dC"}},B:7,C:"Speech Recognition API"};


/***/ }),
/* 942 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O","2":"C J","257":"R S T U V W X P Y Z G VB"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m jB kB","194":"0 1 2 3 4 n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o","257":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB","2":"F B C L M N O b c d e f g h i wB xB yB zB TB eB 0B UB","257":"HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:7,C:"Speech Synthesis API"};


/***/ }),
/* 943 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"4":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"4":"KC"},I:{"4":"WB H G LC MC NC OC fB PC QC"},J:{"1":"A","4":"D"},K:{"4":"A B C Q TB eB UB"},L:{"4":"G"},M:{"4":"P"},N:{"4":"A B"},O:{"4":"RC"},P:{"4":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"4":"cC"},S:{"2":"dC"}},B:1,C:"Spellcheck attribute"};


/***/ }),
/* 944 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C oB cB pB qB rB sB dB TB UB","2":"J K tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC","2":"EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:7,C:"Web SQL Database"};


/***/ }),
/* 945 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","260":"C","514":"J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n jB kB","194":"o p q r s t"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p","260":"q r s t"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB qB","260":"E rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c wB xB yB zB TB eB 0B UB","260":"d e f g"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","260":"E 5B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Srcset and sizes attributes"};


/***/ }),
/* 946 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M jB kB","129":"s t u v w x","420":"N O b c d e f g h i j k l m n o p q r"},D:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c","420":"0 1 2 3 4 5 6 7 8 d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B L M N wB xB yB zB TB eB 0B","420":"C O b c d e f g h i j k l m n o p q r s t u v UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","513":"HC IC JC","1537":"AC BC CC DC EC FC GC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","420":"A"},K:{"1":"Q","2":"A B TB eB","420":"C UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","420":"H SC"},Q:{"1":"bC"},R:{"420":"cC"},S:{"2":"dC"}},B:4,C:"getUserMedia/Stream API"};


/***/ }),
/* 947 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","130":"B"},B:{"1":"Z G VB","16":"C J","260":"K L","1028":"R S T U V W X P Y","5124":"M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB jB kB","6148":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","6722":"DB EB XB FB YB Q GB HB"},D:{"1":"Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","260":"8 9 AB BB CB DB EB","1028":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y"},E:{"2":"H a I D E F oB cB pB qB rB sB","1028":"uB vB","3076":"A B C J K dB TB UB tB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u wB xB yB zB TB eB 0B UB","260":"0 1 v w x y z","1028":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B","16":"8B","1028":"9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","1028":"Q"},L:{"1":"G"},M:{"6148":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC","1028":"UC VC WC dB XC YC ZC aC"},Q:{"1028":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"Streams"};


/***/ }),
/* 948 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A gB","129":"B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Strict Transport Security"};


/***/ }),
/* 949 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 d e f g h i j k l m n o p q r s t u v w x y z AB","2":"hB WB H a I D E F A B C J K L M N O b c YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","322":"BB CB DB EB XB FB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","194":"c d e f g h i j k l m n o p q r s"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"322":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:7,C:"Scoped CSS"};


/***/ }),
/* 950 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y jB kB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","194":"AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Subresource Integrity"};


/***/ }),
/* 951 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","516":"C J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","260":"H a I D E F A B C J K L M N O b c d e f"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H"},E:{"1":"a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB","132":"H cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","132":"cB 1B"},H:{"260":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"Q","260":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"SVG in CSS backgrounds"};


/***/ }),
/* 952 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H","4":"a I D"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"SVG filters"};


/***/ }),
/* 953 */
/***/ ((module) => {

module.exports={A:{A:{"2":"F A B gB","8":"I D E"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t","2":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","130":"0 1 2 3 4 5 6 u v w x y z"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","2":"oB"},F:{"1":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB","2":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","130":"h i j k l m n o p q r s"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"258":"KC"},I:{"1":"WB H OC fB PC QC","2":"G LC MC NC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"130":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"H","130":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"130":"cC"},S:{"2":"dC"}},B:2,C:"SVG fonts"};


/***/ }),
/* 954 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","260":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r","132":"0 1 2 3 4 5 s t u v w x y z"},E:{"1":"C J K TB UB tB uB vB","2":"H a I D F A B oB cB pB qB sB dB","132":"E rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"L M N O b c d e","4":"B C xB yB zB TB eB 0B","16":"F wB","132":"f g h i j k l m n o p q r s"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B 6B 7B 8B 9B AC","132":"E 5B"},H:{"1":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D","132":"A"},K:{"1":"Q UB","4":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","132":"H"},Q:{"1":"bC"},R:{"132":"cC"},S:{"1":"dC"}},B:4,C:"SVG fragment identifiers"};


/***/ }),
/* 955 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","388":"F A B"},B:{"4":"R S T U V W X P Y Z G VB","260":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB","4":"WB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"oB cB","4":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"4":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","4":"G PC QC"},J:{"1":"A","2":"D"},K:{"4":"A B C Q TB eB UB"},L:{"4":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"4":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"4":"bC"},R:{"4":"cC"},S:{"1":"dC"}},B:2,C:"SVG effects for HTML"};


/***/ }),
/* 956 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E","129":"F A B"},B:{"1":"N O R S T U V W X P Y Z G VB","129":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","8":"H a I"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","8":"H a oB cB","129":"I D E pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"B zB TB eB","8":"F wB xB yB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","8":"cB 1B fB","129":"E 2B 3B 4B 5B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"LC MC NC","129":"WB H OC fB"},J:{"1":"A","129":"D"},K:{"1":"C Q UB","8":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"129":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Inline SVG in HTML5"};


/***/ }),
/* 957 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f g h i j"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"oB","4":"cB","132":"H a I D E pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","132":"E cB 1B fB 2B 3B 4B 5B"},H:{"1":"KC"},I:{"1":"G PC QC","2":"LC MC NC","132":"WB H OC fB"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"SVG in HTML img element"};


/***/ }),
/* 958 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E F A B"},B:{"1":"R S T U V W X P Y Z G VB","8":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","8":"oB cB","132":"H a pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","132":"cB 1B fB 2B"},H:{"2":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"SVG SMIL animation"};


/***/ }),
/* 959 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E","772":"F A B"},B:{"1":"R S T U V W X P Y Z G VB","513":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","4":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","4":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"G PC QC","2":"LC MC NC","132":"WB H OC fB"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"257":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"SVG (basic support)"};


/***/ }),
/* 960 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB","132":"OB PB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"16":"RC"},P:{"1":"XC YC ZC aC","2":"H SC TC UC VC WC dB"},Q:{"16":"bC"},R:{"16":"cC"},S:{"2":"dC"}},B:6,C:"Signed HTTP Exchanges (SXG)"};


/***/ }),
/* 961 */
/***/ ((module) => {

module.exports={A:{A:{"1":"D E F A B","16":"I gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"16":"hB WB jB kB","129":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"16":"H a oB cB","257":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"769":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"16":"WB H G LC MC NC OC fB PC QC"},J:{"16":"D A"},K:{"16":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"16":"A B"},O:{"16":"RC"},P:{"16":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"16":"cC"},S:{"129":"dC"}},B:1,C:"tabindex global attribute"};


/***/ }),
/* 962 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"J K L M N O R S T U V W X P Y Z G VB","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w"},E:{"1":"A B J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB","129":"C"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k wB xB yB zB TB eB 0B UB"},G:{"1":"6B 7B 8B 9B AC BC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B","129":"CC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ES6 Template Literals (Template Strings)"};


/***/ }),
/* 963 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"L M N O R S T U V W X P Y Z G VB","2":"C","388":"J K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h","132":"i j k l m n o p q"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","2":"H a I D oB cB pB","388":"E rB","514":"qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","132":"L M N O b c d"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B","388":"E 5B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"HTML templates"};


/***/ }),
/* 964 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E A B gB","16":"F"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","16":"H a"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"B C"},E:{"2":"H I oB cB pB","16":"a D E F A B C J K qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB eB 0B UB","16":"TB"},G:{"2":"cB 1B fB 2B 3B","16":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC OC fB PC QC","16":"NC"},J:{"2":"A","16":"D"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Test feature - updated"};


/***/ }),
/* 965 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","2052":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a jB kB","1028":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","1060":"I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h","226":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB","2052":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D oB cB pB qB","772":"J K UB tB uB vB","804":"E F A B C sB dB TB","1316":"rB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q wB xB yB zB TB eB 0B UB","226":"r s t u v w x y z","2052":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"cB 1B fB 2B 3B 4B","292":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","2052":"Q"},L:{"2052":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2052":"RC"},P:{"2":"H SC TC","2052":"UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"1":"cC"},S:{"1028":"dC"}},B:4,C:"text-decoration styling"};


/***/ }),
/* 966 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","164":"R S T U V W X P Y Z G VB"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","322":"1"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g","164":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB","164":"D qB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","164":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB","164":"G PC QC"},J:{"2":"D","164":"A"},K:{"2":"A B C TB eB UB","164":"Q"},L:{"164":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"164":"RC"},P:{"164":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"164":"bC"},R:{"164":"cC"},S:{"1":"dC"}},B:4,C:"text-emphasis styling"};


/***/ }),
/* 967 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B","2":"gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","8":"hB WB H a I jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","33":"F wB xB yB zB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"Q UB","33":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 Text-overflow"};


/***/ }),
/* 968 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","33":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h j k l m n o p q r s t u v w x y z","258":"i"},E:{"2":"H a I D E F A B C J K oB cB qB rB sB dB TB UB tB uB vB","258":"pB"},F:{"1":"1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y wB xB yB zB TB eB 0B UB"},G:{"2":"cB 1B fB","33":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"33":"P"},N:{"161":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS text-size-adjust"};


/***/ }),
/* 969 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K","33":"R S T U V W X P Y Z G VB","161":"L M N O"},C:{"2":"0 1 2 3 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","161":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","450":"4"},D:{"33":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"33":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","33":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"33":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","36":"cB"},H:{"2":"KC"},I:{"2":"WB","33":"H G LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"2":"A B C TB eB UB","33":"Q"},L:{"33":"G"},M:{"161":"P"},N:{"2":"A B"},O:{"33":"RC"},P:{"33":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"33":"bC"},R:{"33":"cC"},S:{"161":"dC"}},B:7,C:"CSS text-stroke and text-fill"};


/***/ }),
/* 970 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB jB kB","130":"MB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"J K UB tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"text-underline-offset"};


/***/ }),
/* 971 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","16":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"1":"E 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Node.textContent"};


/***/ }),
/* 972 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O jB kB","132":"b"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"TextEncoder & TextDecoder"};


/***/ }),
/* 973 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D gB","66":"E F A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB","2":"hB WB H a I D E F A B C J K L M N O b c d e jB kB","66":"f","129":"LB MB NB OB PB QB RB SB ZB aB","388":"bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V","2":"H a I D E F A B C J K L M N O b c d","1540":"W X P Y Z G VB lB mB nB"},E:{"1":"D E F A B C J rB sB dB TB UB","2":"H a I oB cB pB qB","513":"K tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB UB","2":"F B C wB xB yB zB TB eB 0B","1540":"QB RB SB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"1":"A","2":"D"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"129":"P"},N:{"1":"B","66":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"TLS 1.1"};


/***/ }),
/* 974 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D gB","66":"E F A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f jB kB","66":"g h i"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F L wB","66":"B C xB yB zB TB eB 0B UB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"1":"A","2":"D"},K:{"1":"Q UB","2":"A B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","66":"A"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"TLS 1.2"};


/***/ }),
/* 975 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","132":"FB YB Q","450":"7 8 9 AB BB CB DB EB XB"},D:{"1":"NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","706":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB"},E:{"1":"K uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB","1028":"J UB tB"},F:{"1":"DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","706":"AB BB CB"},G:{"1":"DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"dB XC YC ZC aC","2":"H SC TC UC VC WC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:6,C:"TLS 1.3"};


/***/ }),
/* 976 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K","194":"R S T U V W X P Y Z G VB","257":"L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y jB kB","16":"Z G"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u","16":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB","194":"EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E oB cB pB qB rB","16":"F A B C J K sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB","16":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B","16":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"16":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","16":"G"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","16":"Q"},L:{"16":"G"},M:{"16":"P"},N:{"2":"A","16":"B"},O:{"16":"RC"},P:{"16":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"16":"bC"},R:{"16":"cC"},S:{"2":"dC"}},B:6,C:"Token Binding"};


/***/ }),
/* 977 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","8":"A B"},B:{"1":"R S T U V W X P Y Z G VB","578":"C J K L M N O"},C:{"1":"8 9 O b c d e f g AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","4":"H a I D E F A B C J K L M N","194":"0 1 2 3 4 5 6 7 h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A","260":"B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:2,C:"Touch events"};


/***/ }),
/* 978 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E","129":"A B","161":"F"},B:{"1":"N O R S T U V W X P Y Z G VB","129":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","33":"H a I D E F A B C J K L jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","33":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F wB xB","33":"B C L M N O b c d e yB zB TB eB 0B"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","33":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","33":"WB H LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"CSS3 2D Transforms"};


/***/ }),
/* 979 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F jB kB","33":"A B C J K L"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B","33":"C J K L M N O b c d e f g h i j k l m n o p q r"},E:{"2":"oB cB","33":"H a I D E pB qB rB","257":"F A B C J K sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d e"},G:{"33":"E cB 1B fB 2B 3B 4B 5B","257":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"LC MC NC","33":"WB H OC fB PC QC"},J:{"33":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS3 3D Transforms"};


/***/ }),
/* 980 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"U V W X P Y Z G VB","2":"C J K L M N O R S T"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"ZC aC","2":"H SC TC UC VC WC dB XC YC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Trusted Types for DOM manipulation"};


/***/ }),
/* 981 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","132":"F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB xB yB zB TB eB 0B UB","2":"F wB"},G:{"1":"E fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B"},H:{"2":"KC"},I:{"1":"WB H G MC NC OC fB PC QC","2":"LC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"TTF/OTF - TrueType and OpenType font support"};


/***/ }),
/* 982 */
/***/ ((module) => {

module.exports={A:{A:{"1":"B","2":"I D E F gB","132":"A"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB","260":"pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B","260":"fB"},H:{"1":"KC"},I:{"1":"H G OC fB PC QC","2":"WB LC MC NC"},J:{"1":"A","2":"D"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Typed Arrays"};


/***/ }),
/* 983 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","513":"R S T U V W X P Y Z G VB"},C:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","322":"3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB"},D:{"2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t","130":"u v w","513":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"J K tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB UB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v x wB xB yB zB TB eB 0B UB","513":"0 1 2 3 4 5 6 7 8 9 w y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"322":"dC"}},B:6,C:"FIDO U2F API"};


/***/ }),
/* 984 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB jB kB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB"},G:{"1":"BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","16":"AC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:1,C:"unhandledrejection/rejectionhandled events"};


/***/ }),
/* 985 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Upgrade Insecure Requests"};


/***/ }),
/* 986 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"U V W X P Y Z G VB","2":"C J K L M N O","66":"R S T"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB","66":"RB SB ZB aB bB R S"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB wB xB yB zB TB eB 0B UB","66":"JB KB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"ZC aC","2":"H SC TC UC VC WC dB XC YC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"URL Scroll-To-Text Fragment"};


/***/ }),
/* 987 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e","130":"f g h i j k l m n"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","2":"H a I oB cB pB qB","130":"D"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","130":"L M N O"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B","130":"4B"},H:{"2":"KC"},I:{"1":"G QC","2":"WB H LC MC NC OC fB","130":"PC"},J:{"2":"D","130":"A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"URL API"};


/***/ }),
/* 988 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB","132":"l m n o p q r s t u v w x y z"},D:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C J K dB TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB"},G:{"1":"9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","2":"H"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:1,C:"URLSearchParams"};


/***/ }),
/* 989 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H oB cB","132":"a pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"1":"KC"},I:{"1":"WB H G OC fB PC QC","2":"LC MC NC"},J:{"1":"D A"},K:{"1":"C Q eB UB","2":"A B TB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"ECMAScript 5 Strict Mode"};


/***/ }),
/* 990 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","33":"A B"},B:{"1":"R S T U V W X P Y Z G VB","33":"C J K L M N O"},C:{"1":"MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","33":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB jB kB"},D:{"1":"AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","33":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"33":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","33":"L M N O b c d e f g h i j k l m n o p q r s t u v w"},G:{"33":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","33":"WB H LC MC NC OC fB PC QC"},J:{"33":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"33":"A B"},O:{"2":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","33":"H SC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"33":"dC"}},B:5,C:"CSS user-select: none"};


/***/ }),
/* 991 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"User Timing API"};


/***/ }),
/* 992 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"N O R S T U V W X P Y Z G VB","2":"C J K L M"},C:{"2":"0 1 2 3 4 5 6 7 8 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","4609":"Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","4674":"YB","5698":"FB","7490":"9 AB BB CB DB","7746":"EB XB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","4097":"JB","4290":"XB FB YB","6148":"Q GB HB IB"},E:{"2":"H a I D E F A oB cB pB qB rB sB dB","4609":"B C TB UB","8193":"J K tB uB vB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","4097":"9","6148":"5 6 7 8"},G:{"1":"EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","4097":"AC BC CC DC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"4097":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC","4097":"VC WC dB XC YC ZC aC"},Q:{"4097":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"Variable fonts"};


/***/ }),
/* 993 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","2":"F B wB xB yB zB TB eB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"1":"KC"},I:{"1":"G PC QC","16":"WB H LC MC NC OC fB"},J:{"16":"D A"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"SVG vector-effect: non-scaling-stroke"};


/***/ }),
/* 994 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A jB kB","33":"B C J K L"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"Vibration API"};


/***/ }),
/* 995 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","260":"H a I D E F A B C J K L M N O b jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A pB qB rB sB dB","2":"oB cB","513":"B C J K TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","513":"AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","132":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Video element"};


/***/ }),
/* 996 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O","322":"R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB","194":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","322":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a I oB cB pB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n wB xB yB zB TB eB 0B UB","322":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","322":"Q"},L:{"322":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:1,C:"Video Tracks"};


/***/ }),
/* 997 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","132":"F","260":"A B"},B:{"1":"M N O R S T U V W X P Y Z G VB","260":"C J K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b","260":"c d e f g h"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB","260":"I"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B","516":"4B","772":"3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"260":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"Viewport units: vw, vh, vmin, vmax"};


/***/ }),
/* 998 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","4":"E F A B"},B:{"4":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"4":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"oB cB","4":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F","4":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"4":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"4":"KC"},I:{"2":"WB H LC MC NC OC fB","4":"G PC QC"},J:{"2":"D A"},K:{"4":"A B C Q TB eB UB"},L:{"4":"G"},M:{"4":"P"},N:{"4":"A B"},O:{"2":"RC"},P:{"4":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"4":"bC"},R:{"4":"cC"},S:{"4":"dC"}},B:2,C:"WAI-ARIA Accessibility features"};


/***/ }),
/* 999 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"G VB","2":"C J K L M N O","194":"R S T U V W X P Y Z"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB","194":"OB PB QB RB SB ZB aB bB R S T U V"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB wB xB yB zB TB eB 0B UB","194":"EB FB Q GB HB IB JB KB LB MB NB OB PB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"aC","2":"H SC TC UC VC WC dB XC YC ZC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:4,C:"Screen Wake Lock API"};


/***/ }),
/* 1000 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"M N O R S T U V W X P Y Z G VB","2":"C J K","578":"L"},C:{"1":"9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","194":"3 4 5 6 7","1025":"8"},D:{"1":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","322":"7 8 9 AB BB CB"},E:{"1":"B C J K TB UB tB uB vB","2":"H a I D E F A oB cB pB qB rB sB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t wB xB yB zB TB eB 0B UB","322":"u v w x y z"},G:{"1":"AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"194":"dC"}},B:6,C:"WebAssembly"};


/***/ }),
/* 1001 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB yB zB TB eB 0B UB","2":"F wB xB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","16":"A"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"Wav audio format"};


/***/ }),
/* 1002 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D gB","2":"E F A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K cB pB qB rB sB dB TB UB tB uB vB","16":"oB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","16":"F"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB"},H:{"1":"KC"},I:{"1":"WB H G NC OC fB PC QC","16":"LC MC"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"wbr (word break opportunity) element"};


/***/ }),
/* 1003 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"V W X P Y Z G VB","2":"C J K L M N O","260":"R S T U"},C:{"1":"T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o jB kB","260":"XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB","516":"3 4 5 6 7 8 9 AB BB CB DB EB","580":"0 1 2 p q r s t u v w x y z","2049":"SB ZB aB bB R S"},D:{"1":"V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r","132":"s t u","260":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U"},E:{"1":"vB","2":"H a I D E F A oB cB pB qB rB sB dB","1090":"B C J TB UB","2049":"K tB uB"},F:{"1":"OB PB QB RB SB","2":"F B C L M N O b c d e wB xB yB zB TB eB 0B UB","132":"f g h","260":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B","1090":"AC BC CC DC EC FC GC","2049":"HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"260":"RC"},P:{"260":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"260":"bC"},R:{"260":"cC"},S:{"516":"dC"}},B:5,C:"Web Animations API"};


/***/ }),
/* 1004 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M","130":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB X P Y Z G jB kB","578":"ZB aB bB R S T iB U V W"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC","260":"BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"2":"dC"}},B:5,C:"Add to home screen (A2HS)"};


/***/ }),
/* 1005 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","1025":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","194":"1 2 3 4 5 6 7 8","706":"9 AB BB","1025":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r wB xB yB zB TB eB 0B UB","450":"s t u v","706":"w x y","1025":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC QC","1025":"G"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1025":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"TC UC VC WC dB XC YC ZC aC","2":"H SC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Web Bluetooth"};


/***/ }),
/* 1006 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Z G VB","2":"C J K L M N O","66":"R S T U V W X P Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB","66":"bB R S T U V W X P Y"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB wB xB yB zB TB eB 0B UB","66":"IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Web Serial API"};


/***/ }),
/* 1007 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R S","516":"T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y","130":"O b c d e f g","1028":"Z G VB lB mB nB"},E:{"1":"K uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB","2049":"J UB tB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC","2049":"DC EC FC GC HC"},H:{"2":"KC"},I:{"2":"WB H LC MC NC OC fB PC","258":"G QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H","258":"SC TC UC"},Q:{"2":"bC"},R:{"16":"cC"},S:{"2":"dC"}},B:5,C:"Web Share API"};


/***/ }),
/* 1008 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"O R S T U V W X P Y Z G VB","2":"C","226":"J K L M N"},C:{"1":"FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB jB kB"},D:{"1":"KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB"},E:{"1":"J K tB uB vB","2":"H a I D E F A B C oB cB pB qB rB sB dB TB","322":"UB"},F:{"1":"AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB"},G:{"1":"JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC","578":"FC","2052":"IC","3076":"GC HC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:2,C:"Web Authentication API"};


/***/ }),
/* 1009 */
/***/ ((module) => {

module.exports={A:{A:{"2":"gB","8":"I D E F A","129":"B"},B:{"1":"R S T U V W X P Y Z G VB","129":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","129":"H a I D E F A B C J K L M N O b c d e f"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D","129":"E F A B C J K L M N O b c d e f g h i j k l m n o"},E:{"1":"E F A B C J K sB dB TB UB tB uB vB","2":"H a oB cB","129":"I D pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B wB xB yB zB TB eB 0B","129":"C L M N O UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B 4B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"1":"A","2":"D"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A","129":"B"},O:{"129":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"129":"dC"}},B:6,C:"WebGL - 3D Canvas graphics"};


/***/ }),
/* 1010 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g jB kB","194":"0 y z","450":"h i j k l m n o p q r s t u v w x","2242":"1 2 3 4 5 6"},D:{"1":"CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y","578":"0 1 2 3 4 5 6 7 8 9 z AB BB"},E:{"1":"vB","2":"H a I D E F A oB cB pB qB rB sB","1090":"B C J K dB TB UB tB uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y wB xB yB zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC","1090":"CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"UC VC WC dB XC YC ZC aC","2":"H SC TC"},Q:{"578":"bC"},R:{"2":"cC"},S:{"2242":"dC"}},B:6,C:"WebGL 2.0"};


/***/ }),
/* 1011 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R","578":"S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q jB kB","194":"GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R","578":"S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B oB cB pB qB rB sB dB","322":"C J K TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB wB xB yB zB TB eB 0B UB","578":"QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"194":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"WebGPU"};


/***/ }),
/* 1012 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"Z G VB","2":"C J K L M N O","66":"R S T U V W X P Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB","66":"bB R S T U V W X P Y"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB wB xB yB zB TB eB 0B UB","66":"JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"WebHID API"};


/***/ }),
/* 1013 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","132":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"16":"H a I D E F A B C J K L","132":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C wB xB yB zB TB eB 0B UB","132":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"CSS -webkit-user-drag property"};


/***/ }),
/* 1014 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E gB","520":"F A B"},B:{"1":"R S T U V W X P Y Z G VB","8":"C J","388":"K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","132":"H a I D E F A B C J K L M N O b c d e f g h i j"},D:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a","132":"I D E F A B C J K L M N O b c d e f g"},E:{"2":"oB","8":"H a cB pB","520":"I D E F A B C qB rB sB dB TB","1028":"J UB tB","7172":"K","8196":"uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB xB yB","132":"B C L zB TB eB 0B UB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC","1028":"DC EC FC GC HC","3076":"IC JC"},H:{"2":"KC"},I:{"1":"G","2":"LC MC","132":"WB H NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C TB eB UB","132":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"8":"A B"},O:{"1":"RC"},P:{"1":"SC TC UC VC WC dB XC YC ZC aC","132":"H"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:6,C:"WebM video format"};


/***/ }),
/* 1015 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O R Z G VB","450":"S T U V W X P Y"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R Z G VB lB mB nB","450":"S T U V W X P Y"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB wB xB yB zB TB eB 0B UB","450":"KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"257":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"Web NFC"};


/***/ }),
/* 1016 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"O R S T U V W X P Y Z G VB","2":"C J K L M N"},C:{"1":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","8":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a","8":"I D E","132":"F A B C J K L M N O b c d e","260":"f g h i j k l m n"},E:{"2":"H a I D E F A B C J oB cB pB qB rB sB dB TB UB tB","516":"K uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F wB xB yB","8":"B zB","132":"TB eB 0B","260":"C L M N O UB"},G:{"1":"IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC"},H:{"1":"KC"},I:{"1":"G fB PC QC","2":"WB LC MC NC","132":"H OC"},J:{"2":"D A"},K:{"1":"C Q TB eB UB","2":"A","132":"B"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"8":"dC"}},B:7,C:"WebP image format"};


/***/ }),
/* 1017 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB jB kB","132":"H a","292":"I D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K","260":"L"},E:{"1":"D E F A B C J K rB sB dB TB UB tB uB vB","2":"H oB cB","132":"a pB","260":"I qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F wB xB yB zB","132":"B C TB eB 0B"},G:{"1":"E 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B","132":"fB 2B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","129":"D"},K:{"1":"Q UB","2":"A","132":"B C TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Web Sockets"};


/***/ }),
/* 1018 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z","66":"AB BB CB DB EB XB FB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w wB xB yB zB TB eB 0B UB","66":"0 1 2 3 x y z"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"1":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"1":"VC WC dB XC YC ZC aC","2":"H SC TC UC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:7,C:"WebUSB"};


/***/ }),
/* 1019 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K S T U V W X P Y Z G VB","66":"R","257":"L M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB","129":"BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","194":"AB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB S T U V W X P Y Z G VB lB mB nB","66":"DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","66":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB Q GB HB IB JB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"2":"G"},M:{"2":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"513":"H","516":"SC TC UC VC WC dB XC YC ZC aC"},Q:{"2":"bC"},R:{"66":"cC"},S:{"2":"dC"}},B:7,C:"WebVR API"};


/***/ }),
/* 1020 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"2":"hB WB H a I D E F A B C J K L M N O b c d e f jB kB","66":"g h i j k l m","129":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N"},E:{"1":"I D E F A B C J K qB rB sB dB TB UB tB uB vB","2":"H a oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB H LC MC NC OC fB"},J:{"1":"A","2":"D"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"B","2":"A"},O:{"2":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"129":"dC"}},B:5,C:"WebVTT - Web Video Text Tracks"};


/***/ }),
/* 1021 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","2":"gB","8":"I D E F"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","8":"hB WB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","8":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB zB TB eB 0B UB","2":"F wB","8":"xB yB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"G LC PC QC","2":"WB H MC NC OC fB"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","8":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Web Workers"};


/***/ }),
/* 1022 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"2":"C J K L M N O","132":"R S T U V W X P Y Z G VB"},C:{"2":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB jB kB","322":"aB bB R S T iB U V W X P Y Z G"},D:{"2":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB","66":"IB JB KB LB MB NB OB PB QB RB SB ZB aB bB","132":"R S T U V W X P Y Z G VB lB mB nB"},E:{"2":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"2":"0 1 2 3 4 5 6 7 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z wB xB yB zB TB eB 0B UB","66":"8 9 AB BB CB DB EB FB Q GB HB IB","132":"JB KB LB MB NB OB PB QB RB SB"},G:{"2":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"KC"},I:{"2":"WB H G LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"2":"A B C Q TB eB UB"},L:{"132":"G"},M:{"322":"P"},N:{"2":"A B"},O:{"2":"RC"},P:{"2":"H SC TC UC VC WC dB XC","132":"YC ZC aC"},Q:{"2":"bC"},R:{"2":"cC"},S:{"2":"dC"}},B:5,C:"WebXR Device API"};


/***/ }),
/* 1023 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"R S T U V W X P Y Z G VB","2":"C J K L M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k jB kB","194":"l m n o p q r"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r"},E:{"1":"A B C J K sB dB TB UB tB uB vB","2":"H a I D E F oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e f wB xB yB zB TB eB 0B UB"},G:{"1":"7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS will-change property"};


/***/ }),
/* 1024 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G kB","2":"hB WB jB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H"},E:{"1":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"H a oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB TB eB 0B UB","2":"F B wB xB yB zB"},G:{"1":"E 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB"},H:{"2":"KC"},I:{"1":"G PC QC","2":"WB LC MC NC OC fB","130":"H"},J:{"1":"D A"},K:{"1":"B C Q TB eB UB","2":"A"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:2,C:"WOFF - Web Open Font Format"};


/***/ }),
/* 1025 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F A B gB"},B:{"1":"K L M N O R S T U V W X P Y Z G VB","2":"C J"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","2":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r"},E:{"1":"C J K UB tB uB vB","2":"H a I D E F oB cB pB qB rB sB","132":"A B dB TB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C L M N O b c d e wB xB yB zB TB eB 0B UB"},G:{"1":"8B 9B AC BC CC DC EC FC GC HC IC JC","2":"E cB 1B fB 2B 3B 4B 5B 6B 7B"},H:{"2":"KC"},I:{"1":"G","2":"WB H LC MC NC OC fB PC QC"},J:{"2":"D A"},K:{"1":"Q","2":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"2":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"WOFF 2.0 - Web Open Font Format"};


/***/ }),
/* 1026 */
/***/ ((module) => {

module.exports={A:{A:{"1":"I D E F A B gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB H a I D E F A B C J K jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C J K sB dB TB UB tB uB vB","4":"H a I D E oB cB pB qB rB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","2":"F B C wB xB yB zB TB eB 0B UB","4":"L M N O b c d e f g h i j k l m"},G:{"1":"6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","4":"E cB 1B fB 2B 3B 4B 5B"},H:{"2":"KC"},I:{"1":"G","4":"WB H LC MC NC OC fB PC QC"},J:{"4":"D A"},K:{"2":"A B C TB eB UB","4":"Q"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"4":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"4":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:5,C:"CSS3 word-break"};


/***/ }),
/* 1027 */
/***/ ((module) => {

module.exports={A:{A:{"4":"I D E F A B gB"},B:{"1":"O R S T U V W X P Y Z G VB","4":"C J K L M N"},C:{"1":"5 6 7 8 9 AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","4":"0 1 2 3 4 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","4":"H a I D E F A B C J K L M N O b c d e"},E:{"1":"D E F A B C J K qB rB sB dB TB UB tB uB vB","4":"H a I oB cB pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F wB xB","4":"B C yB zB TB eB 0B"},G:{"1":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","4":"cB 1B fB 2B 3B"},H:{"4":"KC"},I:{"1":"G PC QC","4":"WB H LC MC NC OC fB"},J:{"1":"A","4":"D"},K:{"1":"Q","4":"A B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"4":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"4":"dC"}},B:5,C:"CSS3 Overflow-wrap"};


/***/ }),
/* 1028 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D gB","132":"E F","260":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB","2":"hB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","2":"oB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB","2":"F"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"4":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"Cross-document messaging"};


/***/ }),
/* 1029 */
/***/ ((module) => {

module.exports={A:{A:{"1":"E F A B","2":"I D gB"},B:{"1":"C J K L M N O","4":"R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB","4":"H a I D E F A B C J K L M N NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","16":"hB WB jB kB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I D E F A B C J K L M N O b c d e f g h"},E:{"4":"I D E F A B C J K pB qB rB sB dB TB UB tB uB vB","16":"H a oB cB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB 0B UB","16":"F B wB xB yB zB TB eB"},G:{"4":"E 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","16":"cB 1B fB 2B 3B"},H:{"2":"KC"},I:{"4":"H G OC fB PC QC","16":"WB LC MC NC"},J:{"4":"D A"},K:{"4":"Q UB","16":"A B C TB eB"},L:{"4":"G"},M:{"4":"P"},N:{"1":"A B"},O:{"4":"RC"},P:{"4":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"4":"bC"},R:{"4":"cC"},S:{"1":"dC"}},B:6,C:"X-Frame-Options HTTP header"};


/***/ }),
/* 1030 */
/***/ ((module) => {

module.exports={A:{A:{"2":"I D E F gB","132":"A B"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","2":"hB WB","260":"A B","388":"I D E F","900":"H a jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","16":"H a I","132":"l m","388":"D E F A B C J K L M N O b c d e f g h i j k"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","2":"H oB cB","132":"D qB","388":"a I pB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB UB","2":"F B wB xB yB zB TB eB 0B","132":"L M N"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","2":"cB 1B fB","132":"4B","388":"2B 3B"},H:{"2":"KC"},I:{"1":"G QC","2":"LC MC NC","388":"PC","900":"WB H OC fB"},J:{"132":"A","388":"D"},K:{"1":"C Q UB","2":"A B TB eB"},L:{"1":"G"},M:{"1":"P"},N:{"132":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:1,C:"XMLHttpRequest advanced features"};


/***/ }),
/* 1031 */
/***/ ((module) => {

module.exports={A:{A:{"1":"F A B","2":"I D E gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"1":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"1":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"1":"KC"},I:{"1":"WB H G LC MC NC OC fB PC QC"},J:{"1":"D A"},K:{"1":"A B C Q TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"2":"cC"},S:{"1":"dC"}},B:1,C:"XHTML served as application/xhtml+xml"};


/***/ }),
/* 1032 */
/***/ ((module) => {

module.exports={A:{A:{"2":"F A B gB","4":"I D E"},B:{"2":"C J K L M N O","8":"R S T U V W X P Y Z G VB"},C:{"8":"0 1 2 3 4 5 6 7 8 9 hB WB H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G jB kB"},D:{"8":"0 1 2 3 4 5 6 7 8 9 H a I D E F A B C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB"},E:{"8":"H a I D E F A B C J K oB cB pB qB rB sB dB TB UB tB uB vB"},F:{"8":"0 1 2 3 4 5 6 7 8 9 F B C L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB wB xB yB zB TB eB 0B UB"},G:{"8":"E cB 1B fB 2B 3B 4B 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC"},H:{"8":"KC"},I:{"8":"WB H G LC MC NC OC fB PC QC"},J:{"8":"D A"},K:{"8":"A B C Q TB eB UB"},L:{"8":"G"},M:{"8":"P"},N:{"2":"A B"},O:{"8":"RC"},P:{"8":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"8":"bC"},R:{"8":"cC"},S:{"8":"dC"}},B:7,C:"XHTML+SMIL animation"};


/***/ }),
/* 1033 */
/***/ ((module) => {

module.exports={A:{A:{"1":"A B","260":"I D E F gB"},B:{"1":"C J K L M N O R S T U V W X P Y Z G VB"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C J K L M N O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T iB U V W X P Y Z G","132":"B","260":"hB WB H a I D jB kB","516":"E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB XB FB YB Q GB HB IB JB KB LB MB NB OB PB QB RB SB ZB aB bB R S T U V W X P Y Z G VB lB mB nB","132":"H a I D E F A B C J K L M N O b c d e f g h i j k l m"},E:{"1":"E F A B C J K rB sB dB TB UB tB uB vB","132":"H a I D oB cB pB qB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 O b c d e f g h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB Q GB HB IB JB KB LB MB NB OB PB QB RB SB","16":"F wB","132":"B C L M N xB yB zB TB eB 0B UB"},G:{"1":"E 5B 6B 7B 8B 9B AC BC CC DC EC FC GC HC IC JC","132":"cB 1B fB 2B 3B 4B"},H:{"132":"KC"},I:{"1":"G PC QC","132":"WB H LC MC NC OC fB"},J:{"132":"D A"},K:{"1":"Q","16":"A","132":"B C TB eB UB"},L:{"1":"G"},M:{"1":"P"},N:{"1":"A B"},O:{"1":"RC"},P:{"1":"H SC TC UC VC WC dB XC YC ZC aC"},Q:{"1":"bC"},R:{"1":"cC"},S:{"1":"dC"}},B:4,C:"DOM Parsing and Serialization"};


/***/ }),
/* 1034 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
Object.defineProperty(exports, "OptionValidator", ({
  enumerable: true,
  get: function () {
    return _validator.OptionValidator;
  }
}));
Object.defineProperty(exports, "findSuggestion", ({
  enumerable: true,
  get: function () {
    return _findSuggestion.findSuggestion;
  }
}));

var _validator = __webpack_require__(1035);

var _findSuggestion = __webpack_require__(1036);

/***/ }),
/* 1035 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.OptionValidator = void 0;

var _findSuggestion = __webpack_require__(1036);

class OptionValidator {
  constructor(descriptor) {
    this.descriptor = descriptor;
  }

  validateTopLevelOptions(options, TopLevelOptionShape) {
    const validOptionNames = Object.keys(TopLevelOptionShape);

    for (const option of Object.keys(options)) {
      if (!validOptionNames.includes(option)) {
        throw new Error(this.formatMessage(`'${option}' is not a valid top-level option.
- Did you mean '${(0, _findSuggestion.findSuggestion)(option, validOptionNames)}'?`));
      }
    }
  }

  validateBooleanOption(name, value, defaultValue) {
    if (value === undefined) {
      return defaultValue;
    } else {
      this.invariant(typeof value === "boolean", `'${name}' option must be a boolean.`);
    }

    return value;
  }

  validateStringOption(name, value, defaultValue) {
    if (value === undefined) {
      return defaultValue;
    } else {
      this.invariant(typeof value === "string", `'${name}' option must be a string.`);
    }

    return value;
  }

  invariant(condition, message) {
    if (!condition) {
      throw new Error(this.formatMessage(message));
    }
  }

  formatMessage(message) {
    return `${this.descriptor}: ${message}`;
  }

}

exports.OptionValidator = OptionValidator;

/***/ }),
/* 1036 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.findSuggestion = findSuggestion;
const {
  min
} = Math;

function levenshtein(a, b) {
  let t = [],
      u = [],
      i,
      j;
  const m = a.length,
        n = b.length;

  if (!m) {
    return n;
  }

  if (!n) {
    return m;
  }

  for (j = 0; j <= n; j++) {
    t[j] = j;
  }

  for (i = 1; i <= m; i++) {
    for (u = [i], j = 1; j <= n; j++) {
      u[j] = a[i - 1] === b[j - 1] ? t[j - 1] : min(t[j - 1], t[j], u[j - 1]) + 1;
    }

    t = u;
  }

  return u[n];
}

function findSuggestion(str, arr) {
  const distances = arr.map(el => levenshtein(el, str));
  return arr[distances.indexOf(min(...distances))];
}

/***/ }),
/* 1037 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(1038);


/***/ }),
/* 1038 */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"es6.module":{"chrome":"61","and_chr":"61","edge":"16","firefox":"60","and_ff":"60","node":"13.2.0","opera":"48","op_mob":"48","safari":"10.1","ios":"10.3","samsung":"8.2","android":"61","electron":"2.0","ios_saf":"10.3"}}');

/***/ }),
/* 1039 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.semverMin = semverMin;
exports.semverify = semverify;
exports.isUnreleasedVersion = isUnreleasedVersion;
exports.getLowestUnreleased = getLowestUnreleased;
exports.getHighestUnreleased = getHighestUnreleased;
exports.getLowestImplementedVersion = getLowestImplementedVersion;

var _semver = __webpack_require__(1040);

var _helperValidatorOption = __webpack_require__(1034);

var _targets = __webpack_require__(1041);

const versionRegExp = /^(\d+|\d+.\d+)$/;
const v = new _helperValidatorOption.OptionValidator("@babel/helper-compilation-targets");

function semverMin(first, second) {
  return first && _semver.lt(first, second) ? first : second;
}

function semverify(version) {
  if (typeof version === "string" && _semver.valid(version)) {
    return version;
  }

  v.invariant(typeof version === "number" || typeof version === "string" && versionRegExp.test(version), `'${version}' is not a valid version`);
  const split = version.toString().split(".");

  while (split.length < 3) {
    split.push("0");
  }

  return split.join(".");
}

function isUnreleasedVersion(version, env) {
  const unreleasedLabel = _targets.unreleasedLabels[env];
  return !!unreleasedLabel && unreleasedLabel === version.toString().toLowerCase();
}

function getLowestUnreleased(a, b, env) {
  const unreleasedLabel = _targets.unreleasedLabels[env];
  const hasUnreleased = [a, b].some(item => item === unreleasedLabel);

  if (hasUnreleased) {
    return a === hasUnreleased ? b : a || b;
  }

  return semverMin(a, b);
}

function getHighestUnreleased(a, b, env) {
  return getLowestUnreleased(a, b, env) === a ? b : a;
}

function getLowestImplementedVersion(plugin, environment) {
  const result = plugin[environment];

  if (!result && environment === "android") {
    return plugin.chrome;
  }

  return result;
}

/***/ }),
/* 1040 */
/***/ ((module, exports) => {

exports = module.exports = SemVer

var debug
/* istanbul ignore next */
if (typeof process === 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
  debug = function () {
    var args = Array.prototype.slice.call(arguments, 0)
    args.unshift('SEMVER')
    console.log.apply(console, args)
  }
} else {
  debug = function () {}
}

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0'

var MAX_LENGTH = 256
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
var MAX_SAFE_COMPONENT_LENGTH = 16

// The actual regexps go on exports.re
var re = exports.re = []
var src = exports.src = []
var t = exports.tokens = {}
var R = 0

function tok (n) {
  t[n] = R++
}

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

tok('NUMERICIDENTIFIER')
src[t.NUMERICIDENTIFIER] = '0|[1-9]\\d*'
tok('NUMERICIDENTIFIERLOOSE')
src[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

tok('NONNUMERICIDENTIFIER')
src[t.NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

// ## Main Version
// Three dot-separated numeric identifiers.

tok('MAINVERSION')
src[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[t.NUMERICIDENTIFIER] + ')'

tok('MAINVERSIONLOOSE')
src[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

tok('PRERELEASEIDENTIFIER')
src[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +
                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'

tok('PRERELEASEIDENTIFIERLOOSE')
src[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

tok('PRERELEASE')
src[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'

tok('PRERELEASELOOSE')
src[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

tok('BUILDIDENTIFIER')
src[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

tok('BUILD')
src[t.BUILD] = '(?:\\+(' + src[t.BUILDIDENTIFIER] +
             '(?:\\.' + src[t.BUILDIDENTIFIER] + ')*))'

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

tok('FULL')
tok('FULLPLAIN')
src[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +
                  src[t.PRERELEASE] + '?' +
                  src[t.BUILD] + '?'

src[t.FULL] = '^' + src[t.FULLPLAIN] + '$'

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
tok('LOOSEPLAIN')
src[t.LOOSEPLAIN] = '[v=\\s]*' + src[t.MAINVERSIONLOOSE] +
                  src[t.PRERELEASELOOSE] + '?' +
                  src[t.BUILD] + '?'

tok('LOOSE')
src[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'

tok('GTLT')
src[t.GTLT] = '((?:<|>)?=?)'

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
tok('XRANGEIDENTIFIERLOOSE')
src[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
tok('XRANGEIDENTIFIER')
src[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\*'

tok('XRANGEPLAIN')
src[t.XRANGEPLAIN] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[t.PRERELEASE] + ')?' +
                   src[t.BUILD] + '?' +
                   ')?)?'

tok('XRANGEPLAINLOOSE')
src[t.XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +
                        src[t.BUILD] + '?' +
                        ')?)?'

tok('XRANGE')
src[t.XRANGE] = '^' + src[t.GTLT] + '\\s*' + src[t.XRANGEPLAIN] + '$'
tok('XRANGELOOSE')
src[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\s*' + src[t.XRANGEPLAINLOOSE] + '$'

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
tok('COERCE')
src[t.COERCE] = '(^|[^\\d])' +
              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:$|[^\\d])'
tok('COERCERTL')
re[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')

// Tilde ranges.
// Meaning is "reasonably at or greater than"
tok('LONETILDE')
src[t.LONETILDE] = '(?:~>?)'

tok('TILDETRIM')
src[t.TILDETRIM] = '(\\s*)' + src[t.LONETILDE] + '\\s+'
re[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')
var tildeTrimReplace = '$1~'

tok('TILDE')
src[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'
tok('TILDELOOSE')
src[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'

// Caret ranges.
// Meaning is "at least and backwards compatible with"
tok('LONECARET')
src[t.LONECARET] = '(?:\\^)'

tok('CARETTRIM')
src[t.CARETTRIM] = '(\\s*)' + src[t.LONECARET] + '\\s+'
re[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')
var caretTrimReplace = '$1^'

tok('CARET')
src[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'
tok('CARETLOOSE')
src[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'

// A simple gt/lt/eq thing, or just "" to indicate "any version"
tok('COMPARATORLOOSE')
src[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'
tok('COMPARATOR')
src[t.COMPARATOR] = '^' + src[t.GTLT] + '\\s*(' + src[t.FULLPLAIN] + ')$|^$'

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
tok('COMPARATORTRIM')
src[t.COMPARATORTRIM] = '(\\s*)' + src[t.GTLT] +
                      '\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'

// this one has to use the /g flag
re[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')
var comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
tok('HYPHENRANGE')
src[t.HYPHENRANGE] = '^\\s*(' + src[t.XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[t.XRANGEPLAIN] + ')' +
                   '\\s*$'

tok('HYPHENRANGELOOSE')
src[t.HYPHENRANGELOOSE] = '^\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +
                        '\\s*$'

// Star ranges basically just allow anything at all.
tok('STAR')
src[t.STAR] = '(<|>)?=?\\s*\\*'

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i])
  if (!re[i]) {
    re[i] = new RegExp(src[i])
  }
}

exports.parse = parse
function parse (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  var r = options.loose ? re[t.LOOSE] : re[t.FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

exports.valid = valid
function valid (version, options) {
  var v = parse(version, options)
  return v ? v.version : null
}

exports.clean = clean
function clean (version, options) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}

exports.SemVer = SemVer

function SemVer (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }
  if (version instanceof SemVer) {
    if (version.loose === options.loose) {
      return version
    } else {
      version = version.version
    }
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version)
  }

  if (version.length > MAX_LENGTH) {
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
  }

  if (!(this instanceof SemVer)) {
    return new SemVer(version, options)
  }

  debug('SemVer', version, options)
  this.options = options
  this.loose = !!options.loose

  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])

  if (!m) {
    throw new TypeError('Invalid Version: ' + version)
  }

  this.raw = version

  // these are actually numbers
  this.major = +m[1]
  this.minor = +m[2]
  this.patch = +m[3]

  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
    throw new TypeError('Invalid major version')
  }

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
    throw new TypeError('Invalid minor version')
  }

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
    throw new TypeError('Invalid patch version')
  }

  // numberify any prerelease numeric ids
  if (!m[4]) {
    this.prerelease = []
  } else {
    this.prerelease = m[4].split('.').map(function (id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER) {
          return num
        }
      }
      return id
    })
  }

  this.build = m[5] ? m[5].split('.') : []
  this.format()
}

SemVer.prototype.format = function () {
  this.version = this.major + '.' + this.minor + '.' + this.patch
  if (this.prerelease.length) {
    this.version += '-' + this.prerelease.join('.')
  }
  return this.version
}

SemVer.prototype.toString = function () {
  return this.version
}

SemVer.prototype.compare = function (other) {
  debug('SemVer.compare', this.version, this.options, other)
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return this.compareMain(other) || this.comparePre(other)
}

SemVer.prototype.compareMain = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch)
}

SemVer.prototype.comparePre = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length) {
    return -1
  } else if (!this.prerelease.length && other.prerelease.length) {
    return 1
  } else if (!this.prerelease.length && !other.prerelease.length) {
    return 0
  }

  var i = 0
  do {
    var a = this.prerelease[i]
    var b = other.prerelease[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

SemVer.prototype.compareBuild = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  var i = 0
  do {
    var a = this.build[i]
    var b = other.build[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function (release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor = 0
      this.major++
      this.inc('pre', identifier)
      break
    case 'preminor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor++
      this.inc('pre', identifier)
      break
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0
      this.inc('patch', identifier)
      this.inc('pre', identifier)
      break
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0) {
        this.inc('patch', identifier)
      }
      this.inc('pre', identifier)
      break

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0) {
        this.major++
      }
      this.minor = 0
      this.patch = 0
      this.prerelease = []
      break
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0) {
        this.minor++
      }
      this.patch = 0
      this.prerelease = []
      break
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0) {
        this.patch++
      }
      this.prerelease = []
      break
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0) {
        this.prerelease = [0]
      } else {
        var i = this.prerelease.length
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++
            i = -2
          }
        }
        if (i === -1) {
          // didn't increment anything
          this.prerelease.push(0)
        }
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1])) {
            this.prerelease = [identifier, 0]
          }
        } else {
          this.prerelease = [identifier, 0]
        }
      }
      break

    default:
      throw new Error('invalid increment argument: ' + release)
  }
  this.format()
  this.raw = this.version
  return this
}

exports.inc = inc
function inc (version, release, loose, identifier) {
  if (typeof (loose) === 'string') {
    identifier = loose
    loose = undefined
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version
  } catch (er) {
    return null
  }
}

exports.diff = diff
function diff (version1, version2) {
  if (eq(version1, version2)) {
    return null
  } else {
    var v1 = parse(version1)
    var v2 = parse(version2)
    var prefix = ''
    if (v1.prerelease.length || v2.prerelease.length) {
      prefix = 'pre'
      var defaultResult = 'prerelease'
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}

exports.compareIdentifiers = compareIdentifiers

var numeric = /^[0-9]+$/
function compareIdentifiers (a, b) {
  var anum = numeric.test(a)
  var bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

exports.rcompareIdentifiers = rcompareIdentifiers
function rcompareIdentifiers (a, b) {
  return compareIdentifiers(b, a)
}

exports.major = major
function major (a, loose) {
  return new SemVer(a, loose).major
}

exports.minor = minor
function minor (a, loose) {
  return new SemVer(a, loose).minor
}

exports.patch = patch
function patch (a, loose) {
  return new SemVer(a, loose).patch
}

exports.compare = compare
function compare (a, b, loose) {
  return new SemVer(a, loose).compare(new SemVer(b, loose))
}

exports.compareLoose = compareLoose
function compareLoose (a, b) {
  return compare(a, b, true)
}

exports.compareBuild = compareBuild
function compareBuild (a, b, loose) {
  var versionA = new SemVer(a, loose)
  var versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}

exports.rcompare = rcompare
function rcompare (a, b, loose) {
  return compare(b, a, loose)
}

exports.sort = sort
function sort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(a, b, loose)
  })
}

exports.rsort = rsort
function rsort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(b, a, loose)
  })
}

exports.gt = gt
function gt (a, b, loose) {
  return compare(a, b, loose) > 0
}

exports.lt = lt
function lt (a, b, loose) {
  return compare(a, b, loose) < 0
}

exports.eq = eq
function eq (a, b, loose) {
  return compare(a, b, loose) === 0
}

exports.neq = neq
function neq (a, b, loose) {
  return compare(a, b, loose) !== 0
}

exports.gte = gte
function gte (a, b, loose) {
  return compare(a, b, loose) >= 0
}

exports.lte = lte
function lte (a, b, loose) {
  return compare(a, b, loose) <= 0
}

exports.cmp = cmp
function cmp (a, op, b, loose) {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError('Invalid operator: ' + op)
  }
}

exports.Comparator = Comparator
function Comparator (comp, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (comp instanceof Comparator) {
    if (comp.loose === !!options.loose) {
      return comp
    } else {
      comp = comp.value
    }
  }

  if (!(this instanceof Comparator)) {
    return new Comparator(comp, options)
  }

  debug('comparator', comp, options)
  this.options = options
  this.loose = !!options.loose
  this.parse(comp)

  if (this.semver === ANY) {
    this.value = ''
  } else {
    this.value = this.operator + this.semver.version
  }

  debug('comp', this)
}

var ANY = {}
Comparator.prototype.parse = function (comp) {
  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
  var m = comp.match(r)

  if (!m) {
    throw new TypeError('Invalid comparator: ' + comp)
  }

  this.operator = m[1] !== undefined ? m[1] : ''
  if (this.operator === '=') {
    this.operator = ''
  }

  // if it literally is just '>' or '' then allow anything.
  if (!m[2]) {
    this.semver = ANY
  } else {
    this.semver = new SemVer(m[2], this.options.loose)
  }
}

Comparator.prototype.toString = function () {
  return this.value
}

Comparator.prototype.test = function (version) {
  debug('Comparator.test', version, this.options.loose)

  if (this.semver === ANY || version === ANY) {
    return true
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  return cmp(version, this.operator, this.semver, this.options)
}

Comparator.prototype.intersects = function (comp, options) {
  if (!(comp instanceof Comparator)) {
    throw new TypeError('a Comparator is required')
  }

  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  var rangeTmp

  if (this.operator === '') {
    if (this.value === '') {
      return true
    }
    rangeTmp = new Range(comp.value, options)
    return satisfies(this.value, rangeTmp, options)
  } else if (comp.operator === '') {
    if (comp.value === '') {
      return true
    }
    rangeTmp = new Range(this.value, options)
    return satisfies(comp.semver, rangeTmp, options)
  }

  var sameDirectionIncreasing =
    (this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '>=' || comp.operator === '>')
  var sameDirectionDecreasing =
    (this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '<=' || comp.operator === '<')
  var sameSemVer = this.semver.version === comp.semver.version
  var differentDirectionsInclusive =
    (this.operator === '>=' || this.operator === '<=') &&
    (comp.operator === '>=' || comp.operator === '<=')
  var oppositeDirectionsLessThan =
    cmp(this.semver, '<', comp.semver, options) &&
    ((this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '<=' || comp.operator === '<'))
  var oppositeDirectionsGreaterThan =
    cmp(this.semver, '>', comp.semver, options) &&
    ((this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '>=' || comp.operator === '>'))

  return sameDirectionIncreasing || sameDirectionDecreasing ||
    (sameSemVer && differentDirectionsInclusive) ||
    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
}

exports.Range = Range
function Range (range, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (range instanceof Range) {
    if (range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease) {
      return range
    } else {
      return new Range(range.raw, options)
    }
  }

  if (range instanceof Comparator) {
    return new Range(range.value, options)
  }

  if (!(this instanceof Range)) {
    return new Range(range, options)
  }

  this.options = options
  this.loose = !!options.loose
  this.includePrerelease = !!options.includePrerelease

  // First, split based on boolean or ||
  this.raw = range
  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
    return this.parseRange(range.trim())
  }, this).filter(function (c) {
    // throw out any that are not relevant for whatever reason
    return c.length
  })

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range)
  }

  this.format()
}

Range.prototype.format = function () {
  this.range = this.set.map(function (comps) {
    return comps.join(' ').trim()
  }).join('||').trim()
  return this.range
}

Range.prototype.toString = function () {
  return this.range
}

Range.prototype.parseRange = function (range) {
  var loose = this.options.loose
  range = range.trim()
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]
  range = range.replace(hr, hyphenReplace)
  debug('hyphen replace', range)
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)
  debug('comparator trim', range, re[t.COMPARATORTRIM])

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[t.CARETTRIM], caretTrimReplace)

  // normalize spaces
  range = range.split(/\s+/).join(' ')

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
  var set = range.split(' ').map(function (comp) {
    return parseComparator(comp, this.options)
  }, this).join(' ').split(/\s+/)
  if (this.options.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function (comp) {
      return !!comp.match(compRe)
    })
  }
  set = set.map(function (comp) {
    return new Comparator(comp, this.options)
  }, this)

  return set
}

Range.prototype.intersects = function (range, options) {
  if (!(range instanceof Range)) {
    throw new TypeError('a Range is required')
  }

  return this.set.some(function (thisComparators) {
    return (
      isSatisfiable(thisComparators, options) &&
      range.set.some(function (rangeComparators) {
        return (
          isSatisfiable(rangeComparators, options) &&
          thisComparators.every(function (thisComparator) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options)
            })
          })
        )
      })
    )
  })
}

// take a set of comparators and determine whether there
// exists a version which can satisfy it
function isSatisfiable (comparators, options) {
  var result = true
  var remainingComparators = comparators.slice()
  var testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every(function (otherComparator) {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators
function toComparators (range, options) {
  return new Range(range, options).set.map(function (comp) {
    return comp.map(function (c) {
      return c.value
    }).join(' ').trim().split(' ')
  })
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator (comp, options) {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

function isX (id) {
  return !id || id.toLowerCase() === 'x' || id === '*'
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceTilde(comp, options)
  }).join(' ')
}

function replaceTilde (comp, options) {
  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
            ' <' + M + '.' + (+m + 1) + '.0'
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0'
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceCaret(comp, options)
  }).join(' ')
}

function replaceCaret (comp, options) {
  debug('caret', comp, options)
  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      if (M === '0') {
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
      } else {
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
              ' <' + (+M + 1) + '.0.0'
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0'
      }
    }

    debug('caret return', ret)
    return ret
  })
}

function replaceXRanges (comp, options) {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map(function (comp) {
    return replaceXRange(comp, options)
  }).join(' ')
}

function replaceXRange (comp, options) {
  comp = comp.trim()
  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]
  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    var xM = isX(M)
    var xm = xM || isX(m)
    var xp = xm || isX(p)
    var anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      ret = gtlt + M + '.' + m + '.' + p + pr
    } else if (xm) {
      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0' + pr +
        ' <' + M + '.' + (+m + 1) + '.0' + pr
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars (comp, options) {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[t.STAR], '')
}

// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = '>=' + fM + '.0.0'
  } else if (isX(fp)) {
    from = '>=' + fM + '.' + fm + '.0'
  } else {
    from = '>=' + from
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = '<' + (+tM + 1) + '.0.0'
  } else if (isX(tp)) {
    to = '<' + tM + '.' + (+tm + 1) + '.0'
  } else if (tpr) {
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
  } else {
    to = '<=' + to
  }

  return (from + ' ' + to).trim()
}

// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function (version) {
  if (!version) {
    return false
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version, this.options)) {
      return true
    }
  }
  return false
}

function testSet (set, version, options) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}

exports.satisfies = satisfies
function satisfies (version, range, options) {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}

exports.maxSatisfying = maxSatisfying
function maxSatisfying (versions, range, options) {
  var max = null
  var maxSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}

exports.minSatisfying = minSatisfying
function minSatisfying (versions, range, options) {
  var min = null
  var minSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}

exports.minVersion = minVersion
function minVersion (range, loose) {
  range = new Range(range, loose)

  var minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    comparators.forEach(function (comparator) {
      // Clone to avoid manipulating the comparator's semver object.
      var compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!minver || gt(minver, compver)) {
            minver = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error('Unexpected operation: ' + comparator.operator)
      }
    })
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}

exports.validRange = validRange
function validRange (range, options) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr
function ltr (version, range, options) {
  return outside(version, range, '<', options)
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr
function gtr (version, range, options) {
  return outside(version, range, '>', options)
}

exports.outside = outside
function outside (version, range, hilo, options) {
  version = new SemVer(version, options)
  range = new Range(range, options)

  var gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    var high = null
    var low = null

    comparators.forEach(function (comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

exports.prerelease = prerelease
function prerelease (version, options) {
  var parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}

exports.intersects = intersects
function intersects (r1, r2, options) {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}

exports.coerce = coerce
function coerce (version, options) {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version === 'number') {
    version = String(version)
  }

  if (typeof version !== 'string') {
    return null
  }

  options = options || {}

  var match = null
  if (!options.rtl) {
    match = version.match(re[t.COERCE])
  } else {
    // Find the right-most coercible string that does not share
    // a terminus with a more left-ward coercible string.
    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
    //
    // Walk through the string checking with a /g regexp
    // Manually set the index so as to pick up overlapping matches.
    // Stop when we get a match that ends at the string end, since no
    // coercible string can be more right-ward without the same terminus.
    var next
    while ((next = re[t.COERCERTL].exec(version)) &&
      (!match || match.index + match[0].length !== version.length)
    ) {
      if (!match ||
          next.index + next[0].length !== match.index + match[0].length) {
        match = next
      }
      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length
    }
    // leave it in a clean state
    re[t.COERCERTL].lastIndex = -1
  }

  if (match === null) {
    return null
  }

  return parse(match[2] +
    '.' + (match[3] || '0') +
    '.' + (match[4] || '0'), options)
}


/***/ }),
/* 1041 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.browserNameMap = exports.unreleasedLabels = void 0;
const unreleasedLabels = {
  safari: "tp"
};
exports.unreleasedLabels = unreleasedLabels;
const browserNameMap = {
  and_chr: "chrome",
  and_ff: "firefox",
  android: "android",
  chrome: "chrome",
  edge: "edge",
  firefox: "firefox",
  ie: "ie",
  ie_mob: "ie",
  ios_saf: "ios",
  node: "node",
  op_mob: "opera",
  opera: "opera",
  safari: "safari",
  samsung: "samsung"
};
exports.browserNameMap = browserNameMap;

/***/ }),
/* 1042 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.TargetNames = void 0;
const TargetNames = {
  node: "node",
  chrome: "chrome",
  opera: "opera",
  edge: "edge",
  firefox: "firefox",
  safari: "safari",
  ie: "ie",
  ios: "ios",
  android: "android",
  electron: "electron",
  samsung: "samsung"
};
exports.TargetNames = TargetNames;

/***/ }),
/* 1043 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.prettifyVersion = prettifyVersion;
exports.prettifyTargets = prettifyTargets;

var _semver = __webpack_require__(1040);

var _targets = __webpack_require__(1041);

function prettifyVersion(version) {
  if (typeof version !== "string") {
    return version;
  }

  const parts = [_semver.major(version)];

  const minor = _semver.minor(version);

  const patch = _semver.patch(version);

  if (minor || patch) {
    parts.push(minor);
  }

  if (patch) {
    parts.push(patch);
  }

  return parts.join(".");
}

function prettifyTargets(targets) {
  return Object.keys(targets).reduce((results, target) => {
    let value = targets[target];
    const unreleasedLabel = _targets.unreleasedLabels[target];

    if (typeof value === "string" && unreleasedLabel !== value) {
      value = prettifyVersion(value);
    }

    results[target] = value;
    return results;
  }, {});
}

/***/ }),
/* 1044 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.getInclusionReasons = getInclusionReasons;

var _semver = __webpack_require__(1040);

var _pretty = __webpack_require__(1043);

var _utils = __webpack_require__(1039);

function getInclusionReasons(item, targetVersions, list) {
  const minVersions = list[item] || {};
  return Object.keys(targetVersions).reduce((result, env) => {
    const minVersion = (0, _utils.getLowestImplementedVersion)(minVersions, env);
    const targetVersion = targetVersions[env];

    if (!minVersion) {
      result[env] = (0, _pretty.prettifyVersion)(targetVersion);
    } else {
      const minIsUnreleased = (0, _utils.isUnreleasedVersion)(minVersion, env);
      const targetIsUnreleased = (0, _utils.isUnreleasedVersion)(targetVersion, env);

      if (!targetIsUnreleased && (minIsUnreleased || _semver.lt(targetVersion.toString(), (0, _utils.semverify)(minVersion)))) {
        result[env] = (0, _pretty.prettifyVersion)(targetVersion);
      }
    }

    return result;
  }, {});
}

/***/ }),
/* 1045 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.targetsSupported = targetsSupported;
exports.isRequired = isRequired;
exports.default = filterItems;

var _semver = __webpack_require__(1040);

var _plugins = __webpack_require__(1046);

var _utils = __webpack_require__(1039);

function targetsSupported(target, support) {
  const targetEnvironments = Object.keys(target);

  if (targetEnvironments.length === 0) {
    return false;
  }

  const unsupportedEnvironments = targetEnvironments.filter(environment => {
    const lowestImplementedVersion = (0, _utils.getLowestImplementedVersion)(support, environment);

    if (!lowestImplementedVersion) {
      return true;
    }

    const lowestTargetedVersion = target[environment];

    if ((0, _utils.isUnreleasedVersion)(lowestTargetedVersion, environment)) {
      return false;
    }

    if ((0, _utils.isUnreleasedVersion)(lowestImplementedVersion, environment)) {
      return true;
    }

    if (!_semver.valid(lowestTargetedVersion.toString())) {
      throw new Error(`Invalid version passed for target "${environment}": "${lowestTargetedVersion}". ` + "Versions must be in semver format (major.minor.patch)");
    }

    return _semver.gt((0, _utils.semverify)(lowestImplementedVersion), lowestTargetedVersion.toString());
  });
  return unsupportedEnvironments.length === 0;
}

function isRequired(name, targets, {
  compatData = _plugins,
  includes,
  excludes
} = {}) {
  if (excludes != null && excludes.has(name)) return false;
  if (includes != null && includes.has(name)) return true;
  return !targetsSupported(targets, compatData[name]);
}

function filterItems(list, includes, excludes, targets, defaultIncludes, defaultExcludes, pluginSyntaxMap) {
  const result = new Set();
  const options = {
    compatData: list,
    includes,
    excludes
  };

  for (const item in list) {
    if (isRequired(item, targets, options)) {
      result.add(item);
    } else if (pluginSyntaxMap) {
      const shippedProposalsSyntax = pluginSyntaxMap.get(item);

      if (shippedProposalsSyntax) {
        result.add(shippedProposalsSyntax);
      }
    }
  }

  if (defaultIncludes) {
    defaultIncludes.forEach(item => !excludes.has(item) && result.add(item));
  }

  if (defaultExcludes) {
    defaultExcludes.forEach(item => !includes.has(item) && result.delete(item));
  }

  return result;
}

/***/ }),
/* 1046 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(1047);


/***/ }),
/* 1047 */
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"proposal-class-static-block":{"chrome":"91"},"proposal-private-property-in-object":{"chrome":"91","firefox":"90"},"proposal-class-properties":{"chrome":"74","opera":"62","edge":"79","firefox":"90","safari":"14.1","node":"12","samsung":"11","electron":"6.0"},"proposal-private-methods":{"chrome":"84","opera":"70","edge":"84","firefox":"90","safari":"tp","node":"14.6","electron":"10.0"},"proposal-numeric-separator":{"chrome":"75","opera":"62","edge":"79","firefox":"70","safari":"13","node":"12.5","ios":"13","samsung":"11","electron":"6.0"},"proposal-logical-assignment-operators":{"chrome":"85","opera":"71","edge":"85","firefox":"79","safari":"14","node":"15","ios":"14","electron":"10.0"},"proposal-nullish-coalescing-operator":{"chrome":"80","opera":"67","edge":"80","firefox":"72","safari":"13.1","node":"14","ios":"13.4","samsung":"13","electron":"8.0"},"proposal-optional-chaining":{"firefox":"74","safari":"13.1","ios":"13.4"},"proposal-json-strings":{"chrome":"66","opera":"53","edge":"79","firefox":"62","safari":"12","node":"10","ios":"12","samsung":"9","electron":"3.0"},"proposal-optional-catch-binding":{"chrome":"66","opera":"53","edge":"79","firefox":"58","safari":"11.1","node":"10","ios":"11.3","samsung":"9","electron":"3.0"},"transform-parameters":{"chrome":"49","opera":"36","edge":"18","firefox":"53","safari":"10","node":"6","ios":"10","samsung":"5","electron":"0.37"},"proposal-async-generator-functions":{"chrome":"63","opera":"50","edge":"79","firefox":"57","safari":"12","node":"10","ios":"12","samsung":"8","electron":"3.0"},"proposal-object-rest-spread":{"chrome":"60","opera":"47","edge":"79","firefox":"55","safari":"11.1","node":"8.3","ios":"11.3","samsung":"8","electron":"2.0"},"transform-dotall-regex":{"chrome":"62","opera":"49","edge":"79","firefox":"78","safari":"11.1","node":"8.10","ios":"11.3","samsung":"8","electron":"3.0"},"proposal-unicode-property-regex":{"chrome":"64","opera":"51","edge":"79","firefox":"78","safari":"11.1","node":"10","ios":"11.3","samsung":"9","electron":"3.0"},"transform-named-capturing-groups-regex":{"chrome":"64","opera":"51","edge":"79","firefox":"78","safari":"11.1","node":"10","ios":"11.3","samsung":"9","electron":"3.0"},"transform-async-to-generator":{"chrome":"55","opera":"42","edge":"15","firefox":"52","safari":"11","node":"7.6","ios":"11","samsung":"6","electron":"1.6"},"transform-exponentiation-operator":{"chrome":"52","opera":"39","edge":"14","firefox":"52","safari":"10.1","node":"7","ios":"10.3","samsung":"6","electron":"1.3"},"transform-template-literals":{"chrome":"41","opera":"28","edge":"13","firefox":"34","safari":"13","node":"4","ios":"13","samsung":"3.4","electron":"0.21"},"transform-literals":{"chrome":"44","opera":"31","edge":"12","firefox":"53","safari":"9","node":"4","ios":"9","samsung":"4","electron":"0.30"},"transform-function-name":{"chrome":"51","opera":"38","edge":"79","firefox":"53","safari":"10","node":"6.5","ios":"10","samsung":"5","electron":"1.2"},"transform-arrow-functions":{"chrome":"47","opera":"34","edge":"13","firefox":"45","safari":"10","node":"6","ios":"10","samsung":"5","electron":"0.36"},"transform-block-scoped-functions":{"chrome":"41","opera":"28","edge":"12","firefox":"46","safari":"10","node":"4","ie":"11","ios":"10","samsung":"3.4","electron":"0.21"},"transform-classes":{"chrome":"46","opera":"33","edge":"13","firefox":"45","safari":"10","node":"5","ios":"10","samsung":"5","electron":"0.36"},"transform-object-super":{"chrome":"46","opera":"33","edge":"13","firefox":"45","safari":"10","node":"5","ios":"10","samsung":"5","electron":"0.36"},"transform-shorthand-properties":{"chrome":"43","opera":"30","edge":"12","firefox":"33","safari":"9","node":"4","ios":"9","samsung":"4","electron":"0.27"},"transform-duplicate-keys":{"chrome":"42","opera":"29","edge":"12","firefox":"34","safari":"9","node":"4","ios":"9","samsung":"3.4","electron":"0.25"},"transform-computed-properties":{"chrome":"44","opera":"31","edge":"12","firefox":"34","safari":"7.1","node":"4","ios":"8","samsung":"4","electron":"0.30"},"transform-for-of":{"chrome":"51","opera":"38","edge":"15","firefox":"53","safari":"10","node":"6.5","ios":"10","samsung":"5","electron":"1.2"},"transform-sticky-regex":{"chrome":"49","opera":"36","edge":"13","firefox":"3","safari":"10","node":"6","ios":"10","samsung":"5","electron":"0.37"},"transform-unicode-escapes":{"chrome":"44","opera":"31","edge":"12","firefox":"53","safari":"9","node":"4","ios":"9","samsung":"4","electron":"0.30"},"transform-unicode-regex":{"chrome":"50","opera":"37","edge":"13","firefox":"46","safari":"12","node":"6","ios":"12","samsung":"5","electron":"1.1"},"transform-spread":{"chrome":"46","opera":"33","edge":"13","firefox":"45","safari":"10","node":"5","ios":"10","samsung":"5","electron":"0.36"},"transform-destructuring":{"chrome":"51","opera":"38","edge":"15","firefox":"53","safari":"10","node":"6.5","ios":"10","samsung":"5","electron":"1.2"},"transform-block-scoping":{"chrome":"49","opera":"36","edge":"14","firefox":"51","safari":"11","node":"6","ios":"11","samsung":"5","electron":"0.37"},"transform-typeof-symbol":{"chrome":"38","opera":"25","edge":"12","firefox":"36","safari":"9","node":"0.12","ios":"9","samsung":"3","electron":"0.20"},"transform-new-target":{"chrome":"46","opera":"33","edge":"14","firefox":"41","safari":"10","node":"5","ios":"10","samsung":"5","electron":"0.36"},"transform-regenerator":{"chrome":"50","opera":"37","edge":"13","firefox":"53","safari":"10","node":"6","ios":"10","samsung":"5","electron":"1.1"},"transform-member-expression-literals":{"chrome":"7","opera":"12","edge":"12","firefox":"2","safari":"5.1","node":"0.10","ie":"9","android":"4","ios":"6","phantom":"2","samsung":"1","electron":"0.20"},"transform-property-literals":{"chrome":"7","opera":"12","edge":"12","firefox":"2","safari":"5.1","node":"0.10","ie":"9","android":"4","ios":"6","phantom":"2","samsung":"1","electron":"0.20"},"transform-reserved-words":{"chrome":"13","opera":"10.50","edge":"12","firefox":"2","safari":"3.1","node":"0.10","ie":"9","android":"4.4","ios":"6","phantom":"2","samsung":"1","electron":"0.20"},"proposal-export-namespace-from":{"chrome":"72","and_chr":"72","edge":"79","firefox":"80","and_ff":"80","node":"13.2","opera":"60","op_mob":"51","samsung":"11.0","android":"72","electron":"5.0"}}');

/***/ }),
/* 1048 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.buildPresetChain = buildPresetChain;
exports.buildRootChain = buildRootChain;
exports.buildPresetChainWalker = void 0;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function _debug() {
  const data = __webpack_require__(95);

  _debug = function () {
    return data;
  };

  return data;
}

var _options = __webpack_require__(1049);

var _patternToRegex = __webpack_require__(221);

var _printer = __webpack_require__(1052);

var _files = __webpack_require__(202);

var _caching = __webpack_require__(205);

var _configDescriptors = __webpack_require__(228);

const debug = _debug()("babel:config:config-chain");

function* buildPresetChain(arg, context) {
  const chain = yield* buildPresetChainWalker(arg, context);
  if (!chain) return null;
  return {
    plugins: dedupDescriptors(chain.plugins),
    presets: dedupDescriptors(chain.presets),
    options: chain.options.map(o => normalizeOptions(o)),
    files: new Set()
  };
}

const buildPresetChainWalker = makeChainWalker({
  root: preset => loadPresetDescriptors(preset),
  env: (preset, envName) => loadPresetEnvDescriptors(preset)(envName),
  overrides: (preset, index) => loadPresetOverridesDescriptors(preset)(index),
  overridesEnv: (preset, index, envName) => loadPresetOverridesEnvDescriptors(preset)(index)(envName),
  createLogger: () => () => {}
});
exports.buildPresetChainWalker = buildPresetChainWalker;
const loadPresetDescriptors = (0, _caching.makeWeakCacheSync)(preset => buildRootDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors));
const loadPresetEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, envName)));
const loadPresetOverridesDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index)));
const loadPresetOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(preset => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(preset, preset.alias, _configDescriptors.createUncachedDescriptors, index, envName))));

function* buildRootChain(opts, context) {
  let configReport, babelRcReport;
  const programmaticLogger = new _printer.ConfigPrinter();
  const programmaticChain = yield* loadProgrammaticChain({
    options: opts,
    dirname: context.cwd
  }, context, undefined, programmaticLogger);
  if (!programmaticChain) return null;
  const programmaticReport = yield* programmaticLogger.output();
  let configFile;

  if (typeof opts.configFile === "string") {
    configFile = yield* (0, _files.loadConfig)(opts.configFile, context.cwd, context.envName, context.caller);
  } else if (opts.configFile !== false) {
    configFile = yield* (0, _files.findRootConfig)(context.root, context.envName, context.caller);
  }

  let {
    babelrc,
    babelrcRoots
  } = opts;
  let babelrcRootsDirectory = context.cwd;
  const configFileChain = emptyChain();
  const configFileLogger = new _printer.ConfigPrinter();

  if (configFile) {
    const validatedFile = validateConfigFile(configFile);
    const result = yield* loadFileChain(validatedFile, context, undefined, configFileLogger);
    if (!result) return null;
    configReport = yield* configFileLogger.output();

    if (babelrc === undefined) {
      babelrc = validatedFile.options.babelrc;
    }

    if (babelrcRoots === undefined) {
      babelrcRootsDirectory = validatedFile.dirname;
      babelrcRoots = validatedFile.options.babelrcRoots;
    }

    mergeChain(configFileChain, result);
  }

  let ignoreFile, babelrcFile;
  let isIgnored = false;
  const fileChain = emptyChain();

  if ((babelrc === true || babelrc === undefined) && typeof context.filename === "string") {
    const pkgData = yield* (0, _files.findPackageData)(context.filename);

    if (pkgData && babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory)) {
      ({
        ignore: ignoreFile,
        config: babelrcFile
      } = yield* (0, _files.findRelativeConfig)(pkgData, context.envName, context.caller));

      if (ignoreFile) {
        fileChain.files.add(ignoreFile.filepath);
      }

      if (ignoreFile && shouldIgnore(context, ignoreFile.ignore, null, ignoreFile.dirname)) {
        isIgnored = true;
      }

      if (babelrcFile && !isIgnored) {
        const validatedFile = validateBabelrcFile(babelrcFile);
        const babelrcLogger = new _printer.ConfigPrinter();
        const result = yield* loadFileChain(validatedFile, context, undefined, babelrcLogger);

        if (!result) {
          isIgnored = true;
        } else {
          babelRcReport = yield* babelrcLogger.output();
          mergeChain(fileChain, result);
        }
      }

      if (babelrcFile && isIgnored) {
        fileChain.files.add(babelrcFile.filepath);
      }
    }
  }

  if (context.showConfig) {
    console.log(`Babel configs on "${context.filename}" (ascending priority):\n` + [configReport, babelRcReport, programmaticReport].filter(x => !!x).join("\n\n") + "\n-----End Babel configs-----");
  }

  const chain = mergeChain(mergeChain(mergeChain(emptyChain(), configFileChain), fileChain), programmaticChain);
  return {
    plugins: isIgnored ? [] : dedupDescriptors(chain.plugins),
    presets: isIgnored ? [] : dedupDescriptors(chain.presets),
    options: isIgnored ? [] : chain.options.map(o => normalizeOptions(o)),
    fileHandling: isIgnored ? "ignored" : "transpile",
    ignore: ignoreFile || undefined,
    babelrc: babelrcFile || undefined,
    config: configFile || undefined,
    files: chain.files
  };
}

function babelrcLoadEnabled(context, pkgData, babelrcRoots, babelrcRootsDirectory) {
  if (typeof babelrcRoots === "boolean") return babelrcRoots;
  const absoluteRoot = context.root;

  if (babelrcRoots === undefined) {
    return pkgData.directories.indexOf(absoluteRoot) !== -1;
  }

  let babelrcPatterns = babelrcRoots;

  if (!Array.isArray(babelrcPatterns)) {
    babelrcPatterns = [babelrcPatterns];
  }

  babelrcPatterns = babelrcPatterns.map(pat => {
    return typeof pat === "string" ? _path().resolve(babelrcRootsDirectory, pat) : pat;
  });

  if (babelrcPatterns.length === 1 && babelrcPatterns[0] === absoluteRoot) {
    return pkgData.directories.indexOf(absoluteRoot) !== -1;
  }

  return babelrcPatterns.some(pat => {
    if (typeof pat === "string") {
      pat = (0, _patternToRegex.default)(pat, babelrcRootsDirectory);
    }

    return pkgData.directories.some(directory => {
      return matchPattern(pat, babelrcRootsDirectory, directory, context);
    });
  });
}

const validateConfigFile = (0, _caching.makeWeakCacheSync)(file => ({
  filepath: file.filepath,
  dirname: file.dirname,
  options: (0, _options.validate)("configfile", file.options)
}));
const validateBabelrcFile = (0, _caching.makeWeakCacheSync)(file => ({
  filepath: file.filepath,
  dirname: file.dirname,
  options: (0, _options.validate)("babelrcfile", file.options)
}));
const validateExtendFile = (0, _caching.makeWeakCacheSync)(file => ({
  filepath: file.filepath,
  dirname: file.dirname,
  options: (0, _options.validate)("extendsfile", file.options)
}));
const loadProgrammaticChain = makeChainWalker({
  root: input => buildRootDescriptors(input, "base", _configDescriptors.createCachedDescriptors),
  env: (input, envName) => buildEnvDescriptors(input, "base", _configDescriptors.createCachedDescriptors, envName),
  overrides: (input, index) => buildOverrideDescriptors(input, "base", _configDescriptors.createCachedDescriptors, index),
  overridesEnv: (input, index, envName) => buildOverrideEnvDescriptors(input, "base", _configDescriptors.createCachedDescriptors, index, envName),
  createLogger: (input, context, baseLogger) => buildProgrammaticLogger(input, context, baseLogger)
});
const loadFileChainWalker = makeChainWalker({
  root: file => loadFileDescriptors(file),
  env: (file, envName) => loadFileEnvDescriptors(file)(envName),
  overrides: (file, index) => loadFileOverridesDescriptors(file)(index),
  overridesEnv: (file, index, envName) => loadFileOverridesEnvDescriptors(file)(index)(envName),
  createLogger: (file, context, baseLogger) => buildFileLogger(file.filepath, context, baseLogger)
});

function* loadFileChain(input, context, files, baseLogger) {
  const chain = yield* loadFileChainWalker(input, context, files, baseLogger);

  if (chain) {
    chain.files.add(input.filepath);
  }

  return chain;
}

const loadFileDescriptors = (0, _caching.makeWeakCacheSync)(file => buildRootDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors));
const loadFileEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(envName => buildEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, envName)));
const loadFileOverridesDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => buildOverrideDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index)));
const loadFileOverridesEnvDescriptors = (0, _caching.makeWeakCacheSync)(file => (0, _caching.makeStrongCacheSync)(index => (0, _caching.makeStrongCacheSync)(envName => buildOverrideEnvDescriptors(file, file.filepath, _configDescriptors.createUncachedDescriptors, index, envName))));

function buildFileLogger(filepath, context, baseLogger) {
  if (!baseLogger) {
    return () => {};
  }

  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Config, {
    filepath
  });
}

function buildRootDescriptors({
  dirname,
  options
}, alias, descriptors) {
  return descriptors(dirname, options, alias);
}

function buildProgrammaticLogger(_, context, baseLogger) {
  var _context$caller;

  if (!baseLogger) {
    return () => {};
  }

  return baseLogger.configure(context.showConfig, _printer.ChainFormatter.Programmatic, {
    callerName: (_context$caller = context.caller) == null ? void 0 : _context$caller.name
  });
}

function buildEnvDescriptors({
  dirname,
  options
}, alias, descriptors, envName) {
  const opts = options.env && options.env[envName];
  return opts ? descriptors(dirname, opts, `${alias}.env["${envName}"]`) : null;
}

function buildOverrideDescriptors({
  dirname,
  options
}, alias, descriptors, index) {
  const opts = options.overrides && options.overrides[index];
  if (!opts) throw new Error("Assertion failure - missing override");
  return descriptors(dirname, opts, `${alias}.overrides[${index}]`);
}

function buildOverrideEnvDescriptors({
  dirname,
  options
}, alias, descriptors, index, envName) {
  const override = options.overrides && options.overrides[index];
  if (!override) throw new Error("Assertion failure - missing override");
  const opts = override.env && override.env[envName];
  return opts ? descriptors(dirname, opts, `${alias}.overrides[${index}].env["${envName}"]`) : null;
}

function makeChainWalker({
  root,
  env,
  overrides,
  overridesEnv,
  createLogger
}) {
  return function* (input, context, files = new Set(), baseLogger) {
    const {
      dirname
    } = input;
    const flattenedConfigs = [];
    const rootOpts = root(input);

    if (configIsApplicable(rootOpts, dirname, context)) {
      flattenedConfigs.push({
        config: rootOpts,
        envName: undefined,
        index: undefined
      });
      const envOpts = env(input, context.envName);

      if (envOpts && configIsApplicable(envOpts, dirname, context)) {
        flattenedConfigs.push({
          config: envOpts,
          envName: context.envName,
          index: undefined
        });
      }

      (rootOpts.options.overrides || []).forEach((_, index) => {
        const overrideOps = overrides(input, index);

        if (configIsApplicable(overrideOps, dirname, context)) {
          flattenedConfigs.push({
            config: overrideOps,
            index,
            envName: undefined
          });
          const overrideEnvOpts = overridesEnv(input, index, context.envName);

          if (overrideEnvOpts && configIsApplicable(overrideEnvOpts, dirname, context)) {
            flattenedConfigs.push({
              config: overrideEnvOpts,
              index,
              envName: context.envName
            });
          }
        }
      });
    }

    if (flattenedConfigs.some(({
      config: {
        options: {
          ignore,
          only
        }
      }
    }) => shouldIgnore(context, ignore, only, dirname))) {
      return null;
    }

    const chain = emptyChain();
    const logger = createLogger(input, context, baseLogger);

    for (const {
      config,
      index,
      envName
    } of flattenedConfigs) {
      if (!(yield* mergeExtendsChain(chain, config.options, dirname, context, files, baseLogger))) {
        return null;
      }

      logger(config, index, envName);
      yield* mergeChainOpts(chain, config);
    }

    return chain;
  };
}

function* mergeExtendsChain(chain, opts, dirname, context, files, baseLogger) {
  if (opts.extends === undefined) return true;
  const file = yield* (0, _files.loadConfig)(opts.extends, dirname, context.envName, context.caller);

  if (files.has(file)) {
    throw new Error(`Configuration cycle detected loading ${file.filepath}.\n` + `File already loaded following the config chain:\n` + Array.from(files, file => ` - ${file.filepath}`).join("\n"));
  }

  files.add(file);
  const fileChain = yield* loadFileChain(validateExtendFile(file), context, files, baseLogger);
  files.delete(file);
  if (!fileChain) return false;
  mergeChain(chain, fileChain);
  return true;
}

function mergeChain(target, source) {
  target.options.push(...source.options);
  target.plugins.push(...source.plugins);
  target.presets.push(...source.presets);

  for (const file of source.files) {
    target.files.add(file);
  }

  return target;
}

function* mergeChainOpts(target, {
  options,
  plugins,
  presets
}) {
  target.options.push(options);
  target.plugins.push(...(yield* plugins()));
  target.presets.push(...(yield* presets()));
  return target;
}

function emptyChain() {
  return {
    options: [],
    presets: [],
    plugins: [],
    files: new Set()
  };
}

function normalizeOptions(opts) {
  const options = Object.assign({}, opts);
  delete options.extends;
  delete options.env;
  delete options.overrides;
  delete options.plugins;
  delete options.presets;
  delete options.passPerPreset;
  delete options.ignore;
  delete options.only;
  delete options.test;
  delete options.include;
  delete options.exclude;

  if (Object.prototype.hasOwnProperty.call(options, "sourceMap")) {
    options.sourceMaps = options.sourceMap;
    delete options.sourceMap;
  }

  return options;
}

function dedupDescriptors(items) {
  const map = new Map();
  const descriptors = [];

  for (const item of items) {
    if (typeof item.value === "function") {
      const fnKey = item.value;
      let nameMap = map.get(fnKey);

      if (!nameMap) {
        nameMap = new Map();
        map.set(fnKey, nameMap);
      }

      let desc = nameMap.get(item.name);

      if (!desc) {
        desc = {
          value: item
        };
        descriptors.push(desc);
        if (!item.ownPass) nameMap.set(item.name, desc);
      } else {
        desc.value = item;
      }
    } else {
      descriptors.push({
        value: item
      });
    }
  }

  return descriptors.reduce((acc, desc) => {
    acc.push(desc.value);
    return acc;
  }, []);
}

function configIsApplicable({
  options
}, dirname, context) {
  return (options.test === undefined || configFieldIsApplicable(context, options.test, dirname)) && (options.include === undefined || configFieldIsApplicable(context, options.include, dirname)) && (options.exclude === undefined || !configFieldIsApplicable(context, options.exclude, dirname));
}

function configFieldIsApplicable(context, test, dirname) {
  const patterns = Array.isArray(test) ? test : [test];
  return matchesPatterns(context, patterns, dirname);
}

function shouldIgnore(context, ignore, only, dirname) {
  if (ignore && matchesPatterns(context, ignore, dirname)) {
    var _context$filename;

    const message = `No config is applied to "${(_context$filename = context.filename) != null ? _context$filename : "(unknown)"}" because it matches one of \`ignore: ${JSON.stringify(ignore)}\` from "${dirname}"`;
    debug(message);

    if (context.showConfig) {
      console.log(message);
    }

    return true;
  }

  if (only && !matchesPatterns(context, only, dirname)) {
    var _context$filename2;

    const message = `No config is applied to "${(_context$filename2 = context.filename) != null ? _context$filename2 : "(unknown)"}" because it fails to match one of \`only: ${JSON.stringify(only)}\` from "${dirname}"`;
    debug(message);

    if (context.showConfig) {
      console.log(message);
    }

    return true;
  }

  return false;
}

function matchesPatterns(context, patterns, dirname) {
  return patterns.some(pattern => matchPattern(pattern, dirname, context.filename, context));
}

function matchPattern(pattern, dirname, pathToTest, context) {
  if (typeof pattern === "function") {
    return !!pattern(pathToTest, {
      dirname,
      envName: context.envName,
      caller: context.caller
    });
  }

  if (typeof pathToTest !== "string") {
    throw new Error(`Configuration contains string/RegExp pattern, but no filename was passed to Babel`);
  }

  if (typeof pattern === "string") {
    pattern = (0, _patternToRegex.default)(pattern, dirname);
  }

  return pattern.test(pathToTest);
}

/***/ }),
/* 1049 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.validate = validate;
exports.checkNoUnwrappedItemOptionPairs = checkNoUnwrappedItemOptionPairs;
exports.assumptionsNames = void 0;

var _plugin = __webpack_require__(226);

var _removed = __webpack_require__(1050);

var _optionAssertions = __webpack_require__(1051);

const ROOT_VALIDATORS = {
  cwd: _optionAssertions.assertString,
  root: _optionAssertions.assertString,
  rootMode: _optionAssertions.assertRootMode,
  configFile: _optionAssertions.assertConfigFileSearch,
  caller: _optionAssertions.assertCallerMetadata,
  filename: _optionAssertions.assertString,
  filenameRelative: _optionAssertions.assertString,
  code: _optionAssertions.assertBoolean,
  ast: _optionAssertions.assertBoolean,
  cloneInputAst: _optionAssertions.assertBoolean,
  envName: _optionAssertions.assertString
};
const BABELRC_VALIDATORS = {
  babelrc: _optionAssertions.assertBoolean,
  babelrcRoots: _optionAssertions.assertBabelrcSearch
};
const NONPRESET_VALIDATORS = {
  extends: _optionAssertions.assertString,
  ignore: _optionAssertions.assertIgnoreList,
  only: _optionAssertions.assertIgnoreList,
  targets: _optionAssertions.assertTargets,
  browserslistConfigFile: _optionAssertions.assertConfigFileSearch,
  browserslistEnv: _optionAssertions.assertString
};
const COMMON_VALIDATORS = {
  inputSourceMap: _optionAssertions.assertInputSourceMap,
  presets: _optionAssertions.assertPluginList,
  plugins: _optionAssertions.assertPluginList,
  passPerPreset: _optionAssertions.assertBoolean,
  assumptions: _optionAssertions.assertAssumptions,
  env: assertEnvSet,
  overrides: assertOverridesList,
  test: _optionAssertions.assertConfigApplicableTest,
  include: _optionAssertions.assertConfigApplicableTest,
  exclude: _optionAssertions.assertConfigApplicableTest,
  retainLines: _optionAssertions.assertBoolean,
  comments: _optionAssertions.assertBoolean,
  shouldPrintComment: _optionAssertions.assertFunction,
  compact: _optionAssertions.assertCompact,
  minified: _optionAssertions.assertBoolean,
  auxiliaryCommentBefore: _optionAssertions.assertString,
  auxiliaryCommentAfter: _optionAssertions.assertString,
  sourceType: _optionAssertions.assertSourceType,
  wrapPluginVisitorMethod: _optionAssertions.assertFunction,
  highlightCode: _optionAssertions.assertBoolean,
  sourceMaps: _optionAssertions.assertSourceMaps,
  sourceMap: _optionAssertions.assertSourceMaps,
  sourceFileName: _optionAssertions.assertString,
  sourceRoot: _optionAssertions.assertString,
  parserOpts: _optionAssertions.assertObject,
  generatorOpts: _optionAssertions.assertObject
};
{
  Object.assign(COMMON_VALIDATORS, {
    getModuleId: _optionAssertions.assertFunction,
    moduleRoot: _optionAssertions.assertString,
    moduleIds: _optionAssertions.assertBoolean,
    moduleId: _optionAssertions.assertString
  });
}
const assumptionsNames = new Set(["arrayLikeIsIterable", "constantReexports", "constantSuper", "enumerableModuleMeta", "ignoreFunctionLength", "ignoreToPrimitiveHint", "iterableIsArray", "mutableTemplateObject", "noClassCalls", "noDocumentAll", "noNewArrows", "objectRestNoSymbols", "privateFieldsAsProperties", "pureGetters", "setClassMethods", "setComputedProperties", "setPublicClassFields", "setSpreadProperties", "skipForOfIteratorClosing", "superIsCallableConstructor"]);
exports.assumptionsNames = assumptionsNames;

function getSource(loc) {
  return loc.type === "root" ? loc.source : getSource(loc.parent);
}

function validate(type, opts) {
  return validateNested({
    type: "root",
    source: type
  }, opts);
}

function validateNested(loc, opts) {
  const type = getSource(loc);
  assertNoDuplicateSourcemap(opts);
  Object.keys(opts).forEach(key => {
    const optLoc = {
      type: "option",
      name: key,
      parent: loc
    };

    if (type === "preset" && NONPRESET_VALIDATORS[key]) {
      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in preset options`);
    }

    if (type !== "arguments" && ROOT_VALIDATORS[key]) {
      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options`);
    }

    if (type !== "arguments" && type !== "configfile" && BABELRC_VALIDATORS[key]) {
      if (type === "babelrcfile" || type === "extendsfile") {
        throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is not allowed in .babelrc or "extends"ed files, only in root programmatic options, ` + `or babel.config.js/config file options`);
      }

      throw new Error(`${(0, _optionAssertions.msg)(optLoc)} is only allowed in root programmatic options, or babel.config.js/config file options`);
    }

    const validator = COMMON_VALIDATORS[key] || NONPRESET_VALIDATORS[key] || BABELRC_VALIDATORS[key] || ROOT_VALIDATORS[key] || throwUnknownError;
    validator(optLoc, opts[key]);
  });
  return opts;
}

function throwUnknownError(loc) {
  const key = loc.name;

  if (_removed.default[key]) {
    const {
      message,
      version = 5
    } = _removed.default[key];
    throw new Error(`Using removed Babel ${version} option: ${(0, _optionAssertions.msg)(loc)} - ${message}`);
  } else {
    const unknownOptErr = new Error(`Unknown option: ${(0, _optionAssertions.msg)(loc)}. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.`);
    unknownOptErr.code = "BABEL_UNKNOWN_OPTION";
    throw unknownOptErr;
  }
}

function has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}

function assertNoDuplicateSourcemap(opts) {
  if (has(opts, "sourceMap") && has(opts, "sourceMaps")) {
    throw new Error(".sourceMap is an alias for .sourceMaps, cannot use both");
  }
}

function assertEnvSet(loc, value) {
  if (loc.parent.type === "env") {
    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside of another .env block`);
  }

  const parent = loc.parent;
  const obj = (0, _optionAssertions.assertObject)(loc, value);

  if (obj) {
    for (const envName of Object.keys(obj)) {
      const env = (0, _optionAssertions.assertObject)((0, _optionAssertions.access)(loc, envName), obj[envName]);
      if (!env) continue;
      const envLoc = {
        type: "env",
        name: envName,
        parent
      };
      validateNested(envLoc, env);
    }
  }

  return obj;
}

function assertOverridesList(loc, value) {
  if (loc.parent.type === "env") {
    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .env block`);
  }

  if (loc.parent.type === "overrides") {
    throw new Error(`${(0, _optionAssertions.msg)(loc)} is not allowed inside an .overrides block`);
  }

  const parent = loc.parent;
  const arr = (0, _optionAssertions.assertArray)(loc, value);

  if (arr) {
    for (const [index, item] of arr.entries()) {
      const objLoc = (0, _optionAssertions.access)(loc, index);
      const env = (0, _optionAssertions.assertObject)(objLoc, item);
      if (!env) throw new Error(`${(0, _optionAssertions.msg)(objLoc)} must be an object`);
      const overridesLoc = {
        type: "overrides",
        index,
        parent
      };
      validateNested(overridesLoc, env);
    }
  }

  return arr;
}

function checkNoUnwrappedItemOptionPairs(items, index, type, e) {
  if (index === 0) return;
  const lastItem = items[index - 1];
  const thisItem = items[index];

  if (lastItem.file && lastItem.options === undefined && typeof thisItem.value === "object") {
    e.message += `\n- Maybe you meant to use\n` + `"${type}": [\n  ["${lastItem.file.request}", ${JSON.stringify(thisItem.value, undefined, 2)}]\n]\n` + `To be a valid ${type}, its name and options should be wrapped in a pair of brackets`;
  }
}

/***/ }),
/* 1050 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;
var _default = {
  auxiliaryComment: {
    message: "Use `auxiliaryCommentBefore` or `auxiliaryCommentAfter`"
  },
  blacklist: {
    message: "Put the specific transforms you want in the `plugins` option"
  },
  breakConfig: {
    message: "This is not a necessary option in Babel 6"
  },
  experimental: {
    message: "Put the specific transforms you want in the `plugins` option"
  },
  externalHelpers: {
    message: "Use the `external-helpers` plugin instead. " + "Check out http://babeljs.io/docs/plugins/external-helpers/"
  },
  extra: {
    message: ""
  },
  jsxPragma: {
    message: "use the `pragma` option in the `react-jsx` plugin. " + "Check out http://babeljs.io/docs/plugins/transform-react-jsx/"
  },
  loose: {
    message: "Specify the `loose` option for the relevant plugin you are using " + "or use a preset that sets the option."
  },
  metadataUsedHelpers: {
    message: "Not required anymore as this is enabled by default"
  },
  modules: {
    message: "Use the corresponding module transform plugin in the `plugins` option. " + "Check out http://babeljs.io/docs/plugins/#modules"
  },
  nonStandard: {
    message: "Use the `react-jsx` and `flow-strip-types` plugins to support JSX and Flow. " + "Also check out the react preset http://babeljs.io/docs/plugins/preset-react/"
  },
  optional: {
    message: "Put the specific transforms you want in the `plugins` option"
  },
  sourceMapName: {
    message: "The `sourceMapName` option has been removed because it makes more sense for the " + "tooling that calls Babel to assign `map.file` themselves."
  },
  stage: {
    message: "Check out the corresponding stage-x presets http://babeljs.io/docs/plugins/#presets"
  },
  whitelist: {
    message: "Put the specific transforms you want in the `plugins` option"
  },
  resolveModuleSource: {
    version: 6,
    message: "Use `babel-plugin-module-resolver@3`'s 'resolvePath' options"
  },
  metadata: {
    version: 6,
    message: "Generated plugin metadata is always included in the output result"
  },
  sourceMapTarget: {
    version: 6,
    message: "The `sourceMapTarget` option has been removed because it makes more sense for the tooling " + "that calls Babel to assign `map.file` themselves."
  }
};
exports.default = _default;

/***/ }),
/* 1051 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.msg = msg;
exports.access = access;
exports.assertRootMode = assertRootMode;
exports.assertSourceMaps = assertSourceMaps;
exports.assertCompact = assertCompact;
exports.assertSourceType = assertSourceType;
exports.assertCallerMetadata = assertCallerMetadata;
exports.assertInputSourceMap = assertInputSourceMap;
exports.assertString = assertString;
exports.assertFunction = assertFunction;
exports.assertBoolean = assertBoolean;
exports.assertObject = assertObject;
exports.assertArray = assertArray;
exports.assertIgnoreList = assertIgnoreList;
exports.assertConfigApplicableTest = assertConfigApplicableTest;
exports.assertConfigFileSearch = assertConfigFileSearch;
exports.assertBabelrcSearch = assertBabelrcSearch;
exports.assertPluginList = assertPluginList;
exports.assertTargets = assertTargets;
exports.assertAssumptions = assertAssumptions;

function _helperCompilationTargets() {
  const data = __webpack_require__(230);

  _helperCompilationTargets = function () {
    return data;
  };

  return data;
}

var _options = __webpack_require__(1049);

function msg(loc) {
  switch (loc.type) {
    case "root":
      return ``;

    case "env":
      return `${msg(loc.parent)}.env["${loc.name}"]`;

    case "overrides":
      return `${msg(loc.parent)}.overrides[${loc.index}]`;

    case "option":
      return `${msg(loc.parent)}.${loc.name}`;

    case "access":
      return `${msg(loc.parent)}[${JSON.stringify(loc.name)}]`;

    default:
      throw new Error(`Assertion failure: Unknown type ${loc.type}`);
  }
}

function access(loc, name) {
  return {
    type: "access",
    name,
    parent: loc
  };
}

function assertRootMode(loc, value) {
  if (value !== undefined && value !== "root" && value !== "upward" && value !== "upward-optional") {
    throw new Error(`${msg(loc)} must be a "root", "upward", "upward-optional" or undefined`);
  }

  return value;
}

function assertSourceMaps(loc, value) {
  if (value !== undefined && typeof value !== "boolean" && value !== "inline" && value !== "both") {
    throw new Error(`${msg(loc)} must be a boolean, "inline", "both", or undefined`);
  }

  return value;
}

function assertCompact(loc, value) {
  if (value !== undefined && typeof value !== "boolean" && value !== "auto") {
    throw new Error(`${msg(loc)} must be a boolean, "auto", or undefined`);
  }

  return value;
}

function assertSourceType(loc, value) {
  if (value !== undefined && value !== "module" && value !== "script" && value !== "unambiguous") {
    throw new Error(`${msg(loc)} must be "module", "script", "unambiguous", or undefined`);
  }

  return value;
}

function assertCallerMetadata(loc, value) {
  const obj = assertObject(loc, value);

  if (obj) {
    if (typeof obj.name !== "string") {
      throw new Error(`${msg(loc)} set but does not contain "name" property string`);
    }

    for (const prop of Object.keys(obj)) {
      const propLoc = access(loc, prop);
      const value = obj[prop];

      if (value != null && typeof value !== "boolean" && typeof value !== "string" && typeof value !== "number") {
        throw new Error(`${msg(propLoc)} must be null, undefined, a boolean, a string, or a number.`);
      }
    }
  }

  return value;
}

function assertInputSourceMap(loc, value) {
  if (value !== undefined && typeof value !== "boolean" && (typeof value !== "object" || !value)) {
    throw new Error(`${msg(loc)} must be a boolean, object, or undefined`);
  }

  return value;
}

function assertString(loc, value) {
  if (value !== undefined && typeof value !== "string") {
    throw new Error(`${msg(loc)} must be a string, or undefined`);
  }

  return value;
}

function assertFunction(loc, value) {
  if (value !== undefined && typeof value !== "function") {
    throw new Error(`${msg(loc)} must be a function, or undefined`);
  }

  return value;
}

function assertBoolean(loc, value) {
  if (value !== undefined && typeof value !== "boolean") {
    throw new Error(`${msg(loc)} must be a boolean, or undefined`);
  }

  return value;
}

function assertObject(loc, value) {
  if (value !== undefined && (typeof value !== "object" || Array.isArray(value) || !value)) {
    throw new Error(`${msg(loc)} must be an object, or undefined`);
  }

  return value;
}

function assertArray(loc, value) {
  if (value != null && !Array.isArray(value)) {
    throw new Error(`${msg(loc)} must be an array, or undefined`);
  }

  return value;
}

function assertIgnoreList(loc, value) {
  const arr = assertArray(loc, value);

  if (arr) {
    arr.forEach((item, i) => assertIgnoreItem(access(loc, i), item));
  }

  return arr;
}

function assertIgnoreItem(loc, value) {
  if (typeof value !== "string" && typeof value !== "function" && !(value instanceof RegExp)) {
    throw new Error(`${msg(loc)} must be an array of string/Function/RegExp values, or undefined`);
  }

  return value;
}

function assertConfigApplicableTest(loc, value) {
  if (value === undefined) return value;

  if (Array.isArray(value)) {
    value.forEach((item, i) => {
      if (!checkValidTest(item)) {
        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);
      }
    });
  } else if (!checkValidTest(value)) {
    throw new Error(`${msg(loc)} must be a string/Function/RegExp, or an array of those`);
  }

  return value;
}

function checkValidTest(value) {
  return typeof value === "string" || typeof value === "function" || value instanceof RegExp;
}

function assertConfigFileSearch(loc, value) {
  if (value !== undefined && typeof value !== "boolean" && typeof value !== "string") {
    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string, ` + `got ${JSON.stringify(value)}`);
  }

  return value;
}

function assertBabelrcSearch(loc, value) {
  if (value === undefined || typeof value === "boolean") return value;

  if (Array.isArray(value)) {
    value.forEach((item, i) => {
      if (!checkValidTest(item)) {
        throw new Error(`${msg(access(loc, i))} must be a string/Function/RegExp.`);
      }
    });
  } else if (!checkValidTest(value)) {
    throw new Error(`${msg(loc)} must be a undefined, a boolean, a string/Function/RegExp ` + `or an array of those, got ${JSON.stringify(value)}`);
  }

  return value;
}

function assertPluginList(loc, value) {
  const arr = assertArray(loc, value);

  if (arr) {
    arr.forEach((item, i) => assertPluginItem(access(loc, i), item));
  }

  return arr;
}

function assertPluginItem(loc, value) {
  if (Array.isArray(value)) {
    if (value.length === 0) {
      throw new Error(`${msg(loc)} must include an object`);
    }

    if (value.length > 3) {
      throw new Error(`${msg(loc)} may only be a two-tuple or three-tuple`);
    }

    assertPluginTarget(access(loc, 0), value[0]);

    if (value.length > 1) {
      const opts = value[1];

      if (opts !== undefined && opts !== false && (typeof opts !== "object" || Array.isArray(opts) || opts === null)) {
        throw new Error(`${msg(access(loc, 1))} must be an object, false, or undefined`);
      }
    }

    if (value.length === 3) {
      const name = value[2];

      if (name !== undefined && typeof name !== "string") {
        throw new Error(`${msg(access(loc, 2))} must be a string, or undefined`);
      }
    }
  } else {
    assertPluginTarget(loc, value);
  }

  return value;
}

function assertPluginTarget(loc, value) {
  if ((typeof value !== "object" || !value) && typeof value !== "string" && typeof value !== "function") {
    throw new Error(`${msg(loc)} must be a string, object, function`);
  }

  return value;
}

function assertTargets(loc, value) {
  if ((0, _helperCompilationTargets().isBrowsersQueryValid)(value)) return value;

  if (typeof value !== "object" || !value || Array.isArray(value)) {
    throw new Error(`${msg(loc)} must be a string, an array of strings or an object`);
  }

  const browsersLoc = access(loc, "browsers");
  const esmodulesLoc = access(loc, "esmodules");
  assertBrowsersList(browsersLoc, value.browsers);
  assertBoolean(esmodulesLoc, value.esmodules);

  for (const key of Object.keys(value)) {
    const val = value[key];
    const subLoc = access(loc, key);
    if (key === "esmodules") assertBoolean(subLoc, val);else if (key === "browsers") assertBrowsersList(subLoc, val);else if (!Object.hasOwnProperty.call(_helperCompilationTargets().TargetNames, key)) {
      const validTargets = Object.keys(_helperCompilationTargets().TargetNames).join(", ");
      throw new Error(`${msg(subLoc)} is not a valid target. Supported targets are ${validTargets}`);
    } else assertBrowserVersion(subLoc, val);
  }

  return value;
}

function assertBrowsersList(loc, value) {
  if (value !== undefined && !(0, _helperCompilationTargets().isBrowsersQueryValid)(value)) {
    throw new Error(`${msg(loc)} must be undefined, a string or an array of strings`);
  }
}

function assertBrowserVersion(loc, value) {
  if (typeof value === "number" && Math.round(value) === value) return;
  if (typeof value === "string") return;
  throw new Error(`${msg(loc)} must be a string or an integer number`);
}

function assertAssumptions(loc, value) {
  if (value === undefined) return;

  if (typeof value !== "object" || value === null) {
    throw new Error(`${msg(loc)} must be an object or undefined.`);
  }

  let root = loc;

  do {
    root = root.parent;
  } while (root.type !== "root");

  const inPreset = root.source === "preset";

  for (const name of Object.keys(value)) {
    const subLoc = access(loc, name);

    if (!_options.assumptionsNames.has(name)) {
      throw new Error(`${msg(subLoc)} is not a supported assumption.`);
    }

    if (typeof value[name] !== "boolean") {
      throw new Error(`${msg(subLoc)} must be a boolean.`);
    }

    if (inPreset && value[name] === false) {
      throw new Error(`${msg(subLoc)} cannot be set to 'false' inside presets.`);
    }
  }

  return value;
}

/***/ }),
/* 1052 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ConfigPrinter = exports.ChainFormatter = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

const ChainFormatter = {
  Programmatic: 0,
  Config: 1
};
exports.ChainFormatter = ChainFormatter;
const Formatter = {
  title(type, callerName, filepath) {
    let title = "";

    if (type === ChainFormatter.Programmatic) {
      title = "programmatic options";

      if (callerName) {
        title += " from " + callerName;
      }
    } else {
      title = "config " + filepath;
    }

    return title;
  },

  loc(index, envName) {
    let loc = "";

    if (index != null) {
      loc += `.overrides[${index}]`;
    }

    if (envName != null) {
      loc += `.env["${envName}"]`;
    }

    return loc;
  },

  *optionsAndDescriptors(opt) {
    const content = Object.assign({}, opt.options);
    delete content.overrides;
    delete content.env;
    const pluginDescriptors = [...(yield* opt.plugins())];

    if (pluginDescriptors.length) {
      content.plugins = pluginDescriptors.map(d => descriptorToConfig(d));
    }

    const presetDescriptors = [...(yield* opt.presets())];

    if (presetDescriptors.length) {
      content.presets = [...presetDescriptors].map(d => descriptorToConfig(d));
    }

    return JSON.stringify(content, undefined, 2);
  }

};

function descriptorToConfig(d) {
  var _d$file;

  let name = (_d$file = d.file) == null ? void 0 : _d$file.request;

  if (name == null) {
    if (typeof d.value === "object") {
      name = d.value;
    } else if (typeof d.value === "function") {
      name = `[Function: ${d.value.toString().substr(0, 50)} ... ]`;
    }
  }

  if (name == null) {
    name = "[Unknown]";
  }

  if (d.options === undefined) {
    return name;
  } else if (d.name == null) {
    return [name, d.options];
  } else {
    return [name, d.options, d.name];
  }
}

class ConfigPrinter {
  constructor() {
    this._stack = [];
  }

  configure(enabled, type, {
    callerName,
    filepath
  }) {
    if (!enabled) return () => {};
    return (content, index, envName) => {
      this._stack.push({
        type,
        callerName,
        filepath,
        content,
        index,
        envName
      });
    };
  }

  static *format(config) {
    let title = Formatter.title(config.type, config.callerName, config.filepath);
    const loc = Formatter.loc(config.index, config.envName);
    if (loc) title += ` ${loc}`;
    const content = yield* Formatter.optionsAndDescriptors(config.content);
    return `${title}\n${content}`;
  }

  *output() {
    if (this._stack.length === 0) return "";
    const configs = yield* _gensync().all(this._stack.map(s => ConfigPrinter.format(s)));
    return configs.join("\n\n");
  }

}

exports.ConfigPrinter = ConfigPrinter;

/***/ }),
/* 1053 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.validatePluginObject = validatePluginObject;

var _optionAssertions = __webpack_require__(1051);

const VALIDATORS = {
  name: _optionAssertions.assertString,
  manipulateOptions: _optionAssertions.assertFunction,
  pre: _optionAssertions.assertFunction,
  post: _optionAssertions.assertFunction,
  inherits: _optionAssertions.assertFunction,
  visitor: assertVisitorMap,
  parserOverride: _optionAssertions.assertFunction,
  generatorOverride: _optionAssertions.assertFunction
};

function assertVisitorMap(loc, value) {
  const obj = (0, _optionAssertions.assertObject)(loc, value);

  if (obj) {
    Object.keys(obj).forEach(prop => assertVisitorHandler(prop, obj[prop]));

    if (obj.enter || obj.exit) {
      throw new Error(`${(0, _optionAssertions.msg)(loc)} cannot contain catch-all "enter" or "exit" handlers. Please target individual nodes.`);
    }
  }

  return obj;
}

function assertVisitorHandler(key, value) {
  if (value && typeof value === "object") {
    Object.keys(value).forEach(handler => {
      if (handler !== "enter" && handler !== "exit") {
        throw new Error(`.visitor["${key}"] may only have .enter and/or .exit handlers.`);
      }
    });
  } else if (typeof value !== "function") {
    throw new Error(`.visitor["${key}"] must be a function`);
  }

  return value;
}

function validatePluginObject(obj) {
  const rootPath = {
    type: "root",
    source: "plugin"
  };
  Object.keys(obj).forEach(key => {
    const validator = VALIDATORS[key];

    if (validator) {
      const optLoc = {
        type: "option",
        name: key,
        parent: rootPath
      };
      validator(optLoc, obj[key]);
    } else {
      const invalidPluginPropertyError = new Error(`.${key} is not a valid Plugin property`);
      invalidPluginPropertyError.code = "BABEL_UNKNOWN_PLUGIN_PROPERTY";
      throw invalidPluginPropertyError;
    }
  });
  return obj;
}

/***/ }),
/* 1054 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = loadPrivatePartialConfig;
exports.loadPartialConfig = void 0;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _plugin = __webpack_require__(226);

var _util = __webpack_require__(208);

var _item = __webpack_require__(227);

var _configChain = __webpack_require__(1048);

var _environment = __webpack_require__(223);

var _options = __webpack_require__(1049);

var _files = __webpack_require__(202);

var _resolveTargets = __webpack_require__(229);

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function resolveRootMode(rootDir, rootMode) {
  switch (rootMode) {
    case "root":
      return rootDir;

    case "upward-optional":
      {
        const upwardRootDir = (0, _files.findConfigUpwards)(rootDir);
        return upwardRootDir === null ? rootDir : upwardRootDir;
      }

    case "upward":
      {
        const upwardRootDir = (0, _files.findConfigUpwards)(rootDir);
        if (upwardRootDir !== null) return upwardRootDir;
        throw Object.assign(new Error(`Babel was run with rootMode:"upward" but a root could not ` + `be found when searching upward from "${rootDir}".\n` + `One of the following config files must be in the directory tree: ` + `"${_files.ROOT_CONFIG_FILENAMES.join(", ")}".`), {
          code: "BABEL_ROOT_NOT_FOUND",
          dirname: rootDir
        });
      }

    default:
      throw new Error(`Assertion failure - unknown rootMode value.`);
  }
}

function* loadPrivatePartialConfig(inputOpts) {
  if (inputOpts != null && (typeof inputOpts !== "object" || Array.isArray(inputOpts))) {
    throw new Error("Babel options must be an object, null, or undefined");
  }

  const args = inputOpts ? (0, _options.validate)("arguments", inputOpts) : {};
  const {
    envName = (0, _environment.getEnv)(),
    cwd = ".",
    root: rootDir = ".",
    rootMode = "root",
    caller,
    cloneInputAst = true
  } = args;

  const absoluteCwd = _path().resolve(cwd);

  const absoluteRootDir = resolveRootMode(_path().resolve(absoluteCwd, rootDir), rootMode);
  const filename = typeof args.filename === "string" ? _path().resolve(cwd, args.filename) : undefined;
  const showConfigPath = yield* (0, _files.resolveShowConfigPath)(absoluteCwd);
  const context = {
    filename,
    cwd: absoluteCwd,
    root: absoluteRootDir,
    envName,
    caller,
    showConfig: showConfigPath === filename
  };
  const configChain = yield* (0, _configChain.buildRootChain)(args, context);
  if (!configChain) return null;
  const merged = {
    assumptions: {}
  };
  configChain.options.forEach(opts => {
    (0, _util.mergeOptions)(merged, opts);
  });
  const options = Object.assign({}, merged, {
    targets: (0, _resolveTargets.resolveTargets)(merged, absoluteRootDir),
    cloneInputAst,
    babelrc: false,
    configFile: false,
    browserslistConfigFile: false,
    passPerPreset: false,
    envName: context.envName,
    cwd: context.cwd,
    root: context.root,
    rootMode: "root",
    filename: typeof context.filename === "string" ? context.filename : undefined,
    plugins: configChain.plugins.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor)),
    presets: configChain.presets.map(descriptor => (0, _item.createItemFromDescriptor)(descriptor))
  });
  return {
    options,
    context,
    fileHandling: configChain.fileHandling,
    ignore: configChain.ignore,
    babelrc: configChain.babelrc,
    config: configChain.config,
    files: configChain.files
  };
}

const loadPartialConfig = _gensync()(function* (opts) {
  let showIgnoredFiles = false;

  if (typeof opts === "object" && opts !== null && !Array.isArray(opts)) {
    var _opts = opts;
    ({
      showIgnoredFiles
    } = _opts);
    opts = _objectWithoutPropertiesLoose(_opts, ["showIgnoredFiles"]);
    _opts;
  }

  const result = yield* loadPrivatePartialConfig(opts);
  if (!result) return null;
  const {
    options,
    babelrc,
    ignore,
    config,
    fileHandling,
    files
  } = result;

  if (fileHandling === "ignored" && !showIgnoredFiles) {
    return null;
  }

  (options.plugins || []).forEach(item => {
    if (item.value instanceof _plugin.default) {
      throw new Error("Passing cached plugin instances is not supported in " + "babel.loadPartialConfig()");
    }
  });
  return new PartialConfig(options, babelrc ? babelrc.filepath : undefined, ignore ? ignore.filepath : undefined, config ? config.filepath : undefined, fileHandling, files);
});

exports.loadPartialConfig = loadPartialConfig;

class PartialConfig {
  constructor(options, babelrc, ignore, config, fileHandling, files) {
    this.options = void 0;
    this.babelrc = void 0;
    this.babelignore = void 0;
    this.config = void 0;
    this.fileHandling = void 0;
    this.files = void 0;
    this.options = options;
    this.babelignore = ignore;
    this.babelrc = babelrc;
    this.config = config;
    this.fileHandling = fileHandling;
    this.files = files;
    Object.freeze(this);
  }

  hasFilesystemConfig() {
    return this.babelrc !== undefined || this.config !== undefined;
  }

}

Object.freeze(PartialConfig.prototype);

/***/ }),
/* 1055 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.transformAsync = exports.transformSync = exports.transform = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _config = __webpack_require__(224);

var _transformation = __webpack_require__(1056);

const transformRunner = _gensync()(function* transform(code, opts) {
  const config = yield* (0, _config.default)(opts);
  if (config === null) return null;
  return yield* (0, _transformation.run)(config, code);
});

const transform = function transform(code, opts, callback) {
  if (typeof opts === "function") {
    callback = opts;
    opts = undefined;
  }

  if (callback === undefined) return transformRunner.sync(code, opts);
  transformRunner.errback(code, opts, callback);
};

exports.transform = transform;
const transformSync = transformRunner.sync;
exports.transformSync = transformSync;
const transformAsync = transformRunner.async;
exports.transformAsync = transformAsync;

/***/ }),
/* 1056 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.run = run;

function _traverse() {
  const data = __webpack_require__(7);

  _traverse = function () {
    return data;
  };

  return data;
}

var _pluginPass = __webpack_require__(1057);

var _blockHoistPlugin = __webpack_require__(1058);

var _normalizeOpts = __webpack_require__(1059);

var _normalizeFile = __webpack_require__(1060);

var _generate = __webpack_require__(1069);

function* run(config, code, ast) {
  const file = yield* (0, _normalizeFile.default)(config.passes, (0, _normalizeOpts.default)(config), code, ast);
  const opts = file.opts;

  try {
    yield* transformFile(file, config.passes);
  } catch (e) {
    var _opts$filename;

    e.message = `${(_opts$filename = opts.filename) != null ? _opts$filename : "unknown"}: ${e.message}`;

    if (!e.code) {
      e.code = "BABEL_TRANSFORM_ERROR";
    }

    throw e;
  }

  let outputCode, outputMap;

  try {
    if (opts.code !== false) {
      ({
        outputCode,
        outputMap
      } = (0, _generate.default)(config.passes, file));
    }
  } catch (e) {
    var _opts$filename2;

    e.message = `${(_opts$filename2 = opts.filename) != null ? _opts$filename2 : "unknown"}: ${e.message}`;

    if (!e.code) {
      e.code = "BABEL_GENERATE_ERROR";
    }

    throw e;
  }

  return {
    metadata: file.metadata,
    options: opts,
    ast: opts.ast === true ? file.ast : null,
    code: outputCode === undefined ? null : outputCode,
    map: outputMap === undefined ? null : outputMap,
    sourceType: file.ast.program.sourceType
  };
}

function* transformFile(file, pluginPasses) {
  for (const pluginPairs of pluginPasses) {
    const passPairs = [];
    const passes = [];
    const visitors = [];

    for (const plugin of pluginPairs.concat([(0, _blockHoistPlugin.default)()])) {
      const pass = new _pluginPass.default(file, plugin.key, plugin.options);
      passPairs.push([plugin, pass]);
      passes.push(pass);
      visitors.push(plugin.visitor);
    }

    for (const [plugin, pass] of passPairs) {
      const fn = plugin.pre;

      if (fn) {
        const result = fn.call(pass, file);
        yield* [];

        if (isThenable(result)) {
          throw new Error(`You appear to be using an plugin with an async .pre, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);
        }
      }
    }

    const visitor = _traverse().default.visitors.merge(visitors, passes, file.opts.wrapPluginVisitorMethod);

    (0, _traverse().default)(file.ast, visitor, file.scope);

    for (const [plugin, pass] of passPairs) {
      const fn = plugin.post;

      if (fn) {
        const result = fn.call(pass, file);
        yield* [];

        if (isThenable(result)) {
          throw new Error(`You appear to be using an plugin with an async .post, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);
        }
      }
    }
  }
}

function isThenable(val) {
  return !!val && (typeof val === "object" || typeof val === "function") && !!val.then && typeof val.then === "function";
}

/***/ }),
/* 1057 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = void 0;

class PluginPass {
  constructor(file, key, options) {
    this._map = new Map();
    this.key = void 0;
    this.file = void 0;
    this.opts = void 0;
    this.cwd = void 0;
    this.filename = void 0;
    this.key = key;
    this.file = file;
    this.opts = options || {};
    this.cwd = file.opts.cwd;
    this.filename = file.opts.filename;
  }

  set(key, val) {
    this._map.set(key, val);
  }

  get(key) {
    return this._map.get(key);
  }

  availableHelper(name, versionRange) {
    return this.file.availableHelper(name, versionRange);
  }

  addHelper(name) {
    return this.file.addHelper(name);
  }

  addImport() {
    return this.file.addImport();
  }

  buildCodeFrameError(node, msg, _Error) {
    return this.file.buildCodeFrameError(node, msg, _Error);
  }

}

exports.default = PluginPass;
{
  PluginPass.prototype.getModuleName = function getModuleName() {
    return this.file.getModuleName();
  };
}

/***/ }),
/* 1058 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = loadBlockHoistPlugin;

function _traverse() {
  const data = __webpack_require__(7);

  _traverse = function () {
    return data;
  };

  return data;
}

var _plugin = __webpack_require__(226);

let LOADED_PLUGIN;

function loadBlockHoistPlugin() {
  if (!LOADED_PLUGIN) {
    LOADED_PLUGIN = new _plugin.default(Object.assign({}, blockHoistPlugin, {
      visitor: _traverse().default.explode(blockHoistPlugin.visitor)
    }), {});
  }

  return LOADED_PLUGIN;
}

function priority(bodyNode) {
  const priority = bodyNode == null ? void 0 : bodyNode._blockHoist;
  if (priority == null) return 1;
  if (priority === true) return 2;
  return priority;
}

function stableSort(body) {
  const buckets = Object.create(null);

  for (let i = 0; i < body.length; i++) {
    const n = body[i];
    const p = priority(n);
    const bucket = buckets[p] || (buckets[p] = []);
    bucket.push(n);
  }

  const keys = Object.keys(buckets).map(k => +k).sort((a, b) => b - a);
  let index = 0;

  for (const key of keys) {
    const bucket = buckets[key];

    for (const n of bucket) {
      body[index++] = n;
    }
  }

  return body;
}

const blockHoistPlugin = {
  name: "internal.blockHoist",
  visitor: {
    Block: {
      exit({
        node
      }) {
        const {
          body
        } = node;
        let max = Math.pow(2, 30) - 1;
        let hasChange = false;

        for (let i = 0; i < body.length; i++) {
          const n = body[i];
          const p = priority(n);

          if (p > max) {
            hasChange = true;
            break;
          }

          max = p;
        }

        if (!hasChange) return;
        node.body = stableSort(body.slice());
      }

    }
  }
};

/***/ }),
/* 1059 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = normalizeOptions;

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function normalizeOptions(config) {
  const {
    filename,
    cwd,
    filenameRelative = typeof filename === "string" ? _path().relative(cwd, filename) : "unknown",
    sourceType = "module",
    inputSourceMap,
    sourceMaps = !!inputSourceMap,
    sourceRoot = config.options.moduleRoot,
    sourceFileName = _path().basename(filenameRelative),
    comments = true,
    compact = "auto"
  } = config.options;
  const opts = config.options;
  const options = Object.assign({}, opts, {
    parserOpts: Object.assign({
      sourceType: _path().extname(filenameRelative) === ".mjs" ? "module" : sourceType,
      sourceFileName: filename,
      plugins: []
    }, opts.parserOpts),
    generatorOpts: Object.assign({
      filename,
      auxiliaryCommentBefore: opts.auxiliaryCommentBefore,
      auxiliaryCommentAfter: opts.auxiliaryCommentAfter,
      retainLines: opts.retainLines,
      comments,
      shouldPrintComment: opts.shouldPrintComment,
      compact,
      minified: opts.minified,
      sourceMaps,
      sourceRoot,
      sourceFileName
    }, opts.generatorOpts)
  });

  for (const plugins of config.passes) {
    for (const plugin of plugins) {
      if (plugin.manipulateOptions) {
        plugin.manipulateOptions(options, options.parserOpts);
      }
    }
  }

  return options;
}

/***/ }),
/* 1060 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = normalizeFile;

function _fs() {
  const data = __webpack_require__(210);

  _fs = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = __webpack_require__(198);

  _path = function () {
    return data;
  };

  return data;
}

function _debug() {
  const data = __webpack_require__(95);

  _debug = function () {
    return data;
  };

  return data;
}

function t() {
  const data = __webpack_require__(11);

  t = function () {
    return data;
  };

  return data;
}

function _convertSourceMap() {
  const data = __webpack_require__(1061);

  _convertSourceMap = function () {
    return data;
  };

  return data;
}

var _file = __webpack_require__(5);

var _parser = __webpack_require__(1064);

var _cloneDeep = __webpack_require__(1066);

const debug = _debug()("babel:transform:file");

const LARGE_INPUT_SOURCEMAP_THRESHOLD = 1000000;

function* normalizeFile(pluginPasses, options, code, ast) {
  code = `${code || ""}`;

  if (ast) {
    if (ast.type === "Program") {
      ast = t().file(ast, [], []);
    } else if (ast.type !== "File") {
      throw new Error("AST root must be a Program or File node");
    }

    if (options.cloneInputAst) {
      ast = (0, _cloneDeep.default)(ast);
    }
  } else {
    ast = yield* (0, _parser.default)(pluginPasses, options, code);
  }

  let inputMap = null;

  if (options.inputSourceMap !== false) {
    if (typeof options.inputSourceMap === "object") {
      inputMap = _convertSourceMap().fromObject(options.inputSourceMap);
    }

    if (!inputMap) {
      const lastComment = extractComments(INLINE_SOURCEMAP_REGEX, ast);

      if (lastComment) {
        try {
          inputMap = _convertSourceMap().fromComment(lastComment);
        } catch (err) {
          debug("discarding unknown inline input sourcemap", err);
        }
      }
    }

    if (!inputMap) {
      const lastComment = extractComments(EXTERNAL_SOURCEMAP_REGEX, ast);

      if (typeof options.filename === "string" && lastComment) {
        try {
          const match = EXTERNAL_SOURCEMAP_REGEX.exec(lastComment);

          const inputMapContent = _fs().readFileSync(_path().resolve(_path().dirname(options.filename), match[1]));

          if (inputMapContent.length > LARGE_INPUT_SOURCEMAP_THRESHOLD) {
            debug("skip merging input map > 1 MB");
          } else {
            inputMap = _convertSourceMap().fromJSON(inputMapContent);
          }
        } catch (err) {
          debug("discarding unknown file input sourcemap", err);
        }
      } else if (lastComment) {
        debug("discarding un-loadable file input sourcemap");
      }
    }
  }

  return new _file.default(options, {
    code,
    ast,
    inputMap
  });
}

const INLINE_SOURCEMAP_REGEX = /^[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/;
const EXTERNAL_SOURCEMAP_REGEX = /^[@#][ \t]+sourceMappingURL=([^\s'"`]+)[ \t]*$/;

function extractCommentsFromList(regex, comments, lastComment) {
  if (comments) {
    comments = comments.filter(({
      value
    }) => {
      if (regex.test(value)) {
        lastComment = value;
        return false;
      }

      return true;
    });
  }

  return [comments, lastComment];
}

function extractComments(regex, ast) {
  let lastComment = null;
  t().traverseFast(ast, node => {
    [node.leadingComments, lastComment] = extractCommentsFromList(regex, node.leadingComments, lastComment);
    [node.innerComments, lastComment] = extractCommentsFromList(regex, node.innerComments, lastComment);
    [node.trailingComments, lastComment] = extractCommentsFromList(regex, node.trailingComments, lastComment);
  });
  return lastComment;
}

/***/ }),
/* 1061 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var fs = __webpack_require__(210);
var path = __webpack_require__(198);
var SafeBuffer = __webpack_require__(1062);

Object.defineProperty(exports, "commentRegex", ({
  get: function getCommentRegex () {
    return /^\s*\/(?:\/|\*)[@#]\s+sourceMappingURL=data:(?:application|text)\/json;(?:charset[:=]\S+?;)?base64,(?:.*)$/mg;
  }
}));

Object.defineProperty(exports, "mapFileCommentRegex", ({
  get: function getMapFileCommentRegex () {
    // Matches sourceMappingURL in either // or /* comment styles.
    return /(?:\/\/[@#][ \t]+sourceMappingURL=([^\s'"`]+?)[ \t]*$)|(?:\/\*[@#][ \t]+sourceMappingURL=([^\*]+?)[ \t]*(?:\*\/){1}[ \t]*$)/mg;
  }
}));


function decodeBase64(base64) {
  return SafeBuffer.Buffer.from(base64, 'base64').toString();
}

function stripComment(sm) {
  return sm.split(',').pop();
}

function readFromFileMap(sm, dir) {
  // NOTE: this will only work on the server since it attempts to read the map file

  var r = exports.mapFileCommentRegex.exec(sm);

  // for some odd reason //# .. captures in 1 and /* .. */ in 2
  var filename = r[1] || r[2];
  var filepath = path.resolve(dir, filename);

  try {
    return fs.readFileSync(filepath, 'utf8');
  } catch (e) {
    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\n' + e);
  }
}

function Converter (sm, opts) {
  opts = opts || {};

  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);
  if (opts.hasComment) sm = stripComment(sm);
  if (opts.isEncoded) sm = decodeBase64(sm);
  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);

  this.sourcemap = sm;
}

Converter.prototype.toJSON = function (space) {
  return JSON.stringify(this.sourcemap, null, space);
};

Converter.prototype.toBase64 = function () {
  var json = this.toJSON();
  return SafeBuffer.Buffer.from(json, 'utf8').toString('base64');
};

Converter.prototype.toComment = function (options) {
  var base64 = this.toBase64();
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;
};

// returns copy instead of original
Converter.prototype.toObject = function () {
  return JSON.parse(this.toJSON());
};

Converter.prototype.addProperty = function (key, value) {
  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property "' + key + '" already exists on the sourcemap, use set property instead');
  return this.setProperty(key, value);
};

Converter.prototype.setProperty = function (key, value) {
  this.sourcemap[key] = value;
  return this;
};

Converter.prototype.getProperty = function (key) {
  return this.sourcemap[key];
};

exports.fromObject = function (obj) {
  return new Converter(obj);
};

exports.fromJSON = function (json) {
  return new Converter(json, { isJSON: true });
};

exports.fromBase64 = function (base64) {
  return new Converter(base64, { isEncoded: true });
};

exports.fromComment = function (comment) {
  comment = comment
    .replace(/^\/\*/g, '//')
    .replace(/\*\/$/g, '');

  return new Converter(comment, { isEncoded: true, hasComment: true });
};

exports.fromMapFileComment = function (comment, dir) {
  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });
};

// Finds last sourcemap comment in file or returns null if none was found
exports.fromSource = function (content) {
  var m = content.match(exports.commentRegex);
  return m ? exports.fromComment(m.pop()) : null;
};

// Finds last sourcemap comment in file or returns null if none was found
exports.fromMapFileSource = function (content, dir) {
  var m = content.match(exports.mapFileCommentRegex);
  return m ? exports.fromMapFileComment(m.pop(), dir) : null;
};

exports.removeComments = function (src) {
  return src.replace(exports.commentRegex, '');
};

exports.removeMapFileComments = function (src) {
  return src.replace(exports.mapFileCommentRegex, '');
};

exports.generateMapFileComment = function (file, options) {
  var data = 'sourceMappingURL=' + file;
  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;
};


/***/ }),
/* 1062 */
/***/ ((module, exports, __webpack_require__) => {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(1063)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 1063 */
/***/ ((module) => {

"use strict";
module.exports = require("buffer");;

/***/ }),
/* 1064 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = parser;

function _parser() {
  const data = __webpack_require__(3);

  _parser = function () {
    return data;
  };

  return data;
}

function _codeFrame() {
  const data = __webpack_require__(148);

  _codeFrame = function () {
    return data;
  };

  return data;
}

var _missingPluginHelper = __webpack_require__(1065);

function* parser(pluginPasses, {
  parserOpts,
  highlightCode = true,
  filename = "unknown"
}, code) {
  try {
    const results = [];

    for (const plugins of pluginPasses) {
      for (const plugin of plugins) {
        const {
          parserOverride
        } = plugin;

        if (parserOverride) {
          const ast = parserOverride(code, parserOpts, _parser().parse);
          if (ast !== undefined) results.push(ast);
        }
      }
    }

    if (results.length === 0) {
      return (0, _parser().parse)(code, parserOpts);
    } else if (results.length === 1) {
      yield* [];

      if (typeof results[0].then === "function") {
        throw new Error(`You appear to be using an async parser plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);
      }

      return results[0];
    }

    throw new Error("More than one plugin attempted to override parsing.");
  } catch (err) {
    if (err.code === "BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED") {
      err.message += "\nConsider renaming the file to '.mjs', or setting sourceType:module " + "or sourceType:unambiguous in your Babel config for this file.";
    }

    const {
      loc,
      missingPlugin
    } = err;

    if (loc) {
      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {
        start: {
          line: loc.line,
          column: loc.column + 1
        }
      }, {
        highlightCode
      });

      if (missingPlugin) {
        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);
      } else {
        err.message = `${filename}: ${err.message}\n\n` + codeFrame;
      }

      err.code = "BABEL_PARSE_ERROR";
    }

    throw err;
  }
}

/***/ }),
/* 1065 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = generateMissingPluginMessage;
const pluginNameMap = {
  asyncDoExpressions: {
    syntax: {
      name: "@babel/plugin-syntax-async-do-expressions",
      url: "https://git.io/JYer8"
    }
  },
  classProperties: {
    syntax: {
      name: "@babel/plugin-syntax-class-properties",
      url: "https://git.io/vb4yQ"
    },
    transform: {
      name: "@babel/plugin-proposal-class-properties",
      url: "https://git.io/vb4SL"
    }
  },
  classPrivateProperties: {
    syntax: {
      name: "@babel/plugin-syntax-class-properties",
      url: "https://git.io/vb4yQ"
    },
    transform: {
      name: "@babel/plugin-proposal-class-properties",
      url: "https://git.io/vb4SL"
    }
  },
  classPrivateMethods: {
    syntax: {
      name: "@babel/plugin-syntax-class-properties",
      url: "https://git.io/vb4yQ"
    },
    transform: {
      name: "@babel/plugin-proposal-private-methods",
      url: "https://git.io/JvpRG"
    }
  },
  classStaticBlock: {
    syntax: {
      name: "@babel/plugin-syntax-class-static-block",
      url: "https://git.io/JTLB6"
    },
    transform: {
      name: "@babel/plugin-proposal-class-static-block",
      url: "https://git.io/JTLBP"
    }
  },
  decimal: {
    syntax: {
      name: "@babel/plugin-syntax-decimal",
      url: "https://git.io/JfKOH"
    }
  },
  decorators: {
    syntax: {
      name: "@babel/plugin-syntax-decorators",
      url: "https://git.io/vb4y9"
    },
    transform: {
      name: "@babel/plugin-proposal-decorators",
      url: "https://git.io/vb4ST"
    }
  },
  doExpressions: {
    syntax: {
      name: "@babel/plugin-syntax-do-expressions",
      url: "https://git.io/vb4yh"
    },
    transform: {
      name: "@babel/plugin-proposal-do-expressions",
      url: "https://git.io/vb4S3"
    }
  },
  dynamicImport: {
    syntax: {
      name: "@babel/plugin-syntax-dynamic-import",
      url: "https://git.io/vb4Sv"
    }
  },
  exportDefaultFrom: {
    syntax: {
      name: "@babel/plugin-syntax-export-default-from",
      url: "https://git.io/vb4SO"
    },
    transform: {
      name: "@babel/plugin-proposal-export-default-from",
      url: "https://git.io/vb4yH"
    }
  },
  exportNamespaceFrom: {
    syntax: {
      name: "@babel/plugin-syntax-export-namespace-from",
      url: "https://git.io/vb4Sf"
    },
    transform: {
      name: "@babel/plugin-proposal-export-namespace-from",
      url: "https://git.io/vb4SG"
    }
  },
  flow: {
    syntax: {
      name: "@babel/plugin-syntax-flow",
      url: "https://git.io/vb4yb"
    },
    transform: {
      name: "@babel/preset-flow",
      url: "https://git.io/JfeDn"
    }
  },
  functionBind: {
    syntax: {
      name: "@babel/plugin-syntax-function-bind",
      url: "https://git.io/vb4y7"
    },
    transform: {
      name: "@babel/plugin-proposal-function-bind",
      url: "https://git.io/vb4St"
    }
  },
  functionSent: {
    syntax: {
      name: "@babel/plugin-syntax-function-sent",
      url: "https://git.io/vb4yN"
    },
    transform: {
      name: "@babel/plugin-proposal-function-sent",
      url: "https://git.io/vb4SZ"
    }
  },
  importMeta: {
    syntax: {
      name: "@babel/plugin-syntax-import-meta",
      url: "https://git.io/vbKK6"
    }
  },
  jsx: {
    syntax: {
      name: "@babel/plugin-syntax-jsx",
      url: "https://git.io/vb4yA"
    },
    transform: {
      name: "@babel/preset-react",
      url: "https://git.io/JfeDR"
    }
  },
  importAssertions: {
    syntax: {
      name: "@babel/plugin-syntax-import-assertions",
      url: "https://git.io/JUbkv"
    }
  },
  moduleStringNames: {
    syntax: {
      name: "@babel/plugin-syntax-module-string-names",
      url: "https://git.io/JTL8G"
    }
  },
  numericSeparator: {
    syntax: {
      name: "@babel/plugin-syntax-numeric-separator",
      url: "https://git.io/vb4Sq"
    },
    transform: {
      name: "@babel/plugin-proposal-numeric-separator",
      url: "https://git.io/vb4yS"
    }
  },
  optionalChaining: {
    syntax: {
      name: "@babel/plugin-syntax-optional-chaining",
      url: "https://git.io/vb4Sc"
    },
    transform: {
      name: "@babel/plugin-proposal-optional-chaining",
      url: "https://git.io/vb4Sk"
    }
  },
  pipelineOperator: {
    syntax: {
      name: "@babel/plugin-syntax-pipeline-operator",
      url: "https://git.io/vb4yj"
    },
    transform: {
      name: "@babel/plugin-proposal-pipeline-operator",
      url: "https://git.io/vb4SU"
    }
  },
  privateIn: {
    syntax: {
      name: "@babel/plugin-syntax-private-property-in-object",
      url: "https://git.io/JfK3q"
    },
    transform: {
      name: "@babel/plugin-proposal-private-property-in-object",
      url: "https://git.io/JfK3O"
    }
  },
  recordAndTuple: {
    syntax: {
      name: "@babel/plugin-syntax-record-and-tuple",
      url: "https://git.io/JvKp3"
    }
  },
  throwExpressions: {
    syntax: {
      name: "@babel/plugin-syntax-throw-expressions",
      url: "https://git.io/vb4SJ"
    },
    transform: {
      name: "@babel/plugin-proposal-throw-expressions",
      url: "https://git.io/vb4yF"
    }
  },
  typescript: {
    syntax: {
      name: "@babel/plugin-syntax-typescript",
      url: "https://git.io/vb4SC"
    },
    transform: {
      name: "@babel/preset-typescript",
      url: "https://git.io/JfeDz"
    }
  },
  asyncGenerators: {
    syntax: {
      name: "@babel/plugin-syntax-async-generators",
      url: "https://git.io/vb4SY"
    },
    transform: {
      name: "@babel/plugin-proposal-async-generator-functions",
      url: "https://git.io/vb4yp"
    }
  },
  logicalAssignment: {
    syntax: {
      name: "@babel/plugin-syntax-logical-assignment-operators",
      url: "https://git.io/vAlBp"
    },
    transform: {
      name: "@babel/plugin-proposal-logical-assignment-operators",
      url: "https://git.io/vAlRe"
    }
  },
  nullishCoalescingOperator: {
    syntax: {
      name: "@babel/plugin-syntax-nullish-coalescing-operator",
      url: "https://git.io/vb4yx"
    },
    transform: {
      name: "@babel/plugin-proposal-nullish-coalescing-operator",
      url: "https://git.io/vb4Se"
    }
  },
  objectRestSpread: {
    syntax: {
      name: "@babel/plugin-syntax-object-rest-spread",
      url: "https://git.io/vb4y5"
    },
    transform: {
      name: "@babel/plugin-proposal-object-rest-spread",
      url: "https://git.io/vb4Ss"
    }
  },
  optionalCatchBinding: {
    syntax: {
      name: "@babel/plugin-syntax-optional-catch-binding",
      url: "https://git.io/vb4Sn"
    },
    transform: {
      name: "@babel/plugin-proposal-optional-catch-binding",
      url: "https://git.io/vb4SI"
    }
  }
};
pluginNameMap.privateIn.syntax = pluginNameMap.privateIn.transform;

const getNameURLCombination = ({
  name,
  url
}) => `${name} (${url})`;

function generateMissingPluginMessage(missingPluginName, loc, codeFrame) {
  let helpMessage = `Support for the experimental syntax '${missingPluginName}' isn't currently enabled ` + `(${loc.line}:${loc.column + 1}):\n\n` + codeFrame;
  const pluginInfo = pluginNameMap[missingPluginName];

  if (pluginInfo) {
    const {
      syntax: syntaxPlugin,
      transform: transformPlugin
    } = pluginInfo;

    if (syntaxPlugin) {
      const syntaxPluginInfo = getNameURLCombination(syntaxPlugin);

      if (transformPlugin) {
        const transformPluginInfo = getNameURLCombination(transformPlugin);
        const sectionType = transformPlugin.name.startsWith("@babel/plugin") ? "plugins" : "presets";
        helpMessage += `\n\nAdd ${transformPluginInfo} to the '${sectionType}' section of your Babel config to enable transformation.
If you want to leave it as-is, add ${syntaxPluginInfo} to the 'plugins' section to enable parsing.`;
      } else {
        helpMessage += `\n\nAdd ${syntaxPluginInfo} to the 'plugins' section of your Babel config ` + `to enable parsing.`;
      }
    }
  }

  return helpMessage;
}

/***/ }),
/* 1066 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;

function _v() {
  const data = __webpack_require__(1067);

  _v = function () {
    return data;
  };

  return data;
}

var _cloneDeepBrowser = __webpack_require__(1068);

function _default(value) {
  if (_v().deserialize && _v().serialize) {
    return _v().deserialize(_v().serialize(value));
  }

  return (0, _cloneDeepBrowser.default)(value);
}

/***/ }),
/* 1067 */
/***/ ((module) => {

"use strict";
module.exports = require("v8");;

/***/ }),
/* 1068 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = _default;
const serialized = "$$ babel internal serialized type" + Math.random();

function serialize(key, value) {
  if (typeof value !== "bigint") return value;
  return {
    [serialized]: "BigInt",
    value: value.toString()
  };
}

function revive(key, value) {
  if (!value || typeof value !== "object") return value;
  if (value[serialized] !== "BigInt") return value;
  return BigInt(value.value);
}

function _default(value) {
  return JSON.parse(JSON.stringify(value, serialize), revive);
}

/***/ }),
/* 1069 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = generateCode;

function _convertSourceMap() {
  const data = __webpack_require__(1061);

  _convertSourceMap = function () {
    return data;
  };

  return data;
}

function _generator() {
  const data = __webpack_require__(112);

  _generator = function () {
    return data;
  };

  return data;
}

var _mergeMap = __webpack_require__(1070);

function generateCode(pluginPasses, file) {
  const {
    opts,
    ast,
    code,
    inputMap
  } = file;
  const results = [];

  for (const plugins of pluginPasses) {
    for (const plugin of plugins) {
      const {
        generatorOverride
      } = plugin;

      if (generatorOverride) {
        const result = generatorOverride(ast, opts.generatorOpts, code, _generator().default);
        if (result !== undefined) results.push(result);
      }
    }
  }

  let result;

  if (results.length === 0) {
    result = (0, _generator().default)(ast, opts.generatorOpts, code);
  } else if (results.length === 1) {
    result = results[0];

    if (typeof result.then === "function") {
      throw new Error(`You appear to be using an async codegen plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, ` + `you may need to upgrade your @babel/core version.`);
    }
  } else {
    throw new Error("More than one plugin attempted to override codegen.");
  }

  let {
    code: outputCode,
    map: outputMap
  } = result;

  if (outputMap && inputMap) {
    outputMap = (0, _mergeMap.default)(inputMap.toObject(), outputMap);
  }

  if (opts.sourceMaps === "inline" || opts.sourceMaps === "both") {
    outputCode += "\n" + _convertSourceMap().fromObject(outputMap).toComment();
  }

  if (opts.sourceMaps === "inline") {
    outputMap = null;
  }

  return {
    outputCode,
    outputMap
  };
}

/***/ }),
/* 1070 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.default = mergeSourceMap;

function _sourceMap() {
  const data = __webpack_require__(1071);

  _sourceMap = function () {
    return data;
  };

  return data;
}

function mergeSourceMap(inputMap, map) {
  const input = buildMappingData(inputMap);
  const output = buildMappingData(map);
  const mergedGenerator = new (_sourceMap().SourceMapGenerator)();

  for (const {
    source
  } of input.sources) {
    if (typeof source.content === "string") {
      mergedGenerator.setSourceContent(source.path, source.content);
    }
  }

  if (output.sources.length === 1) {
    const defaultSource = output.sources[0];
    const insertedMappings = new Map();
    eachInputGeneratedRange(input, (generated, original, source) => {
      eachOverlappingGeneratedOutputRange(defaultSource, generated, item => {
        const key = makeMappingKey(item);
        if (insertedMappings.has(key)) return;
        insertedMappings.set(key, item);
        mergedGenerator.addMapping({
          source: source.path,
          original: {
            line: original.line,
            column: original.columnStart
          },
          generated: {
            line: item.line,
            column: item.columnStart
          },
          name: original.name
        });
      });
    });

    for (const item of insertedMappings.values()) {
      if (item.columnEnd === Infinity) {
        continue;
      }

      const clearItem = {
        line: item.line,
        columnStart: item.columnEnd
      };
      const key = makeMappingKey(clearItem);

      if (insertedMappings.has(key)) {
        continue;
      }

      mergedGenerator.addMapping({
        generated: {
          line: clearItem.line,
          column: clearItem.columnStart
        }
      });
    }
  }

  const result = mergedGenerator.toJSON();

  if (typeof input.sourceRoot === "string") {
    result.sourceRoot = input.sourceRoot;
  }

  return result;
}

function makeMappingKey(item) {
  return `${item.line}/${item.columnStart}`;
}

function eachOverlappingGeneratedOutputRange(outputFile, inputGeneratedRange, callback) {
  const overlappingOriginal = filterApplicableOriginalRanges(outputFile, inputGeneratedRange);

  for (const {
    generated
  } of overlappingOriginal) {
    for (const item of generated) {
      callback(item);
    }
  }
}

function filterApplicableOriginalRanges({
  mappings
}, {
  line,
  columnStart,
  columnEnd
}) {
  return filterSortedArray(mappings, ({
    original: outOriginal
  }) => {
    if (line > outOriginal.line) return -1;
    if (line < outOriginal.line) return 1;
    if (columnStart >= outOriginal.columnEnd) return -1;
    if (columnEnd <= outOriginal.columnStart) return 1;
    return 0;
  });
}

function eachInputGeneratedRange(map, callback) {
  for (const {
    source,
    mappings
  } of map.sources) {
    for (const {
      original,
      generated
    } of mappings) {
      for (const item of generated) {
        callback(item, original, source);
      }
    }
  }
}

function buildMappingData(map) {
  const consumer = new (_sourceMap().SourceMapConsumer)(Object.assign({}, map, {
    sourceRoot: null
  }));
  const sources = new Map();
  const mappings = new Map();
  let last = null;
  consumer.computeColumnSpans();
  consumer.eachMapping(m => {
    if (m.originalLine === null) return;
    let source = sources.get(m.source);

    if (!source) {
      source = {
        path: m.source,
        content: consumer.sourceContentFor(m.source, true)
      };
      sources.set(m.source, source);
    }

    let sourceData = mappings.get(source);

    if (!sourceData) {
      sourceData = {
        source,
        mappings: []
      };
      mappings.set(source, sourceData);
    }

    const obj = {
      line: m.originalLine,
      columnStart: m.originalColumn,
      columnEnd: Infinity,
      name: m.name
    };

    if (last && last.source === source && last.mapping.line === m.originalLine) {
      last.mapping.columnEnd = m.originalColumn;
    }

    last = {
      source,
      mapping: obj
    };
    sourceData.mappings.push({
      original: obj,
      generated: consumer.allGeneratedPositionsFor({
        source: m.source,
        line: m.originalLine,
        column: m.originalColumn
      }).map(item => ({
        line: item.line,
        columnStart: item.column,
        columnEnd: item.lastColumn + 1
      }))
    });
  }, null, _sourceMap().SourceMapConsumer.ORIGINAL_ORDER);
  return {
    file: map.file,
    sourceRoot: map.sourceRoot,
    sources: Array.from(mappings.values())
  };
}

function findInsertionLocation(array, callback) {
  let left = 0;
  let right = array.length;

  while (left < right) {
    const mid = Math.floor((left + right) / 2);
    const item = array[mid];
    const result = callback(item);

    if (result === 0) {
      left = mid;
      break;
    }

    if (result >= 0) {
      right = mid;
    } else {
      left = mid + 1;
    }
  }

  let i = left;

  if (i < array.length) {
    while (i >= 0 && callback(array[i]) >= 0) {
      i--;
    }

    return i + 1;
  }

  return i;
}

function filterSortedArray(array, callback) {
  const start = findInsertionLocation(array, callback);
  const results = [];

  for (let i = start; i < array.length && callback(array[i]) === 0; i++) {
    results.push(array[i]);
  }

  return results;
}

/***/ }),
/* 1071 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = __webpack_require__(1072).SourceMapGenerator;
exports.SourceMapConsumer = __webpack_require__(1078).SourceMapConsumer;
exports.SourceNode = __webpack_require__(1081).SourceNode;


/***/ }),
/* 1072 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = __webpack_require__(1073);
var util = __webpack_require__(1075);
var ArraySet = __webpack_require__(1076).ArraySet;
var MappingList = __webpack_require__(1077).MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;


/***/ }),
/* 1073 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = __webpack_require__(1074);

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};


/***/ }),
/* 1074 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};


/***/ }),
/* 1075 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = mappingA.source - mappingB.source;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return mappingA.name - mappingB.name;
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;


/***/ }),
/* 1076 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(1075);
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;


/***/ }),
/* 1077 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(1075);

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;


/***/ }),
/* 1078 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(1075);
var binarySearch = __webpack_require__(1079);
var ArraySet = __webpack_require__(1076).ArraySet;
var base64VLQ = __webpack_require__(1073);
var quickSort = __webpack_require__(1080).quickSort;

function SourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap)
    : new BasicSourceMapConsumer(sourceMap);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      if (source != null && sourceRoot != null) {
        source = util.join(sourceRoot, source);
      }
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: Optional. the column number in the original source.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    if (this.sourceRoot != null) {
      needle.source = util.relative(this.sourceRoot, needle.source);
    }
    if (!this._sources.has(needle.source)) {
      return [];
    }
    needle.source = this._sources.indexOf(needle.source);

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The only parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._sources.toArray().map(function (s) {
      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;
    }, this);
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          if (this.sourceRoot != null) {
            source = util.join(this.sourceRoot, source);
          }
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    if (this.sourceRoot != null) {
      aSource = util.relative(this.sourceRoot, aSource);
    }

    if (this._sources.has(aSource)) {
      return this.sourcesContent[this._sources.indexOf(aSource)];
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = aSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + aSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + aSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    if (this.sourceRoot != null) {
      source = util.relative(this.sourceRoot, source);
    }
    if (!this._sources.has(source)) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }
    source = this._sources.indexOf(source);

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The only parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/, ''));
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'))
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.
 *   - column: The column number in the generated source.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.
 *   - column: The column number in the original source, or null.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.
 *   - column: The column number in the original source.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.
 *   - column: The column number in the generated source, or null.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        if (section.consumer.sourceRoot !== null) {
          source = util.join(section.consumer.sourceRoot, source);
        }
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = section.consumer._names.at(mapping.name);
        this._names.add(name);
        name = this._names.indexOf(name);

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ }),
/* 1079 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};


/***/ }),
/* 1080 */
/***/ ((__unused_webpack_module, exports) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};


/***/ }),
/* 1081 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = __webpack_require__(1072).SourceMapGenerator;
var util = __webpack_require__(1075);

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex];
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex];
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;


/***/ }),
/* 1082 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.transformFileAsync = exports.transformFileSync = exports.transformFile = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _config = __webpack_require__(224);

var _transformation = __webpack_require__(1056);

var fs = __webpack_require__(209);

({});

const transformFileRunner = _gensync()(function* (filename, opts) {
  const options = Object.assign({}, opts, {
    filename
  });
  const config = yield* (0, _config.default)(options);
  if (config === null) return null;
  const code = yield* fs.readFile(filename, "utf8");
  return yield* (0, _transformation.run)(config, code);
});

const transformFile = transformFileRunner.errback;
exports.transformFile = transformFile;
const transformFileSync = transformFileRunner.sync;
exports.transformFileSync = transformFileSync;
const transformFileAsync = transformFileRunner.async;
exports.transformFileAsync = transformFileAsync;

/***/ }),
/* 1083 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.transformFromAstAsync = exports.transformFromAstSync = exports.transformFromAst = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _config = __webpack_require__(224);

var _transformation = __webpack_require__(1056);

const transformFromAstRunner = _gensync()(function* (ast, code, opts) {
  const config = yield* (0, _config.default)(opts);
  if (config === null) return null;
  if (!ast) throw new Error("No AST given");
  return yield* (0, _transformation.run)(config, code, ast);
});

const transformFromAst = function transformFromAst(ast, code, opts, callback) {
  if (typeof opts === "function") {
    callback = opts;
    opts = undefined;
  }

  if (callback === undefined) {
    return transformFromAstRunner.sync(ast, code, opts);
  }

  transformFromAstRunner.errback(ast, code, opts, callback);
};

exports.transformFromAst = transformFromAst;
const transformFromAstSync = transformFromAstRunner.sync;
exports.transformFromAstSync = transformFromAstSync;
const transformFromAstAsync = transformFromAstRunner.async;
exports.transformFromAstAsync = transformFromAstAsync;

/***/ }),
/* 1084 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.parseAsync = exports.parseSync = exports.parse = void 0;

function _gensync() {
  const data = __webpack_require__(206);

  _gensync = function () {
    return data;
  };

  return data;
}

var _config = __webpack_require__(224);

var _parser = __webpack_require__(1064);

var _normalizeOpts = __webpack_require__(1059);

const parseRunner = _gensync()(function* parse(code, opts) {
  const config = yield* (0, _config.default)(opts);

  if (config === null) {
    return null;
  }

  return yield* (0, _parser.default)(config.passes, (0, _normalizeOpts.default)(config), code);
});

const parse = function parse(code, opts, callback) {
  if (typeof opts === "function") {
    callback = opts;
    opts = undefined;
  }

  if (callback === undefined) return parseRunner.sync(code, opts);
  parseRunner.errback(code, opts, callback);
};

exports.parse = parse;
const parseSync = parseRunner.sync;
exports.parseSync = parseSync;
const parseAsync = parseRunner.async;
exports.parseAsync = parseAsync;

/***/ }),
/* 1085 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.extractToFile = exports.extractToFunction = void 0;
const traverse_1 = __importDefault(__webpack_require__(7));
const t = __importStar(__webpack_require__(11));
const coc_nvim_1 = __webpack_require__(1);
const fs = __importStar(__webpack_require__(210));
const lines_and_columns_1 = __importDefault(__webpack_require__(1086));
const path = __importStar(__webpack_require__(198));
const ast_1 = __webpack_require__(2);
const utils_1 = __webpack_require__(1087);
const pickBy = __webpack_require__(1088);
/**
 * Extract code to function action
 */
const extractToFunction = async () => {
    try {
        const name = await utils_1.askForName();
        if (!name)
            return;
        const doc = await coc_nvim_1.workspace.document;
        if (!doc)
            return;
        const mode = await coc_nvim_1.workspace.nvim.call('visualmode');
        const range = await coc_nvim_1.workspace.getSelectedRange(mode, doc);
        if (!range)
            return;
        const documentText = doc.textDocument.getText();
        const [start, end] = getIndexesForSelection(documentText, range);
        const result = executeCodeAction(name, documentText, start, end);
        if (!result) {
            coc_nvim_1.window.showMessage('Extract JSX to function failed', 'error');
            return;
        }
        const edits = [
            coc_nvim_1.TextEdit.replace(range, result.replaceJSXCode),
            coc_nvim_1.TextEdit.insert(coc_nvim_1.Position.create(result.insertAt, 0), result.componentCode + '\n\n'),
        ];
        await doc.applyEdits(edits);
        await coc_nvim_1.commands.executeCommand('editor.action.format');
    }
    catch (error) {
        console.error('Extract JSX to function:', error);
        coc_nvim_1.window.showMessage('Extract JSX to function failed', 'error');
    }
};
exports.extractToFunction = extractToFunction;
const fileTypeMap = {
    javascript: '.js',
    typescript: '.ts',
    javascriptreact: '.jsx',
    typescriptreact: '.tsx',
};
/**
 * Extract code to file action
 */
const extractToFile = async () => {
    try {
        const name = await utils_1.askForName();
        if (!name)
            return;
        const doc = await coc_nvim_1.workspace.document;
        if (!doc)
            return;
        const documentDir = path.dirname(coc_nvim_1.Uri.parse(doc.uri).fsPath);
        const newFilePath = path.join(documentDir, name + fileTypeMap[doc.filetype]);
        if (fs.existsSync(newFilePath)) {
            coc_nvim_1.window.showMessage(`${newFilePath} exists`, 'error');
            return;
        }
        const mode = await coc_nvim_1.workspace.nvim.call('visualmode');
        const range = await coc_nvim_1.workspace.getSelectedRange(mode, doc);
        if (!range)
            return;
        const documentText = doc.textDocument.getText();
        const [start, end] = getIndexesForSelection(documentText, range);
        const produceClass = coc_nvim_1.workspace.getConfiguration('react-refactor').get('produceClass', true);
        const result = executeCodeAction(name, documentText, start, end, produceClass);
        if (!result) {
            coc_nvim_1.window.showMessage(`Extract to file failed`, 'error');
            return;
        }
        const newFileUri = coc_nvim_1.Uri.parse(newFilePath).toString();
        const createFile = { kind: 'create', uri: newFileUri };
        const replaceEdit = {
            textDocument: doc.textDocument,
            edits: [coc_nvim_1.TextEdit.replace(range, result.replaceJSXCode)],
        };
        const importEdit = {
            textDocument: doc.textDocument,
            edits: [coc_nvim_1.TextEdit.insert(coc_nvim_1.Position.create(0, 0), `import { ${name} } from './${name}';\n`)],
        };
        const edit = {
            documentChanges: [createFile, replaceEdit, importEdit],
        };
        await coc_nvim_1.workspace.applyEdit(edit);
        const newDoc = await coc_nvim_1.workspace.loadFile(newFileUri);
        await coc_nvim_1.workspace.jumpTo(newFileUri);
        await newDoc.applyEdits([coc_nvim_1.TextEdit.insert(coc_nvim_1.Position.create(0, 0), result.componentCode)]);
        await coc_nvim_1.commands.executeCommand('editor.action.format');
        ensureReactIsImported();
    }
    catch (error) {
        console.error(`Extract to file:`, error);
        coc_nvim_1.window.showMessage(`Extract to file failed`, 'error');
    }
};
exports.extractToFile = extractToFile;
/**
 * Get start and end index of selection or range
 *
 * @param documentText
 * @param selectionOrRange
 */
const getIndexesForSelection = (documentText, selectionOrRange) => {
    const lines = new lines_and_columns_1.default(documentText);
    const { start, end } = selectionOrRange;
    const startIndex = lines.indexForLocation({
        line: start.line,
        column: start.character,
    });
    const endIndex = lines.indexForLocation({
        line: end.line,
        column: end.character,
    });
    return [startIndex, endIndex];
};
/**
 * Check is React imported to document and if not import
 *
 * @param editor
 */
const ensureReactIsImported = async () => {
    const doc = await coc_nvim_1.workspace.document;
    const ast = ast_1.codeToAst(doc.textDocument.getText());
    let matched = false;
    traverse_1.default(ast, {
        ImportDeclaration(path) {
            if (path.node.source.value === 'react') {
                matched = true;
                path.stop();
            }
        },
    });
    if (!matched) {
        await doc.applyEdits([coc_nvim_1.TextEdit.insert(coc_nvim_1.Position.create(0, 0), 'import React from "react";\n')]);
    }
};
/**
 * Execute code action
 *
 * @param name
 * @param code
 * @param start
 * @param end
 * @param produceClass
 */
const executeCodeAction = (name, code, start, end, produceClass = false) => {
    let selectionCode = code.substring(start, end);
    if (!ast_1.isJSX(selectionCode)) {
        throw new Error('Invalid JSX selected;');
    }
    if (!ast_1.jsxToAst(selectionCode)) {
        selectionCode = `<div>${selectionCode}</div>`;
        code = code.substring(0, start) + selectionCode + code.substring(end);
        end = start + selectionCode.length;
    }
    const ast = ast_1.codeToAst(code);
    const selectedPath = findSelectedJSXElement(ast, start, end);
    if (!selectedPath) {
        throw new Error('Invalid JSX selected');
    }
    const parentPath = findParentComponent(selectedPath);
    const referencePaths = ast_1.findComponentMemberReferences(parentPath, selectedPath);
    const paths = referencePaths.filter(ast_1.isPathInRange(start, end));
    const passedProps = {};
    const keyAttribute = copyAndRemoveKeyAttribute(selectedPath);
    if (keyAttribute) {
        passedProps['key'] = keyAttribute;
    }
    const objects = getContainerObjects(paths);
    paths
        .filter((path) => !ast_1.isPathRemoved(path))
        .forEach((path) => {
        const expression = ast_1.codeFromNode(path.node);
        let name, container;
        if (path.isMemberExpression()) {
            if (ast_1.isFunctionBinding(path)) {
                path = path.parentPath;
                name = path.node.callee.object.property.name;
            }
            else {
                name = path.node.property.name;
                container = objects.find((o) => expression.startsWith(o.object));
            }
        }
        else {
            name = path.node.name;
        }
        if (container) {
            name = matchRouteInObject(container, expression);
            if (!passedProps[container.property]) {
                passedProps[container.property] = t.identifier(container.object);
            }
        }
        else {
            name = ensurePropertyIsUnique(passedProps, name, expression);
            if (!passedProps[name]) {
                passedProps[name] = t.cloneDeep(path.node);
            }
        }
        path.replaceWith(createPropsExpression(produceClass, name));
    });
    const extractedJSX = ast_1.codeFromNode(selectedPath.node);
    const createComponent = produceClass ? utils_1.generateClassComponent : utils_1.generatePureComponent;
    const replaceJSXCode = ast_1.codeFromNode(createJSXElement(name, passedProps));
    const componentCode = createComponent(name, extractedJSX);
    const insertAt = getComponentStartAt(parentPath);
    return {
        replaceJSXCode,
        componentCode,
        insertAt,
    };
};
/**
 * Find parent component class or arrow function declarator
 *
 * @param path
 */
const findParentComponent = (path) => {
    const parentPath = path.findParent((path) => path.isClassDeclaration() || path.isVariableDeclarator() || path.isFunctionDeclaration());
    if (!parentPath) {
        throw new Error('Invalid component');
    }
    return parentPath;
};
/**
 * Find the frist path in a range
 * @param ast
 * @param start
 * @param end
 */
const findSelectedJSXElement = (ast, start, end) => {
    let selectedPath;
    traverse_1.default(ast, {
        JSXElement(path) {
            if (path.node.start >= start && path.node.end <= end) {
                selectedPath = path;
                path.stop();
            }
        },
    });
    return selectedPath;
};
/**
 * Find common container objects from a list of member expressions
 * @param paths
 */
const getContainerObjects = (paths) => {
    let objectMap = {};
    paths
        .filter((path) => (t.isMemberExpression(path.node) && !t.isThisExpression(path.node.object)) || !t.isMemberExpression(path.node))
        .forEach((path) => {
        const object = ast_1.codeFromNode(t.isMemberExpression(path.node) ? path.node.object : path.node);
        objectMap[object] = objectMap[object] || 0;
        objectMap[object]++;
    });
    objectMap = pickBy(objectMap, (val, key) => val > 1 && !isPropsObject(key));
    objectMap = pickBy(objectMap, (_val, key) => !objectMap[key.slice(0, key.lastIndexOf('.'))]);
    return Object.keys(objectMap).map((object) => ({
        object,
        property: object.slice(object.lastIndexOf('.') + 1),
    }));
};
const getComponentStartAt = (path) => {
    if (path.node.leadingComments && path.node.leadingComments.length) {
        return path.node.leadingComments[0].start;
    }
    return path.node.start;
};
const ensurePropertyIsUnique = (propsMap, name, value) => {
    if (!propsMap[name] || ast_1.codeFromNode(propsMap[name]) === value) {
        return name;
    }
    return ensurePropertyIsUnique(propsMap, `_${name}`, value);
};
const matchRouteInObject = (object, childObject) => [object.property, childObject.slice(object.object.length + 1)].filter((o) => !!o).join('.');
const isPropsObject = (expressionCode) => expressionCode === 'this.props' || expressionCode === 'this.state' || expressionCode === 'props';
const createPropsExpression = (produceClass, propertyName) => produceClass
    ? t.memberExpression(t.memberExpression(t.thisExpression(), t.identifier('props')), t.identifier(propertyName))
    : t.memberExpression(t.identifier('props'), t.identifier(propertyName));
const createJSXElement = (name, attributes) => {
    const jsxElement = t.jsxElement(t.jsxOpeningElement(t.jsxIdentifier(name), []), t.jsxClosingElement(t.jsxIdentifier(name)), [], true);
    Object.keys(attributes).forEach((id) => {
        jsxElement.openingElement.attributes.push(t.jsxAttribute(t.jsxIdentifier(id), t.jsxExpressionContainer(attributes[id])));
    });
    return jsxElement;
};
const copyAndRemoveKeyAttribute = (jsxElementPath) => {
    if (!jsxElementPath.isJSXElement()) {
        return;
    }
    const openingElement = jsxElementPath.node.openingElement;
    let keyAttributePath;
    jsxElementPath.traverse({
        JSXAttribute(path) {
            if (path.node.name.name === 'key' && path.parentPath.node === openingElement) {
                keyAttributePath = path;
            }
        },
    });
    if (keyAttributePath) {
        const value = t.cloneDeep(keyAttributePath.node.value.expression);
        keyAttributePath.remove();
        return value;
    }
};


/***/ }),
/* 1086 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var LF = '\n';
var CR = '\r';
var LinesAndColumns = (function () {
    function LinesAndColumns(string) {
        this.string = string;
        var offsets = [0];
        for (var offset = 0; offset < string.length;) {
            switch (string[offset]) {
                case LF:
                    offset += LF.length;
                    offsets.push(offset);
                    break;
                case CR:
                    offset += CR.length;
                    if (string[offset] === LF) {
                        offset += LF.length;
                    }
                    offsets.push(offset);
                    break;
                default:
                    offset++;
                    break;
            }
        }
        this.offsets = offsets;
    }
    LinesAndColumns.prototype.locationForIndex = function (index) {
        if (index < 0 || index > this.string.length) {
            return null;
        }
        var line = 0;
        var offsets = this.offsets;
        while (offsets[line + 1] <= index) {
            line++;
        }
        var column = index - offsets[line];
        return { line: line, column: column };
    };
    LinesAndColumns.prototype.indexForLocation = function (location) {
        var line = location.line, column = location.column;
        if (line < 0 || line >= this.offsets.length) {
            return null;
        }
        if (column < 0 || column > this.lengthOfLine(line)) {
            return null;
        }
        return this.offsets[line] + column;
    };
    LinesAndColumns.prototype.lengthOfLine = function (line) {
        var offset = this.offsets[line];
        var nextOffset = line === this.offsets.length - 1 ? this.string.length : this.offsets[line + 1];
        return nextOffset - offset;
    };
    return LinesAndColumns;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LinesAndColumns);


/***/ }),
/* 1087 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generatePureComponent = exports.generateClassComponent = exports.askForName = void 0;
const coc_nvim_1 = __webpack_require__(1);
const capitalizeFirstLetter = (string) => string.charAt(0).toUpperCase() + string.slice(1);
const normalizeComponentName = (name) => name
    .split(/[\s-_]+/)
    .map(capitalizeFirstLetter)
    .join('');
const askForName = async () => {
    const name = await coc_nvim_1.window.requestInput('Component name');
    if (!name)
        return false;
    return normalizeComponentName(name);
};
exports.askForName = askForName;
const generateClassComponent = (name, renderCode) => `
export class ${name} extends React.Component {
    constructor(props) {
        super(props);
    }

    render() {
        return (
            ${renderCode}
        );
    }
}
`;
exports.generateClassComponent = generateClassComponent;
const generatePureComponent = (name, renderCode) => `
const ${name} = (${renderCode.match(/props/) ? 'props' : ''}) => (
    ${renderCode}
);
`;
exports.generatePureComponent = generatePureComponent;


/***/ }),
/* 1088 */
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used to compose bitmasks for comparison styles. */
var UNORDERED_COMPARE_FLAG = 1,
    PARTIAL_COMPARE_FLAG = 2;

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    return freeProcess && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    getPrototype = overArg(Object.getPrototypeOf, Object),
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols,
    nativeKeys = overArg(Object.keys, Object);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values ? values.length : 0;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  this.__data__ = new ListCache(entries);
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  return this.__data__['delete'](key);
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var cache = this.__data__;
  if (cache instanceof ListCache) {
    var pairs = cache.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      return this;
    }
    cache = this.__data__ = new MapCache(pairs);
  }
  cache.set(key, value);
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = isKey(path, object) ? [path] : castPath(path);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

/**
 * The base implementation of `getTag`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  return objectToString.call(value);
}

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {boolean} [bitmask] The bitmask of comparison flags.
 *  The bitmask may be composed of the following flags:
 *     1 - Unordered comparison
 *     2 - Partial comparison
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, customizer, bitmask, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
}

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = arrayTag,
      othTag = arrayTag;

  if (!objIsArr) {
    objTag = getTag(object);
    objTag = objTag == argsTag ? objectTag : objTag;
  }
  if (!othIsArr) {
    othTag = getTag(other);
    othTag = othTag == argsTag ? objectTag : othTag;
  }
  var objIsObj = objTag == objectTag && !isHostObject(object),
      othIsObj = othTag == objectTag && !isHostObject(other),
      isSameTag = objTag == othTag;

  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
  }
  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
}

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
}

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
  };
}

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} props The property identifiers to pick from.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, props, predicate) {
  var index = -1,
      length = props.length,
      result = {};

  while (++index < length) {
    var key = props[index],
        value = object[key];

    if (predicate(value, key)) {
      result[key] = value;
    }
  }
  return result;
}

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} customizer The function to customize comparisons.
 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!seen.has(othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
              return seen.add(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, customizer, bitmask, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} customizer The function to customize comparisons.
 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= UNORDERED_COMPARE_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} customizer The function to customize comparisons.
 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
      objProps = keys(object),
      objLength = objProps.length,
      othProps = keys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Creates an array of the own enumerable symbol properties of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

/**
 * Creates an array of the own and inherited enumerable symbol properties
 * of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11,
// for data views in Edge < 14, and promises in Node.js.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = objectToString.call(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : undefined;

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = isKey(path, object) ? [path] : castPath(path);

  var result,
      index = -1,
      length = path.length;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result) {
    return result;
  }
  var length = object ? object.length : 0;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  return object == null ? {} : basePickBy(object, getAllKeysIn(object), baseIteratee(predicate));
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = pickBy;


/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var exports = __webpack_exports__;

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.activate = void 0;
const coc_nvim_1 = __webpack_require__(1);
const ast_1 = __webpack_require__(2);
const extract_jsx_1 = __webpack_require__(1085);
class ReactRefactorCodeActionProvider {
    async provideCodeActions(document, range) {
        const codeActions = [];
        const selectedText = document.getText(range);
        if (ast_1.isJSX(selectedText)) {
            codeActions.push({ command: 'react-refactor.extractToFunction', title: 'Extract JSX to function' });
            codeActions.push({ command: 'react-refactor.extractToFile', title: 'Extract JSX to file' });
        }
        return codeActions;
    }
}
async function activate(context) {
    context.subscriptions.push(coc_nvim_1.languages.registerCodeActionProvider([{ scheme: 'file', pattern: '**/*.{js,jsx,ts,tsx}' }], new ReactRefactorCodeActionProvider(), 'coc-react-refactor'), coc_nvim_1.commands.registerCommand('react-refactor.extractToFunction', extract_jsx_1.extractToFunction), coc_nvim_1.commands.registerCommand('react-refactor.extractToFile', extract_jsx_1.extractToFile));
}
exports.activate = activate;

})();

var __webpack_export_target__ = exports;
for(var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];
if(__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", { value: true });
/******/ })()
;